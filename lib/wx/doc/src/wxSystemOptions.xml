<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">

<!-- THIS FILE IS GENERATED DO NOT EDIT -->


<erlref>
<header>
  <copyright>
    <year>2020</year><year>2021</year>
    <holder>wxWidgets team.</holder></copyright>
  <legalnotice>Licensed under the wxWindows Free Documentation Licence, Version 3
  </legalnotice>
  <title>wxSystemOptions</title>
</header>
<module>wxSystemOptions</module>
<modulesummary>Functions for wxSystemOptions class</modulesummary>
<description><p><seeerl marker="wxSystemOptions"><c>wxSystemOptions</c></seeerl> stores option/value pairs that wxWidgets itself or applications can use to alter behaviour at run-time. It can be used to optimize behaviour that doesn't deserve a distinct API, but is still important to be able to configure.
      </p><p>System options can be set by the program itself using <seemfa marker="#setOption/2"><c>setOption/2</c></seemfa> method and they also can be set from the program environment by defining an environment variable <c>wx_option</c> to set the given option for all wxWidgets applications or <c>wx_appname_option</c> to set it just for the application with the given name (as returned by <c>wxApp::GetAppName()</c> (not implemented in wx)). Notice that any characters not allowed in the environment variables names, such as periods and dashes, should be replaced with underscores. E.g. to define a system option "foo-bar" you need to define the environment variable "wx_foo_bar".
      </p><p>The program may use system options for its own needs but they are mostly used to control the behaviour of wxWidgets library itself.
      </p><p>These options are currently recognised by wxWidgets:
      </p><p>All platforms</p> <p>Windows</p> <p>GTK+</p> <p>Mac</p> <p>Motif</p> <p> The compile-time option to include or exclude this functionality is wxUSE_SYSTEM_OPTIONS.
      </p><p>See: <seeerl marker="wxSystemSettings"><c>wxSystemSettings</c></seeerl>
      </p>
  <p>wxWidgets docs: <url href="https://docs.wxwidgets.org/3.1/classwx_system_options.html">wxSystemOptions</url></p>
  </description>
<datatypes><datatype><name name="wxSystemOptions"/></datatype></datatypes>

<funcs>
  <func>
    <name name="getOption" arity="1" clause_i="1" since=""/>
    <fsummary>Gets an option. </fsummary>
    <desc><p>Gets an option. 
      </p><p>The function is case-insensitive to <c>name</c>. Returns empty string if the option hasn't been set.
      </p><p>See: <seemfa marker="#setOption/2"><c>setOption/2</c></seemfa>, <seemfa marker="#getOptionInt/1"><c>getOptionInt/1</c></seemfa>, <seemfa marker="#hasOption/1"><c>hasOption/1</c></seemfa>
      </p></desc>
  </func>
  
  <func>
    <name name="getOptionInt" arity="1" clause_i="1" since=""/>
    <fsummary>Gets an option as an integer. </fsummary>
    <desc><p>Gets an option as an integer. 
      </p><p>The function is case-insensitive to <c>name</c>. If the option hasn't been set, this function returns 0.
      </p><p>See: <seemfa marker="#setOption/2"><c>setOption/2</c></seemfa>, <seemfa marker="#getOption/1"><c>getOption/1</c></seemfa>, <seemfa marker="#hasOption/1"><c>hasOption/1</c></seemfa>
      </p></desc>
  </func>
  
  <func>
    <name name="hasOption" arity="1" clause_i="1" since=""/>
    <fsummary>Returns true if the given option is present. </fsummary>
    <desc><p>Returns true if the given option is present. 
      </p><p>The function is case-insensitive to <c>name</c>.
      </p><p>See: <seemfa marker="#setOption/2"><c>setOption/2</c></seemfa>, <seemfa marker="#getOption/1"><c>getOption/1</c></seemfa>, <seemfa marker="#getOptionInt/1"><c>getOptionInt/1</c></seemfa>
      </p></desc>
  </func>
  
  <func>
    <name name="isFalse" arity="1" clause_i="1" since=""/>
    <fsummary>Returns true if the option with the given <c>name</c> had been set to 0 value. </fsummary>
    <desc><p>Returns true if the option with the given <c>name</c> had been set to 0 value. 
      </p><p>This is mostly useful for boolean options for which you can't use <c>GetOptionInt(name)</c> == 0 as this would also be true if the option hadn't been set at all. 
      </p></desc>
  </func>
  
  <func>
    <name name="setOption" arity="2" clause_i="1" since=""/>
  
    <name name="setOption" arity="2" clause_i="2" since=""/>
    <fsummary>Sets an option. </fsummary>
    <desc><p>Sets an option. 
      </p><p>The function is case-insensitive to <c>name</c>. 
      </p></desc>
  </func>
  </funcs>
</erlref>
