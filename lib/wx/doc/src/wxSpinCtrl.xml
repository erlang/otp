<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">

<!-- THIS FILE IS GENERATED DO NOT EDIT -->


<erlref>
<header>
  <copyright>
    <year>2020</year><year>2021</year>
    <holder>wxWidgets team.</holder></copyright>
  <legalnotice>Licensed under the wxWindows Free Documentation Licence, Version 3
  </legalnotice>
  <title>wxSpinCtrl</title>
</header>
<module>wxSpinCtrl</module>
<modulesummary>Functions for wxSpinCtrl class</modulesummary>
<description><p><seeerl marker="wxSpinCtrl"><c>wxSpinCtrl</c></seeerl> combines <seeerl marker="wxTextCtrl"><c>wxTextCtrl</c></seeerl> and <seeerl marker="wxSpinButton"><c>wxSpinButton</c></seeerl> in one control.
      </p><p>Styles</p><p>This class supports the following styles:
      </p><p>See: <seeerl marker="wxSpinButton"><c>wxSpinButton</c></seeerl>, <c>wxSpinCtrlDouble</c> (not implemented in wx), <seeerl marker="wxControl"><c>wxControl</c></seeerl>
      </p>
  <p>This class is derived (and can use functions) from: 
    <seeerl marker="wxControl"><c>wxControl</c></seeerl> <seeerl marker="wxWindow"><c>wxWindow</c></seeerl> <seeerl marker="wxEvtHandler"><c>wxEvtHandler</c></seeerl></p>
  
  <p>wxWidgets docs: <url href="https://docs.wxwidgets.org/3.1/classwx_spin_ctrl.html">wxSpinCtrl</url></p>
  </description><section><title>Events</title><p>Event types emitted from this class: <seeerl marker="wxSpinEvent"><c>command_spinctrl_updated</c></seeerl></p></section>
<datatypes><datatype><name name="wxSpinCtrl"/></datatype></datatypes>

<funcs>
  <func>
    <name name="new" arity="0" clause_i="1" since=""/>
    <fsummary>Default constructor. </fsummary>
    <desc><p>Default constructor. 
      </p></desc>
  </func>
  
  <func>
    <name name="new" arity="1" clause_i="1" since=""/>
    <fsummary>See: <c>new/2</c></fsummary>
  </func>
  
  <func>
    <name name="new" arity="2" clause_i="1" since=""/>
    <fsummary>Constructor, creating and showing a spin control. </fsummary>
    <desc><p>Constructor, creating and showing a spin control. 
      </p><p>If <c>value</c> is non-empty, it will be shown in the text entry part of the control and if it has numeric value, the initial numeric value of the control, as returned by <seemfa marker="#getValue/1"><c>getValue/1</c></seemfa> will also be determined by it instead of by <c>initial</c>. Hence, it only makes sense to specify <c>initial</c> if <c>value</c> is an empty string or is not convertible to a number, otherwise <c>initial</c> is simply ignored and the number specified by <c>value</c> is used.
      </p><p>See: <seemfa marker="#create/3"><c>create/3</c></seemfa>
      </p></desc>
  </func>
  
  <func>
    <name name="create" arity="2" clause_i="1" since=""/>
    <fsummary>See: <c>create/3</c></fsummary>
  </func>
  
  <func>
    <name name="create" arity="3" clause_i="1" since=""/>
    <fsummary>Creation function called by the spin control constructor. </fsummary>
    <desc><p>Creation function called by the spin control constructor. 
      </p><p>See <seemfa marker="#new/2"><c>new/2</c></seemfa> for details. 
      </p></desc>
  </func>
  
  <func>
    <name name="setValue" arity="2" clause_i="1" since=""/>
  
    <name name="setValue" arity="2" clause_i="2" since=""/>
    <fsummary>Sets the value of the spin control. </fsummary>
    <desc><p>Sets the value of the spin control. 
      </p><p>It is recommended to use the overload taking an integer value instead.
      </p><p>Notice that, unlike <seemfa marker="wxTextCtrl#setValue/2"><c>wxTextCtrl:setValue/2</c></seemfa>, but like most of the other setter methods in wxWidgets, calling this method does not generate any events as events are only generated for the user actions. 
      </p></desc>
  </func>
  
  <func>
    <name name="getValue" arity="1" clause_i="1" since=""/>
    <fsummary>Gets the value of the spin control. </fsummary>
    <desc><p>Gets the value of the spin control. 
      </p></desc>
  </func>
  
  <func>
    <name name="setRange" arity="3" clause_i="1" since=""/>
    <fsummary>Sets range of allowable values. </fsummary>
    <desc><p>Sets range of allowable values. 
      </p><p>Notice that calling this method may change the value of the control if it's not inside the new valid range, e.g. it will become <c>minVal</c> if it is less than it now. However no <c>wxEVT_SPINCTRL</c> event is generated, even if it the value does change.
      </p><p>Note: Setting a range including negative values is silently ignored if current base is set to 16. 
      </p></desc>
  </func>
  
  <func>
    <name name="setSelection" arity="3" clause_i="1" since=""/>
    <fsummary>Select the text in the text part of the control between positions <c>from</c> (inclusive) and <c>to</c> (exclusive). </fsummary>
    <desc><p>Select the text in the text part of the control between positions <c>from</c> (inclusive) and <c>to</c> (exclusive). 
      </p><p>This is similar to <seemfa marker="wxTextCtrl#setSelection/3"><c>wxTextCtrl:setSelection/3</c></seemfa>.
      </p><p>Note: this is currently only implemented for Windows and generic versions of the control. 
      </p></desc>
  </func>
  
  <func>
    <name name="getMin" arity="1" clause_i="1" since=""/>
    <fsummary>Gets minimal allowable value. </fsummary>
    <desc><p>Gets minimal allowable value. 
      </p></desc>
  </func>
  
  <func>
    <name name="getMax" arity="1" clause_i="1" since=""/>
    <fsummary>Gets maximal allowable value. </fsummary>
    <desc><p>Gets maximal allowable value. 
      </p></desc>
  </func>
  
  <func>
    <name name="destroy" arity="1" clause_i="1" since=""/>
    <fsummary>Destructor</fsummary>
    <desc><p>Destroys the object.</p></desc>
  </func>
  </funcs>
</erlref>
