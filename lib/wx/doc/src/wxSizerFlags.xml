<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">

<!-- THIS FILE IS GENERATED DO NOT EDIT -->


<erlref>
<header>
  <copyright>
    <year>2020</year><year>2021</year>
    <holder>wxWidgets team.</holder></copyright>
  <legalnotice>Licensed under the wxWindows Free Documentation Licence, Version 3
  </legalnotice>
  <title>wxSizerFlags</title>
</header>
<module>wxSizerFlags</module>
<modulesummary>Functions for wxSizerFlags class</modulesummary>
<description><p>Container for sizer items flags providing readable names for them.
      </p><p>Normally, when you add an item to a sizer via <seemfa marker="wxSizer#add/4"><c>wxSizer:add/4</c></seemfa>, you have to specify a lot of flags and parameters which can be unwieldy. This is where <seeerl marker="wxSizerFlags"><c>wxSizerFlags</c></seeerl> comes in: it allows you to specify all parameters using the named methods instead. For example, instead of
      </p><p>you can now write
      </p><p>This is more readable and also allows you to create <seeerl marker="wxSizerFlags"><c>wxSizerFlags</c></seeerl> objects which can be reused for several sizer items.
      </p><p>Note that by specification, all methods of <seeerl marker="wxSizerFlags"><c>wxSizerFlags</c></seeerl> return the <seeerl marker="wxSizerFlags"><c>wxSizerFlags</c></seeerl> object itself to allowing chaining multiple methods calls like in the examples above.
      </p><p>See: <seeerl marker="wxSizer"><c>wxSizer</c></seeerl>
      </p>
  <p>wxWidgets docs: <url href="https://docs.wxwidgets.org/3.1/classwx_sizer_flags.html">wxSizerFlags</url></p>
  </description>
<datatypes><datatype><name name="wxSizerFlags"/></datatype></datatypes>

<funcs>
  <func>
    <name name="new" arity="0" clause_i="1" since=""/>
    <fsummary>See: <c>new/1</c></fsummary>
  </func>
  
  <func>
    <name name="new" arity="1" clause_i="1" since=""/>
    <fsummary>Creates the <c>wxSizer</c> with the proportion specified by <c>proportion</c>. </fsummary>
    <desc><p>Creates the <seeerl marker="wxSizer"><c>wxSizer</c></seeerl> with the proportion specified by <c>proportion</c>. 
      </p></desc>
  </func>
  
  <func>
    <name name="align" arity="2" clause_i="1" since=""/>
    <fsummary>Sets the alignment of this <c>wxSizerFlags</c> to <c>align</c>. </fsummary>
    <desc><p>Sets the alignment of this <seeerl marker="wxSizerFlags"><c>wxSizerFlags</c></seeerl> to <c>align</c>. 
      </p><p>This method replaces the previously set alignment with the specified one.
      </p><p>See: <c>Top()</c> (not implemented in wx), <seemfa marker="#left/1"><c>left/1</c></seemfa>, <seemfa marker="#right/1"><c>right/1</c></seemfa>, <c>Bottom()</c> (not implemented in wx), <seemfa marker="#centre/1"><c>centre/1</c></seemfa>
      </p></desc>
  </func>
  
  <func>
    <name name="border" arity="1" clause_i="1" since=""/>
    <fsummary>See: <c>border/2</c></fsummary>
  </func>
  
  <func>
    <name name="border" arity="2" clause_i="1" since=""/>
    <fsummary>Sets the <c>wxSizerFlags</c> to have a border with size as returned by <c>GetDefaultBorder()</c> (not implemented in wx). </fsummary>
    <desc><p>Sets the <seeerl marker="wxSizerFlags"><c>wxSizerFlags</c></seeerl> to have a border with size as returned by <c>GetDefaultBorder()</c> (not implemented in wx). 
      </p></desc>
  </func>
  
  <func>
    <name name="border" arity="3" clause_i="1" since=""/>
    <fsummary>Sets the <c>wxSizerFlags</c> to have a border of a number of pixels specified by <c>borderinpixels</c> with the directions specified by <c>direction</c>. </fsummary>
    <desc><p>Sets the <seeerl marker="wxSizerFlags"><c>wxSizerFlags</c></seeerl> to have a border of a number of pixels specified by <c>borderinpixels</c> with the directions specified by <c>direction</c>. 
      </p><p>Prefer to use the overload below or <c>DoubleBorder()</c> (not implemented in wx) or <c>TripleBorder()</c> (not implemented in wx) versions instead of hard-coding the border value in pixels to avoid too small borders on devices with high DPI displays. 
      </p></desc>
  </func>
  
  <func>
    <name name="centre" arity="1" clause_i="1" since=""/>
    <fsummary>See: <c>center/1</c></fsummary>
    <desc><p>See: <seemfa marker="#center/1"><c>center/1</c></seemfa>.</p>
    </desc>
  </func>
  
  <func>
    <name name="center" arity="1" clause_i="1" since=""/>
    <fsummary>Sets the object of the <c>wxSizerFlags</c> to center itself in the area it is given. </fsummary>
    <desc><p>Sets the object of the <seeerl marker="wxSizerFlags"><c>wxSizerFlags</c></seeerl> to center itself in the area it is given. 
      </p></desc>
  </func>
  
  <func>
    <name name="expand" arity="1" clause_i="1" since=""/>
    <fsummary>Sets the object of the <c>wxSizerFlags</c> to expand to fill as much area as it can. </fsummary>
    <desc><p>Sets the object of the <seeerl marker="wxSizerFlags"><c>wxSizerFlags</c></seeerl> to expand to fill as much area as it can. 
      </p></desc>
  </func>
  
  <func>
    <name name="left" arity="1" clause_i="1" since=""/>
    <fsummary>Aligns the object to the left, similar for <c>Align(wxALIGN_LEFT)</c>. </fsummary>
    <desc><p>Aligns the object to the left, similar for <c>Align(wxALIGN_LEFT)</c>. 
      </p><p>Unlike <seemfa marker="#align/2"><c>align/2</c></seemfa>, this method doesn't change the vertical alignment of the item. 
      </p></desc>
  </func>
  
  <func>
    <name name="proportion" arity="2" clause_i="1" since=""/>
    <fsummary>Sets the proportion of this <c>wxSizerFlags</c> to <c>proportion</c>. </fsummary>
    <desc><p>Sets the proportion of this <seeerl marker="wxSizerFlags"><c>wxSizerFlags</c></seeerl> to <c>proportion</c>. 
      </p></desc>
  </func>
  
  <func>
    <name name="right" arity="1" clause_i="1" since=""/>
    <fsummary>Aligns the object to the right, similar for <c>Align(wxALIGN_RIGHT)</c>. </fsummary>
    <desc><p>Aligns the object to the right, similar for <c>Align(wxALIGN_RIGHT)</c>. 
      </p><p>Unlike <seemfa marker="#align/2"><c>align/2</c></seemfa>, this method doesn't change the vertical alignment of the item. 
      </p></desc>
  </func>
  
  <func>
    <name name="destroy" arity="1" clause_i="1" since=""/>
    <fsummary>Destructor</fsummary>
    <desc><p>Destroys the object.</p></desc>
  </func>
  </funcs>
</erlref>
