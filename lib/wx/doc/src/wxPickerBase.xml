<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">

<!-- THIS FILE IS GENERATED DO NOT EDIT -->


<erlref>
<header>
  <copyright>
    <year>2020</year><year>2021</year>
    <holder>wxWidgets team.</holder></copyright>
  <legalnotice>Licensed under the wxWindows Free Documentation Licence, Version 3
  </legalnotice>
  <title>wxPickerBase</title>
</header>
<module>wxPickerBase</module>
<modulesummary>Functions for wxPickerBase class</modulesummary>
<description><p>Base abstract class for all pickers which support an auxiliary text control.
      </p><p>This class handles all positioning and sizing of the text control like a an horizontal <seeerl marker="wxBoxSizer"><c>wxBoxSizer</c></seeerl> would do, with the text control on the left of the picker button.
      </p><p>The proportion (see <seeerl marker="wxSizer"><c>wxSizer</c></seeerl> documentation for more info about proportion values) of the picker control defaults to 1 when there isn't a text control associated (see <c>wxPB_USE_TEXTCTRL</c> style) and to 0 otherwise.
      </p><p>Styles</p><p>This class supports the following styles:
      </p><p>See: <seeerl marker="wxColourPickerCtrl"><c>wxColourPickerCtrl</c></seeerl>
      </p>
  <p>This class is derived (and can use functions) from: 
    <seeerl marker="wxControl"><c>wxControl</c></seeerl> <seeerl marker="wxWindow"><c>wxWindow</c></seeerl> <seeerl marker="wxEvtHandler"><c>wxEvtHandler</c></seeerl></p>
  
  <p>wxWidgets docs: <url href="https://docs.wxwidgets.org/3.1/classwx_picker_base.html">wxPickerBase</url></p>
  </description>
<datatypes><datatype><name name="wxPickerBase"/></datatype></datatypes>

<funcs>
  <func>
    <name name="setInternalMargin" arity="2" clause_i="1" since=""/>
    <fsummary>Sets the margin (in pixel) between the picker and the text control. </fsummary>
    <desc><p>Sets the margin (in pixel) between the picker and the text control. 
      </p><p>This function can be used only when <seemfa marker="#hasTextCtrl/1"><c>hasTextCtrl/1</c></seemfa> returns true. 
      </p></desc>
  </func>
  
  <func>
    <name name="getInternalMargin" arity="1" clause_i="1" since=""/>
    <fsummary>Returns the margin (in pixel) between the picker and the text control. </fsummary>
    <desc><p>Returns the margin (in pixel) between the picker and the text control. 
      </p><p>This function can be used only when <seemfa marker="#hasTextCtrl/1"><c>hasTextCtrl/1</c></seemfa> returns true. 
      </p></desc>
  </func>
  
  <func>
    <name name="setTextCtrlProportion" arity="2" clause_i="1" since=""/>
    <fsummary>Sets the proportion value of the text control. </fsummary>
    <desc><p>Sets the proportion value of the text control. 
      </p><p>Look at the detailed description of <seeerl marker="wxPickerBase"><c>wxPickerBase</c></seeerl> for more info.
      </p><p>This function can be used only when <seemfa marker="#hasTextCtrl/1"><c>hasTextCtrl/1</c></seemfa> returns true. 
      </p></desc>
  </func>
  
  <func>
    <name name="setPickerCtrlProportion" arity="2" clause_i="1" since=""/>
    <fsummary>Sets the proportion value of the picker. </fsummary>
    <desc><p>Sets the proportion value of the picker. 
      </p><p>Look at the detailed description of <seeerl marker="wxPickerBase"><c>wxPickerBase</c></seeerl> for more info. 
      </p></desc>
  </func>
  
  <func>
    <name name="getTextCtrlProportion" arity="1" clause_i="1" since=""/>
    <fsummary>Returns the proportion value of the text control. </fsummary>
    <desc><p>Returns the proportion value of the text control. 
      </p><p>This function can be used only when <seemfa marker="#hasTextCtrl/1"><c>hasTextCtrl/1</c></seemfa> returns true. 
      </p></desc>
  </func>
  
  <func>
    <name name="getPickerCtrlProportion" arity="1" clause_i="1" since=""/>
    <fsummary>Returns the proportion value of the picker. </fsummary>
    <desc><p>Returns the proportion value of the picker. 
      </p></desc>
  </func>
  
  <func>
    <name name="hasTextCtrl" arity="1" clause_i="1" since=""/>
    <fsummary>Returns true if this window has a valid text control (i.e. if the <c>wxPB_USE_TEXTCTRL</c> style was given when creating this control). </fsummary>
    <desc><p>Returns true if this window has a valid text control (i.e. if the <c>wxPB_USE_TEXTCTRL</c> style was given when creating this control). 
      </p></desc>
  </func>
  
  <func>
    <name name="getTextCtrl" arity="1" clause_i="1" since=""/>
    <fsummary>Returns a pointer to the text control handled by this window or NULL if the <c>wxPB_USE_TEXTCTRL</c> style was not specified when this control was created. </fsummary>
    <desc><p>Returns a pointer to the text control handled by this window or NULL if the <c>wxPB_USE_TEXTCTRL</c> style was not specified when this control was created. 
      </p><p>Remark: The contents of the text control could be an invalid representation of the entity which can be chosen through the picker (e.g. when the user enters an invalid colour syntax because of a typo). Thus you should never parse the content of the textctrl to get the user's input; rather use the derived-class getter (e.g. <seemfa marker="wxColourPickerCtrl#getColour/1"><c>wxColourPickerCtrl:getColour/1</c></seemfa>, <seemfa marker="wxFilePickerCtrl#getPath/1"><c>wxFilePickerCtrl:getPath/1</c></seemfa>, etc). 
      </p></desc>
  </func>
  
  <func>
    <name name="isTextCtrlGrowable" arity="1" clause_i="1" since=""/>
    <fsummary>Returns true if the text control is growable. </fsummary>
    <desc><p>Returns true if the text control is growable. 
      </p><p>This function can be used only when <seemfa marker="#hasTextCtrl/1"><c>hasTextCtrl/1</c></seemfa> returns true. 
      </p></desc>
  </func>
  
  <func>
    <name name="setPickerCtrlGrowable" arity="1" clause_i="1" since=""/>
    <fsummary>See: <c>setPickerCtrlGrowable/2</c></fsummary>
  </func>
  
  <func>
    <name name="setPickerCtrlGrowable" arity="2" clause_i="1" since=""/>
    <fsummary>Sets the picker control as growable when <c>grow</c> is true. </fsummary>
    <desc><p>Sets the picker control as growable when <c>grow</c> is true. 
      </p></desc>
  </func>
  
  <func>
    <name name="setTextCtrlGrowable" arity="1" clause_i="1" since=""/>
    <fsummary>See: <c>setTextCtrlGrowable/2</c></fsummary>
  </func>
  
  <func>
    <name name="setTextCtrlGrowable" arity="2" clause_i="1" since=""/>
    <fsummary>Sets the text control as growable when <c>grow</c> is true. </fsummary>
    <desc><p>Sets the text control as growable when <c>grow</c> is true. 
      </p><p>This function can be used only when <seemfa marker="#hasTextCtrl/1"><c>hasTextCtrl/1</c></seemfa> returns true. 
      </p></desc>
  </func>
  
  <func>
    <name name="isPickerCtrlGrowable" arity="1" clause_i="1" since=""/>
    <fsummary>Returns true if the picker control is growable. </fsummary>
    <desc><p>Returns true if the picker control is growable. 
      </p></desc>
  </func>
  </funcs>
</erlref>
