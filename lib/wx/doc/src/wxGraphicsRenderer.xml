<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">

<!-- THIS FILE IS GENERATED DO NOT EDIT -->


<erlref>
<header>
  <copyright>
    <year>2020</year><year>2021</year>
    <holder>wxWidgets team.</holder></copyright>
  <legalnotice>Licensed under the wxWindows Free Documentation Licence, Version 3
  </legalnotice>
  <title>wxGraphicsRenderer</title>
</header>
<module>wxGraphicsRenderer</module>
<modulesummary>Functions for wxGraphicsRenderer class</modulesummary>
<description><p>A <seeerl marker="wxGraphicsRenderer"><c>wxGraphicsRenderer</c></seeerl> is the instance corresponding to the rendering engine used. There may be multiple instances on a system, if there are different rendering engines present, but there is always only one instance per engine. This instance is pointed back to by all objects created by it (<seeerl marker="wxGraphicsContext"><c>wxGraphicsContext</c></seeerl>, <seeerl marker="wxGraphicsPath"><c>wxGraphicsPath</c></seeerl> etc.) and can be retrieved through their <seemfa marker="wxGraphicsObject#getRenderer/1"><c>wxGraphicsObject:getRenderer/1</c></seemfa> method. Therefore you can create an additional instance of a path etc. by calling <seemfa marker="wxGraphicsObject#getRenderer/1"><c>wxGraphicsObject:getRenderer/1</c></seemfa> and then using the appropriate CreateXXX() function of that renderer.
      </p>
  <p>wxWidgets docs: <url href="https://docs.wxwidgets.org/3.1/classwx_graphics_renderer.html">wxGraphicsRenderer</url></p>
  </description>
<datatypes><datatype><name name="wxGraphicsRenderer"/></datatype></datatypes>

<funcs>
  <func>
    <name name="getDefaultRenderer" arity="0" clause_i="1" since=""/>
    <fsummary>Returns the default renderer on this platform. </fsummary>
    <desc><p>Returns the default renderer on this platform. 
      </p><p>On macOS this is the Core Graphics (a.k.a. Quartz 2D) renderer, on MSW the GDIPlus renderer, and on GTK we currently default to the Cairo renderer. 
      </p></desc>
  </func>
  
  <func>
    <name name="createContext" arity="2" clause_i="1" since=""/>
    <fsummary>Creates a <c>wxGraphicsContext</c> from a <c>wxWindowDC</c>. </fsummary>
    <desc><p>Creates a <seeerl marker="wxGraphicsContext"><c>wxGraphicsContext</c></seeerl> from a <seeerl marker="wxWindowDC"><c>wxWindowDC</c></seeerl>. 
      </p></desc>
  </func>
  
  <func>
    <name name="createBrush" arity="2" clause_i="1" since=""/>
    <fsummary>Creates a native brush from a <c>wxBrush</c>. </fsummary>
    <desc><p>Creates a native brush from a <seeerl marker="wxBrush"><c>wxBrush</c></seeerl>. 
      </p></desc>
  </func>
  
  <func>
    <name name="createLinearGradientBrush" arity="6" clause_i="1" since=""/>
    <fsummary>Creates a native brush with a linear gradient. </fsummary>
    <desc><p>Creates a native brush with a linear gradient. 
      </p><p>Stops support is new since wxWidgets 2.9.1, previously only the start and end colours could be specified.
      </p><p>The ability to apply a transformation matrix to the gradient was added in 3.1.3 
      </p></desc>
  </func>
  
  <func>
    <name name="createRadialGradientBrush" arity="7" clause_i="1" since=""/>
    <fsummary>Creates a native brush with a radial gradient. </fsummary>
    <desc><p>Creates a native brush with a radial gradient. 
      </p><p>Stops support is new since wxWidgets 2.9.1, previously only the start and end colours could be specified.
      </p><p>The ability to apply a transformation matrix to the gradient was added in 3.1.3 
      </p></desc>
  </func>
  
  <func>
    <name name="createFont" arity="2" clause_i="1" since=""/>
    <fsummary>See: <c>createFont/3</c></fsummary>
  </func>
  
  <func>
    <name name="createFont" arity="3" clause_i="1" since=""/>
  
    <name name="createFont" arity="3" clause_i="2" since=""/>
    <fsummary>Creates a native graphics font from a <c>wxFont</c> and a text colour. </fsummary>
    <desc><p>Creates a native graphics font from a <seeerl marker="wxFont"><c>wxFont</c></seeerl> and a text colour. 
      </p></desc>
  </func>
  
  <func>
    <name name="createFont" arity="4" clause_i="1" since=""/>
    <fsummary>Creates a graphics font with the given characteristics. </fsummary>
    <desc><p>Creates a graphics font with the given characteristics. 
      </p><p>If possible, the <seemfa marker="#createFont/4"><c>createFont/4</c></seemfa> overload taking <seeerl marker="wxFont"><c>wxFont</c></seeerl> should be used instead. The main advantage of this overload is that it can be used without X server connection under Unix when using Cairo.
      </p><p>Since: 2.9.3 
      </p></desc>
  </func>
  
  <func>
    <name name="createMatrix" arity="1" clause_i="1" since=""/>
    <fsummary>See: <c>createMatrix/2</c></fsummary>
  </func>
  
  <func>
    <name name="createMatrix" arity="2" clause_i="1" since=""/>
    <fsummary>Creates a native affine transformation matrix from the passed in values. </fsummary>
    <desc><p>Creates a native affine transformation matrix from the passed in values. 
      </p><p>The defaults result in an identity matrix. 
      </p></desc>
  </func>
  
  <func>
    <name name="createPath" arity="1" clause_i="1" since=""/>
    <fsummary>Creates a native graphics path which is initially empty. </fsummary>
    <desc><p>Creates a native graphics path which is initially empty. 
      </p></desc>
  </func>
  </funcs>
</erlref>
