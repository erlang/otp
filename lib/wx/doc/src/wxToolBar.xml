<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">

<!-- THIS FILE IS GENERATED DO NOT EDIT -->


<erlref>
<header>
  <copyright>
    <year>2020</year><year>2021</year>
    <holder>wxWidgets team.</holder></copyright>
  <legalnotice>Licensed under the wxWindows Free Documentation Licence, Version 3
  </legalnotice>
  <title>wxToolBar</title>
</header>
<module>wxToolBar</module>
<modulesummary>Functions for wxToolBar class</modulesummary>
<description><p>A toolbar is a bar of buttons and/or other controls usually placed below the menu bar in a <seeerl marker="wxFrame"><c>wxFrame</c></seeerl>.
      </p><p>You may create a toolbar that is managed by a frame calling <seemfa marker="wxFrame#createToolBar/2"><c>wxFrame:createToolBar/2</c></seemfa>. Under Pocket PC, you should always use this function for creating the toolbar to be managed by the frame, so that wxWidgets can use a combined menubar and toolbar. Where you manage your own toolbars, create <seeerl marker="wxToolBar"><c>wxToolBar</c></seeerl> as usual.
      </p><p>There are several different types of tools you can add to a toolbar. These types are controlled by the ?wxItemKind enumeration.
      </p><p>Note that many methods in <seeerl marker="wxToolBar"><c>wxToolBar</c></seeerl> such as <seemfa marker="#addTool/6"><c>addTool/6</c></seemfa> return a <c>wxToolBarToolBase*</c> object. This should be regarded as an opaque handle representing the newly added toolbar item, providing access to its id and position within the toolbar. Changes to the item's state should be made through calls to <seeerl marker="wxToolBar"><c>wxToolBar</c></seeerl> methods, for example <seemfa marker="#enableTool/3"><c>enableTool/3</c></seemfa>. Calls to <c>wxToolBarToolBase</c> (not implemented in wx) methods (undocumented by purpose) will not change the visible state of the item within the tool bar.
      </p><p>After you have added all the tools you need, you must call <seemfa marker="#realize/1"><c>realize/1</c></seemfa> to effectively construct and display the toolbar.
      </p><p><c>wxMSW note</c>: Note that under wxMSW toolbar paints tools to reflect system-wide colours. If you use more than 16 colours in your tool bitmaps, you may wish to suppress this behaviour, otherwise system colours in your bitmaps will inadvertently be mapped to system colours. To do this, set the msw.remap system option before creating the toolbar:  If you wish to use 32-bit images (which include an alpha channel for transparency) use:  Then colour remapping is switched off, and a transparent background used. But only use this option under Windows XP with true colour: 
      </p><p>Styles</p><p>This class supports the following styles:
      </p><p>See: <url href="https://docs.wxwidgets.org/3.1/overview_toolbar.html#overview_toolbar">Overview toolbar</url>
      </p>
  <p>This class is derived (and can use functions) from: 
    <seeerl marker="wxControl"><c>wxControl</c></seeerl> <seeerl marker="wxWindow"><c>wxWindow</c></seeerl> <seeerl marker="wxEvtHandler"><c>wxEvtHandler</c></seeerl></p>
  
  <p>wxWidgets docs: <url href="https://docs.wxwidgets.org/3.1/classwx_tool_bar.html">wxToolBar</url></p>
  </description><section><title>Events</title><p>Event types emitted from this class: <seeerl marker="wxCommandEvent"><c>command_tool_rclicked</c></seeerl>, <seeerl marker="wxCommandEvent"><c>command_tool_enter</c></seeerl>, <seeerl marker="wxCommandEvent"><c>tool_dropdown</c></seeerl></p></section>
<datatypes><datatype><name name="wxToolBar"/></datatype></datatypes>

<funcs>
  <func>
    <name name="addControl" arity="2" clause_i="1" since=""/>
    <fsummary>See: <c>addControl/3</c></fsummary>
  </func>
  
  <func>
    <name name="addControl" arity="3" clause_i="1" since=""/>
    <fsummary>Adds any control to the toolbar, typically e.g. a <c>wxComboBox</c>. </fsummary>
    <desc><p>Adds any control to the toolbar, typically e.g. a <seeerl marker="wxComboBox"><c>wxComboBox</c></seeerl>. 
      </p><p>Remark: wxMac: labels are only displayed if wxWidgets is built with <c>wxMAC_USE_NATIVE_TOOLBAR</c> set to 1 
      </p></desc>
  </func>
  
  <func>
    <name name="addSeparator" arity="1" clause_i="1" since=""/>
    <fsummary>Adds a separator for spacing groups of tools. </fsummary>
    <desc><p>Adds a separator for spacing groups of tools. 
      </p><p>Notice that the separator uses the look appropriate for the current platform so it can be a vertical line (MSW, some versions of GTK) or just an empty space or something else.
      </p><p>See: <seemfa marker="#addTool/6"><c>addTool/6</c></seemfa>, <seemfa marker="#setToolSeparation/2"><c>setToolSeparation/2</c></seemfa>, <seemfa marker="#addStretchableSpace/1"><c>addStretchableSpace/1</c></seemfa>
      </p></desc>
  </func>
  
  <func>
    <name name="addTool" arity="2" clause_i="1" since=""/>
    <fsummary>Adds a tool to the toolbar. </fsummary>
    <desc><p>Adds a tool to the toolbar. 
      </p><p>Remark: After you have added tools to a toolbar, you must call <seemfa marker="#realize/1"><c>realize/1</c></seemfa> in order to have the tools appear.
      </p><p>See: <seemfa marker="#addSeparator/1"><c>addSeparator/1</c></seemfa>, <seemfa marker="#addCheckTool/5"><c>addCheckTool/5</c></seemfa>, <seemfa marker="#addRadioTool/5"><c>addRadioTool/5</c></seemfa>, <seemfa marker="#insertTool/6"><c>insertTool/6</c></seemfa>, <seemfa marker="#deleteTool/2"><c>deleteTool/2</c></seemfa>, <seemfa marker="#realize/1"><c>realize/1</c></seemfa>, <c>SetDropdownMenu()</c> (not implemented in wx)
      </p></desc>
  </func>
  
  <func>
    <name name="addTool" arity="4" clause_i="1" since=""/>
    <fsummary>See: <c>addTool/5</c></fsummary>
  </func>
  
  <func>
    <name name="addTool" arity="5" clause_i="1" since=""/>
  
    <name name="addTool" arity="5" clause_i="2" since=""/>
    <fsummary>Adds a tool to the toolbar. </fsummary>
    <desc><p>Adds a tool to the toolbar. 
      </p><p>This most commonly used version has fewer parameters than the full version below which specifies the more rarely used button features.
      </p><p>Remark: After you have added tools to a toolbar, you must call <seemfa marker="#realize/1"><c>realize/1</c></seemfa> in order to have the tools appear.
      </p><p>See: <seemfa marker="#addSeparator/1"><c>addSeparator/1</c></seemfa>, <seemfa marker="#addCheckTool/5"><c>addCheckTool/5</c></seemfa>, <seemfa marker="#addRadioTool/5"><c>addRadioTool/5</c></seemfa>, <seemfa marker="#insertTool/6"><c>insertTool/6</c></seemfa>, <seemfa marker="#deleteTool/2"><c>deleteTool/2</c></seemfa>, <seemfa marker="#realize/1"><c>realize/1</c></seemfa>, <c>SetDropdownMenu()</c> (not implemented in wx)
      </p></desc>
  </func>
  
  <func>
    <name name="addTool" arity="6" clause_i="1" since=""/>
    <fsummary>Adds a tool to the toolbar. </fsummary>
    <desc><p>Adds a tool to the toolbar. 
      </p><p>Remark: After you have added tools to a toolbar, you must call <seemfa marker="#realize/1"><c>realize/1</c></seemfa> in order to have the tools appear.
      </p><p>See: <seemfa marker="#addSeparator/1"><c>addSeparator/1</c></seemfa>, <seemfa marker="#addCheckTool/5"><c>addCheckTool/5</c></seemfa>, <seemfa marker="#addRadioTool/5"><c>addRadioTool/5</c></seemfa>, <seemfa marker="#insertTool/6"><c>insertTool/6</c></seemfa>, <seemfa marker="#deleteTool/2"><c>deleteTool/2</c></seemfa>, <seemfa marker="#realize/1"><c>realize/1</c></seemfa>, <c>SetDropdownMenu()</c> (not implemented in wx)
      </p></desc>
  </func>
  
  <func>
    <name name="addCheckTool" arity="4" clause_i="1" since=""/>
    <fsummary>See: <c>addCheckTool/5</c></fsummary>
  </func>
  
  <func>
    <name name="addCheckTool" arity="5" clause_i="1" since=""/>
    <fsummary>Adds a new check (or toggle) tool to the toolbar. </fsummary>
    <desc><p>Adds a new check (or toggle) tool to the toolbar. 
      </p><p>The parameters are the same as in <seemfa marker="#addTool/6"><c>addTool/6</c></seemfa>.
      </p><p>See: <seemfa marker="#addTool/6"><c>addTool/6</c></seemfa>
      </p></desc>
  </func>
  
  <func>
    <name name="addRadioTool" arity="4" clause_i="1" since=""/>
    <fsummary>See: <c>addRadioTool/5</c></fsummary>
  </func>
  
  <func>
    <name name="addRadioTool" arity="5" clause_i="1" since=""/>
    <fsummary>Adds a new radio tool to the toolbar. </fsummary>
    <desc><p>Adds a new radio tool to the toolbar. 
      </p><p>Consecutive radio tools form a radio group such that exactly one button in the group is pressed at any moment, in other words whenever a button in the group is pressed the previously pressed button is automatically released. You should avoid having the radio groups of only one element as it would be impossible for the user to use such button.
      </p><p>By default, the first button in the radio group is initially pressed, the others are not.
      </p><p>See: <seemfa marker="#addTool/6"><c>addTool/6</c></seemfa>
      </p></desc>
  </func>
  
  <func>
    <name name="addStretchableSpace" arity="1" clause_i="1" since=""/>
    <fsummary>Adds a stretchable space to the toolbar. </fsummary>
    <desc><p>Adds a stretchable space to the toolbar. 
      </p><p>Any space not taken up by the fixed items (all items except for stretchable spaces) is distributed in equal measure between the stretchable spaces in the toolbar. The most common use for this method is to add a single stretchable space before the items which should be right-aligned in the toolbar, but more exotic possibilities are possible, e.g. a stretchable space may be added in the beginning and the end of the toolbar to centre all toolbar items.
      </p><p>See: <seemfa marker="#addTool/6"><c>addTool/6</c></seemfa>, <seemfa marker="#addSeparator/1"><c>addSeparator/1</c></seemfa>, <seemfa marker="#insertStretchableSpace/2"><c>insertStretchableSpace/2</c></seemfa>
      </p><p>Since: 2.9.1 
      </p></desc>
  </func>
  
  <func>
    <name name="insertStretchableSpace" arity="2" clause_i="1" since=""/>
    <fsummary>Inserts a stretchable space at the given position. </fsummary>
    <desc><p>Inserts a stretchable space at the given position. 
      </p><p>See <seemfa marker="#addStretchableSpace/1"><c>addStretchableSpace/1</c></seemfa> for details about stretchable spaces.
      </p><p>See: <seemfa marker="#insertTool/6"><c>insertTool/6</c></seemfa>, <seemfa marker="#insertSeparator/2"><c>insertSeparator/2</c></seemfa>
      </p><p>Since: 2.9.1 
      </p></desc>
  </func>
  
  <func>
    <name name="deleteTool" arity="2" clause_i="1" since=""/>
    <fsummary>Removes the specified tool from the toolbar and deletes it. </fsummary>
    <desc><p>Removes the specified tool from the toolbar and deletes it. 
      </p><p>If you don't want to delete the tool, but just to remove it from the toolbar (to possibly add it back later), you may use <seemfa marker="#removeTool/2"><c>removeTool/2</c></seemfa> instead.
      </p><p>Note: It is unnecessary to call <seemfa marker="#realize/1"><c>realize/1</c></seemfa> for the change to take place, it will happen immediately.
      </p><p>Return: true if the tool was deleted, false otherwise.
      </p><p>See: <seemfa marker="#deleteToolByPos/2"><c>deleteToolByPos/2</c></seemfa>
      </p></desc>
  </func>
  
  <func>
    <name name="deleteToolByPos" arity="2" clause_i="1" since=""/>
    <fsummary>This function behaves like <c>deleteTool/2</c> but it deletes the tool at the specified position and not the one with the given id. </fsummary>
    <desc><p>This function behaves like <seemfa marker="#deleteTool/2"><c>deleteTool/2</c></seemfa> but it deletes the tool at the specified position and not the one with the given id. 
      </p></desc>
  </func>
  
  <func>
    <name name="enableTool" arity="3" clause_i="1" since=""/>
    <fsummary>Enables or disables the tool. </fsummary>
    <desc><p>Enables or disables the tool. 
      </p><p>Remark: Some implementations will change the visible state of the tool to indicate that it is disabled.
      </p><p>See: <seemfa marker="#getToolEnabled/2"><c>getToolEnabled/2</c></seemfa>, <seemfa marker="#toggleTool/3"><c>toggleTool/3</c></seemfa>
      </p></desc>
  </func>
  
  <func>
    <name name="findById" arity="2" clause_i="1" since=""/>
    <fsummary>Returns a pointer to the tool identified by <c>id</c> or NULL if no corresponding tool is found. </fsummary>
    <desc><p>Returns a pointer to the tool identified by <c>id</c> or NULL if no corresponding tool is found. 
      </p></desc>
  </func>
  
  <func>
    <name name="findControl" arity="2" clause_i="1" since=""/>
    <fsummary>Returns a pointer to the control identified by <c>id</c> or NULL if no corresponding control is found. </fsummary>
    <desc><p>Returns a pointer to the control identified by <c>id</c> or NULL if no corresponding control is found. 
      </p></desc>
  </func>
  
  <func>
    <name name="findToolForPosition" arity="3" clause_i="1" since=""/>
    <fsummary>Finds a tool for the given mouse position. </fsummary>
    <desc><p>Finds a tool for the given mouse position. 
      </p><p>Return: A pointer to a tool if a tool is found, or NULL otherwise.
      </p><p>Remark: Currently not implemented in wxGTK (always returns NULL there). 
      </p></desc>
  </func>
  
  <func>
    <name name="getToolSize" arity="1" clause_i="1" since=""/>
    <fsummary>Returns the size of a whole button, which is usually larger than a tool bitmap because of added 3D effects. </fsummary>
    <desc><p>Returns the size of a whole button, which is usually larger than a tool bitmap because of added 3D effects. 
      </p><p>See: <seemfa marker="#setToolBitmapSize/2"><c>setToolBitmapSize/2</c></seemfa>, <seemfa marker="#getToolBitmapSize/1"><c>getToolBitmapSize/1</c></seemfa>
      </p></desc>
  </func>
  
  <func>
    <name name="getToolBitmapSize" arity="1" clause_i="1" since=""/>
    <fsummary>Returns the size of bitmap that the toolbar expects to have. </fsummary>
    <desc><p>Returns the size of bitmap that the toolbar expects to have. 
      </p><p>The default bitmap size is platform-dependent: for example, it is 16*15 for MSW and 24*24 for GTK. This size does <c>not</c> necessarily indicate the best size to use for the toolbars on the given platform, for this you should use <c>wxArtProvider::GetNativeSizeHint(wxART_TOOLBAR)</c> but in any case, as the bitmap size is deduced automatically from the size of the bitmaps associated with the tools added to the toolbar, it is usually unnecessary to call <seemfa marker="#setToolBitmapSize/2"><c>setToolBitmapSize/2</c></seemfa> explicitly.
      </p><p>Remark: Note that this is the size of the bitmap you pass to <seemfa marker="#addTool/6"><c>addTool/6</c></seemfa>, and not the eventual size of the tool button.
      </p><p>See: <seemfa marker="#setToolBitmapSize/2"><c>setToolBitmapSize/2</c></seemfa>, <seemfa marker="#getToolSize/1"><c>getToolSize/1</c></seemfa>
      </p></desc>
  </func>
  
  <func>
    <name name="getMargins" arity="1" clause_i="1" since=""/>
    <fsummary>Returns the left/right and top/bottom margins, which are also used for inter-toolspacing. </fsummary>
    <desc><p>Returns the left/right and top/bottom margins, which are also used for inter-toolspacing. 
      </p><p>See: <seemfa marker="#setMargins/3"><c>setMargins/3</c></seemfa>
      </p></desc>
  </func>
  
  <func>
    <name name="getToolEnabled" arity="2" clause_i="1" since=""/>
    <fsummary>Called to determine whether a tool is enabled (responds to user input). </fsummary>
    <desc><p>Called to determine whether a tool is enabled (responds to user input). 
      </p><p>Return: true if the tool is enabled, false otherwise.
      </p><p>See: <seemfa marker="#enableTool/3"><c>enableTool/3</c></seemfa>
      </p></desc>
  </func>
  
  <func>
    <name name="getToolLongHelp" arity="2" clause_i="1" since=""/>
    <fsummary>Returns the long help for the given tool. </fsummary>
    <desc><p>Returns the long help for the given tool. 
      </p><p>See: <seemfa marker="#setToolLongHelp/3"><c>setToolLongHelp/3</c></seemfa>, <seemfa marker="#setToolShortHelp/3"><c>setToolShortHelp/3</c></seemfa>
      </p></desc>
  </func>
  
  <func>
    <name name="getToolPacking" arity="1" clause_i="1" since=""/>
    <fsummary>Returns the value used for packing tools. </fsummary>
    <desc><p>Returns the value used for packing tools. 
      </p><p>See: <seemfa marker="#setToolPacking/2"><c>setToolPacking/2</c></seemfa>
      </p></desc>
  </func>
  
  <func>
    <name name="getToolPos" arity="2" clause_i="1" since=""/>
    <fsummary>Returns the tool position in the toolbar, or <c>wxNOT_FOUND</c> if the tool is not found. </fsummary>
    <desc><p>Returns the tool position in the toolbar, or <c>wxNOT_FOUND</c> if the tool is not found. 
      </p></desc>
  </func>
  
  <func>
    <name name="getToolSeparation" arity="1" clause_i="1" since=""/>
    <fsummary>Returns the default separator size. </fsummary>
    <desc><p>Returns the default separator size. 
      </p><p>See: <seemfa marker="#setToolSeparation/2"><c>setToolSeparation/2</c></seemfa>
      </p></desc>
  </func>
  
  <func>
    <name name="getToolShortHelp" arity="2" clause_i="1" since=""/>
    <fsummary>Returns the short help for the given tool. </fsummary>
    <desc><p>Returns the short help for the given tool. 
      </p><p>See: <seemfa marker="#getToolLongHelp/2"><c>getToolLongHelp/2</c></seemfa>, <seemfa marker="#setToolShortHelp/3"><c>setToolShortHelp/3</c></seemfa>
      </p></desc>
  </func>
  
  <func>
    <name name="getToolState" arity="2" clause_i="1" since=""/>
    <fsummary>Gets the on/off state of a toggle tool. </fsummary>
    <desc><p>Gets the on/off state of a toggle tool. 
      </p><p>Return: true if the tool is toggled on, false otherwise.
      </p><p>See: <seemfa marker="#toggleTool/3"><c>toggleTool/3</c></seemfa>
      </p></desc>
  </func>
  
  <func>
    <name name="insertControl" arity="3" clause_i="1" since=""/>
    <fsummary>See: <c>insertControl/4</c></fsummary>
  </func>
  
  <func>
    <name name="insertControl" arity="4" clause_i="1" since=""/>
    <fsummary>Inserts the control into the toolbar at the given position. </fsummary>
    <desc><p>Inserts the control into the toolbar at the given position. 
      </p><p>You must call <seemfa marker="#realize/1"><c>realize/1</c></seemfa> for the change to take place.
      </p><p>See: <seemfa marker="#addControl/3"><c>addControl/3</c></seemfa>, <seemfa marker="#insertTool/6"><c>insertTool/6</c></seemfa>
      </p></desc>
  </func>
  
  <func>
    <name name="insertSeparator" arity="2" clause_i="1" since=""/>
    <fsummary>Inserts the separator into the toolbar at the given position. </fsummary>
    <desc><p>Inserts the separator into the toolbar at the given position. 
      </p><p>You must call <seemfa marker="#realize/1"><c>realize/1</c></seemfa> for the change to take place.
      </p><p>See: <seemfa marker="#addSeparator/1"><c>addSeparator/1</c></seemfa>, <seemfa marker="#insertTool/6"><c>insertTool/6</c></seemfa>
      </p></desc>
  </func>
  
  <func>
    <name name="insertTool" arity="3" clause_i="1" since=""/>
    <fsummary/>
    <desc/>
  </func>
  
  <func>
    <name name="insertTool" arity="5" clause_i="1" since=""/>
    <fsummary>See: <c>insertTool/6</c></fsummary>
  </func>
  
  <func>
    <name name="insertTool" arity="6" clause_i="1" since=""/>
    <fsummary>Inserts the tool with the specified attributes into the toolbar at the given position. </fsummary>
    <desc><p>Inserts the tool with the specified attributes into the toolbar at the given position. 
      </p><p>You must call <seemfa marker="#realize/1"><c>realize/1</c></seemfa> for the change to take place.
      </p><p>See: <seemfa marker="#addTool/6"><c>addTool/6</c></seemfa>, <seemfa marker="#insertControl/4"><c>insertControl/4</c></seemfa>, <seemfa marker="#insertSeparator/2"><c>insertSeparator/2</c></seemfa>
      </p><p>Return: The newly inserted tool or NULL on failure. Notice that with the overload taking <c>tool</c> parameter the caller is responsible for deleting the tool in the latter case. 
      </p></desc>
  </func>
  
  <func>
    <name name="realize" arity="1" clause_i="1" since=""/>
    <fsummary>This function should be called after you have added tools. </fsummary>
    <desc><p>This function should be called after you have added tools. 
      </p></desc>
  </func>
  
  <func>
    <name name="removeTool" arity="2" clause_i="1" since=""/>
    <fsummary>Removes the given tool from the toolbar but doesn't delete it. </fsummary>
    <desc><p>Removes the given tool from the toolbar but doesn't delete it. 
      </p><p>This allows inserting/adding this tool back to this (or another) toolbar later.
      </p><p>Note: It is unnecessary to call <seemfa marker="#realize/1"><c>realize/1</c></seemfa> for the change to take place, it will happen immediately.
      </p><p>See: <seemfa marker="#deleteTool/2"><c>deleteTool/2</c></seemfa>
      </p></desc>
  </func>
  
  <func>
    <name name="setMargins" arity="3" clause_i="1" since=""/>
    <fsummary>Set the values to be used as margins for the toolbar. </fsummary>
    <desc><p>Set the values to be used as margins for the toolbar. 
      </p><p>Remark: This must be called before the tools are added if absolute positioning is to be used, and the default (zero-size) margins are to be overridden.
      </p><p>See: <seemfa marker="#getMargins/1"><c>getMargins/1</c></seemfa>
      </p></desc>
  </func>
  
  <func>
    <name name="setToolBitmapSize" arity="2" clause_i="1" since=""/>
    <fsummary>Sets the default size of each tool bitmap. </fsummary>
    <desc><p>Sets the default size of each tool bitmap. 
      </p><p>The default bitmap size is 16 by 15 pixels.
      </p><p>Remark: This should be called to tell the toolbar what the tool bitmap size is. Call it before you add tools.
      </p><p>See: <seemfa marker="#getToolBitmapSize/1"><c>getToolBitmapSize/1</c></seemfa>, <seemfa marker="#getToolSize/1"><c>getToolSize/1</c></seemfa>
      </p></desc>
  </func>
  
  <func>
    <name name="setToolLongHelp" arity="3" clause_i="1" since=""/>
    <fsummary>Sets the long help for the given tool. </fsummary>
    <desc><p>Sets the long help for the given tool. 
      </p><p>Remark: You might use the long help for displaying the tool purpose on the status line.
      </p><p>See: <seemfa marker="#getToolLongHelp/2"><c>getToolLongHelp/2</c></seemfa>, <seemfa marker="#setToolShortHelp/3"><c>setToolShortHelp/3</c></seemfa>
      </p></desc>
  </func>
  
  <func>
    <name name="setToolPacking" arity="2" clause_i="1" since=""/>
    <fsummary>Sets the value used for spacing tools. </fsummary>
    <desc><p>Sets the value used for spacing tools. 
      </p><p>The default value is 1.
      </p><p>Remark: The packing is used for spacing in the vertical direction if the toolbar is horizontal, and for spacing in the horizontal direction if the toolbar is vertical.
      </p><p>See: <seemfa marker="#getToolPacking/1"><c>getToolPacking/1</c></seemfa>
      </p></desc>
  </func>
  
  <func>
    <name name="setToolShortHelp" arity="3" clause_i="1" since=""/>
    <fsummary>Sets the short help for the given tool. </fsummary>
    <desc><p>Sets the short help for the given tool. 
      </p><p>Remark: An application might use short help for identifying the tool purpose in a tooltip.
      </p><p>See: <seemfa marker="#getToolShortHelp/2"><c>getToolShortHelp/2</c></seemfa>, <seemfa marker="#setToolLongHelp/3"><c>setToolLongHelp/3</c></seemfa>
      </p></desc>
  </func>
  
  <func>
    <name name="setToolSeparation" arity="2" clause_i="1" since=""/>
    <fsummary>Sets the default separator size. </fsummary>
    <desc><p>Sets the default separator size. 
      </p><p>The default value is 5.
      </p><p>See: <seemfa marker="#addSeparator/1"><c>addSeparator/1</c></seemfa>
      </p></desc>
  </func>
  
  <func>
    <name name="toggleTool" arity="3" clause_i="1" since=""/>
    <fsummary>Toggles a tool on or off. </fsummary>
    <desc><p>Toggles a tool on or off. 
      </p><p>This does not cause any event to get emitted.
      </p><p>Remark: Only applies to a tool that has been specified as a toggle tool. 
      </p></desc>
  </func>
  </funcs>
</erlref>
