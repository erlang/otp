<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">

<!-- THIS FILE IS GENERATED DO NOT EDIT -->


<erlref>
<header>
  <copyright>
    <year>2020</year><year>2021</year>
    <holder>wxWidgets team.</holder></copyright>
  <legalnotice>Licensed under the wxWindows Free Documentation Licence, Version 3
  </legalnotice>
  <title>wxStaticBitmap</title>
</header>
<module>wxStaticBitmap</module>
<modulesummary>Functions for wxStaticBitmap class</modulesummary>
<description><p>A static bitmap control displays a bitmap. Native implementations on some platforms are only meant for display of the small icons in the dialog boxes.
      </p><p>If you want to display larger images portably, you may use generic implementation wxGenericStaticBitmap declared in &lt;wx/generic/statbmpg.h&gt;.
      </p><p>Notice that for the best results, the size of the control should be the same as the size of the image displayed in it, as happens by default if it's not resized explicitly. Otherwise, behaviour depends on the platform: under MSW, the bitmap is drawn centred inside the control, while elsewhere it is drawn at the origin of the control. You can use <c>SetScaleMode()</c> (not implemented in wx) to control how the image is scaled inside the control.
      </p><p>See: <seeerl marker="wxBitmap"><c>wxBitmap</c></seeerl>
      </p>
  <p>This class is derived (and can use functions) from: 
    <seeerl marker="wxControl"><c>wxControl</c></seeerl> <seeerl marker="wxWindow"><c>wxWindow</c></seeerl> <seeerl marker="wxEvtHandler"><c>wxEvtHandler</c></seeerl></p>
  
  <p>wxWidgets docs: <url href="https://docs.wxwidgets.org/3.1/classwx_static_bitmap.html">wxStaticBitmap</url></p>
  </description>
<datatypes><datatype><name name="wxStaticBitmap"/></datatype></datatypes>

<funcs>
  <func>
    <name name="new" arity="0" clause_i="1" since=""/>
    <fsummary>Default constructor. </fsummary>
    <desc><p>Default constructor. 
      </p></desc>
  </func>
  
  <func>
    <name name="new" arity="3" clause_i="1" since=""/>
    <fsummary>See: <c>new/4</c></fsummary>
  </func>
  
  <func>
    <name name="new" arity="4" clause_i="1" since=""/>
    <fsummary>Constructor, creating and showing a static bitmap control. </fsummary>
    <desc><p>Constructor, creating and showing a static bitmap control. 
      </p><p>See: <seemfa marker="#create/5"><c>create/5</c></seemfa>
      </p></desc>
  </func>
  
  <func>
    <name name="create" arity="4" clause_i="1" since=""/>
    <fsummary>See: <c>create/5</c></fsummary>
  </func>
  
  <func>
    <name name="create" arity="5" clause_i="1" since=""/>
    <fsummary>Creation function, for two-step construction. </fsummary>
    <desc><p>Creation function, for two-step construction. 
      </p><p>For details see <seemfa marker="#new/4"><c>new/4</c></seemfa>. 
      </p></desc>
  </func>
  
  <func>
    <name name="getBitmap" arity="1" clause_i="1" since=""/>
    <fsummary>Returns the bitmap currently used in the control. </fsummary>
    <desc><p>Returns the bitmap currently used in the control. 
      </p><p>Notice that this method can be called even if <c>SetIcon()</c> (not implemented in wx) had been used.
      </p><p>See: <seemfa marker="#setBitmap/2"><c>setBitmap/2</c></seemfa>
      </p></desc>
  </func>
  
  <func>
    <name name="setBitmap" arity="2" clause_i="1" since=""/>
    <fsummary>Sets the bitmap label. </fsummary>
    <desc><p>Sets the bitmap label. 
      </p><p>See: <seemfa marker="#getBitmap/1"><c>getBitmap/1</c></seemfa>
      </p></desc>
  </func>
  
  <func>
    <name name="destroy" arity="1" clause_i="1" since=""/>
    <fsummary>Destructor</fsummary>
    <desc><p>Destroys the object.</p></desc>
  </func>
  </funcs>
</erlref>
