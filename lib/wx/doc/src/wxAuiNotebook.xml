<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">

<!-- THIS FILE IS GENERATED DO NOT EDIT -->


<erlref>
<header>
  <copyright>
    <year>2020</year><year>2021</year>
    <holder>wxWidgets team.</holder></copyright>
  <legalnotice>Licensed under the wxWindows Free Documentation Licence, Version 3
  </legalnotice>
  <title>wxAuiNotebook</title>
</header>
<module>wxAuiNotebook</module>
<modulesummary>Functions for wxAuiNotebook class</modulesummary>
<description><p><seeerl marker="wxAuiNotebook"><c>wxAuiNotebook</c></seeerl> is part of the wxAUI class framework, which represents a notebook control, managing multiple windows with associated tabs.
      </p><p>See also overview_aui.
      </p><p><seeerl marker="wxAuiNotebook"><c>wxAuiNotebook</c></seeerl> is a notebook control which implements many features common in applications with dockable panes. Specifically, <seeerl marker="wxAuiNotebook"><c>wxAuiNotebook</c></seeerl> implements functionality which allows the user to rearrange tab order via drag-and-drop, split the tab window into many different splitter configurations, and toggle through different themes to customize the control's look and feel.
      </p><p>The default theme that is used is <c>wxAuiDefaultTabArt</c> (not implemented in wx), which provides a modern, glossy look and feel. The theme can be changed by calling <seemfa marker="#setArtProvider/2"><c>setArtProvider/2</c></seemfa>.
      </p><p>Styles</p><p>This class supports the following styles:
      </p>
  <p>This class is derived (and can use functions) from: 
    <seeerl marker="wxControl"><c>wxControl</c></seeerl> <seeerl marker="wxWindow"><c>wxWindow</c></seeerl> <seeerl marker="wxEvtHandler"><c>wxEvtHandler</c></seeerl></p>
  
  <p>wxWidgets docs: <url href="https://docs.wxwidgets.org/3.1/classwx_aui_notebook.html">wxAuiNotebook</url></p>
  </description><section><title>Events</title><p>Event types emitted from this class: <seeerl marker="wxAuiNotebookEvent"><c>command_auinotebook_page_close</c></seeerl>, <seeerl marker="wxAuiNotebookEvent"><c>command_auinotebook_page_closed</c></seeerl>, <seeerl marker="wxAuiNotebookEvent"><c>command_auinotebook_page_changed</c></seeerl>, <seeerl marker="wxAuiNotebookEvent"><c>command_auinotebook_page_changing</c></seeerl>, <seeerl marker="wxAuiNotebookEvent"><c>command_auinotebook_button</c></seeerl>, <seeerl marker="wxAuiNotebookEvent"><c>command_auinotebook_begin_drag</c></seeerl>, <seeerl marker="wxAuiNotebookEvent"><c>command_auinotebook_end_drag</c></seeerl>, <seeerl marker="wxAuiNotebookEvent"><c>command_auinotebook_drag_motion</c></seeerl>, <seeerl marker="wxAuiNotebookEvent"><c>command_auinotebook_allow_dnd</c></seeerl>, <seeerl marker="wxAuiNotebookEvent"><c>command_auinotebook_drag_done</c></seeerl>, <seeerl marker="wxAuiNotebookEvent"><c>command_auinotebook_tab_middle_down</c></seeerl>, <seeerl marker="wxAuiNotebookEvent"><c>command_auinotebook_tab_middle_up</c></seeerl>, <seeerl marker="wxAuiNotebookEvent"><c>command_auinotebook_tab_right_down</c></seeerl>, <seeerl marker="wxAuiNotebookEvent"><c>command_auinotebook_tab_right_up</c></seeerl>, <seeerl marker="wxAuiNotebookEvent"><c>command_auinotebook_bg_dclick</c></seeerl></p></section>
<datatypes><datatype><name name="wxAuiNotebook"/></datatype></datatypes>

<funcs>
  <func>
    <name name="new" arity="0" clause_i="1" since=""/>
    <fsummary>Default ctor. </fsummary>
    <desc><p>Default ctor. 
      </p></desc>
  </func>
  
  <func>
    <name name="new" arity="1" clause_i="1" since=""/>
    <fsummary>See: <c>new/2</c></fsummary>
  </func>
  
  <func>
    <name name="new" arity="2" clause_i="1" since=""/>
    <fsummary>Constructor. </fsummary>
    <desc><p>Constructor. 
      </p><p>Creates a wxAuiNotebok control. 
      </p></desc>
  </func>
  
  <func>
    <name name="addPage" arity="3" clause_i="1" since=""/>
    <fsummary>See: <c>addPage/4</c></fsummary>
  </func>
  
  <func>
    <name name="addPage" arity="4" clause_i="1" since=""/>
    <fsummary>Adds a page. </fsummary>
    <desc><p>Adds a page. 
      </p><p>If the <c>select</c> parameter is true, calling this will generate a page change event. 
      </p></desc>
  </func>
  
  <func>
    <name name="addPage" arity="5" clause_i="1" since=""/>
    <fsummary>Adds a new page. </fsummary>
    <desc><p>Adds a new page. 
      </p><p>The page must have the book control itself as the parent and must not have been added to this control previously.
      </p><p>The call to this function may generate the page changing events.
      </p><p>Return: true if successful, false otherwise.
      </p><p>Remark: Do not delete the page, it will be deleted by the book control.
      </p><p>See: <seemfa marker="#insertPage/6"><c>insertPage/6</c></seemfa>
      </p><p>Since: 2.9.3 
      </p></desc>
  </func>
  
  <func>
    <name name="create" arity="2" clause_i="1" since=""/>
    <fsummary>See: <c>create/3</c></fsummary>
  </func>
  
  <func>
    <name name="create" arity="3" clause_i="1" since=""/>
  
    <name name="create" arity="3" clause_i="2" since=""/>
    <fsummary>Creates the notebook window. </fsummary>
    <desc><p>Creates the notebook window. 
      </p></desc>
  </func>
  
  <func>
    <name name="create" arity="4" clause_i="1" since=""/>
    <fsummary>Constructs the book control with the given parameters. </fsummary>
    <desc><p>Constructs the book control with the given parameters. 
      </p></desc>
  </func>
  
  <func>
    <name name="deletePage" arity="2" clause_i="1" since=""/>
    <fsummary>Deletes a page at the given index. </fsummary>
    <desc><p>Deletes a page at the given index. 
      </p><p>Calling this method will generate a page change event. 
      </p></desc>
  </func>
  
  <func>
    <name name="getArtProvider" arity="1" clause_i="1" since=""/>
    <fsummary>Returns the associated art provider. </fsummary>
    <desc><p>Returns the associated art provider. 
      </p></desc>
  </func>
  
  <func>
    <name name="getPage" arity="2" clause_i="1" since=""/>
    <fsummary>Returns the page specified by the given index. </fsummary>
    <desc><p>Returns the page specified by the given index. 
      </p></desc>
  </func>
  
  <func>
    <name name="getPageBitmap" arity="2" clause_i="1" since=""/>
    <fsummary>Returns the tab bitmap for the page. </fsummary>
    <desc><p>Returns the tab bitmap for the page. 
      </p></desc>
  </func>
  
  <func>
    <name name="getPageCount" arity="1" clause_i="1" since=""/>
    <fsummary>Returns the number of pages in the notebook. </fsummary>
    <desc><p>Returns the number of pages in the notebook. 
      </p></desc>
  </func>
  
  <func>
    <name name="getPageIndex" arity="2" clause_i="1" since=""/>
    <fsummary>Returns the page index for the specified window. </fsummary>
    <desc><p>Returns the page index for the specified window. 
      </p><p>If the window is not found in the notebook, wxNOT_FOUND is returned. 
      </p></desc>
  </func>
  
  <func>
    <name name="getPageText" arity="2" clause_i="1" since=""/>
    <fsummary>Returns the tab label for the page. </fsummary>
    <desc><p>Returns the tab label for the page. 
      </p></desc>
  </func>
  
  <func>
    <name name="getSelection" arity="1" clause_i="1" since=""/>
    <fsummary>Returns the currently selected page. </fsummary>
    <desc><p>Returns the currently selected page. 
      </p></desc>
  </func>
  
  <func>
    <name name="insertPage" arity="4" clause_i="1" since=""/>
    <fsummary>See: <c>insertPage/5</c></fsummary>
  </func>
  
  <func>
    <name name="insertPage" arity="5" clause_i="1" since=""/>
    <fsummary><c>insertPage/6</c> is similar to AddPage, but allows the ability to specify the insert location. </fsummary>
    <desc><p><seemfa marker="#insertPage/6"><c>insertPage/6</c></seemfa> is similar to AddPage, but allows the ability to specify the insert location. 
      </p><p>If the <c>select</c> parameter is true, calling this will generate a page change event. 
      </p></desc>
  </func>
  
  <func>
    <name name="insertPage" arity="6" clause_i="1" since=""/>
    <fsummary>Inserts a new page at the specified position. </fsummary>
    <desc><p>Inserts a new page at the specified position. 
      </p><p>Return: true if successful, false otherwise.
      </p><p>Remark: Do not delete the page, it will be deleted by the book control.
      </p><p>See: <seemfa marker="#addPage/5"><c>addPage/5</c></seemfa>
      </p><p>Since: 2.9.3 
      </p></desc>
  </func>
  
  <func>
    <name name="removePage" arity="2" clause_i="1" since=""/>
    <fsummary>Removes a page, without deleting the window pointer. </fsummary>
    <desc><p>Removes a page, without deleting the window pointer. 
      </p></desc>
  </func>
  
  <func>
    <name name="setArtProvider" arity="2" clause_i="1" since=""/>
    <fsummary>Sets the art provider to be used by the notebook. </fsummary>
    <desc><p>Sets the art provider to be used by the notebook. 
      </p></desc>
  </func>
  
  <func>
    <name name="setFont" arity="2" clause_i="1" since=""/>
    <fsummary>Sets the font for drawing the tab labels, using a bold version of the font for selected tab labels. </fsummary>
    <desc><p>Sets the font for drawing the tab labels, using a bold version of the font for selected tab labels. 
      </p></desc>
  </func>
  
  <func>
    <name name="setPageBitmap" arity="3" clause_i="1" since=""/>
    <fsummary>Sets the bitmap for the page. </fsummary>
    <desc><p>Sets the bitmap for the page. 
      </p><p>To remove a bitmap from the tab caption, pass wxNullBitmap. 
      </p></desc>
  </func>
  
  <func>
    <name name="setPageText" arity="3" clause_i="1" since=""/>
    <fsummary>Sets the tab label for the page. </fsummary>
    <desc><p>Sets the tab label for the page. 
      </p></desc>
  </func>
  
  <func>
    <name name="setSelection" arity="2" clause_i="1" since=""/>
    <fsummary>Sets the page selection. </fsummary>
    <desc><p>Sets the page selection. 
      </p><p>Calling this method will generate a page change event. 
      </p></desc>
  </func>
  
  <func>
    <name name="setTabCtrlHeight" arity="2" clause_i="1" since=""/>
    <fsummary>Sets the tab height. </fsummary>
    <desc><p>Sets the tab height. 
      </p><p>By default, the tab control height is calculated by measuring the text height and bitmap sizes on the tab captions. Calling this method will override that calculation and set the tab control to the specified height parameter. A call to this method will override any call to <seemfa marker="#setUniformBitmapSize/2"><c>setUniformBitmapSize/2</c></seemfa>.
      </p><p>Specifying -1 as the height will return the control to its default auto-sizing behaviour. 
      </p></desc>
  </func>
  
  <func>
    <name name="setUniformBitmapSize" arity="2" clause_i="1" since=""/>
    <fsummary>Ensure that all tabs have the same height, even if some of them don't have bitmaps. </fsummary>
    <desc><p>Ensure that all tabs have the same height, even if some of them don't have bitmaps. 
      </p><p>Passing ?wxDefaultSize as <c>size</c> undoes the effect of a previous call to this function and instructs the control to use dynamic tab height. 
      </p></desc>
  </func>
  
  <func>
    <name name="destroy" arity="1" clause_i="1" since=""/>
    <fsummary>Destructor</fsummary>
    <desc><p>Destroys the object.</p></desc>
  </func>
  </funcs>
</erlref>
