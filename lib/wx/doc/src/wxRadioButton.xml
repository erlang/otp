<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">

<!-- THIS FILE IS GENERATED DO NOT EDIT -->


<erlref>
<header>
  <copyright>
    <year>2020</year><year>2021</year>
    <holder>wxWidgets team.</holder></copyright>
  <legalnotice>Licensed under the wxWindows Free Documentation Licence, Version 3
  </legalnotice>
  <title>wxRadioButton</title>
</header>
<module>wxRadioButton</module>
<modulesummary>Functions for wxRadioButton class</modulesummary>
<description><p>A radio button item is a button which usually denotes one of several mutually exclusive options. It has a text label next to a (usually) round button.
      </p><p>You can create a group of mutually-exclusive radio buttons by specifying <c>wxRB_GROUP</c> for the first in the group. The group ends when another radio button group is created, or there are no more radio buttons.
      </p><p>Styles</p><p>This class supports the following styles:
      </p><p>See: <url href="https://docs.wxwidgets.org/3.1/overview_events.html#overview_events">Overview events</url>, <seeerl marker="wxRadioBox"><c>wxRadioBox</c></seeerl>, <seeerl marker="wxCheckBox"><c>wxCheckBox</c></seeerl>
      </p>
  <p>This class is derived (and can use functions) from: 
    <seeerl marker="wxControl"><c>wxControl</c></seeerl> <seeerl marker="wxWindow"><c>wxWindow</c></seeerl> <seeerl marker="wxEvtHandler"><c>wxEvtHandler</c></seeerl></p>
  
  <p>wxWidgets docs: <url href="https://docs.wxwidgets.org/3.1/classwx_radio_button.html">wxRadioButton</url></p>
  </description><section><title>Events</title><p>Event types emitted from this class: <seeerl marker="wxCommandEvent"><c>command_radiobutton_selected</c></seeerl></p></section>
<datatypes><datatype><name name="wxRadioButton"/></datatype></datatypes>

<funcs>
  <func>
    <name name="new" arity="0" clause_i="1" since=""/>
    <fsummary>Default constructor. </fsummary>
    <desc><p>Default constructor. 
      </p><p>See: <seemfa marker="#create/5"><c>create/5</c></seemfa>, <c>wxValidator</c> (not implemented in wx)
      </p></desc>
  </func>
  
  <func>
    <name name="new" arity="3" clause_i="1" since=""/>
    <fsummary>See: <c>new/4</c></fsummary>
  </func>
  
  <func>
    <name name="new" arity="4" clause_i="1" since=""/>
    <fsummary>Constructor, creating and showing a radio button. </fsummary>
    <desc><p>Constructor, creating and showing a radio button. 
      </p><p>See: <seemfa marker="#create/5"><c>create/5</c></seemfa>, <c>wxValidator</c> (not implemented in wx)
      </p></desc>
  </func>
  
  <func>
    <name name="destroy" arity="1" clause_i="1" since=""/>
    <fsummary>Destructor, destroying the radio button item. </fsummary>
    <desc><p>Destructor, destroying the radio button item. 
      </p></desc>
  </func>
  
  <func>
    <name name="create" arity="4" clause_i="1" since=""/>
    <fsummary>See: <c>create/5</c></fsummary>
  </func>
  
  <func>
    <name name="create" arity="5" clause_i="1" since=""/>
    <fsummary>Creates the choice for two-step construction. </fsummary>
    <desc><p>Creates the choice for two-step construction. 
      </p><p>See <seemfa marker="#new/4"><c>new/4</c></seemfa> for further details. 
      </p></desc>
  </func>
  
  <func>
    <name name="getValue" arity="1" clause_i="1" since=""/>
    <fsummary>Returns true if the radio button is checked, false otherwise. </fsummary>
    <desc><p>Returns true if the radio button is checked, false otherwise. 
      </p></desc>
  </func>
  
  <func>
    <name name="setValue" arity="2" clause_i="1" since=""/>
    <fsummary>Sets the radio button to checked or unchecked status. </fsummary>
    <desc><p>Sets the radio button to checked or unchecked status. 
      </p><p>This does not cause a <c>wxEVT_RADIOBUTTON</c> event to get emitted.
      </p><p>If the radio button belongs to a radio group exactly one button in the group may be checked and so this method can be only called with <c>value</c> set to true. To uncheck a radio button in a group you must check another button in the same group.
      </p><p>Note: Under MSW, the focused radio button is always selected, i.e. its value is true. And, conversely, calling <c>SetValue(true)</c> will also set focus to the radio button if the focus had previously been on another radio button in the same group - as otherwise setting it on wouldn't work.
      </p></desc>
  </func>
  </funcs>
</erlref>
