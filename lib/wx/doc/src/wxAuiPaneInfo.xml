<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">

<!-- THIS FILE IS GENERATED DO NOT EDIT -->


<erlref>
<header>
  <copyright>
    <year>2020</year><year>2021</year>
    <holder>wxWidgets team.</holder></copyright>
  <legalnotice>Licensed under the wxWindows Free Documentation Licence, Version 3
  </legalnotice>
  <title>wxAuiPaneInfo</title>
</header>
<module>wxAuiPaneInfo</module>
<modulesummary>Functions for wxAuiPaneInfo class</modulesummary>
<description><p><seeerl marker="wxAuiPaneInfo"><c>wxAuiPaneInfo</c></seeerl> is part of the wxAUI class framework. See also overview_aui.
      </p><p><seeerl marker="wxAuiPaneInfo"><c>wxAuiPaneInfo</c></seeerl> specifies all the parameters for a pane. These parameters specify where the pane is on the screen, whether it is docked or floating, or hidden. In addition, these parameters specify the pane's docked position, floating position, preferred size, minimum size, caption text among many other parameters.
      </p><p>See: <seeerl marker="wxAuiManager"><c>wxAuiManager</c></seeerl>, <seeerl marker="wxAuiDockArt"><c>wxAuiDockArt</c></seeerl>
      </p>
  <p>wxWidgets docs: <url href="https://docs.wxwidgets.org/3.1/classwx_aui_pane_info.html">wxAuiPaneInfo</url></p>
  </description>
<datatypes><datatype><name name="wxAuiPaneInfo"/></datatype></datatypes>

<funcs>
  <func>
    <name name="new" arity="0" clause_i="1" since=""/>
    <fsummary/>
    <desc/>
  </func>
  
  <func>
    <name name="new" arity="1" clause_i="1" since=""/>
    <fsummary>Copy constructor. </fsummary>
    <desc><p>Copy constructor. 
      </p></desc>
  </func>
  
  <func>
    <name name="bestSize" arity="2" clause_i="1" since=""/>
    <fsummary><c>bestSize/3</c> sets the ideal size for the pane. </fsummary>
    <desc><p><seemfa marker="#bestSize/3"><c>bestSize/3</c></seemfa> sets the ideal size for the pane. 
      </p><p>The docking manager will attempt to use this size as much as possible when docking or floating the pane. 
      </p></desc>
  </func>
  
  <func>
    <name name="bestSize" arity="3" clause_i="1" since=""/>
    <fsummary/>
    <desc/>
  </func>
  
  <func>
    <name name="bottom" arity="1" clause_i="1" since=""/>
    <fsummary><c>bottom/1</c> sets the pane dock position to the bottom side of the frame. </fsummary>
    <desc><p><seemfa marker="#bottom/1"><c>bottom/1</c></seemfa> sets the pane dock position to the bottom side of the frame. 
      </p><p>This is the same thing as calling Direction(wxAUI_DOCK_BOTTOM). 
      </p></desc>
  </func>
  
  <func>
    <name name="bottomDockable" arity="1" clause_i="1" since=""/>
    <fsummary>See: <c>bottomDockable/2</c></fsummary>
  </func>
  
  <func>
    <name name="bottomDockable" arity="2" clause_i="1" since=""/>
    <fsummary><c>bottomDockable/2</c> indicates whether a pane can be docked at the bottom of the frame. </fsummary>
    <desc><p><seemfa marker="#bottomDockable/2"><c>bottomDockable/2</c></seemfa> indicates whether a pane can be docked at the bottom of the frame. 
      </p></desc>
  </func>
  
  <func>
    <name name="caption" arity="2" clause_i="1" since=""/>
    <fsummary><c>caption/2</c> sets the caption of the pane. </fsummary>
    <desc><p><seemfa marker="#caption/2"><c>caption/2</c></seemfa> sets the caption of the pane. 
      </p></desc>
  </func>
  
  <func>
    <name name="captionVisible" arity="1" clause_i="1" since=""/>
    <fsummary>See: <c>captionVisible/2</c></fsummary>
  </func>
  
  <func>
    <name name="captionVisible" arity="2" clause_i="1" since=""/>
    <fsummary>CaptionVisible indicates that a pane caption should be visible. </fsummary>
    <desc><p>CaptionVisible indicates that a pane caption should be visible. 
      </p><p>If false, no pane caption is drawn. 
      </p></desc>
  </func>
  
  <func>
    <name name="centre" arity="1" clause_i="1" since=""/>
    <fsummary><c>Center()</c> (not implemented in wx) sets the pane dock position to the left side of the frame. </fsummary>
    <desc><p><c>Center()</c> (not implemented in wx) sets the pane dock position to the left side of the frame. 
      </p><p>The centre pane is the space in the middle after all border panes (left, top, right, bottom) are subtracted from the layout. This is the same thing as calling Direction(wxAUI_DOCK_CENTRE). 
      </p></desc>
  </func>
  
  <func>
    <name name="centrePane" arity="1" clause_i="1" since=""/>
    <fsummary><c>centrePane/1</c> specifies that the pane should adopt the default center pane settings. </fsummary>
    <desc><p><seemfa marker="#centrePane/1"><c>centrePane/1</c></seemfa> specifies that the pane should adopt the default center pane settings. 
      </p><p>Centre panes usually do not have caption bars. This function provides an easy way of preparing a pane to be displayed in the center dock position. 
      </p></desc>
  </func>
  
  <func>
    <name name="closeButton" arity="1" clause_i="1" since=""/>
    <fsummary>See: <c>closeButton/2</c></fsummary>
  </func>
  
  <func>
    <name name="closeButton" arity="2" clause_i="1" since=""/>
    <fsummary><c>closeButton/2</c> indicates that a close button should be drawn for the pane. </fsummary>
    <desc><p><seemfa marker="#closeButton/2"><c>closeButton/2</c></seemfa> indicates that a close button should be drawn for the pane. 
      </p></desc>
  </func>
  
  <func>
    <name name="defaultPane" arity="1" clause_i="1" since=""/>
    <fsummary><c>defaultPane/1</c> specifies that the pane should adopt the default pane settings. </fsummary>
    <desc><p><seemfa marker="#defaultPane/1"><c>defaultPane/1</c></seemfa> specifies that the pane should adopt the default pane settings. 
      </p></desc>
  </func>
  
  <func>
    <name name="destroyOnClose" arity="1" clause_i="1" since=""/>
    <fsummary>See: <c>destroyOnClose/2</c></fsummary>
  </func>
  
  <func>
    <name name="destroyOnClose" arity="2" clause_i="1" since=""/>
    <fsummary><c>destroyOnClose/2</c> indicates whether a pane should be destroyed when it is closed. </fsummary>
    <desc><p><seemfa marker="#destroyOnClose/2"><c>destroyOnClose/2</c></seemfa> indicates whether a pane should be destroyed when it is closed. 
      </p><p>Normally a pane is simply hidden when the close button is clicked. Setting DestroyOnClose to true will cause the window to be destroyed when the user clicks the pane's close button. 
      </p></desc>
  </func>
  
  <func>
    <name name="direction" arity="2" clause_i="1" since=""/>
    <fsummary><c>direction/2</c> determines the direction of the docked pane. </fsummary>
    <desc><p><seemfa marker="#direction/2"><c>direction/2</c></seemfa> determines the direction of the docked pane. 
      </p><p>It is functionally the same as calling <seemfa marker="#left/1"><c>left/1</c></seemfa>, <seemfa marker="#right/1"><c>right/1</c></seemfa>, <seemfa marker="#top/1"><c>top/1</c></seemfa> or <seemfa marker="#bottom/1"><c>bottom/1</c></seemfa>, except that docking direction may be specified programmatically via the parameter. 
      </p></desc>
  </func>
  
  <func>
    <name name="dock" arity="1" clause_i="1" since=""/>
    <fsummary><c>dock/1</c> indicates that a pane should be docked. </fsummary>
    <desc><p><seemfa marker="#dock/1"><c>dock/1</c></seemfa> indicates that a pane should be docked. 
      </p><p>It is the opposite of <seemfa marker="#float/1"><c>float/1</c></seemfa>. 
      </p></desc>
  </func>
  
  <func>
    <name name="dockable" arity="1" clause_i="1" since=""/>
    <fsummary>See: <c>dockable/2</c></fsummary>
  </func>
  
  <func>
    <name name="dockable" arity="2" clause_i="1" since=""/>
    <fsummary><c>dockable/2</c> specifies whether a frame can be docked or not. </fsummary>
    <desc><p><seemfa marker="#dockable/2"><c>dockable/2</c></seemfa> specifies whether a frame can be docked or not. 
      </p><p>It is the same as specifying TopDockable(b).BottomDockable(b).LeftDockable(b).RightDockable(b). 
      </p></desc>
  </func>
  
  <func>
    <name name="fixed" arity="1" clause_i="1" since=""/>
    <fsummary><c>fixed/1</c> forces a pane to be fixed size so that it cannot be resized. </fsummary>
    <desc><p><seemfa marker="#fixed/1"><c>fixed/1</c></seemfa> forces a pane to be fixed size so that it cannot be resized. 
      </p><p>After calling <seemfa marker="#fixed/1"><c>fixed/1</c></seemfa>, <seemfa marker="#isFixed/1"><c>isFixed/1</c></seemfa> will return true. 
      </p></desc>
  </func>
  
  <func>
    <name name="float" arity="1" clause_i="1" since=""/>
    <fsummary><c>float/1</c> indicates that a pane should be floated. </fsummary>
    <desc><p><seemfa marker="#float/1"><c>float/1</c></seemfa> indicates that a pane should be floated. 
      </p><p>It is the opposite of <seemfa marker="#dock/1"><c>dock/1</c></seemfa>. 
      </p></desc>
  </func>
  
  <func>
    <name name="floatable" arity="1" clause_i="1" since=""/>
    <fsummary>See: <c>floatable/2</c></fsummary>
  </func>
  
  <func>
    <name name="floatable" arity="2" clause_i="1" since=""/>
    <fsummary><c>floatable/2</c> sets whether the user will be able to undock a pane and turn it into a floating window. </fsummary>
    <desc><p><seemfa marker="#floatable/2"><c>floatable/2</c></seemfa> sets whether the user will be able to undock a pane and turn it into a floating window. 
      </p></desc>
  </func>
  
  <func>
    <name name="floatingPosition" arity="2" clause_i="1" since=""/>
    <fsummary><c>floatingPosition/3</c> sets the position of the floating pane. </fsummary>
    <desc><p><seemfa marker="#floatingPosition/3"><c>floatingPosition/3</c></seemfa> sets the position of the floating pane. 
      </p></desc>
  </func>
  
  <func>
    <name name="floatingPosition" arity="3" clause_i="1" since=""/>
    <fsummary/>
    <desc/>
  </func>
  
  <func>
    <name name="floatingSize" arity="2" clause_i="1" since=""/>
    <fsummary><c>floatingSize/3</c> sets the size of the floating pane. </fsummary>
    <desc><p><seemfa marker="#floatingSize/3"><c>floatingSize/3</c></seemfa> sets the size of the floating pane. 
      </p></desc>
  </func>
  
  <func>
    <name name="floatingSize" arity="3" clause_i="1" since=""/>
    <fsummary/>
    <desc/>
  </func>
  
  <func>
    <name name="gripper" arity="1" clause_i="1" since=""/>
    <fsummary>See: <c>gripper/2</c></fsummary>
  </func>
  
  <func>
    <name name="gripper" arity="2" clause_i="1" since=""/>
    <fsummary><c>gripper/2</c> indicates that a gripper should be drawn for the pane. </fsummary>
    <desc><p><seemfa marker="#gripper/2"><c>gripper/2</c></seemfa> indicates that a gripper should be drawn for the pane. 
      </p></desc>
  </func>
  
  <func>
    <name name="gripperTop" arity="1" clause_i="1" since=""/>
    <fsummary>See: <c>gripperTop/2</c></fsummary>
  </func>
  
  <func>
    <name name="gripperTop" arity="2" clause_i="1" since=""/>
    <fsummary><c>gripperTop/2</c> indicates that a gripper should be drawn at the top of the pane. </fsummary>
    <desc><p><seemfa marker="#gripperTop/2"><c>gripperTop/2</c></seemfa> indicates that a gripper should be drawn at the top of the pane. 
      </p></desc>
  </func>
  
  <func>
    <name name="hasBorder" arity="1" clause_i="1" since=""/>
    <fsummary><c>hasBorder/1</c> returns true if the pane displays a border. </fsummary>
    <desc><p><seemfa marker="#hasBorder/1"><c>hasBorder/1</c></seemfa> returns true if the pane displays a border. 
      </p></desc>
  </func>
  
  <func>
    <name name="hasCaption" arity="1" clause_i="1" since=""/>
    <fsummary><c>hasCaption/1</c> returns true if the pane displays a caption. </fsummary>
    <desc><p><seemfa marker="#hasCaption/1"><c>hasCaption/1</c></seemfa> returns true if the pane displays a caption. 
      </p></desc>
  </func>
  
  <func>
    <name name="hasCloseButton" arity="1" clause_i="1" since=""/>
    <fsummary><c>hasCloseButton/1</c> returns true if the pane displays a button to close the pane. </fsummary>
    <desc><p><seemfa marker="#hasCloseButton/1"><c>hasCloseButton/1</c></seemfa> returns true if the pane displays a button to close the pane. 
      </p></desc>
  </func>
  
  <func>
    <name name="hasFlag" arity="2" clause_i="1" since=""/>
    <fsummary><c>hasFlag/2</c> returns true if the property specified by flag is active for the pane. </fsummary>
    <desc><p><seemfa marker="#hasFlag/2"><c>hasFlag/2</c></seemfa> returns true if the property specified by flag is active for the pane. 
      </p></desc>
  </func>
  
  <func>
    <name name="hasGripper" arity="1" clause_i="1" since=""/>
    <fsummary><c>hasGripper/1</c> returns true if the pane displays a gripper. </fsummary>
    <desc><p><seemfa marker="#hasGripper/1"><c>hasGripper/1</c></seemfa> returns true if the pane displays a gripper. 
      </p></desc>
  </func>
  
  <func>
    <name name="hasGripperTop" arity="1" clause_i="1" since=""/>
    <fsummary><c>hasGripper/1</c> returns true if the pane displays a gripper at the top. </fsummary>
    <desc><p><seemfa marker="#hasGripper/1"><c>hasGripper/1</c></seemfa> returns true if the pane displays a gripper at the top. 
      </p></desc>
  </func>
  
  <func>
    <name name="hasMaximizeButton" arity="1" clause_i="1" since=""/>
    <fsummary><c>hasMaximizeButton/1</c> returns true if the pane displays a button to maximize the pane. </fsummary>
    <desc><p><seemfa marker="#hasMaximizeButton/1"><c>hasMaximizeButton/1</c></seemfa> returns true if the pane displays a button to maximize the pane. 
      </p></desc>
  </func>
  
  <func>
    <name name="hasMinimizeButton" arity="1" clause_i="1" since=""/>
    <fsummary><c>hasMinimizeButton/1</c> returns true if the pane displays a button to minimize the pane. </fsummary>
    <desc><p><seemfa marker="#hasMinimizeButton/1"><c>hasMinimizeButton/1</c></seemfa> returns true if the pane displays a button to minimize the pane. 
      </p></desc>
  </func>
  
  <func>
    <name name="hasPinButton" arity="1" clause_i="1" since=""/>
    <fsummary><c>hasPinButton/1</c> returns true if the pane displays a button to float the pane. </fsummary>
    <desc><p><seemfa marker="#hasPinButton/1"><c>hasPinButton/1</c></seemfa> returns true if the pane displays a button to float the pane. 
      </p></desc>
  </func>
  
  <func>
    <name name="hide" arity="1" clause_i="1" since=""/>
    <fsummary><c>hide/1</c> indicates that a pane should be hidden. </fsummary>
    <desc><p><seemfa marker="#hide/1"><c>hide/1</c></seemfa> indicates that a pane should be hidden. 
      </p></desc>
  </func>
  
  <func>
    <name name="isBottomDockable" arity="1" clause_i="1" since=""/>
    <fsummary><c>isBottomDockable/1</c> returns true if the pane can be docked at the bottom of the managed frame. </fsummary>
    <desc><p><seemfa marker="#isBottomDockable/1"><c>isBottomDockable/1</c></seemfa> returns true if the pane can be docked at the bottom of the managed frame. 
      </p><p>See: <c>IsDockable()</c> (not implemented in wx)
      </p></desc>
  </func>
  
  <func>
    <name name="isDocked" arity="1" clause_i="1" since=""/>
    <fsummary><c>isDocked/1</c> returns true if the pane is currently docked. </fsummary>
    <desc><p><seemfa marker="#isDocked/1"><c>isDocked/1</c></seemfa> returns true if the pane is currently docked. 
      </p></desc>
  </func>
  
  <func>
    <name name="isFixed" arity="1" clause_i="1" since=""/>
    <fsummary><c>isFixed/1</c> returns true if the pane cannot be resized. </fsummary>
    <desc><p><seemfa marker="#isFixed/1"><c>isFixed/1</c></seemfa> returns true if the pane cannot be resized. 
      </p></desc>
  </func>
  
  <func>
    <name name="isFloatable" arity="1" clause_i="1" since=""/>
    <fsummary><c>isFloatable/1</c> returns true if the pane can be undocked and displayed as a floating window. </fsummary>
    <desc><p><seemfa marker="#isFloatable/1"><c>isFloatable/1</c></seemfa> returns true if the pane can be undocked and displayed as a floating window. 
      </p></desc>
  </func>
  
  <func>
    <name name="isFloating" arity="1" clause_i="1" since=""/>
    <fsummary><c>isFloating/1</c> returns true if the pane is floating. </fsummary>
    <desc><p><seemfa marker="#isFloating/1"><c>isFloating/1</c></seemfa> returns true if the pane is floating. 
      </p></desc>
  </func>
  
  <func>
    <name name="isLeftDockable" arity="1" clause_i="1" since=""/>
    <fsummary><c>isLeftDockable/1</c> returns true if the pane can be docked on the left of the managed frame. </fsummary>
    <desc><p><seemfa marker="#isLeftDockable/1"><c>isLeftDockable/1</c></seemfa> returns true if the pane can be docked on the left of the managed frame. 
      </p><p>See: <c>IsDockable()</c> (not implemented in wx)
      </p></desc>
  </func>
  
  <func>
    <name name="isMovable" arity="1" clause_i="1" since=""/>
    <fsummary>IsMoveable() returns true if the docked frame can be undocked or moved to another dock position. </fsummary>
    <desc><p>IsMoveable() returns true if the docked frame can be undocked or moved to another dock position. 
      </p></desc>
  </func>
  
  <func>
    <name name="isOk" arity="1" clause_i="1" since=""/>
    <fsummary><c>isOk/1</c> returns true if the <c>wxAuiPaneInfo</c> structure is valid. </fsummary>
    <desc><p><seemfa marker="#isOk/1"><c>isOk/1</c></seemfa> returns true if the <seeerl marker="wxAuiPaneInfo"><c>wxAuiPaneInfo</c></seeerl> structure is valid. 
      </p><p>A pane structure is valid if it has an associated window. 
      </p></desc>
  </func>
  
  <func>
    <name name="isResizable" arity="1" clause_i="1" since=""/>
    <fsummary><c>isResizable/1</c> returns true if the pane can be resized. </fsummary>
    <desc><p><seemfa marker="#isResizable/1"><c>isResizable/1</c></seemfa> returns true if the pane can be resized. 
      </p></desc>
  </func>
  
  <func>
    <name name="isRightDockable" arity="1" clause_i="1" since=""/>
    <fsummary><c>isRightDockable/1</c> returns true if the pane can be docked on the right of the managed frame. </fsummary>
    <desc><p><seemfa marker="#isRightDockable/1"><c>isRightDockable/1</c></seemfa> returns true if the pane can be docked on the right of the managed frame. 
      </p><p>See: <c>IsDockable()</c> (not implemented in wx)
      </p></desc>
  </func>
  
  <func>
    <name name="isShown" arity="1" clause_i="1" since=""/>
    <fsummary><c>isShown/1</c> returns true if the pane is currently shown. </fsummary>
    <desc><p><seemfa marker="#isShown/1"><c>isShown/1</c></seemfa> returns true if the pane is currently shown. 
      </p></desc>
  </func>
  
  <func>
    <name name="isToolbar" arity="1" clause_i="1" since=""/>
    <fsummary><c>isToolbar/1</c> returns true if the pane contains a toolbar. </fsummary>
    <desc><p><seemfa marker="#isToolbar/1"><c>isToolbar/1</c></seemfa> returns true if the pane contains a toolbar. 
      </p></desc>
  </func>
  
  <func>
    <name name="isTopDockable" arity="1" clause_i="1" since=""/>
    <fsummary><c>isTopDockable/1</c> returns true if the pane can be docked at the top of the managed frame. </fsummary>
    <desc><p><seemfa marker="#isTopDockable/1"><c>isTopDockable/1</c></seemfa> returns true if the pane can be docked at the top of the managed frame. 
      </p><p>See: <c>IsDockable()</c> (not implemented in wx)
      </p></desc>
  </func>
  
  <func>
    <name name="layer" arity="2" clause_i="1" since=""/>
    <fsummary><c>layer/2</c> determines the layer of the docked pane. </fsummary>
    <desc><p><seemfa marker="#layer/2"><c>layer/2</c></seemfa> determines the layer of the docked pane. 
      </p><p>The dock layer is similar to an onion, the inner-most layer being layer 0. Each shell moving in the outward direction has a higher layer number. This allows for more complex docking layout formation. 
      </p></desc>
  </func>
  
  <func>
    <name name="left" arity="1" clause_i="1" since=""/>
    <fsummary><c>left/1</c> sets the pane dock position to the left side of the frame. </fsummary>
    <desc><p><seemfa marker="#left/1"><c>left/1</c></seemfa> sets the pane dock position to the left side of the frame. 
      </p><p>This is the same thing as calling Direction(wxAUI_DOCK_LEFT). 
      </p></desc>
  </func>
  
  <func>
    <name name="leftDockable" arity="1" clause_i="1" since=""/>
    <fsummary>See: <c>leftDockable/2</c></fsummary>
  </func>
  
  <func>
    <name name="leftDockable" arity="2" clause_i="1" since=""/>
    <fsummary><c>leftDockable/2</c> indicates whether a pane can be docked on the left of the frame. </fsummary>
    <desc><p><seemfa marker="#leftDockable/2"><c>leftDockable/2</c></seemfa> indicates whether a pane can be docked on the left of the frame. 
      </p></desc>
  </func>
  
  <func>
    <name name="maxSize" arity="2" clause_i="1" since=""/>
    <fsummary><c>maxSize/3</c> sets the maximum size of the pane. </fsummary>
    <desc><p><seemfa marker="#maxSize/3"><c>maxSize/3</c></seemfa> sets the maximum size of the pane. 
      </p></desc>
  </func>
  
  <func>
    <name name="maxSize" arity="3" clause_i="1" since=""/>
    <fsummary/>
    <desc/>
  </func>
  
  <func>
    <name name="maximizeButton" arity="1" clause_i="1" since=""/>
    <fsummary>See: <c>maximizeButton/2</c></fsummary>
  </func>
  
  <func>
    <name name="maximizeButton" arity="2" clause_i="1" since=""/>
    <fsummary><c>maximizeButton/2</c> indicates that a maximize button should be drawn for the pane. </fsummary>
    <desc><p><seemfa marker="#maximizeButton/2"><c>maximizeButton/2</c></seemfa> indicates that a maximize button should be drawn for the pane. 
      </p></desc>
  </func>
  
  <func>
    <name name="minSize" arity="2" clause_i="1" since=""/>
    <fsummary><c>minSize/3</c> sets the minimum size of the pane. </fsummary>
    <desc><p><seemfa marker="#minSize/3"><c>minSize/3</c></seemfa> sets the minimum size of the pane. 
      </p><p>Please note that this is only partially supported as of this writing. 
      </p></desc>
  </func>
  
  <func>
    <name name="minSize" arity="3" clause_i="1" since=""/>
    <fsummary/>
    <desc/>
  </func>
  
  <func>
    <name name="minimizeButton" arity="1" clause_i="1" since=""/>
    <fsummary>See: <c>minimizeButton/2</c></fsummary>
  </func>
  
  <func>
    <name name="minimizeButton" arity="2" clause_i="1" since=""/>
    <fsummary><c>minimizeButton/2</c> indicates that a minimize button should be drawn for the pane. </fsummary>
    <desc><p><seemfa marker="#minimizeButton/2"><c>minimizeButton/2</c></seemfa> indicates that a minimize button should be drawn for the pane. 
      </p></desc>
  </func>
  
  <func>
    <name name="movable" arity="1" clause_i="1" since=""/>
    <fsummary>See: <c>movable/2</c></fsummary>
  </func>
  
  <func>
    <name name="movable" arity="2" clause_i="1" since=""/>
    <fsummary>Movable indicates whether a frame can be moved. </fsummary>
    <desc><p>Movable indicates whether a frame can be moved. 
      </p></desc>
  </func>
  
  <func>
    <name name="name" arity="2" clause_i="1" since=""/>
    <fsummary><c>name/2</c> sets the name of the pane so it can be referenced in lookup functions. </fsummary>
    <desc><p><seemfa marker="#name/2"><c>name/2</c></seemfa> sets the name of the pane so it can be referenced in lookup functions. 
      </p><p>If a name is not specified by the user, a random name is assigned to the pane when it is added to the manager. 
      </p></desc>
  </func>
  
  <func>
    <name name="paneBorder" arity="1" clause_i="1" since=""/>
    <fsummary>See: <c>paneBorder/2</c></fsummary>
  </func>
  
  <func>
    <name name="paneBorder" arity="2" clause_i="1" since=""/>
    <fsummary>PaneBorder indicates that a border should be drawn for the pane. </fsummary>
    <desc><p>PaneBorder indicates that a border should be drawn for the pane. 
      </p></desc>
  </func>
  
  <func>
    <name name="pinButton" arity="1" clause_i="1" since=""/>
    <fsummary>See: <c>pinButton/2</c></fsummary>
  </func>
  
  <func>
    <name name="pinButton" arity="2" clause_i="1" since=""/>
    <fsummary><c>pinButton/2</c> indicates that a pin button should be drawn for the pane. </fsummary>
    <desc><p><seemfa marker="#pinButton/2"><c>pinButton/2</c></seemfa> indicates that a pin button should be drawn for the pane. 
      </p></desc>
  </func>
  
  <func>
    <name name="position" arity="2" clause_i="1" since=""/>
    <fsummary><c>position/2</c> determines the position of the docked pane. </fsummary>
    <desc><p><seemfa marker="#position/2"><c>position/2</c></seemfa> determines the position of the docked pane. 
      </p></desc>
  </func>
  
  <func>
    <name name="resizable" arity="1" clause_i="1" since=""/>
    <fsummary>See: <c>resizable/2</c></fsummary>
  </func>
  
  <func>
    <name name="resizable" arity="2" clause_i="1" since=""/>
    <fsummary><c>resizable/2</c> allows a pane to be resized if the parameter is true, and forces it to be a fixed size if the parameter is false. </fsummary>
    <desc><p><seemfa marker="#resizable/2"><c>resizable/2</c></seemfa> allows a pane to be resized if the parameter is true, and forces it to be a fixed size if the parameter is false. 
      </p><p>This is simply an antonym for <seemfa marker="#fixed/1"><c>fixed/1</c></seemfa>. 
      </p></desc>
  </func>
  
  <func>
    <name name="right" arity="1" clause_i="1" since=""/>
    <fsummary><c>right/1</c> sets the pane dock position to the right side of the frame. </fsummary>
    <desc><p><seemfa marker="#right/1"><c>right/1</c></seemfa> sets the pane dock position to the right side of the frame. 
      </p><p>This is the same thing as calling Direction(wxAUI_DOCK_RIGHT). 
      </p></desc>
  </func>
  
  <func>
    <name name="rightDockable" arity="1" clause_i="1" since=""/>
    <fsummary>See: <c>rightDockable/2</c></fsummary>
  </func>
  
  <func>
    <name name="rightDockable" arity="2" clause_i="1" since=""/>
    <fsummary><c>rightDockable/2</c> indicates whether a pane can be docked on the right of the frame. </fsummary>
    <desc><p><seemfa marker="#rightDockable/2"><c>rightDockable/2</c></seemfa> indicates whether a pane can be docked on the right of the frame. 
      </p></desc>
  </func>
  
  <func>
    <name name="row" arity="2" clause_i="1" since=""/>
    <fsummary><c>row/2</c> determines the row of the docked pane. </fsummary>
    <desc><p><seemfa marker="#row/2"><c>row/2</c></seemfa> determines the row of the docked pane. 
      </p></desc>
  </func>
  
  <func>
    <name name="safeSet" arity="2" clause_i="1" since=""/>
    <fsummary>Write the safe parts of a PaneInfo object "source" into "this". </fsummary>
    <desc><p>Write the safe parts of a PaneInfo object "source" into "this". 
      </p><p>"Safe parts" are all non-UI elements (e.g. all layout determining parameters like the size, position etc.). "Unsafe parts" (pointers to button, frame and window) are not modified by this write operation.
      </p><p>Remark: This method is used when loading perspectives. 
      </p></desc>
  </func>
  
  <func>
    <name name="setFlag" arity="3" clause_i="1" since=""/>
    <fsummary><c>setFlag/3</c> turns the property given by flag on or off with the option_state parameter. </fsummary>
    <desc><p><seemfa marker="#setFlag/3"><c>setFlag/3</c></seemfa> turns the property given by flag on or off with the option_state parameter. 
      </p></desc>
  </func>
  
  <func>
    <name name="show" arity="1" clause_i="1" since=""/>
    <fsummary>See: <c>show/2</c></fsummary>
  </func>
  
  <func>
    <name name="show" arity="2" clause_i="1" since=""/>
    <fsummary><c>show/2</c> indicates that a pane should be shown. </fsummary>
    <desc><p><seemfa marker="#show/2"><c>show/2</c></seemfa> indicates that a pane should be shown. 
      </p></desc>
  </func>
  
  <func>
    <name name="toolbarPane" arity="1" clause_i="1" since=""/>
    <fsummary><c>toolbarPane/1</c> specifies that the pane should adopt the default toolbar pane settings. </fsummary>
    <desc><p><seemfa marker="#toolbarPane/1"><c>toolbarPane/1</c></seemfa> specifies that the pane should adopt the default toolbar pane settings. 
      </p></desc>
  </func>
  
  <func>
    <name name="top" arity="1" clause_i="1" since=""/>
    <fsummary><c>top/1</c> sets the pane dock position to the top of the frame. </fsummary>
    <desc><p><seemfa marker="#top/1"><c>top/1</c></seemfa> sets the pane dock position to the top of the frame. 
      </p><p>This is the same thing as calling Direction(wxAUI_DOCK_TOP). 
      </p></desc>
  </func>
  
  <func>
    <name name="topDockable" arity="1" clause_i="1" since=""/>
    <fsummary>See: <c>topDockable/2</c></fsummary>
  </func>
  
  <func>
    <name name="topDockable" arity="2" clause_i="1" since=""/>
    <fsummary><c>topDockable/2</c> indicates whether a pane can be docked at the top of the frame. </fsummary>
    <desc><p><seemfa marker="#topDockable/2"><c>topDockable/2</c></seemfa> indicates whether a pane can be docked at the top of the frame. 
      </p></desc>
  </func>
  
  <func>
    <name name="window" arity="2" clause_i="1" since=""/>
    <fsummary><c>window/2</c> assigns the window pointer that the <c>wxAuiPaneInfo</c> should use. </fsummary>
    <desc><p><seemfa marker="#window/2"><c>window/2</c></seemfa> assigns the window pointer that the <seeerl marker="wxAuiPaneInfo"><c>wxAuiPaneInfo</c></seeerl> should use. 
      </p><p>This normally does not need to be specified, as the window pointer is automatically assigned to the <seeerl marker="wxAuiPaneInfo"><c>wxAuiPaneInfo</c></seeerl> structure as soon as it is added to the manager. 
      </p></desc>
  </func>
  
  <func>
    <name name="getWindow" arity="1" clause_i="1" since=""/>
    <fsummary/>
    <desc/>
  </func>
  
  <func>
    <name name="getFrame" arity="1" clause_i="1" since=""/>
    <fsummary/>
    <desc/>
  </func>
  
  <func>
    <name name="getDirection" arity="1" clause_i="1" since=""/>
    <fsummary/>
    <desc/>
  </func>
  
  <func>
    <name name="getLayer" arity="1" clause_i="1" since=""/>
    <fsummary/>
    <desc/>
  </func>
  
  <func>
    <name name="getRow" arity="1" clause_i="1" since=""/>
    <fsummary/>
    <desc/>
  </func>
  
  <func>
    <name name="getPosition" arity="1" clause_i="1" since=""/>
    <fsummary/>
    <desc/>
  </func>
  
  <func>
    <name name="getFloatingPosition" arity="1" clause_i="1" since=""/>
    <fsummary/>
    <desc/>
  </func>
  
  <func>
    <name name="getFloatingSize" arity="1" clause_i="1" since=""/>
    <fsummary/>
    <desc/>
  </func>
  
  <func>
    <name name="destroy" arity="1" clause_i="1" since=""/>
    <fsummary>Destructor</fsummary>
    <desc><p>Destroys the object.</p></desc>
  </func>
  </funcs>
</erlref>
