<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">

<!-- THIS FILE IS GENERATED DO NOT EDIT -->


<erlref>
<header>
  <copyright>
    <year>2020</year><year>2021</year>
    <holder>wxWidgets team.</holder></copyright>
  <legalnotice>Licensed under the wxWindows Free Documentation Licence, Version 3
  </legalnotice>
  <title>wxGridCellRenderer</title>
</header>
<module>wxGridCellRenderer</module>
<modulesummary>Functions for wxGridCellRenderer class</modulesummary>
<description><p>This class is responsible for actually drawing the cell in the grid. You may pass it to the <seeerl marker="wxGridCellAttr"><c>wxGridCellAttr</c></seeerl> (below) to change the format of one given cell or to <seemfa marker="wxGrid#setDefaultRenderer/2"><c>wxGrid:setDefaultRenderer/2</c></seemfa> to change the view of all cells. This is an abstract class, and you will normally use one of the predefined derived classes or derive your own class from it.
      </p><p>See: <c>wxGridCellAutoWrapStringRenderer</c> (not implemented in wx), <seeerl marker="wxGridCellBoolRenderer"><c>wxGridCellBoolRenderer</c></seeerl>, <c>wxGridCellDateTimeRenderer</c> (not implemented in wx), <c>wxGridCellEnumRenderer</c> (not implemented in wx), <seeerl marker="wxGridCellFloatRenderer"><c>wxGridCellFloatRenderer</c></seeerl>, <seeerl marker="wxGridCellNumberRenderer"><c>wxGridCellNumberRenderer</c></seeerl>, <seeerl marker="wxGridCellStringRenderer"><c>wxGridCellStringRenderer</c></seeerl>
      </p>
  <p>wxWidgets docs: <url href="https://docs.wxwidgets.org/3.1/classwx_grid_cell_renderer.html">wxGridCellRenderer</url></p>
  </description>
<datatypes><datatype><name name="wxGridCellRenderer"/></datatype></datatypes>

<funcs>
  <func>
    <name name="draw" arity="8" clause_i="1" since=""/>
    <fsummary>Draw the given cell on the provided DC inside the given rectangle using the style specified by the attribute and the default or selected state corresponding to the isSelected value. </fsummary>
    <desc><p>Draw the given cell on the provided DC inside the given rectangle using the style specified by the attribute and the default or selected state corresponding to the isSelected value. 
      </p><p>This pure virtual function has a default implementation which will prepare the DC using the given attribute: it will draw the rectangle with the background colour from attr and set the text colour and font. 
      </p></desc>
  </func>
  
  <func>
    <name name="getBestSize" arity="6" clause_i="1" since=""/>
    <fsummary>Get the preferred size of the cell for its contents. </fsummary>
    <desc><p>Get the preferred size of the cell for its contents. 
      </p><p>This method must be overridden in the derived classes to return the minimal fitting size for displaying the content of the given grid cell.
      </p><p>See: <c>GetBestHeight()</c> (not implemented in wx), <c>GetBestWidth()</c> (not implemented in wx)
      </p></desc>
  </func>
  </funcs>
</erlref>
