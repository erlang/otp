<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">

<!-- THIS FILE IS GENERATED DO NOT EDIT -->


<erlref>
<header>
  <copyright>
    <year>2020</year><year>2021</year>
    <holder>wxWidgets team.</holder></copyright>
  <legalnotice>Licensed under the wxWindows Free Documentation Licence, Version 3
  </legalnotice>
  <title>wxGridCellEditor</title>
</header>
<module>wxGridCellEditor</module>
<modulesummary>Functions for wxGridCellEditor class</modulesummary>
<description><p>This class is responsible for providing and manipulating the in-place edit controls for the grid. Instances of <seeerl marker="wxGridCellEditor"><c>wxGridCellEditor</c></seeerl> (actually, instances of derived classes since it is an abstract class) can be associated with the cell attributes for individual cells, rows, columns, or even for the entire grid.
      </p><p>Normally <seeerl marker="wxGridCellEditor"><c>wxGridCellEditor</c></seeerl> shows some UI control allowing the user to edit the cell, but starting with wxWidgets 3.1.4 it's also possible to define "activatable" cell editors, that change the value of the cell directly when it's activated (typically by pressing Space key or clicking on it), see <c>TryActivate()</c> (not implemented in wx) method. Note that when implementing an editor which is always activatable, i.e. never shows any in-place editor, it is more convenient to derive its class from <c>wxGridCellActivatableEditor</c> (not implemented in wx) than from <seeerl marker="wxGridCellEditor"><c>wxGridCellEditor</c></seeerl> itself.
      </p><p>See: <c>wxGridCellAutoWrapStringEditor</c> (not implemented in wx), <seeerl marker="wxGridCellBoolEditor"><c>wxGridCellBoolEditor</c></seeerl>, <seeerl marker="wxGridCellChoiceEditor"><c>wxGridCellChoiceEditor</c></seeerl>, <c>wxGridCellEnumEditor</c> (not implemented in wx), <seeerl marker="wxGridCellFloatEditor"><c>wxGridCellFloatEditor</c></seeerl>, <seeerl marker="wxGridCellNumberEditor"><c>wxGridCellNumberEditor</c></seeerl>, <seeerl marker="wxGridCellTextEditor"><c>wxGridCellTextEditor</c></seeerl>, <c>wxGridCellDateEditor</c> (not implemented in wx)
      </p>
  <p>wxWidgets docs: <url href="https://docs.wxwidgets.org/3.1/classwx_grid_cell_editor.html">wxGridCellEditor</url></p>
  </description>
<datatypes><datatype><name name="wxGridCellEditor"/></datatype></datatypes>

<funcs>
  <func>
    <name name="create" arity="4" clause_i="1" since=""/>
    <fsummary>Creates the actual edit control. </fsummary>
    <desc><p>Creates the actual edit control. 
      </p></desc>
  </func>
  
  <func>
    <name name="isCreated" arity="1" clause_i="1" since=""/>
    <fsummary>Returns true if the edit control has been created. </fsummary>
    <desc><p>Returns true if the edit control has been created. 
      </p></desc>
  </func>
  
  <func>
    <name name="setSize" arity="2" clause_i="1" since=""/>
    <fsummary>Size and position the edit control. </fsummary>
    <desc><p>Size and position the edit control. 
      </p></desc>
  </func>
  
  <func>
    <name name="show" arity="2" clause_i="1" since=""/>
    <fsummary>See: <c>show/3</c></fsummary>
  </func>
  
  <func>
    <name name="show" arity="3" clause_i="1" since=""/>
    <fsummary>Show or hide the edit control, use the specified attributes to set colours/fonts for it. </fsummary>
    <desc><p>Show or hide the edit control, use the specified attributes to set colours/fonts for it. 
      </p></desc>
  </func>
  
  <func>
    <name name="reset" arity="1" clause_i="1" since=""/>
    <fsummary>Reset the value in the control back to its starting value. </fsummary>
    <desc><p>Reset the value in the control back to its starting value. 
      </p></desc>
  </func>
  
  <func>
    <name name="startingKey" arity="2" clause_i="1" since=""/>
    <fsummary>If the editor is enabled by pressing keys on the grid, this will be called to let the editor do something about that first key if desired. </fsummary>
    <desc><p>If the editor is enabled by pressing keys on the grid, this will be called to let the editor do something about that first key if desired. 
      </p></desc>
  </func>
  
  <func>
    <name name="startingClick" arity="1" clause_i="1" since=""/>
    <fsummary>If the editor is enabled by clicking on the cell, this method will be called. </fsummary>
    <desc><p>If the editor is enabled by clicking on the cell, this method will be called. 
      </p></desc>
  </func>
  
  <func>
    <name name="handleReturn" arity="2" clause_i="1" since=""/>
    <fsummary>Some types of controls on some platforms may need some help with the Return key. </fsummary>
    <desc><p>Some types of controls on some platforms may need some help with the Return key. 
      </p></desc>
  </func>
  </funcs>
</erlref>
