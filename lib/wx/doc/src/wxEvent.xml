<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">

<!-- THIS FILE IS GENERATED DO NOT EDIT -->


<erlref>
<header>
  <copyright>
    <year>2020</year><year>2021</year>
    <holder>wxWidgets team.</holder></copyright>
  <legalnotice>Licensed under the wxWindows Free Documentation Licence, Version 3
  </legalnotice>
  <title>wxEvent</title>
</header>
<module>wxEvent</module>
<modulesummary>Functions for wxEvent class</modulesummary>
<description><p>An event is a structure holding information about an event passed to a callback or member function.
      </p><p><seeerl marker="wxEvent"><c>wxEvent</c></seeerl> used to be a multipurpose event object, and is an abstract base class for other event classes (see below).
      </p><p>For more information about events, see the overview_events overview.
      </p><p>See: <seeerl marker="wxCommandEvent"><c>wxCommandEvent</c></seeerl>, <seeerl marker="wxMouseEvent"><c>wxMouseEvent</c></seeerl>
      </p>
  <p>wxWidgets docs: <url href="https://docs.wxwidgets.org/3.1/classwx_event.html">wxEvent</url></p>
  </description>
<datatypes><datatype><name name="wxEvent"/></datatype></datatypes>

<funcs>
  <func>
    <name name="getId" arity="1" clause_i="1" since=""/>
    <fsummary>Returns the identifier associated with this event, such as a button command id. </fsummary>
    <desc><p>Returns the identifier associated with this event, such as a button command id. 
      </p></desc>
  </func>
  
  <func>
    <name name="getSkipped" arity="1" clause_i="1" since=""/>
    <fsummary>Returns true if the event handler should be skipped, false otherwise. </fsummary>
    <desc><p>Returns true if the event handler should be skipped, false otherwise. 
      </p></desc>
  </func>
  
  <func>
    <name name="getTimestamp" arity="1" clause_i="1" since=""/>
    <fsummary>Gets the timestamp for the event. </fsummary>
    <desc><p>Gets the timestamp for the event. 
      </p><p>The timestamp is the time in milliseconds since some fixed moment (not necessarily the standard Unix Epoch, so only differences between the timestamps and not their absolute values usually make sense).
      </p><p>Warning: wxWidgets returns a non-NULL timestamp only for mouse and key events (see <seeerl marker="wxMouseEvent"><c>wxMouseEvent</c></seeerl> and <seeerl marker="wxKeyEvent"><c>wxKeyEvent</c></seeerl>). 
      </p></desc>
  </func>
  
  <func>
    <name name="isCommandEvent" arity="1" clause_i="1" since=""/>
    <fsummary>Returns true if the event is or is derived from <c>wxCommandEvent</c> else it returns false. </fsummary>
    <desc><p>Returns true if the event is or is derived from <seeerl marker="wxCommandEvent"><c>wxCommandEvent</c></seeerl> else it returns false. 
      </p><p>Note: exists only for optimization purposes. 
      </p></desc>
  </func>
  
  <func>
    <name name="resumePropagation" arity="2" clause_i="1" since=""/>
    <fsummary>Sets the propagation level to the given value (for example returned from an earlier call to <c>stopPropagation/1</c>). </fsummary>
    <desc><p>Sets the propagation level to the given value (for example returned from an earlier call to <seemfa marker="#stopPropagation/1"><c>stopPropagation/1</c></seemfa>). 
      </p></desc>
  </func>
  
  <func>
    <name name="shouldPropagate" arity="1" clause_i="1" since=""/>
    <fsummary>Test if this event should be propagated or not, i.e. if the propagation level is currently greater than 0. </fsummary>
    <desc><p>Test if this event should be propagated or not, i.e. if the propagation level is currently greater than 0. 
      </p></desc>
  </func>
  
  <func>
    <name name="skip" arity="1" clause_i="1" since=""/>
    <fsummary>See: <c>skip/2</c></fsummary>
  </func>
  
  <func>
    <name name="skip" arity="2" clause_i="1" since=""/>
    <fsummary>This method can be used inside an event handler to control whether further event handlers bound to this event will be called after the current one returns. </fsummary>
    <desc><p>This method can be used inside an event handler to control whether further event handlers bound to this event will be called after the current one returns. 
      </p><p>Without <seemfa marker="#skip/2"><c>skip/2</c></seemfa> (or equivalently if Skip(false) is used), the event will not be processed any more. If Skip(true) is called, the event processing system continues searching for a further handler function for this event, even though it has been processed already in the current handler.
      </p><p>In general, it is recommended to skip all non-command events to allow the default handling to take place. The command events are, however, normally not skipped as usually a single command such as a button click or menu item selection must only be processed by one handler. 
      </p></desc>
  </func>
  
  <func>
    <name name="stopPropagation" arity="1" clause_i="1" since=""/>
    <fsummary>Stop the event from propagating to its parent window. </fsummary>
    <desc><p>Stop the event from propagating to its parent window. 
      </p><p>Returns the old propagation level value which may be later passed to <seemfa marker="#resumePropagation/2"><c>resumePropagation/2</c></seemfa> to allow propagating the event again. 
      </p></desc>
  </func>
  </funcs>
</erlref>
