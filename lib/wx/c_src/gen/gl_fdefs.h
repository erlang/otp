/*
 * %CopyrightBegin%
 *
 * Copyright Ericsson AB 2008-2020. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * %CopyrightEnd%
*/
/***** This file is generated do not edit ****/

#ifdef WX_DEF_EXTS
# define WXE_EXTERN
#else
# define WXE_EXTERN extern
#endif

void ecb_init_opengl(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);

#define GLE_LIB_START 5000
#define GLE_GL_FUNC_START 5037
#define GLE_GL_FUNC_LAST 6015
typedef void (APIENTRY * WXEGLCLEARINDEX)(GLfloat);
WXE_EXTERN WXEGLCLEARINDEX weglClearIndex;
void ecb_glClearIndex(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCLEARCOLOR)(GLclampf,GLclampf,GLclampf,GLclampf);
WXE_EXTERN WXEGLCLEARCOLOR weglClearColor;
void ecb_glClearColor(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCLEAR)(GLbitfield);
WXE_EXTERN WXEGLCLEAR weglClear;
void ecb_glClear(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLINDEXMASK)(GLuint);
WXE_EXTERN WXEGLINDEXMASK weglIndexMask;
void ecb_glIndexMask(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOLORMASK)(GLboolean,GLboolean,GLboolean,GLboolean);
WXE_EXTERN WXEGLCOLORMASK weglColorMask;
void ecb_glColorMask(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLALPHAFUNC)(GLenum,GLclampf);
WXE_EXTERN WXEGLALPHAFUNC weglAlphaFunc;
void ecb_glAlphaFunc(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBLENDFUNC)(GLenum,GLenum);
WXE_EXTERN WXEGLBLENDFUNC weglBlendFunc;
void ecb_glBlendFunc(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLLOGICOP)(GLenum);
WXE_EXTERN WXEGLLOGICOP weglLogicOp;
void ecb_glLogicOp(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCULLFACE)(GLenum);
WXE_EXTERN WXEGLCULLFACE weglCullFace;
void ecb_glCullFace(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLFRONTFACE)(GLenum);
WXE_EXTERN WXEGLFRONTFACE weglFrontFace;
void ecb_glFrontFace(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPOINTSIZE)(GLfloat);
WXE_EXTERN WXEGLPOINTSIZE weglPointSize;
void ecb_glPointSize(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLLINEWIDTH)(GLfloat);
WXE_EXTERN WXEGLLINEWIDTH weglLineWidth;
void ecb_glLineWidth(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLLINESTIPPLE)(GLint,GLushort);
WXE_EXTERN WXEGLLINESTIPPLE weglLineStipple;
void ecb_glLineStipple(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPOLYGONMODE)(GLenum,GLenum);
WXE_EXTERN WXEGLPOLYGONMODE weglPolygonMode;
void ecb_glPolygonMode(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPOLYGONOFFSET)(GLfloat,GLfloat);
WXE_EXTERN WXEGLPOLYGONOFFSET weglPolygonOffset;
void ecb_glPolygonOffset(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPOLYGONSTIPPLE)(const GLubyte *);
WXE_EXTERN WXEGLPOLYGONSTIPPLE weglPolygonStipple;
void ecb_glPolygonStipple(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETPOLYGONSTIPPLE)(GLubyte *);
WXE_EXTERN WXEGLGETPOLYGONSTIPPLE weglGetPolygonStipple;
void ecb_glGetPolygonStipple(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLEDGEFLAG)(GLboolean);
WXE_EXTERN WXEGLEDGEFLAG weglEdgeFlag;
void ecb_glEdgeFlag(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSCISSOR)(GLint,GLint,GLsizei,GLsizei);
WXE_EXTERN WXEGLSCISSOR weglScissor;
void ecb_glScissor(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCLIPPLANE)(GLenum,const GLdouble *);
WXE_EXTERN WXEGLCLIPPLANE weglClipPlane;
void ecb_glClipPlane(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETCLIPPLANE)(GLenum,GLdouble *);
WXE_EXTERN WXEGLGETCLIPPLANE weglGetClipPlane;
void ecb_glGetClipPlane(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDRAWBUFFER)(GLenum);
WXE_EXTERN WXEGLDRAWBUFFER weglDrawBuffer;
void ecb_glDrawBuffer(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLREADBUFFER)(GLenum);
WXE_EXTERN WXEGLREADBUFFER weglReadBuffer;
void ecb_glReadBuffer(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLENABLE)(GLenum);
WXE_EXTERN WXEGLENABLE weglEnable;
void ecb_glEnable(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDISABLE)(GLenum);
WXE_EXTERN WXEGLDISABLE weglDisable;
void ecb_glDisable(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLboolean (APIENTRY * WXEGLISENABLED)(GLenum);
WXE_EXTERN WXEGLISENABLED weglIsEnabled;
void ecb_glIsEnabled(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLENABLECLIENTSTATE)(GLenum);
WXE_EXTERN WXEGLENABLECLIENTSTATE weglEnableClientState;
void ecb_glEnableClientState(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDISABLECLIENTSTATE)(GLenum);
WXE_EXTERN WXEGLDISABLECLIENTSTATE weglDisableClientState;
void ecb_glDisableClientState(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETBOOLEANV)(GLenum,GLboolean *);
WXE_EXTERN WXEGLGETBOOLEANV weglGetBooleanv;
void ecb_glGetBooleanv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETDOUBLEV)(GLenum,GLdouble *);
WXE_EXTERN WXEGLGETDOUBLEV weglGetDoublev;
void ecb_glGetDoublev(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETFLOATV)(GLenum,GLfloat *);
WXE_EXTERN WXEGLGETFLOATV weglGetFloatv;
void ecb_glGetFloatv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETINTEGERV)(GLenum,GLint *);
WXE_EXTERN WXEGLGETINTEGERV weglGetIntegerv;
void ecb_glGetIntegerv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPUSHATTRIB)(GLbitfield);
WXE_EXTERN WXEGLPUSHATTRIB weglPushAttrib;
void ecb_glPushAttrib(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPOPATTRIB)();
WXE_EXTERN WXEGLPOPATTRIB weglPopAttrib;
void ecb_glPopAttrib(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPUSHCLIENTATTRIB)(GLbitfield);
WXE_EXTERN WXEGLPUSHCLIENTATTRIB weglPushClientAttrib;
void ecb_glPushClientAttrib(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPOPCLIENTATTRIB)();
WXE_EXTERN WXEGLPOPCLIENTATTRIB weglPopClientAttrib;
void ecb_glPopClientAttrib(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLint (APIENTRY * WXEGLRENDERMODE)(GLenum);
WXE_EXTERN WXEGLRENDERMODE weglRenderMode;
void ecb_glRenderMode(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLenum (APIENTRY * WXEGLGETERROR)();
WXE_EXTERN WXEGLGETERROR weglGetError;
void ecb_glGetError(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef const GLubyte * (APIENTRY * WXEGLGETSTRING)(GLenum);
WXE_EXTERN WXEGLGETSTRING weglGetString;
void ecb_glGetString(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLFINISH)();
WXE_EXTERN WXEGLFINISH weglFinish;
void ecb_glFinish(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLFLUSH)();
WXE_EXTERN WXEGLFLUSH weglFlush;
void ecb_glFlush(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLHINT)(GLenum,GLenum);
WXE_EXTERN WXEGLHINT weglHint;
void ecb_glHint(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCLEARDEPTH)(GLclampd);
WXE_EXTERN WXEGLCLEARDEPTH weglClearDepth;
void ecb_glClearDepth(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDEPTHFUNC)(GLenum);
WXE_EXTERN WXEGLDEPTHFUNC weglDepthFunc;
void ecb_glDepthFunc(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDEPTHMASK)(GLboolean);
WXE_EXTERN WXEGLDEPTHMASK weglDepthMask;
void ecb_glDepthMask(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDEPTHRANGE)(GLclampd,GLclampd);
WXE_EXTERN WXEGLDEPTHRANGE weglDepthRange;
void ecb_glDepthRange(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCLEARACCUM)(GLfloat,GLfloat,GLfloat,GLfloat);
WXE_EXTERN WXEGLCLEARACCUM weglClearAccum;
void ecb_glClearAccum(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLACCUM)(GLenum,GLfloat);
WXE_EXTERN WXEGLACCUM weglAccum;
void ecb_glAccum(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMATRIXMODE)(GLenum);
WXE_EXTERN WXEGLMATRIXMODE weglMatrixMode;
void ecb_glMatrixMode(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLORTHO)(GLdouble,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLORTHO weglOrtho;
void ecb_glOrtho(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLFRUSTUM)(GLdouble,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLFRUSTUM weglFrustum;
void ecb_glFrustum(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVIEWPORT)(GLint,GLint,GLsizei,GLsizei);
WXE_EXTERN WXEGLVIEWPORT weglViewport;
void ecb_glViewport(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPUSHMATRIX)();
WXE_EXTERN WXEGLPUSHMATRIX weglPushMatrix;
void ecb_glPushMatrix(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPOPMATRIX)();
WXE_EXTERN WXEGLPOPMATRIX weglPopMatrix;
void ecb_glPopMatrix(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLLOADIDENTITY)();
WXE_EXTERN WXEGLLOADIDENTITY weglLoadIdentity;
void ecb_glLoadIdentity(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLLOADMATRIXD)(const GLdouble *);
WXE_EXTERN WXEGLLOADMATRIXD weglLoadMatrixd;
void ecb_glLoadMatrixd(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLLOADMATRIXF)(const GLfloat *);
WXE_EXTERN WXEGLLOADMATRIXF weglLoadMatrixf;
void ecb_glLoadMatrixf(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMULTMATRIXD)(const GLdouble *);
WXE_EXTERN WXEGLMULTMATRIXD weglMultMatrixd;
void ecb_glMultMatrixd(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMULTMATRIXF)(const GLfloat *);
WXE_EXTERN WXEGLMULTMATRIXF weglMultMatrixf;
void ecb_glMultMatrixf(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLROTATED)(GLdouble,GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLROTATED weglRotated;
void ecb_glRotated(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLROTATEF)(GLfloat,GLfloat,GLfloat,GLfloat);
WXE_EXTERN WXEGLROTATEF weglRotatef;
void ecb_glRotatef(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSCALED)(GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLSCALED weglScaled;
void ecb_glScaled(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSCALEF)(GLfloat,GLfloat,GLfloat);
WXE_EXTERN WXEGLSCALEF weglScalef;
void ecb_glScalef(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTRANSLATED)(GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLTRANSLATED weglTranslated;
void ecb_glTranslated(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTRANSLATEF)(GLfloat,GLfloat,GLfloat);
WXE_EXTERN WXEGLTRANSLATEF weglTranslatef;
void ecb_glTranslatef(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLboolean (APIENTRY * WXEGLISLIST)(GLuint);
WXE_EXTERN WXEGLISLIST weglIsList;
void ecb_glIsList(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDELETELISTS)(GLuint,GLsizei);
WXE_EXTERN WXEGLDELETELISTS weglDeleteLists;
void ecb_glDeleteLists(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLuint (APIENTRY * WXEGLGENLISTS)(GLsizei);
WXE_EXTERN WXEGLGENLISTS weglGenLists;
void ecb_glGenLists(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLNEWLIST)(GLuint,GLenum);
WXE_EXTERN WXEGLNEWLIST weglNewList;
void ecb_glNewList(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLENDLIST)();
WXE_EXTERN WXEGLENDLIST weglEndList;
void ecb_glEndList(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCALLLIST)(GLuint);
WXE_EXTERN WXEGLCALLLIST weglCallList;
void ecb_glCallList(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCALLLISTS)(GLsizei,GLenum,const GLuint *);
WXE_EXTERN WXEGLCALLLISTS weglCallLists;
void ecb_glCallLists(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLLISTBASE)(GLuint);
WXE_EXTERN WXEGLLISTBASE weglListBase;
void ecb_glListBase(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBEGIN)(GLenum);
WXE_EXTERN WXEGLBEGIN weglBegin;
void ecb_glBegin(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLEND)();
WXE_EXTERN WXEGLEND weglEnd;
void ecb_glEnd(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEX2D)(GLdouble,GLdouble);
WXE_EXTERN WXEGLVERTEX2D weglVertex2d;
void ecb_glVertex2d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEX2F)(GLfloat,GLfloat);
WXE_EXTERN WXEGLVERTEX2F weglVertex2f;
void ecb_glVertex2f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEX2I)(GLint,GLint);
WXE_EXTERN WXEGLVERTEX2I weglVertex2i;
void ecb_glVertex2i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEX2S)(GLshort,GLshort);
WXE_EXTERN WXEGLVERTEX2S weglVertex2s;
void ecb_glVertex2s(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEX3D)(GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLVERTEX3D weglVertex3d;
void ecb_glVertex3d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEX3F)(GLfloat,GLfloat,GLfloat);
WXE_EXTERN WXEGLVERTEX3F weglVertex3f;
void ecb_glVertex3f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEX3I)(GLint,GLint,GLint);
WXE_EXTERN WXEGLVERTEX3I weglVertex3i;
void ecb_glVertex3i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEX3S)(GLshort,GLshort,GLshort);
WXE_EXTERN WXEGLVERTEX3S weglVertex3s;
void ecb_glVertex3s(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEX4D)(GLdouble,GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLVERTEX4D weglVertex4d;
void ecb_glVertex4d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEX4F)(GLfloat,GLfloat,GLfloat,GLfloat);
WXE_EXTERN WXEGLVERTEX4F weglVertex4f;
void ecb_glVertex4f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEX4I)(GLint,GLint,GLint,GLint);
WXE_EXTERN WXEGLVERTEX4I weglVertex4i;
void ecb_glVertex4i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEX4S)(GLshort,GLshort,GLshort,GLshort);
WXE_EXTERN WXEGLVERTEX4S weglVertex4s;
void ecb_glVertex4s(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLNORMAL3B)(GLbyte,GLbyte,GLbyte);
WXE_EXTERN WXEGLNORMAL3B weglNormal3b;
void ecb_glNormal3b(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLNORMAL3D)(GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLNORMAL3D weglNormal3d;
void ecb_glNormal3d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLNORMAL3F)(GLfloat,GLfloat,GLfloat);
WXE_EXTERN WXEGLNORMAL3F weglNormal3f;
void ecb_glNormal3f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLNORMAL3I)(GLint,GLint,GLint);
WXE_EXTERN WXEGLNORMAL3I weglNormal3i;
void ecb_glNormal3i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLNORMAL3S)(GLshort,GLshort,GLshort);
WXE_EXTERN WXEGLNORMAL3S weglNormal3s;
void ecb_glNormal3s(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLINDEXD)(GLdouble);
WXE_EXTERN WXEGLINDEXD weglIndexd;
void ecb_glIndexd(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLINDEXF)(GLfloat);
WXE_EXTERN WXEGLINDEXF weglIndexf;
void ecb_glIndexf(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLINDEXI)(GLint);
WXE_EXTERN WXEGLINDEXI weglIndexi;
void ecb_glIndexi(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLINDEXS)(GLshort);
WXE_EXTERN WXEGLINDEXS weglIndexs;
void ecb_glIndexs(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLINDEXUB)(GLubyte);
WXE_EXTERN WXEGLINDEXUB weglIndexub;
void ecb_glIndexub(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOLOR3B)(GLbyte,GLbyte,GLbyte);
WXE_EXTERN WXEGLCOLOR3B weglColor3b;
void ecb_glColor3b(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOLOR3D)(GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLCOLOR3D weglColor3d;
void ecb_glColor3d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOLOR3F)(GLfloat,GLfloat,GLfloat);
WXE_EXTERN WXEGLCOLOR3F weglColor3f;
void ecb_glColor3f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOLOR3I)(GLint,GLint,GLint);
WXE_EXTERN WXEGLCOLOR3I weglColor3i;
void ecb_glColor3i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOLOR3S)(GLshort,GLshort,GLshort);
WXE_EXTERN WXEGLCOLOR3S weglColor3s;
void ecb_glColor3s(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOLOR3UB)(GLubyte,GLubyte,GLubyte);
WXE_EXTERN WXEGLCOLOR3UB weglColor3ub;
void ecb_glColor3ub(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOLOR3UI)(GLuint,GLuint,GLuint);
WXE_EXTERN WXEGLCOLOR3UI weglColor3ui;
void ecb_glColor3ui(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOLOR3US)(GLushort,GLushort,GLushort);
WXE_EXTERN WXEGLCOLOR3US weglColor3us;
void ecb_glColor3us(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOLOR4B)(GLbyte,GLbyte,GLbyte,GLbyte);
WXE_EXTERN WXEGLCOLOR4B weglColor4b;
void ecb_glColor4b(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOLOR4D)(GLdouble,GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLCOLOR4D weglColor4d;
void ecb_glColor4d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOLOR4F)(GLfloat,GLfloat,GLfloat,GLfloat);
WXE_EXTERN WXEGLCOLOR4F weglColor4f;
void ecb_glColor4f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOLOR4I)(GLint,GLint,GLint,GLint);
WXE_EXTERN WXEGLCOLOR4I weglColor4i;
void ecb_glColor4i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOLOR4S)(GLshort,GLshort,GLshort,GLshort);
WXE_EXTERN WXEGLCOLOR4S weglColor4s;
void ecb_glColor4s(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOLOR4UB)(GLubyte,GLubyte,GLubyte,GLubyte);
WXE_EXTERN WXEGLCOLOR4UB weglColor4ub;
void ecb_glColor4ub(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOLOR4UI)(GLuint,GLuint,GLuint,GLuint);
WXE_EXTERN WXEGLCOLOR4UI weglColor4ui;
void ecb_glColor4ui(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOLOR4US)(GLushort,GLushort,GLushort,GLushort);
WXE_EXTERN WXEGLCOLOR4US weglColor4us;
void ecb_glColor4us(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXCOORD1D)(GLdouble);
WXE_EXTERN WXEGLTEXCOORD1D weglTexCoord1d;
void ecb_glTexCoord1d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXCOORD1F)(GLfloat);
WXE_EXTERN WXEGLTEXCOORD1F weglTexCoord1f;
void ecb_glTexCoord1f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXCOORD1I)(GLint);
WXE_EXTERN WXEGLTEXCOORD1I weglTexCoord1i;
void ecb_glTexCoord1i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXCOORD1S)(GLshort);
WXE_EXTERN WXEGLTEXCOORD1S weglTexCoord1s;
void ecb_glTexCoord1s(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXCOORD2D)(GLdouble,GLdouble);
WXE_EXTERN WXEGLTEXCOORD2D weglTexCoord2d;
void ecb_glTexCoord2d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXCOORD2F)(GLfloat,GLfloat);
WXE_EXTERN WXEGLTEXCOORD2F weglTexCoord2f;
void ecb_glTexCoord2f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXCOORD2I)(GLint,GLint);
WXE_EXTERN WXEGLTEXCOORD2I weglTexCoord2i;
void ecb_glTexCoord2i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXCOORD2S)(GLshort,GLshort);
WXE_EXTERN WXEGLTEXCOORD2S weglTexCoord2s;
void ecb_glTexCoord2s(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXCOORD3D)(GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLTEXCOORD3D weglTexCoord3d;
void ecb_glTexCoord3d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXCOORD3F)(GLfloat,GLfloat,GLfloat);
WXE_EXTERN WXEGLTEXCOORD3F weglTexCoord3f;
void ecb_glTexCoord3f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXCOORD3I)(GLint,GLint,GLint);
WXE_EXTERN WXEGLTEXCOORD3I weglTexCoord3i;
void ecb_glTexCoord3i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXCOORD3S)(GLshort,GLshort,GLshort);
WXE_EXTERN WXEGLTEXCOORD3S weglTexCoord3s;
void ecb_glTexCoord3s(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXCOORD4D)(GLdouble,GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLTEXCOORD4D weglTexCoord4d;
void ecb_glTexCoord4d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXCOORD4F)(GLfloat,GLfloat,GLfloat,GLfloat);
WXE_EXTERN WXEGLTEXCOORD4F weglTexCoord4f;
void ecb_glTexCoord4f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXCOORD4I)(GLint,GLint,GLint,GLint);
WXE_EXTERN WXEGLTEXCOORD4I weglTexCoord4i;
void ecb_glTexCoord4i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXCOORD4S)(GLshort,GLshort,GLshort,GLshort);
WXE_EXTERN WXEGLTEXCOORD4S weglTexCoord4s;
void ecb_glTexCoord4s(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLRASTERPOS2D)(GLdouble,GLdouble);
WXE_EXTERN WXEGLRASTERPOS2D weglRasterPos2d;
void ecb_glRasterPos2d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLRASTERPOS2F)(GLfloat,GLfloat);
WXE_EXTERN WXEGLRASTERPOS2F weglRasterPos2f;
void ecb_glRasterPos2f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLRASTERPOS2I)(GLint,GLint);
WXE_EXTERN WXEGLRASTERPOS2I weglRasterPos2i;
void ecb_glRasterPos2i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLRASTERPOS2S)(GLshort,GLshort);
WXE_EXTERN WXEGLRASTERPOS2S weglRasterPos2s;
void ecb_glRasterPos2s(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLRASTERPOS3D)(GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLRASTERPOS3D weglRasterPos3d;
void ecb_glRasterPos3d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLRASTERPOS3F)(GLfloat,GLfloat,GLfloat);
WXE_EXTERN WXEGLRASTERPOS3F weglRasterPos3f;
void ecb_glRasterPos3f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLRASTERPOS3I)(GLint,GLint,GLint);
WXE_EXTERN WXEGLRASTERPOS3I weglRasterPos3i;
void ecb_glRasterPos3i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLRASTERPOS3S)(GLshort,GLshort,GLshort);
WXE_EXTERN WXEGLRASTERPOS3S weglRasterPos3s;
void ecb_glRasterPos3s(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLRASTERPOS4D)(GLdouble,GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLRASTERPOS4D weglRasterPos4d;
void ecb_glRasterPos4d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLRASTERPOS4F)(GLfloat,GLfloat,GLfloat,GLfloat);
WXE_EXTERN WXEGLRASTERPOS4F weglRasterPos4f;
void ecb_glRasterPos4f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLRASTERPOS4I)(GLint,GLint,GLint,GLint);
WXE_EXTERN WXEGLRASTERPOS4I weglRasterPos4i;
void ecb_glRasterPos4i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLRASTERPOS4S)(GLshort,GLshort,GLshort,GLshort);
WXE_EXTERN WXEGLRASTERPOS4S weglRasterPos4s;
void ecb_glRasterPos4s(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLRECTD)(GLdouble,GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLRECTD weglRectd;
void ecb_glRectd(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLRECTF)(GLfloat,GLfloat,GLfloat,GLfloat);
WXE_EXTERN WXEGLRECTF weglRectf;
void ecb_glRectf(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLRECTI)(GLint,GLint,GLint,GLint);
WXE_EXTERN WXEGLRECTI weglRecti;
void ecb_glRecti(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLRECTS)(GLshort,GLshort,GLshort,GLshort);
WXE_EXTERN WXEGLRECTS weglRects;
void ecb_glRects(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLRECTDV)(const GLdouble *,const GLdouble *);
WXE_EXTERN WXEGLRECTDV weglRectdv;
void ecb_glRectdv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLRECTFV)(const GLfloat *,const GLfloat *);
WXE_EXTERN WXEGLRECTFV weglRectfv;
void ecb_glRectfv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLRECTIV)(const GLint *,const GLint *);
WXE_EXTERN WXEGLRECTIV weglRectiv;
void ecb_glRectiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLRECTSV)(const GLshort *,const GLshort *);
WXE_EXTERN WXEGLRECTSV weglRectsv;
void ecb_glRectsv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXPOINTER)(GLint,GLenum,GLsizei,const GLvoid *);
WXE_EXTERN WXEGLVERTEXPOINTER weglVertexPointer;
void ecb_glVertexPointer(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLNORMALPOINTER)(GLenum,GLsizei,const GLvoid *);
WXE_EXTERN WXEGLNORMALPOINTER weglNormalPointer;
void ecb_glNormalPointer(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOLORPOINTER)(GLint,GLenum,GLsizei,const GLvoid *);
WXE_EXTERN WXEGLCOLORPOINTER weglColorPointer;
void ecb_glColorPointer(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLINDEXPOINTER)(GLenum,GLsizei,const GLvoid *);
WXE_EXTERN WXEGLINDEXPOINTER weglIndexPointer;
void ecb_glIndexPointer(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXCOORDPOINTER)(GLint,GLenum,GLsizei,const GLvoid *);
WXE_EXTERN WXEGLTEXCOORDPOINTER weglTexCoordPointer;
void ecb_glTexCoordPointer(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLEDGEFLAGPOINTER)(GLsizei,const GLvoid *);
WXE_EXTERN WXEGLEDGEFLAGPOINTER weglEdgeFlagPointer;
void ecb_glEdgeFlagPointer(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLARRAYELEMENT)(GLint);
WXE_EXTERN WXEGLARRAYELEMENT weglArrayElement;
void ecb_glArrayElement(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDRAWARRAYS)(GLenum,GLint,GLsizei);
WXE_EXTERN WXEGLDRAWARRAYS weglDrawArrays;
void ecb_glDrawArrays(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDRAWELEMENTS)(GLenum,GLsizei,GLenum,const GLvoid *);
WXE_EXTERN WXEGLDRAWELEMENTS weglDrawElements;
void ecb_glDrawElements(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLINTERLEAVEDARRAYS)(GLenum,GLsizei,const GLvoid *);
WXE_EXTERN WXEGLINTERLEAVEDARRAYS weglInterleavedArrays;
void ecb_glInterleavedArrays(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSHADEMODEL)(GLenum);
WXE_EXTERN WXEGLSHADEMODEL weglShadeModel;
void ecb_glShadeModel(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLLIGHTF)(GLenum,GLenum,GLfloat);
WXE_EXTERN WXEGLLIGHTF weglLightf;
void ecb_glLightf(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLLIGHTI)(GLenum,GLenum,GLint);
WXE_EXTERN WXEGLLIGHTI weglLighti;
void ecb_glLighti(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLLIGHTFV)(GLenum,GLenum,const GLfloat *);
WXE_EXTERN WXEGLLIGHTFV weglLightfv;
void ecb_glLightfv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLLIGHTIV)(GLenum,GLenum,const GLint *);
WXE_EXTERN WXEGLLIGHTIV weglLightiv;
void ecb_glLightiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETLIGHTFV)(GLenum,GLenum,GLfloat *);
WXE_EXTERN WXEGLGETLIGHTFV weglGetLightfv;
void ecb_glGetLightfv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETLIGHTIV)(GLenum,GLenum,GLint *);
WXE_EXTERN WXEGLGETLIGHTIV weglGetLightiv;
void ecb_glGetLightiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLLIGHTMODELF)(GLenum,GLfloat);
WXE_EXTERN WXEGLLIGHTMODELF weglLightModelf;
void ecb_glLightModelf(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLLIGHTMODELI)(GLenum,GLint);
WXE_EXTERN WXEGLLIGHTMODELI weglLightModeli;
void ecb_glLightModeli(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLLIGHTMODELFV)(GLenum,const GLfloat *);
WXE_EXTERN WXEGLLIGHTMODELFV weglLightModelfv;
void ecb_glLightModelfv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLLIGHTMODELIV)(GLenum,const GLint *);
WXE_EXTERN WXEGLLIGHTMODELIV weglLightModeliv;
void ecb_glLightModeliv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMATERIALF)(GLenum,GLenum,GLfloat);
WXE_EXTERN WXEGLMATERIALF weglMaterialf;
void ecb_glMaterialf(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMATERIALI)(GLenum,GLenum,GLint);
WXE_EXTERN WXEGLMATERIALI weglMateriali;
void ecb_glMateriali(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMATERIALFV)(GLenum,GLenum,const GLfloat *);
WXE_EXTERN WXEGLMATERIALFV weglMaterialfv;
void ecb_glMaterialfv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMATERIALIV)(GLenum,GLenum,const GLint *);
WXE_EXTERN WXEGLMATERIALIV weglMaterialiv;
void ecb_glMaterialiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETMATERIALFV)(GLenum,GLenum,GLfloat *);
WXE_EXTERN WXEGLGETMATERIALFV weglGetMaterialfv;
void ecb_glGetMaterialfv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETMATERIALIV)(GLenum,GLenum,GLint *);
WXE_EXTERN WXEGLGETMATERIALIV weglGetMaterialiv;
void ecb_glGetMaterialiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOLORMATERIAL)(GLenum,GLenum);
WXE_EXTERN WXEGLCOLORMATERIAL weglColorMaterial;
void ecb_glColorMaterial(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPIXELZOOM)(GLfloat,GLfloat);
WXE_EXTERN WXEGLPIXELZOOM weglPixelZoom;
void ecb_glPixelZoom(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPIXELSTOREF)(GLenum,GLfloat);
WXE_EXTERN WXEGLPIXELSTOREF weglPixelStoref;
void ecb_glPixelStoref(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPIXELSTOREI)(GLenum,GLint);
WXE_EXTERN WXEGLPIXELSTOREI weglPixelStorei;
void ecb_glPixelStorei(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPIXELTRANSFERF)(GLenum,GLfloat);
WXE_EXTERN WXEGLPIXELTRANSFERF weglPixelTransferf;
void ecb_glPixelTransferf(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPIXELTRANSFERI)(GLenum,GLint);
WXE_EXTERN WXEGLPIXELTRANSFERI weglPixelTransferi;
void ecb_glPixelTransferi(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPIXELMAPFV)(GLenum,GLsizei,const GLfloat *);
WXE_EXTERN WXEGLPIXELMAPFV weglPixelMapfv;
void ecb_glPixelMapfv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPIXELMAPUIV)(GLenum,GLsizei,const GLuint *);
WXE_EXTERN WXEGLPIXELMAPUIV weglPixelMapuiv;
void ecb_glPixelMapuiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPIXELMAPUSV)(GLenum,GLsizei,const GLushort *);
WXE_EXTERN WXEGLPIXELMAPUSV weglPixelMapusv;
void ecb_glPixelMapusv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETPIXELMAPFV)(GLenum,GLfloat *);
WXE_EXTERN WXEGLGETPIXELMAPFV weglGetPixelMapfv;
void ecb_glGetPixelMapfv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETPIXELMAPUIV)(GLenum,GLuint *);
WXE_EXTERN WXEGLGETPIXELMAPUIV weglGetPixelMapuiv;
void ecb_glGetPixelMapuiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETPIXELMAPUSV)(GLenum,GLushort *);
WXE_EXTERN WXEGLGETPIXELMAPUSV weglGetPixelMapusv;
void ecb_glGetPixelMapusv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBITMAP)(GLsizei,GLsizei,GLfloat,GLfloat,GLfloat,GLfloat,const GLubyte *);
WXE_EXTERN WXEGLBITMAP weglBitmap;
void ecb_glBitmap(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLREADPIXELS)(GLint,GLint,GLsizei,GLsizei,GLenum,GLenum,GLvoid *);
WXE_EXTERN WXEGLREADPIXELS weglReadPixels;
void ecb_glReadPixels(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDRAWPIXELS)(GLsizei,GLsizei,GLenum,GLenum,const GLvoid *);
WXE_EXTERN WXEGLDRAWPIXELS weglDrawPixels;
void ecb_glDrawPixels(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOPYPIXELS)(GLint,GLint,GLsizei,GLsizei,GLenum);
WXE_EXTERN WXEGLCOPYPIXELS weglCopyPixels;
void ecb_glCopyPixels(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSTENCILFUNC)(GLenum,GLint,GLuint);
WXE_EXTERN WXEGLSTENCILFUNC weglStencilFunc;
void ecb_glStencilFunc(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSTENCILMASK)(GLuint);
WXE_EXTERN WXEGLSTENCILMASK weglStencilMask;
void ecb_glStencilMask(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSTENCILOP)(GLenum,GLenum,GLenum);
WXE_EXTERN WXEGLSTENCILOP weglStencilOp;
void ecb_glStencilOp(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCLEARSTENCIL)(GLint);
WXE_EXTERN WXEGLCLEARSTENCIL weglClearStencil;
void ecb_glClearStencil(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXGEND)(GLenum,GLenum,GLdouble);
WXE_EXTERN WXEGLTEXGEND weglTexGend;
void ecb_glTexGend(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXGENF)(GLenum,GLenum,GLfloat);
WXE_EXTERN WXEGLTEXGENF weglTexGenf;
void ecb_glTexGenf(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXGENI)(GLenum,GLenum,GLint);
WXE_EXTERN WXEGLTEXGENI weglTexGeni;
void ecb_glTexGeni(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXGENDV)(GLenum,GLenum,const GLdouble *);
WXE_EXTERN WXEGLTEXGENDV weglTexGendv;
void ecb_glTexGendv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXGENFV)(GLenum,GLenum,const GLfloat *);
WXE_EXTERN WXEGLTEXGENFV weglTexGenfv;
void ecb_glTexGenfv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXGENIV)(GLenum,GLenum,const GLint *);
WXE_EXTERN WXEGLTEXGENIV weglTexGeniv;
void ecb_glTexGeniv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETTEXGENDV)(GLenum,GLenum,GLdouble *);
WXE_EXTERN WXEGLGETTEXGENDV weglGetTexGendv;
void ecb_glGetTexGendv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETTEXGENFV)(GLenum,GLenum,GLfloat *);
WXE_EXTERN WXEGLGETTEXGENFV weglGetTexGenfv;
void ecb_glGetTexGenfv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETTEXGENIV)(GLenum,GLenum,GLint *);
WXE_EXTERN WXEGLGETTEXGENIV weglGetTexGeniv;
void ecb_glGetTexGeniv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXENVF)(GLenum,GLenum,GLfloat);
WXE_EXTERN WXEGLTEXENVF weglTexEnvf;
void ecb_glTexEnvf(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXENVI)(GLenum,GLenum,GLint);
WXE_EXTERN WXEGLTEXENVI weglTexEnvi;
void ecb_glTexEnvi(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXENVFV)(GLenum,GLenum,const GLfloat *);
WXE_EXTERN WXEGLTEXENVFV weglTexEnvfv;
void ecb_glTexEnvfv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXENVIV)(GLenum,GLenum,const GLint *);
WXE_EXTERN WXEGLTEXENVIV weglTexEnviv;
void ecb_glTexEnviv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETTEXENVFV)(GLenum,GLenum,GLfloat *);
WXE_EXTERN WXEGLGETTEXENVFV weglGetTexEnvfv;
void ecb_glGetTexEnvfv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETTEXENVIV)(GLenum,GLenum,GLint *);
WXE_EXTERN WXEGLGETTEXENVIV weglGetTexEnviv;
void ecb_glGetTexEnviv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXPARAMETERF)(GLenum,GLenum,GLfloat);
WXE_EXTERN WXEGLTEXPARAMETERF weglTexParameterf;
void ecb_glTexParameterf(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXPARAMETERI)(GLenum,GLenum,GLint);
WXE_EXTERN WXEGLTEXPARAMETERI weglTexParameteri;
void ecb_glTexParameteri(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXPARAMETERFV)(GLenum,GLenum,const GLfloat *);
WXE_EXTERN WXEGLTEXPARAMETERFV weglTexParameterfv;
void ecb_glTexParameterfv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXPARAMETERIV)(GLenum,GLenum,const GLint *);
WXE_EXTERN WXEGLTEXPARAMETERIV weglTexParameteriv;
void ecb_glTexParameteriv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETTEXPARAMETERFV)(GLenum,GLenum,GLfloat *);
WXE_EXTERN WXEGLGETTEXPARAMETERFV weglGetTexParameterfv;
void ecb_glGetTexParameterfv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETTEXPARAMETERIV)(GLenum,GLenum,GLint *);
WXE_EXTERN WXEGLGETTEXPARAMETERIV weglGetTexParameteriv;
void ecb_glGetTexParameteriv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETTEXLEVELPARAMETERFV)(GLenum,GLint,GLenum,GLfloat *);
WXE_EXTERN WXEGLGETTEXLEVELPARAMETERFV weglGetTexLevelParameterfv;
void ecb_glGetTexLevelParameterfv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETTEXLEVELPARAMETERIV)(GLenum,GLint,GLenum,GLint *);
WXE_EXTERN WXEGLGETTEXLEVELPARAMETERIV weglGetTexLevelParameteriv;
void ecb_glGetTexLevelParameteriv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXIMAGE1D)(GLenum,GLint,GLint,GLsizei,GLint,GLenum,GLenum,const GLvoid *);
WXE_EXTERN WXEGLTEXIMAGE1D weglTexImage1D;
void ecb_glTexImage1D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXIMAGE2D)(GLenum,GLint,GLint,GLsizei,GLsizei,GLint,GLenum,GLenum,const GLvoid *);
WXE_EXTERN WXEGLTEXIMAGE2D weglTexImage2D;
void ecb_glTexImage2D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETTEXIMAGE)(GLenum,GLint,GLenum,GLenum,GLvoid *);
WXE_EXTERN WXEGLGETTEXIMAGE weglGetTexImage;
void ecb_glGetTexImage(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGENTEXTURES)(GLsizei,GLuint *);
WXE_EXTERN WXEGLGENTEXTURES weglGenTextures;
void ecb_glGenTextures(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDELETETEXTURES)(GLsizei,const GLuint *);
WXE_EXTERN WXEGLDELETETEXTURES weglDeleteTextures;
void ecb_glDeleteTextures(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBINDTEXTURE)(GLenum,GLuint);
WXE_EXTERN WXEGLBINDTEXTURE weglBindTexture;
void ecb_glBindTexture(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPRIORITIZETEXTURES)(GLsizei,const GLuint *,const GLclampf *);
WXE_EXTERN WXEGLPRIORITIZETEXTURES weglPrioritizeTextures;
void ecb_glPrioritizeTextures(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLboolean (APIENTRY * WXEGLARETEXTURESRESIDENT)(GLsizei,const GLuint *,GLboolean *);
WXE_EXTERN WXEGLARETEXTURESRESIDENT weglAreTexturesResident;
void ecb_glAreTexturesResident(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLboolean (APIENTRY * WXEGLISTEXTURE)(GLuint);
WXE_EXTERN WXEGLISTEXTURE weglIsTexture;
void ecb_glIsTexture(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXSUBIMAGE1D)(GLenum,GLint,GLint,GLsizei,GLenum,GLenum,const GLvoid *);
WXE_EXTERN WXEGLTEXSUBIMAGE1D weglTexSubImage1D;
void ecb_glTexSubImage1D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXSUBIMAGE2D)(GLenum,GLint,GLint,GLint,GLsizei,GLsizei,GLenum,GLenum,const GLvoid *);
WXE_EXTERN WXEGLTEXSUBIMAGE2D weglTexSubImage2D;
void ecb_glTexSubImage2D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOPYTEXIMAGE1D)(GLenum,GLint,GLenum,GLint,GLint,GLsizei,GLint);
WXE_EXTERN WXEGLCOPYTEXIMAGE1D weglCopyTexImage1D;
void ecb_glCopyTexImage1D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOPYTEXIMAGE2D)(GLenum,GLint,GLenum,GLint,GLint,GLsizei,GLsizei,GLint);
WXE_EXTERN WXEGLCOPYTEXIMAGE2D weglCopyTexImage2D;
void ecb_glCopyTexImage2D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOPYTEXSUBIMAGE1D)(GLenum,GLint,GLint,GLint,GLint,GLsizei);
WXE_EXTERN WXEGLCOPYTEXSUBIMAGE1D weglCopyTexSubImage1D;
void ecb_glCopyTexSubImage1D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOPYTEXSUBIMAGE2D)(GLenum,GLint,GLint,GLint,GLint,GLint,GLsizei,GLsizei);
WXE_EXTERN WXEGLCOPYTEXSUBIMAGE2D weglCopyTexSubImage2D;
void ecb_glCopyTexSubImage2D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMAP1D)(GLenum,GLdouble,GLdouble,GLint,GLint,const GLdouble *);
WXE_EXTERN WXEGLMAP1D weglMap1d;
void ecb_glMap1d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMAP1F)(GLenum,GLfloat,GLfloat,GLint,GLint,const GLfloat *);
WXE_EXTERN WXEGLMAP1F weglMap1f;
void ecb_glMap1f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMAP2D)(GLenum,GLdouble,GLdouble,GLint,GLint,GLdouble,GLdouble,GLint,GLint,const GLdouble *);
WXE_EXTERN WXEGLMAP2D weglMap2d;
void ecb_glMap2d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMAP2F)(GLenum,GLfloat,GLfloat,GLint,GLint,GLfloat,GLfloat,GLint,GLint,const GLfloat *);
WXE_EXTERN WXEGLMAP2F weglMap2f;
void ecb_glMap2f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETMAPDV)(GLenum,GLenum,GLdouble *);
WXE_EXTERN WXEGLGETMAPDV weglGetMapdv;
void ecb_glGetMapdv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETMAPFV)(GLenum,GLenum,GLfloat *);
WXE_EXTERN WXEGLGETMAPFV weglGetMapfv;
void ecb_glGetMapfv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETMAPIV)(GLenum,GLenum,GLint *);
WXE_EXTERN WXEGLGETMAPIV weglGetMapiv;
void ecb_glGetMapiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLEVALCOORD1D)(GLdouble);
WXE_EXTERN WXEGLEVALCOORD1D weglEvalCoord1d;
void ecb_glEvalCoord1d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLEVALCOORD1F)(GLfloat);
WXE_EXTERN WXEGLEVALCOORD1F weglEvalCoord1f;
void ecb_glEvalCoord1f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLEVALCOORD2D)(GLdouble,GLdouble);
WXE_EXTERN WXEGLEVALCOORD2D weglEvalCoord2d;
void ecb_glEvalCoord2d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLEVALCOORD2F)(GLfloat,GLfloat);
WXE_EXTERN WXEGLEVALCOORD2F weglEvalCoord2f;
void ecb_glEvalCoord2f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMAPGRID1D)(GLint,GLdouble,GLdouble);
WXE_EXTERN WXEGLMAPGRID1D weglMapGrid1d;
void ecb_glMapGrid1d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMAPGRID1F)(GLint,GLfloat,GLfloat);
WXE_EXTERN WXEGLMAPGRID1F weglMapGrid1f;
void ecb_glMapGrid1f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMAPGRID2D)(GLint,GLdouble,GLdouble,GLint,GLdouble,GLdouble);
WXE_EXTERN WXEGLMAPGRID2D weglMapGrid2d;
void ecb_glMapGrid2d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMAPGRID2F)(GLint,GLfloat,GLfloat,GLint,GLfloat,GLfloat);
WXE_EXTERN WXEGLMAPGRID2F weglMapGrid2f;
void ecb_glMapGrid2f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLEVALPOINT1)(GLint);
WXE_EXTERN WXEGLEVALPOINT1 weglEvalPoint1;
void ecb_glEvalPoint1(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLEVALPOINT2)(GLint,GLint);
WXE_EXTERN WXEGLEVALPOINT2 weglEvalPoint2;
void ecb_glEvalPoint2(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLEVALMESH1)(GLenum,GLint,GLint);
WXE_EXTERN WXEGLEVALMESH1 weglEvalMesh1;
void ecb_glEvalMesh1(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLEVALMESH2)(GLenum,GLint,GLint,GLint,GLint);
WXE_EXTERN WXEGLEVALMESH2 weglEvalMesh2;
void ecb_glEvalMesh2(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLFOGF)(GLenum,GLfloat);
WXE_EXTERN WXEGLFOGF weglFogf;
void ecb_glFogf(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLFOGI)(GLenum,GLint);
WXE_EXTERN WXEGLFOGI weglFogi;
void ecb_glFogi(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLFOGFV)(GLenum,const GLfloat *);
WXE_EXTERN WXEGLFOGFV weglFogfv;
void ecb_glFogfv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLFOGIV)(GLenum,const GLint *);
WXE_EXTERN WXEGLFOGIV weglFogiv;
void ecb_glFogiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLFEEDBACKBUFFER)(GLsizei,GLenum,GLfloat *);
WXE_EXTERN WXEGLFEEDBACKBUFFER weglFeedbackBuffer;
void ecb_glFeedbackBuffer(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPASSTHROUGH)(GLfloat);
WXE_EXTERN WXEGLPASSTHROUGH weglPassThrough;
void ecb_glPassThrough(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSELECTBUFFER)(GLsizei,GLuint *);
WXE_EXTERN WXEGLSELECTBUFFER weglSelectBuffer;
void ecb_glSelectBuffer(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLINITNAMES)();
WXE_EXTERN WXEGLINITNAMES weglInitNames;
void ecb_glInitNames(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLLOADNAME)(GLuint);
WXE_EXTERN WXEGLLOADNAME weglLoadName;
void ecb_glLoadName(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPUSHNAME)(GLuint);
WXE_EXTERN WXEGLPUSHNAME weglPushName;
void ecb_glPushName(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPOPNAME)();
WXE_EXTERN WXEGLPOPNAME weglPopName;
void ecb_glPopName(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDRAWRANGEELEMENTS)(GLenum,GLuint,GLuint,GLsizei,GLenum,const GLvoid *);
WXE_EXTERN WXEGLDRAWRANGEELEMENTS weglDrawRangeElements;
void ecb_glDrawRangeElements(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXIMAGE3D)(GLenum,GLint,GLint,GLsizei,GLsizei,GLsizei,GLint,GLenum,GLenum,const GLvoid *);
WXE_EXTERN WXEGLTEXIMAGE3D weglTexImage3D;
void ecb_glTexImage3D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXSUBIMAGE3D)(GLenum,GLint,GLint,GLint,GLint,GLsizei,GLsizei,GLsizei,GLenum,GLenum,const GLvoid *);
WXE_EXTERN WXEGLTEXSUBIMAGE3D weglTexSubImage3D;
void ecb_glTexSubImage3D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOPYTEXSUBIMAGE3D)(GLenum,GLint,GLint,GLint,GLint,GLint,GLint,GLsizei,GLsizei);
WXE_EXTERN WXEGLCOPYTEXSUBIMAGE3D weglCopyTexSubImage3D;
void ecb_glCopyTexSubImage3D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLACTIVETEXTURE)(GLenum);
WXE_EXTERN WXEGLACTIVETEXTURE weglActiveTexture;
void ecb_glActiveTexture(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSAMPLECOVERAGE)(GLclampf,GLboolean);
WXE_EXTERN WXEGLSAMPLECOVERAGE weglSampleCoverage;
void ecb_glSampleCoverage(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOMPRESSEDTEXIMAGE3D)(GLenum,GLint,GLenum,GLsizei,GLsizei,GLsizei,GLint,GLsizei,const GLvoid *);
WXE_EXTERN WXEGLCOMPRESSEDTEXIMAGE3D weglCompressedTexImage3D;
void ecb_glCompressedTexImage3D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOMPRESSEDTEXIMAGE2D)(GLenum,GLint,GLenum,GLsizei,GLsizei,GLint,GLsizei,const GLvoid *);
WXE_EXTERN WXEGLCOMPRESSEDTEXIMAGE2D weglCompressedTexImage2D;
void ecb_glCompressedTexImage2D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOMPRESSEDTEXIMAGE1D)(GLenum,GLint,GLenum,GLsizei,GLint,GLsizei,const GLvoid *);
WXE_EXTERN WXEGLCOMPRESSEDTEXIMAGE1D weglCompressedTexImage1D;
void ecb_glCompressedTexImage1D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOMPRESSEDTEXSUBIMAGE3D)(GLenum,GLint,GLint,GLint,GLint,GLsizei,GLsizei,GLsizei,GLenum,GLsizei,const GLvoid *);
WXE_EXTERN WXEGLCOMPRESSEDTEXSUBIMAGE3D weglCompressedTexSubImage3D;
void ecb_glCompressedTexSubImage3D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOMPRESSEDTEXSUBIMAGE2D)(GLenum,GLint,GLint,GLint,GLsizei,GLsizei,GLenum,GLsizei,const GLvoid *);
WXE_EXTERN WXEGLCOMPRESSEDTEXSUBIMAGE2D weglCompressedTexSubImage2D;
void ecb_glCompressedTexSubImage2D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOMPRESSEDTEXSUBIMAGE1D)(GLenum,GLint,GLint,GLsizei,GLenum,GLsizei,const GLvoid *);
WXE_EXTERN WXEGLCOMPRESSEDTEXSUBIMAGE1D weglCompressedTexSubImage1D;
void ecb_glCompressedTexSubImage1D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETCOMPRESSEDTEXIMAGE)(GLenum,GLint,GLvoid *);
WXE_EXTERN WXEGLGETCOMPRESSEDTEXIMAGE weglGetCompressedTexImage;
void ecb_glGetCompressedTexImage(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCLIENTACTIVETEXTURE)(GLenum);
WXE_EXTERN WXEGLCLIENTACTIVETEXTURE weglClientActiveTexture;
void ecb_glClientActiveTexture(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMULTITEXCOORD1D)(GLenum,GLdouble);
WXE_EXTERN WXEGLMULTITEXCOORD1D weglMultiTexCoord1d;
void ecb_glMultiTexCoord1d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMULTITEXCOORD1F)(GLenum,GLfloat);
WXE_EXTERN WXEGLMULTITEXCOORD1F weglMultiTexCoord1f;
void ecb_glMultiTexCoord1f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMULTITEXCOORD1I)(GLenum,GLint);
WXE_EXTERN WXEGLMULTITEXCOORD1I weglMultiTexCoord1i;
void ecb_glMultiTexCoord1i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMULTITEXCOORD1S)(GLenum,GLshort);
WXE_EXTERN WXEGLMULTITEXCOORD1S weglMultiTexCoord1s;
void ecb_glMultiTexCoord1s(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMULTITEXCOORD2D)(GLenum,GLdouble,GLdouble);
WXE_EXTERN WXEGLMULTITEXCOORD2D weglMultiTexCoord2d;
void ecb_glMultiTexCoord2d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMULTITEXCOORD2F)(GLenum,GLfloat,GLfloat);
WXE_EXTERN WXEGLMULTITEXCOORD2F weglMultiTexCoord2f;
void ecb_glMultiTexCoord2f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMULTITEXCOORD2I)(GLenum,GLint,GLint);
WXE_EXTERN WXEGLMULTITEXCOORD2I weglMultiTexCoord2i;
void ecb_glMultiTexCoord2i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMULTITEXCOORD2S)(GLenum,GLshort,GLshort);
WXE_EXTERN WXEGLMULTITEXCOORD2S weglMultiTexCoord2s;
void ecb_glMultiTexCoord2s(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMULTITEXCOORD3D)(GLenum,GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLMULTITEXCOORD3D weglMultiTexCoord3d;
void ecb_glMultiTexCoord3d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMULTITEXCOORD3F)(GLenum,GLfloat,GLfloat,GLfloat);
WXE_EXTERN WXEGLMULTITEXCOORD3F weglMultiTexCoord3f;
void ecb_glMultiTexCoord3f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMULTITEXCOORD3I)(GLenum,GLint,GLint,GLint);
WXE_EXTERN WXEGLMULTITEXCOORD3I weglMultiTexCoord3i;
void ecb_glMultiTexCoord3i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMULTITEXCOORD3S)(GLenum,GLshort,GLshort,GLshort);
WXE_EXTERN WXEGLMULTITEXCOORD3S weglMultiTexCoord3s;
void ecb_glMultiTexCoord3s(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMULTITEXCOORD4D)(GLenum,GLdouble,GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLMULTITEXCOORD4D weglMultiTexCoord4d;
void ecb_glMultiTexCoord4d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMULTITEXCOORD4F)(GLenum,GLfloat,GLfloat,GLfloat,GLfloat);
WXE_EXTERN WXEGLMULTITEXCOORD4F weglMultiTexCoord4f;
void ecb_glMultiTexCoord4f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMULTITEXCOORD4I)(GLenum,GLint,GLint,GLint,GLint);
WXE_EXTERN WXEGLMULTITEXCOORD4I weglMultiTexCoord4i;
void ecb_glMultiTexCoord4i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMULTITEXCOORD4S)(GLenum,GLshort,GLshort,GLshort,GLshort);
WXE_EXTERN WXEGLMULTITEXCOORD4S weglMultiTexCoord4s;
void ecb_glMultiTexCoord4s(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLLOADTRANSPOSEMATRIXF)(const GLfloat m[]);
WXE_EXTERN WXEGLLOADTRANSPOSEMATRIXF weglLoadTransposeMatrixf;
void ecb_glLoadTransposeMatrixf(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLLOADTRANSPOSEMATRIXD)(const GLdouble m[]);
WXE_EXTERN WXEGLLOADTRANSPOSEMATRIXD weglLoadTransposeMatrixd;
void ecb_glLoadTransposeMatrixd(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMULTTRANSPOSEMATRIXF)(const GLfloat m[]);
WXE_EXTERN WXEGLMULTTRANSPOSEMATRIXF weglMultTransposeMatrixf;
void ecb_glMultTransposeMatrixf(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMULTTRANSPOSEMATRIXD)(const GLdouble m[]);
WXE_EXTERN WXEGLMULTTRANSPOSEMATRIXD weglMultTransposeMatrixd;
void ecb_glMultTransposeMatrixd(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBLENDFUNCSEPARATE)(GLenum,GLenum,GLenum,GLenum);
WXE_EXTERN WXEGLBLENDFUNCSEPARATE weglBlendFuncSeparate;
void ecb_glBlendFuncSeparate(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMULTIDRAWARRAYS)(GLenum,const GLint *,const GLsizei *,GLsizei);
WXE_EXTERN WXEGLMULTIDRAWARRAYS weglMultiDrawArrays;
void ecb_glMultiDrawArrays(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPOINTPARAMETERF)(GLenum,GLfloat);
WXE_EXTERN WXEGLPOINTPARAMETERF weglPointParameterf;
void ecb_glPointParameterf(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPOINTPARAMETERFV)(GLenum,const GLfloat *);
WXE_EXTERN WXEGLPOINTPARAMETERFV weglPointParameterfv;
void ecb_glPointParameterfv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPOINTPARAMETERI)(GLenum,GLint);
WXE_EXTERN WXEGLPOINTPARAMETERI weglPointParameteri;
void ecb_glPointParameteri(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPOINTPARAMETERIV)(GLenum,const GLint *);
WXE_EXTERN WXEGLPOINTPARAMETERIV weglPointParameteriv;
void ecb_glPointParameteriv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLFOGCOORDF)(GLfloat);
WXE_EXTERN WXEGLFOGCOORDF weglFogCoordf;
void ecb_glFogCoordf(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLFOGCOORDD)(GLdouble);
WXE_EXTERN WXEGLFOGCOORDD weglFogCoordd;
void ecb_glFogCoordd(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLFOGCOORDPOINTER)(GLenum,GLsizei,const void *);
WXE_EXTERN WXEGLFOGCOORDPOINTER weglFogCoordPointer;
void ecb_glFogCoordPointer(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSECONDARYCOLOR3B)(GLbyte,GLbyte,GLbyte);
WXE_EXTERN WXEGLSECONDARYCOLOR3B weglSecondaryColor3b;
void ecb_glSecondaryColor3b(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSECONDARYCOLOR3D)(GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLSECONDARYCOLOR3D weglSecondaryColor3d;
void ecb_glSecondaryColor3d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSECONDARYCOLOR3F)(GLfloat,GLfloat,GLfloat);
WXE_EXTERN WXEGLSECONDARYCOLOR3F weglSecondaryColor3f;
void ecb_glSecondaryColor3f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSECONDARYCOLOR3I)(GLint,GLint,GLint);
WXE_EXTERN WXEGLSECONDARYCOLOR3I weglSecondaryColor3i;
void ecb_glSecondaryColor3i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSECONDARYCOLOR3S)(GLshort,GLshort,GLshort);
WXE_EXTERN WXEGLSECONDARYCOLOR3S weglSecondaryColor3s;
void ecb_glSecondaryColor3s(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSECONDARYCOLOR3UB)(GLubyte,GLubyte,GLubyte);
WXE_EXTERN WXEGLSECONDARYCOLOR3UB weglSecondaryColor3ub;
void ecb_glSecondaryColor3ub(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSECONDARYCOLOR3UI)(GLuint,GLuint,GLuint);
WXE_EXTERN WXEGLSECONDARYCOLOR3UI weglSecondaryColor3ui;
void ecb_glSecondaryColor3ui(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSECONDARYCOLOR3US)(GLushort,GLushort,GLushort);
WXE_EXTERN WXEGLSECONDARYCOLOR3US weglSecondaryColor3us;
void ecb_glSecondaryColor3us(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSECONDARYCOLORPOINTER)(GLint,GLenum,GLsizei,const void *);
WXE_EXTERN WXEGLSECONDARYCOLORPOINTER weglSecondaryColorPointer;
void ecb_glSecondaryColorPointer(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLWINDOWPOS2D)(GLdouble,GLdouble);
WXE_EXTERN WXEGLWINDOWPOS2D weglWindowPos2d;
void ecb_glWindowPos2d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLWINDOWPOS2F)(GLfloat,GLfloat);
WXE_EXTERN WXEGLWINDOWPOS2F weglWindowPos2f;
void ecb_glWindowPos2f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLWINDOWPOS2I)(GLint,GLint);
WXE_EXTERN WXEGLWINDOWPOS2I weglWindowPos2i;
void ecb_glWindowPos2i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLWINDOWPOS2S)(GLshort,GLshort);
WXE_EXTERN WXEGLWINDOWPOS2S weglWindowPos2s;
void ecb_glWindowPos2s(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLWINDOWPOS3D)(GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLWINDOWPOS3D weglWindowPos3d;
void ecb_glWindowPos3d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLWINDOWPOS3F)(GLfloat,GLfloat,GLfloat);
WXE_EXTERN WXEGLWINDOWPOS3F weglWindowPos3f;
void ecb_glWindowPos3f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLWINDOWPOS3I)(GLint,GLint,GLint);
WXE_EXTERN WXEGLWINDOWPOS3I weglWindowPos3i;
void ecb_glWindowPos3i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLWINDOWPOS3S)(GLshort,GLshort,GLshort);
WXE_EXTERN WXEGLWINDOWPOS3S weglWindowPos3s;
void ecb_glWindowPos3s(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBLENDCOLOR)(GLclampf,GLclampf,GLclampf,GLclampf);
WXE_EXTERN WXEGLBLENDCOLOR weglBlendColor;
void ecb_glBlendColor(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBLENDEQUATION)(GLenum);
WXE_EXTERN WXEGLBLENDEQUATION weglBlendEquation;
void ecb_glBlendEquation(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGENQUERIES)(GLsizei,GLuint *);
WXE_EXTERN WXEGLGENQUERIES weglGenQueries;
void ecb_glGenQueries(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDELETEQUERIES)(GLsizei,const GLuint *);
WXE_EXTERN WXEGLDELETEQUERIES weglDeleteQueries;
void ecb_glDeleteQueries(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLboolean (APIENTRY * WXEGLISQUERY)(GLuint);
WXE_EXTERN WXEGLISQUERY weglIsQuery;
void ecb_glIsQuery(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBEGINQUERY)(GLenum,GLuint);
WXE_EXTERN WXEGLBEGINQUERY weglBeginQuery;
void ecb_glBeginQuery(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLENDQUERY)(GLenum);
WXE_EXTERN WXEGLENDQUERY weglEndQuery;
void ecb_glEndQuery(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETQUERYIV)(GLenum,GLenum,GLint *);
WXE_EXTERN WXEGLGETQUERYIV weglGetQueryiv;
void ecb_glGetQueryiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETQUERYOBJECTIV)(GLuint,GLenum,GLint *);
WXE_EXTERN WXEGLGETQUERYOBJECTIV weglGetQueryObjectiv;
void ecb_glGetQueryObjectiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETQUERYOBJECTUIV)(GLuint,GLenum,GLuint *);
WXE_EXTERN WXEGLGETQUERYOBJECTUIV weglGetQueryObjectuiv;
void ecb_glGetQueryObjectuiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBINDBUFFER)(GLenum,GLuint);
WXE_EXTERN WXEGLBINDBUFFER weglBindBuffer;
void ecb_glBindBuffer(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDELETEBUFFERS)(GLsizei,const GLuint *);
WXE_EXTERN WXEGLDELETEBUFFERS weglDeleteBuffers;
void ecb_glDeleteBuffers(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGENBUFFERS)(GLsizei,GLuint *);
WXE_EXTERN WXEGLGENBUFFERS weglGenBuffers;
void ecb_glGenBuffers(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLboolean (APIENTRY * WXEGLISBUFFER)(GLuint);
WXE_EXTERN WXEGLISBUFFER weglIsBuffer;
void ecb_glIsBuffer(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBUFFERDATA)(GLenum,GLsizeiptr,const void *,GLenum);
WXE_EXTERN WXEGLBUFFERDATA weglBufferData;
void ecb_glBufferData(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBUFFERSUBDATA)(GLenum,GLintptr,GLsizeiptr,const void *);
WXE_EXTERN WXEGLBUFFERSUBDATA weglBufferSubData;
void ecb_glBufferSubData(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETBUFFERSUBDATA)(GLenum,GLintptr,GLsizeiptr,void *);
WXE_EXTERN WXEGLGETBUFFERSUBDATA weglGetBufferSubData;
void ecb_glGetBufferSubData(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETBUFFERPARAMETERIV)(GLenum,GLenum,GLint *);
WXE_EXTERN WXEGLGETBUFFERPARAMETERIV weglGetBufferParameteriv;
void ecb_glGetBufferParameteriv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBLENDEQUATIONSEPARATE)(GLenum,GLenum);
WXE_EXTERN WXEGLBLENDEQUATIONSEPARATE weglBlendEquationSeparate;
void ecb_glBlendEquationSeparate(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDRAWBUFFERS)(GLsizei,const GLenum *);
WXE_EXTERN WXEGLDRAWBUFFERS weglDrawBuffers;
void ecb_glDrawBuffers(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSTENCILOPSEPARATE)(GLenum,GLenum,GLenum,GLenum);
WXE_EXTERN WXEGLSTENCILOPSEPARATE weglStencilOpSeparate;
void ecb_glStencilOpSeparate(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSTENCILFUNCSEPARATE)(GLenum,GLenum,GLint,GLuint);
WXE_EXTERN WXEGLSTENCILFUNCSEPARATE weglStencilFuncSeparate;
void ecb_glStencilFuncSeparate(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSTENCILMASKSEPARATE)(GLenum,GLuint);
WXE_EXTERN WXEGLSTENCILMASKSEPARATE weglStencilMaskSeparate;
void ecb_glStencilMaskSeparate(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLATTACHSHADER)(GLuint,GLuint);
WXE_EXTERN WXEGLATTACHSHADER weglAttachShader;
void ecb_glAttachShader(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBINDATTRIBLOCATION)(GLuint,GLuint,const GLchar *);
WXE_EXTERN WXEGLBINDATTRIBLOCATION weglBindAttribLocation;
void ecb_glBindAttribLocation(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOMPILESHADER)(GLuint);
WXE_EXTERN WXEGLCOMPILESHADER weglCompileShader;
void ecb_glCompileShader(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLuint (APIENTRY * WXEGLCREATEPROGRAM)();
WXE_EXTERN WXEGLCREATEPROGRAM weglCreateProgram;
void ecb_glCreateProgram(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLuint (APIENTRY * WXEGLCREATESHADER)(GLenum);
WXE_EXTERN WXEGLCREATESHADER weglCreateShader;
void ecb_glCreateShader(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDELETEPROGRAM)(GLuint);
WXE_EXTERN WXEGLDELETEPROGRAM weglDeleteProgram;
void ecb_glDeleteProgram(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDELETESHADER)(GLuint);
WXE_EXTERN WXEGLDELETESHADER weglDeleteShader;
void ecb_glDeleteShader(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDETACHSHADER)(GLuint,GLuint);
WXE_EXTERN WXEGLDETACHSHADER weglDetachShader;
void ecb_glDetachShader(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDISABLEVERTEXATTRIBARRAY)(GLuint);
WXE_EXTERN WXEGLDISABLEVERTEXATTRIBARRAY weglDisableVertexAttribArray;
void ecb_glDisableVertexAttribArray(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLENABLEVERTEXATTRIBARRAY)(GLuint);
WXE_EXTERN WXEGLENABLEVERTEXATTRIBARRAY weglEnableVertexAttribArray;
void ecb_glEnableVertexAttribArray(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETACTIVEATTRIB)(GLuint,GLuint,GLsizei,GLsizei *,GLint *,GLenum *,GLchar *);
WXE_EXTERN WXEGLGETACTIVEATTRIB weglGetActiveAttrib;
void ecb_glGetActiveAttrib(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETACTIVEUNIFORM)(GLuint,GLuint,GLsizei,GLsizei *,GLint *,GLenum *,GLchar *);
WXE_EXTERN WXEGLGETACTIVEUNIFORM weglGetActiveUniform;
void ecb_glGetActiveUniform(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETATTACHEDSHADERS)(GLuint,GLsizei,GLsizei *,GLuint *);
WXE_EXTERN WXEGLGETATTACHEDSHADERS weglGetAttachedShaders;
void ecb_glGetAttachedShaders(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLint (APIENTRY * WXEGLGETATTRIBLOCATION)(GLuint,const GLchar *);
WXE_EXTERN WXEGLGETATTRIBLOCATION weglGetAttribLocation;
void ecb_glGetAttribLocation(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETPROGRAMIV)(GLuint,GLenum,GLint *);
WXE_EXTERN WXEGLGETPROGRAMIV weglGetProgramiv;
void ecb_glGetProgramiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETPROGRAMINFOLOG)(GLuint,GLsizei,GLsizei *,GLchar *);
WXE_EXTERN WXEGLGETPROGRAMINFOLOG weglGetProgramInfoLog;
void ecb_glGetProgramInfoLog(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETSHADERIV)(GLuint,GLenum,GLint *);
WXE_EXTERN WXEGLGETSHADERIV weglGetShaderiv;
void ecb_glGetShaderiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETSHADERINFOLOG)(GLuint,GLsizei,GLsizei *,GLchar *);
WXE_EXTERN WXEGLGETSHADERINFOLOG weglGetShaderInfoLog;
void ecb_glGetShaderInfoLog(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETSHADERSOURCE)(GLuint,GLsizei,GLsizei *,GLchar *);
WXE_EXTERN WXEGLGETSHADERSOURCE weglGetShaderSource;
void ecb_glGetShaderSource(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLint (APIENTRY * WXEGLGETUNIFORMLOCATION)(GLuint,const GLchar *);
WXE_EXTERN WXEGLGETUNIFORMLOCATION weglGetUniformLocation;
void ecb_glGetUniformLocation(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETUNIFORMFV)(GLuint,GLint,GLfloat *);
WXE_EXTERN WXEGLGETUNIFORMFV weglGetUniformfv;
void ecb_glGetUniformfv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETUNIFORMIV)(GLuint,GLint,GLint *);
WXE_EXTERN WXEGLGETUNIFORMIV weglGetUniformiv;
void ecb_glGetUniformiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETVERTEXATTRIBDV)(GLuint,GLenum,GLdouble *);
WXE_EXTERN WXEGLGETVERTEXATTRIBDV weglGetVertexAttribdv;
void ecb_glGetVertexAttribdv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETVERTEXATTRIBFV)(GLuint,GLenum,GLfloat *);
WXE_EXTERN WXEGLGETVERTEXATTRIBFV weglGetVertexAttribfv;
void ecb_glGetVertexAttribfv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETVERTEXATTRIBIV)(GLuint,GLenum,GLint *);
WXE_EXTERN WXEGLGETVERTEXATTRIBIV weglGetVertexAttribiv;
void ecb_glGetVertexAttribiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLboolean (APIENTRY * WXEGLISPROGRAM)(GLuint);
WXE_EXTERN WXEGLISPROGRAM weglIsProgram;
void ecb_glIsProgram(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLboolean (APIENTRY * WXEGLISSHADER)(GLuint);
WXE_EXTERN WXEGLISSHADER weglIsShader;
void ecb_glIsShader(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLLINKPROGRAM)(GLuint);
WXE_EXTERN WXEGLLINKPROGRAM weglLinkProgram;
void ecb_glLinkProgram(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSHADERSOURCE)(GLuint,GLsizei,const GLchar **,const GLint *);
WXE_EXTERN WXEGLSHADERSOURCE weglShaderSource;
void ecb_glShaderSource(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUSEPROGRAM)(GLuint);
WXE_EXTERN WXEGLUSEPROGRAM weglUseProgram;
void ecb_glUseProgram(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM1F)(GLint,GLfloat);
WXE_EXTERN WXEGLUNIFORM1F weglUniform1f;
void ecb_glUniform1f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM2F)(GLint,GLfloat,GLfloat);
WXE_EXTERN WXEGLUNIFORM2F weglUniform2f;
void ecb_glUniform2f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM3F)(GLint,GLfloat,GLfloat,GLfloat);
WXE_EXTERN WXEGLUNIFORM3F weglUniform3f;
void ecb_glUniform3f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM4F)(GLint,GLfloat,GLfloat,GLfloat,GLfloat);
WXE_EXTERN WXEGLUNIFORM4F weglUniform4f;
void ecb_glUniform4f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM1I)(GLint,GLint);
WXE_EXTERN WXEGLUNIFORM1I weglUniform1i;
void ecb_glUniform1i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM2I)(GLint,GLint,GLint);
WXE_EXTERN WXEGLUNIFORM2I weglUniform2i;
void ecb_glUniform2i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM3I)(GLint,GLint,GLint,GLint);
WXE_EXTERN WXEGLUNIFORM3I weglUniform3i;
void ecb_glUniform3i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM4I)(GLint,GLint,GLint,GLint,GLint);
WXE_EXTERN WXEGLUNIFORM4I weglUniform4i;
void ecb_glUniform4i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM1FV)(GLint,GLsizei,const GLfloat *);
WXE_EXTERN WXEGLUNIFORM1FV weglUniform1fv;
void ecb_glUniform1fv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM2FV)(GLint,GLsizei,const GLfloat *);
WXE_EXTERN WXEGLUNIFORM2FV weglUniform2fv;
void ecb_glUniform2fv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM3FV)(GLint,GLsizei,const GLfloat *);
WXE_EXTERN WXEGLUNIFORM3FV weglUniform3fv;
void ecb_glUniform3fv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM4FV)(GLint,GLsizei,const GLfloat *);
WXE_EXTERN WXEGLUNIFORM4FV weglUniform4fv;
void ecb_glUniform4fv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM1IV)(GLint,GLsizei,const GLint *);
WXE_EXTERN WXEGLUNIFORM1IV weglUniform1iv;
void ecb_glUniform1iv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM2IV)(GLint,GLsizei,const GLint *);
WXE_EXTERN WXEGLUNIFORM2IV weglUniform2iv;
void ecb_glUniform2iv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM3IV)(GLint,GLsizei,const GLint *);
WXE_EXTERN WXEGLUNIFORM3IV weglUniform3iv;
void ecb_glUniform3iv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM4IV)(GLint,GLsizei,const GLint *);
WXE_EXTERN WXEGLUNIFORM4IV weglUniform4iv;
void ecb_glUniform4iv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORMMATRIX2FV)(GLint,GLsizei,GLboolean,const GLfloat *);
WXE_EXTERN WXEGLUNIFORMMATRIX2FV weglUniformMatrix2fv;
void ecb_glUniformMatrix2fv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORMMATRIX3FV)(GLint,GLsizei,GLboolean,const GLfloat *);
WXE_EXTERN WXEGLUNIFORMMATRIX3FV weglUniformMatrix3fv;
void ecb_glUniformMatrix3fv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORMMATRIX4FV)(GLint,GLsizei,GLboolean,const GLfloat *);
WXE_EXTERN WXEGLUNIFORMMATRIX4FV weglUniformMatrix4fv;
void ecb_glUniformMatrix4fv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVALIDATEPROGRAM)(GLuint);
WXE_EXTERN WXEGLVALIDATEPROGRAM weglValidateProgram;
void ecb_glValidateProgram(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIB1D)(GLuint,GLdouble);
WXE_EXTERN WXEGLVERTEXATTRIB1D weglVertexAttrib1d;
void ecb_glVertexAttrib1d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIB1F)(GLuint,GLfloat);
WXE_EXTERN WXEGLVERTEXATTRIB1F weglVertexAttrib1f;
void ecb_glVertexAttrib1f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIB1S)(GLuint,GLshort);
WXE_EXTERN WXEGLVERTEXATTRIB1S weglVertexAttrib1s;
void ecb_glVertexAttrib1s(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIB2D)(GLuint,GLdouble,GLdouble);
WXE_EXTERN WXEGLVERTEXATTRIB2D weglVertexAttrib2d;
void ecb_glVertexAttrib2d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIB2F)(GLuint,GLfloat,GLfloat);
WXE_EXTERN WXEGLVERTEXATTRIB2F weglVertexAttrib2f;
void ecb_glVertexAttrib2f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIB2S)(GLuint,GLshort,GLshort);
WXE_EXTERN WXEGLVERTEXATTRIB2S weglVertexAttrib2s;
void ecb_glVertexAttrib2s(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIB3D)(GLuint,GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLVERTEXATTRIB3D weglVertexAttrib3d;
void ecb_glVertexAttrib3d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIB3F)(GLuint,GLfloat,GLfloat,GLfloat);
WXE_EXTERN WXEGLVERTEXATTRIB3F weglVertexAttrib3f;
void ecb_glVertexAttrib3f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIB3S)(GLuint,GLshort,GLshort,GLshort);
WXE_EXTERN WXEGLVERTEXATTRIB3S weglVertexAttrib3s;
void ecb_glVertexAttrib3s(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIB4NBV)(GLuint,const GLbyte *);
WXE_EXTERN WXEGLVERTEXATTRIB4NBV weglVertexAttrib4Nbv;
void ecb_glVertexAttrib4Nbv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIB4NIV)(GLuint,const GLint *);
WXE_EXTERN WXEGLVERTEXATTRIB4NIV weglVertexAttrib4Niv;
void ecb_glVertexAttrib4Niv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIB4NSV)(GLuint,const GLshort *);
WXE_EXTERN WXEGLVERTEXATTRIB4NSV weglVertexAttrib4Nsv;
void ecb_glVertexAttrib4Nsv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIB4NUB)(GLuint,GLubyte,GLubyte,GLubyte,GLubyte);
WXE_EXTERN WXEGLVERTEXATTRIB4NUB weglVertexAttrib4Nub;
void ecb_glVertexAttrib4Nub(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIB4NUIV)(GLuint,const GLuint *);
WXE_EXTERN WXEGLVERTEXATTRIB4NUIV weglVertexAttrib4Nuiv;
void ecb_glVertexAttrib4Nuiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIB4NUSV)(GLuint,const GLushort *);
WXE_EXTERN WXEGLVERTEXATTRIB4NUSV weglVertexAttrib4Nusv;
void ecb_glVertexAttrib4Nusv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIB4BV)(GLuint,const GLbyte *);
WXE_EXTERN WXEGLVERTEXATTRIB4BV weglVertexAttrib4bv;
void ecb_glVertexAttrib4bv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIB4D)(GLuint,GLdouble,GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLVERTEXATTRIB4D weglVertexAttrib4d;
void ecb_glVertexAttrib4d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIB4F)(GLuint,GLfloat,GLfloat,GLfloat,GLfloat);
WXE_EXTERN WXEGLVERTEXATTRIB4F weglVertexAttrib4f;
void ecb_glVertexAttrib4f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIB4IV)(GLuint,const GLint *);
WXE_EXTERN WXEGLVERTEXATTRIB4IV weglVertexAttrib4iv;
void ecb_glVertexAttrib4iv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIB4S)(GLuint,GLshort,GLshort,GLshort,GLshort);
WXE_EXTERN WXEGLVERTEXATTRIB4S weglVertexAttrib4s;
void ecb_glVertexAttrib4s(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIB4UBV)(GLuint,const GLubyte *);
WXE_EXTERN WXEGLVERTEXATTRIB4UBV weglVertexAttrib4ubv;
void ecb_glVertexAttrib4ubv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIB4UIV)(GLuint,const GLuint *);
WXE_EXTERN WXEGLVERTEXATTRIB4UIV weglVertexAttrib4uiv;
void ecb_glVertexAttrib4uiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIB4USV)(GLuint,const GLushort *);
WXE_EXTERN WXEGLVERTEXATTRIB4USV weglVertexAttrib4usv;
void ecb_glVertexAttrib4usv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIBPOINTER)(GLuint,GLint,GLenum,GLboolean,GLsizei,const void *);
WXE_EXTERN WXEGLVERTEXATTRIBPOINTER weglVertexAttribPointer;
void ecb_glVertexAttribPointer(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORMMATRIX2X3FV)(GLint,GLsizei,GLboolean,const GLfloat *);
WXE_EXTERN WXEGLUNIFORMMATRIX2X3FV weglUniformMatrix2x3fv;
void ecb_glUniformMatrix2x3fv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORMMATRIX3X2FV)(GLint,GLsizei,GLboolean,const GLfloat *);
WXE_EXTERN WXEGLUNIFORMMATRIX3X2FV weglUniformMatrix3x2fv;
void ecb_glUniformMatrix3x2fv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORMMATRIX2X4FV)(GLint,GLsizei,GLboolean,const GLfloat *);
WXE_EXTERN WXEGLUNIFORMMATRIX2X4FV weglUniformMatrix2x4fv;
void ecb_glUniformMatrix2x4fv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORMMATRIX4X2FV)(GLint,GLsizei,GLboolean,const GLfloat *);
WXE_EXTERN WXEGLUNIFORMMATRIX4X2FV weglUniformMatrix4x2fv;
void ecb_glUniformMatrix4x2fv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORMMATRIX3X4FV)(GLint,GLsizei,GLboolean,const GLfloat *);
WXE_EXTERN WXEGLUNIFORMMATRIX3X4FV weglUniformMatrix3x4fv;
void ecb_glUniformMatrix3x4fv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORMMATRIX4X3FV)(GLint,GLsizei,GLboolean,const GLfloat *);
WXE_EXTERN WXEGLUNIFORMMATRIX4X3FV weglUniformMatrix4x3fv;
void ecb_glUniformMatrix4x3fv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOLORMASKI)(GLuint,GLboolean,GLboolean,GLboolean,GLboolean);
WXE_EXTERN WXEGLCOLORMASKI weglColorMaski;
void ecb_glColorMaski(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETBOOLEANI_V)(GLenum,GLuint,GLboolean *);
WXE_EXTERN WXEGLGETBOOLEANI_V weglGetBooleani_v;
void ecb_glGetBooleani_v(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETINTEGERI_V)(GLenum,GLuint,GLint *);
WXE_EXTERN WXEGLGETINTEGERI_V weglGetIntegeri_v;
void ecb_glGetIntegeri_v(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLENABLEI)(GLenum,GLuint);
WXE_EXTERN WXEGLENABLEI weglEnablei;
void ecb_glEnablei(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDISABLEI)(GLenum,GLuint);
WXE_EXTERN WXEGLDISABLEI weglDisablei;
void ecb_glDisablei(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLboolean (APIENTRY * WXEGLISENABLEDI)(GLenum,GLuint);
WXE_EXTERN WXEGLISENABLEDI weglIsEnabledi;
void ecb_glIsEnabledi(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBEGINTRANSFORMFEEDBACK)(GLenum);
WXE_EXTERN WXEGLBEGINTRANSFORMFEEDBACK weglBeginTransformFeedback;
void ecb_glBeginTransformFeedback(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLENDTRANSFORMFEEDBACK)();
WXE_EXTERN WXEGLENDTRANSFORMFEEDBACK weglEndTransformFeedback;
void ecb_glEndTransformFeedback(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBINDBUFFERRANGE)(GLenum,GLuint,GLuint,GLintptr,GLsizeiptr);
WXE_EXTERN WXEGLBINDBUFFERRANGE weglBindBufferRange;
void ecb_glBindBufferRange(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBINDBUFFERBASE)(GLenum,GLuint,GLuint);
WXE_EXTERN WXEGLBINDBUFFERBASE weglBindBufferBase;
void ecb_glBindBufferBase(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTRANSFORMFEEDBACKVARYINGS)(GLuint,GLsizei,const GLchar **,GLenum);
WXE_EXTERN WXEGLTRANSFORMFEEDBACKVARYINGS weglTransformFeedbackVaryings;
void ecb_glTransformFeedbackVaryings(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETTRANSFORMFEEDBACKVARYING)(GLuint,GLuint,GLsizei,GLsizei *,GLsizei *,GLenum *,GLchar *);
WXE_EXTERN WXEGLGETTRANSFORMFEEDBACKVARYING weglGetTransformFeedbackVarying;
void ecb_glGetTransformFeedbackVarying(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCLAMPCOLOR)(GLenum,GLenum);
WXE_EXTERN WXEGLCLAMPCOLOR weglClampColor;
void ecb_glClampColor(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBEGINCONDITIONALRENDER)(GLuint,GLenum);
WXE_EXTERN WXEGLBEGINCONDITIONALRENDER weglBeginConditionalRender;
void ecb_glBeginConditionalRender(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLENDCONDITIONALRENDER)();
WXE_EXTERN WXEGLENDCONDITIONALRENDER weglEndConditionalRender;
void ecb_glEndConditionalRender(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIBIPOINTER)(GLuint,GLint,GLenum,GLsizei,const void *);
WXE_EXTERN WXEGLVERTEXATTRIBIPOINTER weglVertexAttribIPointer;
void ecb_glVertexAttribIPointer(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETVERTEXATTRIBIIV)(GLuint,GLenum,GLint *);
WXE_EXTERN WXEGLGETVERTEXATTRIBIIV weglGetVertexAttribIiv;
void ecb_glGetVertexAttribIiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETVERTEXATTRIBIUIV)(GLuint,GLenum,GLuint *);
WXE_EXTERN WXEGLGETVERTEXATTRIBIUIV weglGetVertexAttribIuiv;
void ecb_glGetVertexAttribIuiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIBI1I)(GLuint,GLint);
WXE_EXTERN WXEGLVERTEXATTRIBI1I weglVertexAttribI1i;
void ecb_glVertexAttribI1i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIBI2I)(GLuint,GLint,GLint);
WXE_EXTERN WXEGLVERTEXATTRIBI2I weglVertexAttribI2i;
void ecb_glVertexAttribI2i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIBI3I)(GLuint,GLint,GLint,GLint);
WXE_EXTERN WXEGLVERTEXATTRIBI3I weglVertexAttribI3i;
void ecb_glVertexAttribI3i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIBI4I)(GLuint,GLint,GLint,GLint,GLint);
WXE_EXTERN WXEGLVERTEXATTRIBI4I weglVertexAttribI4i;
void ecb_glVertexAttribI4i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIBI1UI)(GLuint,GLuint);
WXE_EXTERN WXEGLVERTEXATTRIBI1UI weglVertexAttribI1ui;
void ecb_glVertexAttribI1ui(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIBI2UI)(GLuint,GLuint,GLuint);
WXE_EXTERN WXEGLVERTEXATTRIBI2UI weglVertexAttribI2ui;
void ecb_glVertexAttribI2ui(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIBI3UI)(GLuint,GLuint,GLuint,GLuint);
WXE_EXTERN WXEGLVERTEXATTRIBI3UI weglVertexAttribI3ui;
void ecb_glVertexAttribI3ui(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIBI4UI)(GLuint,GLuint,GLuint,GLuint,GLuint);
WXE_EXTERN WXEGLVERTEXATTRIBI4UI weglVertexAttribI4ui;
void ecb_glVertexAttribI4ui(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIBI4BV)(GLuint,const GLbyte *);
WXE_EXTERN WXEGLVERTEXATTRIBI4BV weglVertexAttribI4bv;
void ecb_glVertexAttribI4bv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIBI4SV)(GLuint,const GLshort *);
WXE_EXTERN WXEGLVERTEXATTRIBI4SV weglVertexAttribI4sv;
void ecb_glVertexAttribI4sv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIBI4UBV)(GLuint,const GLubyte *);
WXE_EXTERN WXEGLVERTEXATTRIBI4UBV weglVertexAttribI4ubv;
void ecb_glVertexAttribI4ubv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIBI4USV)(GLuint,const GLushort *);
WXE_EXTERN WXEGLVERTEXATTRIBI4USV weglVertexAttribI4usv;
void ecb_glVertexAttribI4usv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETUNIFORMUIV)(GLuint,GLint,GLuint *);
WXE_EXTERN WXEGLGETUNIFORMUIV weglGetUniformuiv;
void ecb_glGetUniformuiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBINDFRAGDATALOCATION)(GLuint,GLuint,const GLchar *);
WXE_EXTERN WXEGLBINDFRAGDATALOCATION weglBindFragDataLocation;
void ecb_glBindFragDataLocation(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLint (APIENTRY * WXEGLGETFRAGDATALOCATION)(GLuint,const GLchar *);
WXE_EXTERN WXEGLGETFRAGDATALOCATION weglGetFragDataLocation;
void ecb_glGetFragDataLocation(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM1UI)(GLint,GLuint);
WXE_EXTERN WXEGLUNIFORM1UI weglUniform1ui;
void ecb_glUniform1ui(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM2UI)(GLint,GLuint,GLuint);
WXE_EXTERN WXEGLUNIFORM2UI weglUniform2ui;
void ecb_glUniform2ui(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM3UI)(GLint,GLuint,GLuint,GLuint);
WXE_EXTERN WXEGLUNIFORM3UI weglUniform3ui;
void ecb_glUniform3ui(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM4UI)(GLint,GLuint,GLuint,GLuint,GLuint);
WXE_EXTERN WXEGLUNIFORM4UI weglUniform4ui;
void ecb_glUniform4ui(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM1UIV)(GLint,GLsizei,const GLuint *);
WXE_EXTERN WXEGLUNIFORM1UIV weglUniform1uiv;
void ecb_glUniform1uiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM2UIV)(GLint,GLsizei,const GLuint *);
WXE_EXTERN WXEGLUNIFORM2UIV weglUniform2uiv;
void ecb_glUniform2uiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM3UIV)(GLint,GLsizei,const GLuint *);
WXE_EXTERN WXEGLUNIFORM3UIV weglUniform3uiv;
void ecb_glUniform3uiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM4UIV)(GLint,GLsizei,const GLuint *);
WXE_EXTERN WXEGLUNIFORM4UIV weglUniform4uiv;
void ecb_glUniform4uiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXPARAMETERIIV)(GLenum,GLenum,const GLint *);
WXE_EXTERN WXEGLTEXPARAMETERIIV weglTexParameterIiv;
void ecb_glTexParameterIiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXPARAMETERIUIV)(GLenum,GLenum,const GLuint *);
WXE_EXTERN WXEGLTEXPARAMETERIUIV weglTexParameterIuiv;
void ecb_glTexParameterIuiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETTEXPARAMETERIIV)(GLenum,GLenum,GLint *);
WXE_EXTERN WXEGLGETTEXPARAMETERIIV weglGetTexParameterIiv;
void ecb_glGetTexParameterIiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETTEXPARAMETERIUIV)(GLenum,GLenum,GLuint *);
WXE_EXTERN WXEGLGETTEXPARAMETERIUIV weglGetTexParameterIuiv;
void ecb_glGetTexParameterIuiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCLEARBUFFERIV)(GLenum,GLint,const GLint *);
WXE_EXTERN WXEGLCLEARBUFFERIV weglClearBufferiv;
void ecb_glClearBufferiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCLEARBUFFERUIV)(GLenum,GLint,const GLuint *);
WXE_EXTERN WXEGLCLEARBUFFERUIV weglClearBufferuiv;
void ecb_glClearBufferuiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCLEARBUFFERFV)(GLenum,GLint,const GLfloat *);
WXE_EXTERN WXEGLCLEARBUFFERFV weglClearBufferfv;
void ecb_glClearBufferfv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCLEARBUFFERFI)(GLenum,GLint,GLfloat,GLint);
WXE_EXTERN WXEGLCLEARBUFFERFI weglClearBufferfi;
void ecb_glClearBufferfi(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef const GLubyte * (APIENTRY * WXEGLGETSTRINGI)(GLenum,GLuint);
WXE_EXTERN WXEGLGETSTRINGI weglGetStringi;
void ecb_glGetStringi(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLboolean (APIENTRY * WXEGLISRENDERBUFFER)(GLuint);
WXE_EXTERN WXEGLISRENDERBUFFER weglIsRenderbuffer;
void ecb_glIsRenderbuffer(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBINDRENDERBUFFER)(GLenum,GLuint);
WXE_EXTERN WXEGLBINDRENDERBUFFER weglBindRenderbuffer;
void ecb_glBindRenderbuffer(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDELETERENDERBUFFERS)(GLsizei,const GLuint *);
WXE_EXTERN WXEGLDELETERENDERBUFFERS weglDeleteRenderbuffers;
void ecb_glDeleteRenderbuffers(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGENRENDERBUFFERS)(GLsizei,GLuint *);
WXE_EXTERN WXEGLGENRENDERBUFFERS weglGenRenderbuffers;
void ecb_glGenRenderbuffers(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLRENDERBUFFERSTORAGE)(GLenum,GLenum,GLsizei,GLsizei);
WXE_EXTERN WXEGLRENDERBUFFERSTORAGE weglRenderbufferStorage;
void ecb_glRenderbufferStorage(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETRENDERBUFFERPARAMETERIV)(GLenum,GLenum,GLint *);
WXE_EXTERN WXEGLGETRENDERBUFFERPARAMETERIV weglGetRenderbufferParameteriv;
void ecb_glGetRenderbufferParameteriv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLboolean (APIENTRY * WXEGLISFRAMEBUFFER)(GLuint);
WXE_EXTERN WXEGLISFRAMEBUFFER weglIsFramebuffer;
void ecb_glIsFramebuffer(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBINDFRAMEBUFFER)(GLenum,GLuint);
WXE_EXTERN WXEGLBINDFRAMEBUFFER weglBindFramebuffer;
void ecb_glBindFramebuffer(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDELETEFRAMEBUFFERS)(GLsizei,const GLuint *);
WXE_EXTERN WXEGLDELETEFRAMEBUFFERS weglDeleteFramebuffers;
void ecb_glDeleteFramebuffers(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGENFRAMEBUFFERS)(GLsizei,GLuint *);
WXE_EXTERN WXEGLGENFRAMEBUFFERS weglGenFramebuffers;
void ecb_glGenFramebuffers(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLenum (APIENTRY * WXEGLCHECKFRAMEBUFFERSTATUS)(GLenum);
WXE_EXTERN WXEGLCHECKFRAMEBUFFERSTATUS weglCheckFramebufferStatus;
void ecb_glCheckFramebufferStatus(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLFRAMEBUFFERTEXTURE1D)(GLenum,GLenum,GLenum,GLuint,GLint);
WXE_EXTERN WXEGLFRAMEBUFFERTEXTURE1D weglFramebufferTexture1D;
void ecb_glFramebufferTexture1D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLFRAMEBUFFERTEXTURE2D)(GLenum,GLenum,GLenum,GLuint,GLint);
WXE_EXTERN WXEGLFRAMEBUFFERTEXTURE2D weglFramebufferTexture2D;
void ecb_glFramebufferTexture2D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLFRAMEBUFFERTEXTURE3D)(GLenum,GLenum,GLenum,GLuint,GLint,GLint);
WXE_EXTERN WXEGLFRAMEBUFFERTEXTURE3D weglFramebufferTexture3D;
void ecb_glFramebufferTexture3D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLFRAMEBUFFERRENDERBUFFER)(GLenum,GLenum,GLenum,GLuint);
WXE_EXTERN WXEGLFRAMEBUFFERRENDERBUFFER weglFramebufferRenderbuffer;
void ecb_glFramebufferRenderbuffer(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETFRAMEBUFFERATTACHMENTPARAMETERIV)(GLenum,GLenum,GLenum,GLint *);
WXE_EXTERN WXEGLGETFRAMEBUFFERATTACHMENTPARAMETERIV weglGetFramebufferAttachmentParameteriv;
void ecb_glGetFramebufferAttachmentParameteriv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGENERATEMIPMAP)(GLenum);
WXE_EXTERN WXEGLGENERATEMIPMAP weglGenerateMipmap;
void ecb_glGenerateMipmap(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBLITFRAMEBUFFER)(GLint,GLint,GLint,GLint,GLint,GLint,GLint,GLint,GLbitfield,GLenum);
WXE_EXTERN WXEGLBLITFRAMEBUFFER weglBlitFramebuffer;
void ecb_glBlitFramebuffer(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLRENDERBUFFERSTORAGEMULTISAMPLE)(GLenum,GLsizei,GLenum,GLsizei,GLsizei);
WXE_EXTERN WXEGLRENDERBUFFERSTORAGEMULTISAMPLE weglRenderbufferStorageMultisample;
void ecb_glRenderbufferStorageMultisample(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLFRAMEBUFFERTEXTURELAYER)(GLenum,GLenum,GLuint,GLint,GLint);
WXE_EXTERN WXEGLFRAMEBUFFERTEXTURELAYER weglFramebufferTextureLayer;
void ecb_glFramebufferTextureLayer(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLFLUSHMAPPEDBUFFERRANGE)(GLenum,GLintptr,GLsizeiptr);
WXE_EXTERN WXEGLFLUSHMAPPEDBUFFERRANGE weglFlushMappedBufferRange;
void ecb_glFlushMappedBufferRange(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBINDVERTEXARRAY)(GLuint);
WXE_EXTERN WXEGLBINDVERTEXARRAY weglBindVertexArray;
void ecb_glBindVertexArray(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDELETEVERTEXARRAYS)(GLsizei,const GLuint *);
WXE_EXTERN WXEGLDELETEVERTEXARRAYS weglDeleteVertexArrays;
void ecb_glDeleteVertexArrays(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGENVERTEXARRAYS)(GLsizei,GLuint *);
WXE_EXTERN WXEGLGENVERTEXARRAYS weglGenVertexArrays;
void ecb_glGenVertexArrays(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLboolean (APIENTRY * WXEGLISVERTEXARRAY)(GLuint);
WXE_EXTERN WXEGLISVERTEXARRAY weglIsVertexArray;
void ecb_glIsVertexArray(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDRAWARRAYSINSTANCED)(GLenum,GLint,GLsizei,GLsizei);
WXE_EXTERN WXEGLDRAWARRAYSINSTANCED weglDrawArraysInstanced;
void ecb_glDrawArraysInstanced(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDRAWELEMENTSINSTANCED)(GLenum,GLsizei,GLenum,const void *,GLsizei);
WXE_EXTERN WXEGLDRAWELEMENTSINSTANCED weglDrawElementsInstanced;
void ecb_glDrawElementsInstanced(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXBUFFER)(GLenum,GLenum,GLuint);
WXE_EXTERN WXEGLTEXBUFFER weglTexBuffer;
void ecb_glTexBuffer(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPRIMITIVERESTARTINDEX)(GLuint);
WXE_EXTERN WXEGLPRIMITIVERESTARTINDEX weglPrimitiveRestartIndex;
void ecb_glPrimitiveRestartIndex(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOPYBUFFERSUBDATA)(GLenum,GLenum,GLintptr,GLintptr,GLsizeiptr);
WXE_EXTERN WXEGLCOPYBUFFERSUBDATA weglCopyBufferSubData;
void ecb_glCopyBufferSubData(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETUNIFORMINDICES)(GLuint,GLsizei,const GLchar **,GLuint *);
WXE_EXTERN WXEGLGETUNIFORMINDICES weglGetUniformIndices;
void ecb_glGetUniformIndices(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETACTIVEUNIFORMSIV)(GLuint,GLsizei,const GLuint *,GLenum,GLint *);
WXE_EXTERN WXEGLGETACTIVEUNIFORMSIV weglGetActiveUniformsiv;
void ecb_glGetActiveUniformsiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETACTIVEUNIFORMNAME)(GLuint,GLuint,GLsizei,GLsizei *,GLchar *);
WXE_EXTERN WXEGLGETACTIVEUNIFORMNAME weglGetActiveUniformName;
void ecb_glGetActiveUniformName(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLuint (APIENTRY * WXEGLGETUNIFORMBLOCKINDEX)(GLuint,const GLchar *);
WXE_EXTERN WXEGLGETUNIFORMBLOCKINDEX weglGetUniformBlockIndex;
void ecb_glGetUniformBlockIndex(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETACTIVEUNIFORMBLOCKIV)(GLuint,GLuint,GLenum,GLint *);
WXE_EXTERN WXEGLGETACTIVEUNIFORMBLOCKIV weglGetActiveUniformBlockiv;
void ecb_glGetActiveUniformBlockiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETACTIVEUNIFORMBLOCKNAME)(GLuint,GLuint,GLsizei,GLsizei *,GLchar *);
WXE_EXTERN WXEGLGETACTIVEUNIFORMBLOCKNAME weglGetActiveUniformBlockName;
void ecb_glGetActiveUniformBlockName(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORMBLOCKBINDING)(GLuint,GLuint,GLuint);
WXE_EXTERN WXEGLUNIFORMBLOCKBINDING weglUniformBlockBinding;
void ecb_glUniformBlockBinding(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDRAWELEMENTSBASEVERTEX)(GLenum,GLsizei,GLenum,const void *,GLint);
WXE_EXTERN WXEGLDRAWELEMENTSBASEVERTEX weglDrawElementsBaseVertex;
void ecb_glDrawElementsBaseVertex(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDRAWRANGEELEMENTSBASEVERTEX)(GLenum,GLuint,GLuint,GLsizei,GLenum,const void *,GLint);
WXE_EXTERN WXEGLDRAWRANGEELEMENTSBASEVERTEX weglDrawRangeElementsBaseVertex;
void ecb_glDrawRangeElementsBaseVertex(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDRAWELEMENTSINSTANCEDBASEVERTEX)(GLenum,GLsizei,GLenum,const void *,GLsizei,GLint);
WXE_EXTERN WXEGLDRAWELEMENTSINSTANCEDBASEVERTEX weglDrawElementsInstancedBaseVertex;
void ecb_glDrawElementsInstancedBaseVertex(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROVOKINGVERTEX)(GLenum);
WXE_EXTERN WXEGLPROVOKINGVERTEX weglProvokingVertex;
void ecb_glProvokingVertex(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLsync (APIENTRY * WXEGLFENCESYNC)(GLenum,GLbitfield);
WXE_EXTERN WXEGLFENCESYNC weglFenceSync;
void ecb_glFenceSync(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLboolean (APIENTRY * WXEGLISSYNC)(GLsync);
WXE_EXTERN WXEGLISSYNC weglIsSync;
void ecb_glIsSync(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDELETESYNC)(GLsync);
WXE_EXTERN WXEGLDELETESYNC weglDeleteSync;
void ecb_glDeleteSync(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLenum (APIENTRY * WXEGLCLIENTWAITSYNC)(GLsync,GLbitfield,GLuint64);
WXE_EXTERN WXEGLCLIENTWAITSYNC weglClientWaitSync;
void ecb_glClientWaitSync(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLWAITSYNC)(GLsync,GLbitfield,GLuint64);
WXE_EXTERN WXEGLWAITSYNC weglWaitSync;
void ecb_glWaitSync(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETINTEGER64V)(GLenum,GLint64 *);
WXE_EXTERN WXEGLGETINTEGER64V weglGetInteger64v;
void ecb_glGetInteger64v(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETSYNCIV)(GLsync,GLenum,GLsizei,GLsizei *,GLint *);
WXE_EXTERN WXEGLGETSYNCIV weglGetSynciv;
void ecb_glGetSynciv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETINTEGER64I_V)(GLenum,GLuint,GLint64 *);
WXE_EXTERN WXEGLGETINTEGER64I_V weglGetInteger64i_v;
void ecb_glGetInteger64i_v(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETBUFFERPARAMETERI64V)(GLenum,GLenum,GLint64 *);
WXE_EXTERN WXEGLGETBUFFERPARAMETERI64V weglGetBufferParameteri64v;
void ecb_glGetBufferParameteri64v(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLFRAMEBUFFERTEXTURE)(GLenum,GLenum,GLuint,GLint);
WXE_EXTERN WXEGLFRAMEBUFFERTEXTURE weglFramebufferTexture;
void ecb_glFramebufferTexture(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXIMAGE2DMULTISAMPLE)(GLenum,GLsizei,GLenum,GLsizei,GLsizei,GLboolean);
WXE_EXTERN WXEGLTEXIMAGE2DMULTISAMPLE weglTexImage2DMultisample;
void ecb_glTexImage2DMultisample(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXIMAGE3DMULTISAMPLE)(GLenum,GLsizei,GLenum,GLsizei,GLsizei,GLsizei,GLboolean);
WXE_EXTERN WXEGLTEXIMAGE3DMULTISAMPLE weglTexImage3DMultisample;
void ecb_glTexImage3DMultisample(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETMULTISAMPLEFV)(GLenum,GLuint,GLfloat *);
WXE_EXTERN WXEGLGETMULTISAMPLEFV weglGetMultisamplefv;
void ecb_glGetMultisamplefv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSAMPLEMASKI)(GLuint,GLbitfield);
WXE_EXTERN WXEGLSAMPLEMASKI weglSampleMaski;
void ecb_glSampleMaski(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBINDFRAGDATALOCATIONINDEXED)(GLuint,GLuint,GLuint,const GLchar *);
WXE_EXTERN WXEGLBINDFRAGDATALOCATIONINDEXED weglBindFragDataLocationIndexed;
void ecb_glBindFragDataLocationIndexed(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLint (APIENTRY * WXEGLGETFRAGDATAINDEX)(GLuint,const GLchar *);
WXE_EXTERN WXEGLGETFRAGDATAINDEX weglGetFragDataIndex;
void ecb_glGetFragDataIndex(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGENSAMPLERS)(GLsizei,GLuint *);
WXE_EXTERN WXEGLGENSAMPLERS weglGenSamplers;
void ecb_glGenSamplers(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDELETESAMPLERS)(GLsizei,const GLuint *);
WXE_EXTERN WXEGLDELETESAMPLERS weglDeleteSamplers;
void ecb_glDeleteSamplers(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLboolean (APIENTRY * WXEGLISSAMPLER)(GLuint);
WXE_EXTERN WXEGLISSAMPLER weglIsSampler;
void ecb_glIsSampler(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBINDSAMPLER)(GLuint,GLuint);
WXE_EXTERN WXEGLBINDSAMPLER weglBindSampler;
void ecb_glBindSampler(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSAMPLERPARAMETERI)(GLuint,GLenum,GLint);
WXE_EXTERN WXEGLSAMPLERPARAMETERI weglSamplerParameteri;
void ecb_glSamplerParameteri(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSAMPLERPARAMETERIV)(GLuint,GLenum,const GLint *);
WXE_EXTERN WXEGLSAMPLERPARAMETERIV weglSamplerParameteriv;
void ecb_glSamplerParameteriv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSAMPLERPARAMETERF)(GLuint,GLenum,GLfloat);
WXE_EXTERN WXEGLSAMPLERPARAMETERF weglSamplerParameterf;
void ecb_glSamplerParameterf(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSAMPLERPARAMETERFV)(GLuint,GLenum,const GLfloat *);
WXE_EXTERN WXEGLSAMPLERPARAMETERFV weglSamplerParameterfv;
void ecb_glSamplerParameterfv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSAMPLERPARAMETERIIV)(GLuint,GLenum,const GLint *);
WXE_EXTERN WXEGLSAMPLERPARAMETERIIV weglSamplerParameterIiv;
void ecb_glSamplerParameterIiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSAMPLERPARAMETERIUIV)(GLuint,GLenum,const GLuint *);
WXE_EXTERN WXEGLSAMPLERPARAMETERIUIV weglSamplerParameterIuiv;
void ecb_glSamplerParameterIuiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETSAMPLERPARAMETERIV)(GLuint,GLenum,GLint *);
WXE_EXTERN WXEGLGETSAMPLERPARAMETERIV weglGetSamplerParameteriv;
void ecb_glGetSamplerParameteriv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETSAMPLERPARAMETERIIV)(GLuint,GLenum,GLint *);
WXE_EXTERN WXEGLGETSAMPLERPARAMETERIIV weglGetSamplerParameterIiv;
void ecb_glGetSamplerParameterIiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETSAMPLERPARAMETERFV)(GLuint,GLenum,GLfloat *);
WXE_EXTERN WXEGLGETSAMPLERPARAMETERFV weglGetSamplerParameterfv;
void ecb_glGetSamplerParameterfv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETSAMPLERPARAMETERIUIV)(GLuint,GLenum,GLuint *);
WXE_EXTERN WXEGLGETSAMPLERPARAMETERIUIV weglGetSamplerParameterIuiv;
void ecb_glGetSamplerParameterIuiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLQUERYCOUNTER)(GLuint,GLenum);
WXE_EXTERN WXEGLQUERYCOUNTER weglQueryCounter;
void ecb_glQueryCounter(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETQUERYOBJECTI64V)(GLuint,GLenum,GLint64 *);
WXE_EXTERN WXEGLGETQUERYOBJECTI64V weglGetQueryObjecti64v;
void ecb_glGetQueryObjecti64v(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETQUERYOBJECTUI64V)(GLuint,GLenum,GLuint64 *);
WXE_EXTERN WXEGLGETQUERYOBJECTUI64V weglGetQueryObjectui64v;
void ecb_glGetQueryObjectui64v(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIBDIVISOR)(GLuint,GLuint);
WXE_EXTERN WXEGLVERTEXATTRIBDIVISOR weglVertexAttribDivisor;
void ecb_glVertexAttribDivisor(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMINSAMPLESHADING)(GLfloat);
WXE_EXTERN WXEGLMINSAMPLESHADING weglMinSampleShading;
void ecb_glMinSampleShading(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBLENDEQUATIONI)(GLuint,GLenum);
WXE_EXTERN WXEGLBLENDEQUATIONI weglBlendEquationi;
void ecb_glBlendEquationi(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBLENDEQUATIONSEPARATEI)(GLuint,GLenum,GLenum);
WXE_EXTERN WXEGLBLENDEQUATIONSEPARATEI weglBlendEquationSeparatei;
void ecb_glBlendEquationSeparatei(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBLENDFUNCI)(GLuint,GLenum,GLenum);
WXE_EXTERN WXEGLBLENDFUNCI weglBlendFunci;
void ecb_glBlendFunci(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBLENDFUNCSEPARATEI)(GLuint,GLenum,GLenum,GLenum,GLenum);
WXE_EXTERN WXEGLBLENDFUNCSEPARATEI weglBlendFuncSeparatei;
void ecb_glBlendFuncSeparatei(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDRAWARRAYSINDIRECT)(GLenum,const void *);
WXE_EXTERN WXEGLDRAWARRAYSINDIRECT weglDrawArraysIndirect;
void ecb_glDrawArraysIndirect(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDRAWELEMENTSINDIRECT)(GLenum,GLenum,const void *);
WXE_EXTERN WXEGLDRAWELEMENTSINDIRECT weglDrawElementsIndirect;
void ecb_glDrawElementsIndirect(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM1D)(GLint,GLdouble);
WXE_EXTERN WXEGLUNIFORM1D weglUniform1d;
void ecb_glUniform1d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM2D)(GLint,GLdouble,GLdouble);
WXE_EXTERN WXEGLUNIFORM2D weglUniform2d;
void ecb_glUniform2d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM3D)(GLint,GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLUNIFORM3D weglUniform3d;
void ecb_glUniform3d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM4D)(GLint,GLdouble,GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLUNIFORM4D weglUniform4d;
void ecb_glUniform4d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM1DV)(GLint,GLsizei,const GLdouble *);
WXE_EXTERN WXEGLUNIFORM1DV weglUniform1dv;
void ecb_glUniform1dv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM2DV)(GLint,GLsizei,const GLdouble *);
WXE_EXTERN WXEGLUNIFORM2DV weglUniform2dv;
void ecb_glUniform2dv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM3DV)(GLint,GLsizei,const GLdouble *);
WXE_EXTERN WXEGLUNIFORM3DV weglUniform3dv;
void ecb_glUniform3dv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM4DV)(GLint,GLsizei,const GLdouble *);
WXE_EXTERN WXEGLUNIFORM4DV weglUniform4dv;
void ecb_glUniform4dv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORMMATRIX2DV)(GLint,GLsizei,GLboolean,const GLdouble *);
WXE_EXTERN WXEGLUNIFORMMATRIX2DV weglUniformMatrix2dv;
void ecb_glUniformMatrix2dv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORMMATRIX3DV)(GLint,GLsizei,GLboolean,const GLdouble *);
WXE_EXTERN WXEGLUNIFORMMATRIX3DV weglUniformMatrix3dv;
void ecb_glUniformMatrix3dv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORMMATRIX4DV)(GLint,GLsizei,GLboolean,const GLdouble *);
WXE_EXTERN WXEGLUNIFORMMATRIX4DV weglUniformMatrix4dv;
void ecb_glUniformMatrix4dv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORMMATRIX2X3DV)(GLint,GLsizei,GLboolean,const GLdouble *);
WXE_EXTERN WXEGLUNIFORMMATRIX2X3DV weglUniformMatrix2x3dv;
void ecb_glUniformMatrix2x3dv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORMMATRIX2X4DV)(GLint,GLsizei,GLboolean,const GLdouble *);
WXE_EXTERN WXEGLUNIFORMMATRIX2X4DV weglUniformMatrix2x4dv;
void ecb_glUniformMatrix2x4dv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORMMATRIX3X2DV)(GLint,GLsizei,GLboolean,const GLdouble *);
WXE_EXTERN WXEGLUNIFORMMATRIX3X2DV weglUniformMatrix3x2dv;
void ecb_glUniformMatrix3x2dv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORMMATRIX3X4DV)(GLint,GLsizei,GLboolean,const GLdouble *);
WXE_EXTERN WXEGLUNIFORMMATRIX3X4DV weglUniformMatrix3x4dv;
void ecb_glUniformMatrix3x4dv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORMMATRIX4X2DV)(GLint,GLsizei,GLboolean,const GLdouble *);
WXE_EXTERN WXEGLUNIFORMMATRIX4X2DV weglUniformMatrix4x2dv;
void ecb_glUniformMatrix4x2dv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORMMATRIX4X3DV)(GLint,GLsizei,GLboolean,const GLdouble *);
WXE_EXTERN WXEGLUNIFORMMATRIX4X3DV weglUniformMatrix4x3dv;
void ecb_glUniformMatrix4x3dv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETUNIFORMDV)(GLuint,GLint,GLdouble *);
WXE_EXTERN WXEGLGETUNIFORMDV weglGetUniformdv;
void ecb_glGetUniformdv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLint (APIENTRY * WXEGLGETSUBROUTINEUNIFORMLOCATION)(GLuint,GLenum,const GLchar *);
WXE_EXTERN WXEGLGETSUBROUTINEUNIFORMLOCATION weglGetSubroutineUniformLocation;
void ecb_glGetSubroutineUniformLocation(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLuint (APIENTRY * WXEGLGETSUBROUTINEINDEX)(GLuint,GLenum,const GLchar *);
WXE_EXTERN WXEGLGETSUBROUTINEINDEX weglGetSubroutineIndex;
void ecb_glGetSubroutineIndex(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETACTIVESUBROUTINEUNIFORMNAME)(GLuint,GLenum,GLuint,GLsizei,GLsizei *,GLchar *);
WXE_EXTERN WXEGLGETACTIVESUBROUTINEUNIFORMNAME weglGetActiveSubroutineUniformName;
void ecb_glGetActiveSubroutineUniformName(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETACTIVESUBROUTINENAME)(GLuint,GLenum,GLuint,GLsizei,GLsizei *,GLchar *);
WXE_EXTERN WXEGLGETACTIVESUBROUTINENAME weglGetActiveSubroutineName;
void ecb_glGetActiveSubroutineName(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORMSUBROUTINESUIV)(GLenum,GLsizei,const GLuint *);
WXE_EXTERN WXEGLUNIFORMSUBROUTINESUIV weglUniformSubroutinesuiv;
void ecb_glUniformSubroutinesuiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETUNIFORMSUBROUTINEUIV)(GLenum,GLint,GLuint *);
WXE_EXTERN WXEGLGETUNIFORMSUBROUTINEUIV weglGetUniformSubroutineuiv;
void ecb_glGetUniformSubroutineuiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETPROGRAMSTAGEIV)(GLuint,GLenum,GLenum,GLint *);
WXE_EXTERN WXEGLGETPROGRAMSTAGEIV weglGetProgramStageiv;
void ecb_glGetProgramStageiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPATCHPARAMETERI)(GLenum,GLint);
WXE_EXTERN WXEGLPATCHPARAMETERI weglPatchParameteri;
void ecb_glPatchParameteri(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPATCHPARAMETERFV)(GLenum,const GLfloat *);
WXE_EXTERN WXEGLPATCHPARAMETERFV weglPatchParameterfv;
void ecb_glPatchParameterfv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBINDTRANSFORMFEEDBACK)(GLenum,GLuint);
WXE_EXTERN WXEGLBINDTRANSFORMFEEDBACK weglBindTransformFeedback;
void ecb_glBindTransformFeedback(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDELETETRANSFORMFEEDBACKS)(GLsizei,const GLuint *);
WXE_EXTERN WXEGLDELETETRANSFORMFEEDBACKS weglDeleteTransformFeedbacks;
void ecb_glDeleteTransformFeedbacks(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGENTRANSFORMFEEDBACKS)(GLsizei,GLuint *);
WXE_EXTERN WXEGLGENTRANSFORMFEEDBACKS weglGenTransformFeedbacks;
void ecb_glGenTransformFeedbacks(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLboolean (APIENTRY * WXEGLISTRANSFORMFEEDBACK)(GLuint);
WXE_EXTERN WXEGLISTRANSFORMFEEDBACK weglIsTransformFeedback;
void ecb_glIsTransformFeedback(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPAUSETRANSFORMFEEDBACK)();
WXE_EXTERN WXEGLPAUSETRANSFORMFEEDBACK weglPauseTransformFeedback;
void ecb_glPauseTransformFeedback(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLRESUMETRANSFORMFEEDBACK)();
WXE_EXTERN WXEGLRESUMETRANSFORMFEEDBACK weglResumeTransformFeedback;
void ecb_glResumeTransformFeedback(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDRAWTRANSFORMFEEDBACK)(GLenum,GLuint);
WXE_EXTERN WXEGLDRAWTRANSFORMFEEDBACK weglDrawTransformFeedback;
void ecb_glDrawTransformFeedback(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDRAWTRANSFORMFEEDBACKSTREAM)(GLenum,GLuint,GLuint);
WXE_EXTERN WXEGLDRAWTRANSFORMFEEDBACKSTREAM weglDrawTransformFeedbackStream;
void ecb_glDrawTransformFeedbackStream(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBEGINQUERYINDEXED)(GLenum,GLuint,GLuint);
WXE_EXTERN WXEGLBEGINQUERYINDEXED weglBeginQueryIndexed;
void ecb_glBeginQueryIndexed(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLENDQUERYINDEXED)(GLenum,GLuint);
WXE_EXTERN WXEGLENDQUERYINDEXED weglEndQueryIndexed;
void ecb_glEndQueryIndexed(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETQUERYINDEXEDIV)(GLenum,GLuint,GLenum,GLint *);
WXE_EXTERN WXEGLGETQUERYINDEXEDIV weglGetQueryIndexediv;
void ecb_glGetQueryIndexediv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLRELEASESHADERCOMPILER)();
WXE_EXTERN WXEGLRELEASESHADERCOMPILER weglReleaseShaderCompiler;
void ecb_glReleaseShaderCompiler(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSHADERBINARY)(GLsizei,const GLuint *,GLenum,const void *,GLsizei);
WXE_EXTERN WXEGLSHADERBINARY weglShaderBinary;
void ecb_glShaderBinary(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETSHADERPRECISIONFORMAT)(GLenum,GLenum,GLint *,GLint *);
WXE_EXTERN WXEGLGETSHADERPRECISIONFORMAT weglGetShaderPrecisionFormat;
void ecb_glGetShaderPrecisionFormat(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDEPTHRANGEF)(GLfloat,GLfloat);
WXE_EXTERN WXEGLDEPTHRANGEF weglDepthRangef;
void ecb_glDepthRangef(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCLEARDEPTHF)(GLfloat);
WXE_EXTERN WXEGLCLEARDEPTHF weglClearDepthf;
void ecb_glClearDepthf(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETPROGRAMBINARY)(GLuint,GLsizei,GLsizei *,GLenum *,void *);
WXE_EXTERN WXEGLGETPROGRAMBINARY weglGetProgramBinary;
void ecb_glGetProgramBinary(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMBINARY)(GLuint,GLenum,const void *,GLsizei);
WXE_EXTERN WXEGLPROGRAMBINARY weglProgramBinary;
void ecb_glProgramBinary(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMPARAMETERI)(GLuint,GLenum,GLint);
WXE_EXTERN WXEGLPROGRAMPARAMETERI weglProgramParameteri;
void ecb_glProgramParameteri(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUSEPROGRAMSTAGES)(GLuint,GLbitfield,GLuint);
WXE_EXTERN WXEGLUSEPROGRAMSTAGES weglUseProgramStages;
void ecb_glUseProgramStages(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLACTIVESHADERPROGRAM)(GLuint,GLuint);
WXE_EXTERN WXEGLACTIVESHADERPROGRAM weglActiveShaderProgram;
void ecb_glActiveShaderProgram(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLuint (APIENTRY * WXEGLCREATESHADERPROGRAMV)(GLenum,GLsizei,const GLchar **);
WXE_EXTERN WXEGLCREATESHADERPROGRAMV weglCreateShaderProgramv;
void ecb_glCreateShaderProgramv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBINDPROGRAMPIPELINE)(GLuint);
WXE_EXTERN WXEGLBINDPROGRAMPIPELINE weglBindProgramPipeline;
void ecb_glBindProgramPipeline(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDELETEPROGRAMPIPELINES)(GLsizei,const GLuint *);
WXE_EXTERN WXEGLDELETEPROGRAMPIPELINES weglDeleteProgramPipelines;
void ecb_glDeleteProgramPipelines(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGENPROGRAMPIPELINES)(GLsizei,GLuint *);
WXE_EXTERN WXEGLGENPROGRAMPIPELINES weglGenProgramPipelines;
void ecb_glGenProgramPipelines(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLboolean (APIENTRY * WXEGLISPROGRAMPIPELINE)(GLuint);
WXE_EXTERN WXEGLISPROGRAMPIPELINE weglIsProgramPipeline;
void ecb_glIsProgramPipeline(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETPROGRAMPIPELINEIV)(GLuint,GLenum,GLint *);
WXE_EXTERN WXEGLGETPROGRAMPIPELINEIV weglGetProgramPipelineiv;
void ecb_glGetProgramPipelineiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM1I)(GLuint,GLint,GLint);
WXE_EXTERN WXEGLPROGRAMUNIFORM1I weglProgramUniform1i;
void ecb_glProgramUniform1i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM1IV)(GLuint,GLint,GLsizei,const GLint *);
WXE_EXTERN WXEGLPROGRAMUNIFORM1IV weglProgramUniform1iv;
void ecb_glProgramUniform1iv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM1F)(GLuint,GLint,GLfloat);
WXE_EXTERN WXEGLPROGRAMUNIFORM1F weglProgramUniform1f;
void ecb_glProgramUniform1f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM1FV)(GLuint,GLint,GLsizei,const GLfloat *);
WXE_EXTERN WXEGLPROGRAMUNIFORM1FV weglProgramUniform1fv;
void ecb_glProgramUniform1fv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM1D)(GLuint,GLint,GLdouble);
WXE_EXTERN WXEGLPROGRAMUNIFORM1D weglProgramUniform1d;
void ecb_glProgramUniform1d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM1DV)(GLuint,GLint,GLsizei,const GLdouble *);
WXE_EXTERN WXEGLPROGRAMUNIFORM1DV weglProgramUniform1dv;
void ecb_glProgramUniform1dv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM1UI)(GLuint,GLint,GLuint);
WXE_EXTERN WXEGLPROGRAMUNIFORM1UI weglProgramUniform1ui;
void ecb_glProgramUniform1ui(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM1UIV)(GLuint,GLint,GLsizei,const GLuint *);
WXE_EXTERN WXEGLPROGRAMUNIFORM1UIV weglProgramUniform1uiv;
void ecb_glProgramUniform1uiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM2I)(GLuint,GLint,GLint,GLint);
WXE_EXTERN WXEGLPROGRAMUNIFORM2I weglProgramUniform2i;
void ecb_glProgramUniform2i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM2IV)(GLuint,GLint,GLsizei,const GLint *);
WXE_EXTERN WXEGLPROGRAMUNIFORM2IV weglProgramUniform2iv;
void ecb_glProgramUniform2iv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM2F)(GLuint,GLint,GLfloat,GLfloat);
WXE_EXTERN WXEGLPROGRAMUNIFORM2F weglProgramUniform2f;
void ecb_glProgramUniform2f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM2FV)(GLuint,GLint,GLsizei,const GLfloat *);
WXE_EXTERN WXEGLPROGRAMUNIFORM2FV weglProgramUniform2fv;
void ecb_glProgramUniform2fv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM2D)(GLuint,GLint,GLdouble,GLdouble);
WXE_EXTERN WXEGLPROGRAMUNIFORM2D weglProgramUniform2d;
void ecb_glProgramUniform2d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM2DV)(GLuint,GLint,GLsizei,const GLdouble *);
WXE_EXTERN WXEGLPROGRAMUNIFORM2DV weglProgramUniform2dv;
void ecb_glProgramUniform2dv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM2UI)(GLuint,GLint,GLuint,GLuint);
WXE_EXTERN WXEGLPROGRAMUNIFORM2UI weglProgramUniform2ui;
void ecb_glProgramUniform2ui(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM2UIV)(GLuint,GLint,GLsizei,const GLuint *);
WXE_EXTERN WXEGLPROGRAMUNIFORM2UIV weglProgramUniform2uiv;
void ecb_glProgramUniform2uiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM3I)(GLuint,GLint,GLint,GLint,GLint);
WXE_EXTERN WXEGLPROGRAMUNIFORM3I weglProgramUniform3i;
void ecb_glProgramUniform3i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM3IV)(GLuint,GLint,GLsizei,const GLint *);
WXE_EXTERN WXEGLPROGRAMUNIFORM3IV weglProgramUniform3iv;
void ecb_glProgramUniform3iv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM3F)(GLuint,GLint,GLfloat,GLfloat,GLfloat);
WXE_EXTERN WXEGLPROGRAMUNIFORM3F weglProgramUniform3f;
void ecb_glProgramUniform3f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM3FV)(GLuint,GLint,GLsizei,const GLfloat *);
WXE_EXTERN WXEGLPROGRAMUNIFORM3FV weglProgramUniform3fv;
void ecb_glProgramUniform3fv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM3D)(GLuint,GLint,GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLPROGRAMUNIFORM3D weglProgramUniform3d;
void ecb_glProgramUniform3d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM3DV)(GLuint,GLint,GLsizei,const GLdouble *);
WXE_EXTERN WXEGLPROGRAMUNIFORM3DV weglProgramUniform3dv;
void ecb_glProgramUniform3dv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM3UI)(GLuint,GLint,GLuint,GLuint,GLuint);
WXE_EXTERN WXEGLPROGRAMUNIFORM3UI weglProgramUniform3ui;
void ecb_glProgramUniform3ui(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM3UIV)(GLuint,GLint,GLsizei,const GLuint *);
WXE_EXTERN WXEGLPROGRAMUNIFORM3UIV weglProgramUniform3uiv;
void ecb_glProgramUniform3uiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM4I)(GLuint,GLint,GLint,GLint,GLint,GLint);
WXE_EXTERN WXEGLPROGRAMUNIFORM4I weglProgramUniform4i;
void ecb_glProgramUniform4i(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM4IV)(GLuint,GLint,GLsizei,const GLint *);
WXE_EXTERN WXEGLPROGRAMUNIFORM4IV weglProgramUniform4iv;
void ecb_glProgramUniform4iv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM4F)(GLuint,GLint,GLfloat,GLfloat,GLfloat,GLfloat);
WXE_EXTERN WXEGLPROGRAMUNIFORM4F weglProgramUniform4f;
void ecb_glProgramUniform4f(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM4FV)(GLuint,GLint,GLsizei,const GLfloat *);
WXE_EXTERN WXEGLPROGRAMUNIFORM4FV weglProgramUniform4fv;
void ecb_glProgramUniform4fv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM4D)(GLuint,GLint,GLdouble,GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLPROGRAMUNIFORM4D weglProgramUniform4d;
void ecb_glProgramUniform4d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM4DV)(GLuint,GLint,GLsizei,const GLdouble *);
WXE_EXTERN WXEGLPROGRAMUNIFORM4DV weglProgramUniform4dv;
void ecb_glProgramUniform4dv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM4UI)(GLuint,GLint,GLuint,GLuint,GLuint,GLuint);
WXE_EXTERN WXEGLPROGRAMUNIFORM4UI weglProgramUniform4ui;
void ecb_glProgramUniform4ui(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM4UIV)(GLuint,GLint,GLsizei,const GLuint *);
WXE_EXTERN WXEGLPROGRAMUNIFORM4UIV weglProgramUniform4uiv;
void ecb_glProgramUniform4uiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORMMATRIX2FV)(GLuint,GLint,GLsizei,GLboolean,const GLfloat *);
WXE_EXTERN WXEGLPROGRAMUNIFORMMATRIX2FV weglProgramUniformMatrix2fv;
void ecb_glProgramUniformMatrix2fv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORMMATRIX3FV)(GLuint,GLint,GLsizei,GLboolean,const GLfloat *);
WXE_EXTERN WXEGLPROGRAMUNIFORMMATRIX3FV weglProgramUniformMatrix3fv;
void ecb_glProgramUniformMatrix3fv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORMMATRIX4FV)(GLuint,GLint,GLsizei,GLboolean,const GLfloat *);
WXE_EXTERN WXEGLPROGRAMUNIFORMMATRIX4FV weglProgramUniformMatrix4fv;
void ecb_glProgramUniformMatrix4fv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORMMATRIX2DV)(GLuint,GLint,GLsizei,GLboolean,const GLdouble *);
WXE_EXTERN WXEGLPROGRAMUNIFORMMATRIX2DV weglProgramUniformMatrix2dv;
void ecb_glProgramUniformMatrix2dv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORMMATRIX3DV)(GLuint,GLint,GLsizei,GLboolean,const GLdouble *);
WXE_EXTERN WXEGLPROGRAMUNIFORMMATRIX3DV weglProgramUniformMatrix3dv;
void ecb_glProgramUniformMatrix3dv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORMMATRIX4DV)(GLuint,GLint,GLsizei,GLboolean,const GLdouble *);
WXE_EXTERN WXEGLPROGRAMUNIFORMMATRIX4DV weglProgramUniformMatrix4dv;
void ecb_glProgramUniformMatrix4dv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORMMATRIX2X3FV)(GLuint,GLint,GLsizei,GLboolean,const GLfloat *);
WXE_EXTERN WXEGLPROGRAMUNIFORMMATRIX2X3FV weglProgramUniformMatrix2x3fv;
void ecb_glProgramUniformMatrix2x3fv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORMMATRIX3X2FV)(GLuint,GLint,GLsizei,GLboolean,const GLfloat *);
WXE_EXTERN WXEGLPROGRAMUNIFORMMATRIX3X2FV weglProgramUniformMatrix3x2fv;
void ecb_glProgramUniformMatrix3x2fv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORMMATRIX2X4FV)(GLuint,GLint,GLsizei,GLboolean,const GLfloat *);
WXE_EXTERN WXEGLPROGRAMUNIFORMMATRIX2X4FV weglProgramUniformMatrix2x4fv;
void ecb_glProgramUniformMatrix2x4fv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORMMATRIX4X2FV)(GLuint,GLint,GLsizei,GLboolean,const GLfloat *);
WXE_EXTERN WXEGLPROGRAMUNIFORMMATRIX4X2FV weglProgramUniformMatrix4x2fv;
void ecb_glProgramUniformMatrix4x2fv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORMMATRIX3X4FV)(GLuint,GLint,GLsizei,GLboolean,const GLfloat *);
WXE_EXTERN WXEGLPROGRAMUNIFORMMATRIX3X4FV weglProgramUniformMatrix3x4fv;
void ecb_glProgramUniformMatrix3x4fv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORMMATRIX4X3FV)(GLuint,GLint,GLsizei,GLboolean,const GLfloat *);
WXE_EXTERN WXEGLPROGRAMUNIFORMMATRIX4X3FV weglProgramUniformMatrix4x3fv;
void ecb_glProgramUniformMatrix4x3fv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORMMATRIX2X3DV)(GLuint,GLint,GLsizei,GLboolean,const GLdouble *);
WXE_EXTERN WXEGLPROGRAMUNIFORMMATRIX2X3DV weglProgramUniformMatrix2x3dv;
void ecb_glProgramUniformMatrix2x3dv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORMMATRIX3X2DV)(GLuint,GLint,GLsizei,GLboolean,const GLdouble *);
WXE_EXTERN WXEGLPROGRAMUNIFORMMATRIX3X2DV weglProgramUniformMatrix3x2dv;
void ecb_glProgramUniformMatrix3x2dv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORMMATRIX2X4DV)(GLuint,GLint,GLsizei,GLboolean,const GLdouble *);
WXE_EXTERN WXEGLPROGRAMUNIFORMMATRIX2X4DV weglProgramUniformMatrix2x4dv;
void ecb_glProgramUniformMatrix2x4dv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORMMATRIX4X2DV)(GLuint,GLint,GLsizei,GLboolean,const GLdouble *);
WXE_EXTERN WXEGLPROGRAMUNIFORMMATRIX4X2DV weglProgramUniformMatrix4x2dv;
void ecb_glProgramUniformMatrix4x2dv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORMMATRIX3X4DV)(GLuint,GLint,GLsizei,GLboolean,const GLdouble *);
WXE_EXTERN WXEGLPROGRAMUNIFORMMATRIX3X4DV weglProgramUniformMatrix3x4dv;
void ecb_glProgramUniformMatrix3x4dv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORMMATRIX4X3DV)(GLuint,GLint,GLsizei,GLboolean,const GLdouble *);
WXE_EXTERN WXEGLPROGRAMUNIFORMMATRIX4X3DV weglProgramUniformMatrix4x3dv;
void ecb_glProgramUniformMatrix4x3dv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVALIDATEPROGRAMPIPELINE)(GLuint);
WXE_EXTERN WXEGLVALIDATEPROGRAMPIPELINE weglValidateProgramPipeline;
void ecb_glValidateProgramPipeline(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETPROGRAMPIPELINEINFOLOG)(GLuint,GLsizei,GLsizei *,GLchar *);
WXE_EXTERN WXEGLGETPROGRAMPIPELINEINFOLOG weglGetProgramPipelineInfoLog;
void ecb_glGetProgramPipelineInfoLog(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIBL1D)(GLuint,GLdouble);
WXE_EXTERN WXEGLVERTEXATTRIBL1D weglVertexAttribL1d;
void ecb_glVertexAttribL1d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIBL2D)(GLuint,GLdouble,GLdouble);
WXE_EXTERN WXEGLVERTEXATTRIBL2D weglVertexAttribL2d;
void ecb_glVertexAttribL2d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIBL3D)(GLuint,GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLVERTEXATTRIBL3D weglVertexAttribL3d;
void ecb_glVertexAttribL3d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIBL4D)(GLuint,GLdouble,GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLVERTEXATTRIBL4D weglVertexAttribL4d;
void ecb_glVertexAttribL4d(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIBLPOINTER)(GLuint,GLint,GLenum,GLsizei,const void *);
WXE_EXTERN WXEGLVERTEXATTRIBLPOINTER weglVertexAttribLPointer;
void ecb_glVertexAttribLPointer(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETVERTEXATTRIBLDV)(GLuint,GLenum,GLdouble *);
WXE_EXTERN WXEGLGETVERTEXATTRIBLDV weglGetVertexAttribLdv;
void ecb_glGetVertexAttribLdv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVIEWPORTARRAYV)(GLuint,GLsizei,const GLfloat *);
WXE_EXTERN WXEGLVIEWPORTARRAYV weglViewportArrayv;
void ecb_glViewportArrayv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVIEWPORTINDEXEDF)(GLuint,GLfloat,GLfloat,GLfloat,GLfloat);
WXE_EXTERN WXEGLVIEWPORTINDEXEDF weglViewportIndexedf;
void ecb_glViewportIndexedf(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVIEWPORTINDEXEDFV)(GLuint,const GLfloat *);
WXE_EXTERN WXEGLVIEWPORTINDEXEDFV weglViewportIndexedfv;
void ecb_glViewportIndexedfv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSCISSORARRAYV)(GLuint,GLsizei,const GLint *);
WXE_EXTERN WXEGLSCISSORARRAYV weglScissorArrayv;
void ecb_glScissorArrayv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSCISSORINDEXED)(GLuint,GLint,GLint,GLsizei,GLsizei);
WXE_EXTERN WXEGLSCISSORINDEXED weglScissorIndexed;
void ecb_glScissorIndexed(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSCISSORINDEXEDV)(GLuint,const GLint *);
WXE_EXTERN WXEGLSCISSORINDEXEDV weglScissorIndexedv;
void ecb_glScissorIndexedv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDEPTHRANGEARRAYV)(GLuint,GLsizei,const GLdouble *);
WXE_EXTERN WXEGLDEPTHRANGEARRAYV weglDepthRangeArrayv;
void ecb_glDepthRangeArrayv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDEPTHRANGEINDEXED)(GLuint,GLdouble,GLdouble);
WXE_EXTERN WXEGLDEPTHRANGEINDEXED weglDepthRangeIndexed;
void ecb_glDepthRangeIndexed(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETFLOATI_V)(GLenum,GLuint,GLfloat *);
WXE_EXTERN WXEGLGETFLOATI_V weglGetFloati_v;
void ecb_glGetFloati_v(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETDOUBLEI_V)(GLenum,GLuint,GLdouble *);
WXE_EXTERN WXEGLGETDOUBLEI_V weglGetDoublei_v;
void ecb_glGetDoublei_v(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDRAWARRAYSINSTANCEDBASEINSTANCE)(GLenum,GLint,GLsizei,GLsizei,GLuint);
WXE_EXTERN WXEGLDRAWARRAYSINSTANCEDBASEINSTANCE weglDrawArraysInstancedBaseInstance;
void ecb_glDrawArraysInstancedBaseInstance(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDRAWELEMENTSINSTANCEDBASEINSTANCE)(GLenum,GLsizei,GLenum,const void *,GLsizei,GLuint);
WXE_EXTERN WXEGLDRAWELEMENTSINSTANCEDBASEINSTANCE weglDrawElementsInstancedBaseInstance;
void ecb_glDrawElementsInstancedBaseInstance(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCE)(GLenum,GLsizei,GLenum,const void *,GLsizei,GLint,GLuint);
WXE_EXTERN WXEGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCE weglDrawElementsInstancedBaseVertexBaseInstance;
void ecb_glDrawElementsInstancedBaseVertexBaseInstance(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETINTERNALFORMATIV)(GLenum,GLenum,GLenum,GLsizei,GLint *);
WXE_EXTERN WXEGLGETINTERNALFORMATIV weglGetInternalformativ;
void ecb_glGetInternalformativ(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBINDIMAGETEXTURE)(GLuint,GLuint,GLint,GLboolean,GLint,GLenum,GLenum);
WXE_EXTERN WXEGLBINDIMAGETEXTURE weglBindImageTexture;
void ecb_glBindImageTexture(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMEMORYBARRIER)(GLbitfield);
WXE_EXTERN WXEGLMEMORYBARRIER weglMemoryBarrier;
void ecb_glMemoryBarrier(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXSTORAGE1D)(GLenum,GLsizei,GLenum,GLsizei);
WXE_EXTERN WXEGLTEXSTORAGE1D weglTexStorage1D;
void ecb_glTexStorage1D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXSTORAGE2D)(GLenum,GLsizei,GLenum,GLsizei,GLsizei);
WXE_EXTERN WXEGLTEXSTORAGE2D weglTexStorage2D;
void ecb_glTexStorage2D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXSTORAGE3D)(GLenum,GLsizei,GLenum,GLsizei,GLsizei,GLsizei);
WXE_EXTERN WXEGLTEXSTORAGE3D weglTexStorage3D;
void ecb_glTexStorage3D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDRAWTRANSFORMFEEDBACKINSTANCED)(GLenum,GLuint,GLsizei);
WXE_EXTERN WXEGLDRAWTRANSFORMFEEDBACKINSTANCED weglDrawTransformFeedbackInstanced;
void ecb_glDrawTransformFeedbackInstanced(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCED)(GLenum,GLuint,GLuint,GLsizei);
WXE_EXTERN WXEGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCED weglDrawTransformFeedbackStreamInstanced;
void ecb_glDrawTransformFeedbackStreamInstanced(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCLEARBUFFERDATA)(GLenum,GLenum,GLenum,GLenum,const void *);
WXE_EXTERN WXEGLCLEARBUFFERDATA weglClearBufferData;
void ecb_glClearBufferData(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCLEARBUFFERSUBDATA)(GLenum,GLenum,GLintptr,GLsizeiptr,GLenum,GLenum,const void *);
WXE_EXTERN WXEGLCLEARBUFFERSUBDATA weglClearBufferSubData;
void ecb_glClearBufferSubData(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDISPATCHCOMPUTE)(GLuint,GLuint,GLuint);
WXE_EXTERN WXEGLDISPATCHCOMPUTE weglDispatchCompute;
void ecb_glDispatchCompute(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDISPATCHCOMPUTEINDIRECT)(GLintptr);
WXE_EXTERN WXEGLDISPATCHCOMPUTEINDIRECT weglDispatchComputeIndirect;
void ecb_glDispatchComputeIndirect(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOPYIMAGESUBDATA)(GLuint,GLenum,GLint,GLint,GLint,GLint,GLuint,GLenum,GLint,GLint,GLint,GLint,GLsizei,GLsizei,GLsizei);
WXE_EXTERN WXEGLCOPYIMAGESUBDATA weglCopyImageSubData;
void ecb_glCopyImageSubData(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLFRAMEBUFFERPARAMETERI)(GLenum,GLenum,GLint);
WXE_EXTERN WXEGLFRAMEBUFFERPARAMETERI weglFramebufferParameteri;
void ecb_glFramebufferParameteri(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETFRAMEBUFFERPARAMETERIV)(GLenum,GLenum,GLint *);
WXE_EXTERN WXEGLGETFRAMEBUFFERPARAMETERIV weglGetFramebufferParameteriv;
void ecb_glGetFramebufferParameteriv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETINTERNALFORMATI64V)(GLenum,GLenum,GLenum,GLsizei,GLint64 *);
WXE_EXTERN WXEGLGETINTERNALFORMATI64V weglGetInternalformati64v;
void ecb_glGetInternalformati64v(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLINVALIDATETEXSUBIMAGE)(GLuint,GLint,GLint,GLint,GLint,GLsizei,GLsizei,GLsizei);
WXE_EXTERN WXEGLINVALIDATETEXSUBIMAGE weglInvalidateTexSubImage;
void ecb_glInvalidateTexSubImage(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLINVALIDATETEXIMAGE)(GLuint,GLint);
WXE_EXTERN WXEGLINVALIDATETEXIMAGE weglInvalidateTexImage;
void ecb_glInvalidateTexImage(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLINVALIDATEBUFFERSUBDATA)(GLuint,GLintptr,GLsizeiptr);
WXE_EXTERN WXEGLINVALIDATEBUFFERSUBDATA weglInvalidateBufferSubData;
void ecb_glInvalidateBufferSubData(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLINVALIDATEBUFFERDATA)(GLuint);
WXE_EXTERN WXEGLINVALIDATEBUFFERDATA weglInvalidateBufferData;
void ecb_glInvalidateBufferData(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLINVALIDATEFRAMEBUFFER)(GLenum,GLsizei,const GLenum *);
WXE_EXTERN WXEGLINVALIDATEFRAMEBUFFER weglInvalidateFramebuffer;
void ecb_glInvalidateFramebuffer(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLINVALIDATESUBFRAMEBUFFER)(GLenum,GLsizei,const GLenum *,GLint,GLint,GLsizei,GLsizei);
WXE_EXTERN WXEGLINVALIDATESUBFRAMEBUFFER weglInvalidateSubFramebuffer;
void ecb_glInvalidateSubFramebuffer(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMULTIDRAWARRAYSINDIRECT)(GLenum,const void *,GLsizei,GLsizei);
WXE_EXTERN WXEGLMULTIDRAWARRAYSINDIRECT weglMultiDrawArraysIndirect;
void ecb_glMultiDrawArraysIndirect(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETPROGRAMINTERFACEIV)(GLuint,GLenum,GLenum,GLint *);
WXE_EXTERN WXEGLGETPROGRAMINTERFACEIV weglGetProgramInterfaceiv;
void ecb_glGetProgramInterfaceiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLuint (APIENTRY * WXEGLGETPROGRAMRESOURCEINDEX)(GLuint,GLenum,const GLchar *);
WXE_EXTERN WXEGLGETPROGRAMRESOURCEINDEX weglGetProgramResourceIndex;
void ecb_glGetProgramResourceIndex(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETPROGRAMRESOURCENAME)(GLuint,GLenum,GLuint,GLsizei,GLsizei *,GLchar *);
WXE_EXTERN WXEGLGETPROGRAMRESOURCENAME weglGetProgramResourceName;
void ecb_glGetProgramResourceName(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLint (APIENTRY * WXEGLGETPROGRAMRESOURCELOCATION)(GLuint,GLenum,const GLchar *);
WXE_EXTERN WXEGLGETPROGRAMRESOURCELOCATION weglGetProgramResourceLocation;
void ecb_glGetProgramResourceLocation(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLint (APIENTRY * WXEGLGETPROGRAMRESOURCELOCATIONINDEX)(GLuint,GLenum,const GLchar *);
WXE_EXTERN WXEGLGETPROGRAMRESOURCELOCATIONINDEX weglGetProgramResourceLocationIndex;
void ecb_glGetProgramResourceLocationIndex(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSHADERSTORAGEBLOCKBINDING)(GLuint,GLuint,GLuint);
WXE_EXTERN WXEGLSHADERSTORAGEBLOCKBINDING weglShaderStorageBlockBinding;
void ecb_glShaderStorageBlockBinding(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXBUFFERRANGE)(GLenum,GLenum,GLuint,GLintptr,GLsizeiptr);
WXE_EXTERN WXEGLTEXBUFFERRANGE weglTexBufferRange;
void ecb_glTexBufferRange(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXSTORAGE2DMULTISAMPLE)(GLenum,GLsizei,GLenum,GLsizei,GLsizei,GLboolean);
WXE_EXTERN WXEGLTEXSTORAGE2DMULTISAMPLE weglTexStorage2DMultisample;
void ecb_glTexStorage2DMultisample(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXSTORAGE3DMULTISAMPLE)(GLenum,GLsizei,GLenum,GLsizei,GLsizei,GLsizei,GLboolean);
WXE_EXTERN WXEGLTEXSTORAGE3DMULTISAMPLE weglTexStorage3DMultisample;
void ecb_glTexStorage3DMultisample(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXTUREVIEW)(GLuint,GLenum,GLuint,GLenum,GLuint,GLuint,GLuint,GLuint);
WXE_EXTERN WXEGLTEXTUREVIEW weglTextureView;
void ecb_glTextureView(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBINDVERTEXBUFFER)(GLuint,GLuint,GLintptr,GLsizei);
WXE_EXTERN WXEGLBINDVERTEXBUFFER weglBindVertexBuffer;
void ecb_glBindVertexBuffer(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIBFORMAT)(GLuint,GLint,GLenum,GLboolean,GLuint);
WXE_EXTERN WXEGLVERTEXATTRIBFORMAT weglVertexAttribFormat;
void ecb_glVertexAttribFormat(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIBIFORMAT)(GLuint,GLint,GLenum,GLuint);
WXE_EXTERN WXEGLVERTEXATTRIBIFORMAT weglVertexAttribIFormat;
void ecb_glVertexAttribIFormat(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIBLFORMAT)(GLuint,GLint,GLenum,GLuint);
WXE_EXTERN WXEGLVERTEXATTRIBLFORMAT weglVertexAttribLFormat;
void ecb_glVertexAttribLFormat(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXATTRIBBINDING)(GLuint,GLuint);
WXE_EXTERN WXEGLVERTEXATTRIBBINDING weglVertexAttribBinding;
void ecb_glVertexAttribBinding(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXBINDINGDIVISOR)(GLuint,GLuint);
WXE_EXTERN WXEGLVERTEXBINDINGDIVISOR weglVertexBindingDivisor;
void ecb_glVertexBindingDivisor(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDEBUGMESSAGECONTROL)(GLenum,GLenum,GLenum,GLsizei,const GLuint *,GLboolean);
WXE_EXTERN WXEGLDEBUGMESSAGECONTROL weglDebugMessageControl;
void ecb_glDebugMessageControl(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDEBUGMESSAGEINSERT)(GLenum,GLenum,GLuint,GLenum,GLsizei,const GLchar *);
WXE_EXTERN WXEGLDEBUGMESSAGEINSERT weglDebugMessageInsert;
void ecb_glDebugMessageInsert(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLuint (APIENTRY * WXEGLGETDEBUGMESSAGELOG)(GLuint,GLsizei,GLenum *,GLenum *,GLuint *,GLenum *,GLsizei *,GLchar *);
WXE_EXTERN WXEGLGETDEBUGMESSAGELOG weglGetDebugMessageLog;
void ecb_glGetDebugMessageLog(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPUSHDEBUGGROUP)(GLenum,GLuint,GLsizei,const GLchar *);
WXE_EXTERN WXEGLPUSHDEBUGGROUP weglPushDebugGroup;
void ecb_glPushDebugGroup(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPOPDEBUGGROUP)();
WXE_EXTERN WXEGLPOPDEBUGGROUP weglPopDebugGroup;
void ecb_glPopDebugGroup(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLOBJECTPTRLABEL)(const void *,GLsizei,const GLchar *);
WXE_EXTERN WXEGLOBJECTPTRLABEL weglObjectPtrLabel;
void ecb_glObjectPtrLabel(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBUFFERSTORAGE)(GLenum,GLsizeiptr,const void *,GLbitfield);
WXE_EXTERN WXEGLBUFFERSTORAGE weglBufferStorage;
void ecb_glBufferStorage(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCLEARTEXIMAGE)(GLuint,GLint,GLenum,GLenum,const void *);
WXE_EXTERN WXEGLCLEARTEXIMAGE weglClearTexImage;
void ecb_glClearTexImage(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCLEARTEXSUBIMAGE)(GLuint,GLint,GLint,GLint,GLint,GLsizei,GLsizei,GLsizei,GLenum,GLenum,const void *);
WXE_EXTERN WXEGLCLEARTEXSUBIMAGE weglClearTexSubImage;
void ecb_glClearTexSubImage(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBINDBUFFERSBASE)(GLenum,GLuint,GLsizei,const GLuint *);
WXE_EXTERN WXEGLBINDBUFFERSBASE weglBindBuffersBase;
void ecb_glBindBuffersBase(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBINDBUFFERSRANGE)(GLenum,GLuint,GLsizei,const GLuint *,const GLintptr *,const GLsizeiptr *);
WXE_EXTERN WXEGLBINDBUFFERSRANGE weglBindBuffersRange;
void ecb_glBindBuffersRange(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBINDTEXTURES)(GLuint,GLsizei,const GLuint *);
WXE_EXTERN WXEGLBINDTEXTURES weglBindTextures;
void ecb_glBindTextures(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBINDSAMPLERS)(GLuint,GLsizei,const GLuint *);
WXE_EXTERN WXEGLBINDSAMPLERS weglBindSamplers;
void ecb_glBindSamplers(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBINDIMAGETEXTURES)(GLuint,GLsizei,const GLuint *);
WXE_EXTERN WXEGLBINDIMAGETEXTURES weglBindImageTextures;
void ecb_glBindImageTextures(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBINDVERTEXBUFFERS)(GLuint,GLsizei,const GLuint *,const GLintptr *,const GLsizei *);
WXE_EXTERN WXEGLBINDVERTEXBUFFERS weglBindVertexBuffers;
void ecb_glBindVertexBuffers(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCLIPCONTROL)(GLenum,GLenum);
WXE_EXTERN WXEGLCLIPCONTROL weglClipControl;
void ecb_glClipControl(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCREATETRANSFORMFEEDBACKS)(GLsizei,GLuint *);
WXE_EXTERN WXEGLCREATETRANSFORMFEEDBACKS weglCreateTransformFeedbacks;
void ecb_glCreateTransformFeedbacks(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTRANSFORMFEEDBACKBUFFERBASE)(GLuint,GLuint,GLuint);
WXE_EXTERN WXEGLTRANSFORMFEEDBACKBUFFERBASE weglTransformFeedbackBufferBase;
void ecb_glTransformFeedbackBufferBase(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTRANSFORMFEEDBACKBUFFERRANGE)(GLuint,GLuint,GLuint,GLintptr,GLsizeiptr);
WXE_EXTERN WXEGLTRANSFORMFEEDBACKBUFFERRANGE weglTransformFeedbackBufferRange;
void ecb_glTransformFeedbackBufferRange(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCREATEBUFFERS)(GLsizei,GLuint *);
WXE_EXTERN WXEGLCREATEBUFFERS weglCreateBuffers;
void ecb_glCreateBuffers(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLFLUSHMAPPEDNAMEDBUFFERRANGE)(GLuint,GLintptr,GLsizeiptr);
WXE_EXTERN WXEGLFLUSHMAPPEDNAMEDBUFFERRANGE weglFlushMappedNamedBufferRange;
void ecb_glFlushMappedNamedBufferRange(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCREATEFRAMEBUFFERS)(GLsizei,GLuint *);
WXE_EXTERN WXEGLCREATEFRAMEBUFFERS weglCreateFramebuffers;
void ecb_glCreateFramebuffers(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCREATERENDERBUFFERS)(GLsizei,GLuint *);
WXE_EXTERN WXEGLCREATERENDERBUFFERS weglCreateRenderbuffers;
void ecb_glCreateRenderbuffers(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCREATETEXTURES)(GLenum,GLsizei,GLuint *);
WXE_EXTERN WXEGLCREATETEXTURES weglCreateTextures;
void ecb_glCreateTextures(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXTUREBUFFER)(GLuint,GLenum,GLuint);
WXE_EXTERN WXEGLTEXTUREBUFFER weglTextureBuffer;
void ecb_glTextureBuffer(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXTUREBUFFERRANGE)(GLuint,GLenum,GLuint,GLintptr,GLsizeiptr);
WXE_EXTERN WXEGLTEXTUREBUFFERRANGE weglTextureBufferRange;
void ecb_glTextureBufferRange(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOMPRESSEDTEXTURESUBIMAGE1D)(GLuint,GLint,GLint,GLsizei,GLenum,GLsizei,const void *);
WXE_EXTERN WXEGLCOMPRESSEDTEXTURESUBIMAGE1D weglCompressedTextureSubImage1D;
void ecb_glCompressedTextureSubImage1D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOMPRESSEDTEXTURESUBIMAGE2D)(GLuint,GLint,GLint,GLint,GLsizei,GLsizei,GLenum,GLsizei,const void *);
WXE_EXTERN WXEGLCOMPRESSEDTEXTURESUBIMAGE2D weglCompressedTextureSubImage2D;
void ecb_glCompressedTextureSubImage2D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOMPRESSEDTEXTURESUBIMAGE3D)(GLuint,GLint,GLint,GLint,GLint,GLsizei,GLsizei,GLsizei,GLenum,GLsizei,const void *);
WXE_EXTERN WXEGLCOMPRESSEDTEXTURESUBIMAGE3D weglCompressedTextureSubImage3D;
void ecb_glCompressedTextureSubImage3D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGENERATETEXTUREMIPMAP)(GLuint);
WXE_EXTERN WXEGLGENERATETEXTUREMIPMAP weglGenerateTextureMipmap;
void ecb_glGenerateTextureMipmap(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBINDTEXTUREUNIT)(GLuint,GLuint);
WXE_EXTERN WXEGLBINDTEXTUREUNIT weglBindTextureUnit;
void ecb_glBindTextureUnit(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCREATEVERTEXARRAYS)(GLsizei,GLuint *);
WXE_EXTERN WXEGLCREATEVERTEXARRAYS weglCreateVertexArrays;
void ecb_glCreateVertexArrays(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDISABLEVERTEXARRAYATTRIB)(GLuint,GLuint);
WXE_EXTERN WXEGLDISABLEVERTEXARRAYATTRIB weglDisableVertexArrayAttrib;
void ecb_glDisableVertexArrayAttrib(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLENABLEVERTEXARRAYATTRIB)(GLuint,GLuint);
WXE_EXTERN WXEGLENABLEVERTEXARRAYATTRIB weglEnableVertexArrayAttrib;
void ecb_glEnableVertexArrayAttrib(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXARRAYELEMENTBUFFER)(GLuint,GLuint);
WXE_EXTERN WXEGLVERTEXARRAYELEMENTBUFFER weglVertexArrayElementBuffer;
void ecb_glVertexArrayElementBuffer(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXARRAYVERTEXBUFFER)(GLuint,GLuint,GLuint,GLintptr,GLsizei);
WXE_EXTERN WXEGLVERTEXARRAYVERTEXBUFFER weglVertexArrayVertexBuffer;
void ecb_glVertexArrayVertexBuffer(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXARRAYVERTEXBUFFERS)(GLuint,GLuint,GLsizei,const GLuint *,const GLintptr *,const GLsizei *);
WXE_EXTERN WXEGLVERTEXARRAYVERTEXBUFFERS weglVertexArrayVertexBuffers;
void ecb_glVertexArrayVertexBuffers(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXARRAYATTRIBBINDING)(GLuint,GLuint,GLuint);
WXE_EXTERN WXEGLVERTEXARRAYATTRIBBINDING weglVertexArrayAttribBinding;
void ecb_glVertexArrayAttribBinding(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXARRAYATTRIBFORMAT)(GLuint,GLuint,GLint,GLenum,GLboolean,GLuint);
WXE_EXTERN WXEGLVERTEXARRAYATTRIBFORMAT weglVertexArrayAttribFormat;
void ecb_glVertexArrayAttribFormat(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXARRAYATTRIBIFORMAT)(GLuint,GLuint,GLint,GLenum,GLuint);
WXE_EXTERN WXEGLVERTEXARRAYATTRIBIFORMAT weglVertexArrayAttribIFormat;
void ecb_glVertexArrayAttribIFormat(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXARRAYATTRIBLFORMAT)(GLuint,GLuint,GLint,GLenum,GLuint);
WXE_EXTERN WXEGLVERTEXARRAYATTRIBLFORMAT weglVertexArrayAttribLFormat;
void ecb_glVertexArrayAttribLFormat(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXARRAYBINDINGDIVISOR)(GLuint,GLuint,GLuint);
WXE_EXTERN WXEGLVERTEXARRAYBINDINGDIVISOR weglVertexArrayBindingDivisor;
void ecb_glVertexArrayBindingDivisor(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCREATESAMPLERS)(GLsizei,GLuint *);
WXE_EXTERN WXEGLCREATESAMPLERS weglCreateSamplers;
void ecb_glCreateSamplers(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCREATEPROGRAMPIPELINES)(GLsizei,GLuint *);
WXE_EXTERN WXEGLCREATEPROGRAMPIPELINES weglCreateProgramPipelines;
void ecb_glCreateProgramPipelines(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCREATEQUERIES)(GLenum,GLsizei,GLuint *);
WXE_EXTERN WXEGLCREATEQUERIES weglCreateQueries;
void ecb_glCreateQueries(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETQUERYBUFFEROBJECTI64V)(GLuint,GLuint,GLenum,GLintptr);
WXE_EXTERN WXEGLGETQUERYBUFFEROBJECTI64V weglGetQueryBufferObjecti64v;
void ecb_glGetQueryBufferObjecti64v(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETQUERYBUFFEROBJECTIV)(GLuint,GLuint,GLenum,GLintptr);
WXE_EXTERN WXEGLGETQUERYBUFFEROBJECTIV weglGetQueryBufferObjectiv;
void ecb_glGetQueryBufferObjectiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETQUERYBUFFEROBJECTUI64V)(GLuint,GLuint,GLenum,GLintptr);
WXE_EXTERN WXEGLGETQUERYBUFFEROBJECTUI64V weglGetQueryBufferObjectui64v;
void ecb_glGetQueryBufferObjectui64v(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETQUERYBUFFEROBJECTUIV)(GLuint,GLuint,GLenum,GLintptr);
WXE_EXTERN WXEGLGETQUERYBUFFEROBJECTUIV weglGetQueryBufferObjectuiv;
void ecb_glGetQueryBufferObjectuiv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMEMORYBARRIERBYREGION)(GLbitfield);
WXE_EXTERN WXEGLMEMORYBARRIERBYREGION weglMemoryBarrierByRegion;
void ecb_glMemoryBarrierByRegion(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLenum (APIENTRY * WXEGLGETGRAPHICSRESETSTATUS)();
WXE_EXTERN WXEGLGETGRAPHICSRESETSTATUS weglGetGraphicsResetStatus;
void ecb_glGetGraphicsResetStatus(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXTUREBARRIER)();
WXE_EXTERN WXEGLTEXTUREBARRIER weglTextureBarrier;
void ecb_glTextureBarrier(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMULTIDRAWARRAYSINDIRECTCOUNT)(GLenum,const void *,GLintptr,GLsizei,GLsizei);
WXE_EXTERN WXEGLMULTIDRAWARRAYSINDIRECTCOUNT weglMultiDrawArraysIndirectCount;
void ecb_glMultiDrawArraysIndirectCount(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPOLYGONOFFSETCLAMP)(GLfloat,GLfloat,GLfloat);
WXE_EXTERN WXEGLPOLYGONOFFSETCLAMP weglPolygonOffsetClamp;
void ecb_glPolygonOffsetClamp(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPRIMITIVEBOUNDINGBOXARB)(GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat,GLfloat);
WXE_EXTERN WXEGLPRIMITIVEBOUNDINGBOXARB weglPrimitiveBoundingBoxARB;
void ecb_glPrimitiveBoundingBoxARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMAKETEXTUREHANDLERESIDENTARB)(GLuint64);
WXE_EXTERN WXEGLMAKETEXTUREHANDLERESIDENTARB weglMakeTextureHandleResidentARB;
void ecb_glMakeTextureHandleResidentARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMAKETEXTUREHANDLENONRESIDENTARB)(GLuint64);
WXE_EXTERN WXEGLMAKETEXTUREHANDLENONRESIDENTARB weglMakeTextureHandleNonResidentARB;
void ecb_glMakeTextureHandleNonResidentARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLuint64 (APIENTRY * WXEGLGETIMAGEHANDLEARB)(GLuint,GLint,GLboolean,GLint,GLenum);
WXE_EXTERN WXEGLGETIMAGEHANDLEARB weglGetImageHandleARB;
void ecb_glGetImageHandleARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMAKEIMAGEHANDLERESIDENTARB)(GLuint64,GLenum);
WXE_EXTERN WXEGLMAKEIMAGEHANDLERESIDENTARB weglMakeImageHandleResidentARB;
void ecb_glMakeImageHandleResidentARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMAKEIMAGEHANDLENONRESIDENTARB)(GLuint64);
WXE_EXTERN WXEGLMAKEIMAGEHANDLENONRESIDENTARB weglMakeImageHandleNonResidentARB;
void ecb_glMakeImageHandleNonResidentARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORMHANDLEUI64ARB)(GLint,GLuint64);
WXE_EXTERN WXEGLUNIFORMHANDLEUI64ARB weglUniformHandleui64ARB;
void ecb_glUniformHandleui64ARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORMHANDLEUI64ARB)(GLuint,GLint,GLuint64);
WXE_EXTERN WXEGLPROGRAMUNIFORMHANDLEUI64ARB weglProgramUniformHandleui64ARB;
void ecb_glProgramUniformHandleui64ARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLboolean (APIENTRY * WXEGLISTEXTUREHANDLERESIDENTARB)(GLuint64);
WXE_EXTERN WXEGLISTEXTUREHANDLERESIDENTARB weglIsTextureHandleResidentARB;
void ecb_glIsTextureHandleResidentARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLboolean (APIENTRY * WXEGLISIMAGEHANDLERESIDENTARB)(GLuint64);
WXE_EXTERN WXEGLISIMAGEHANDLERESIDENTARB weglIsImageHandleResidentARB;
void ecb_glIsImageHandleResidentARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDISPATCHCOMPUTEGROUPSIZEARB)(GLuint,GLuint,GLuint,GLuint,GLuint,GLuint);
WXE_EXTERN WXEGLDISPATCHCOMPUTEGROUPSIZEARB weglDispatchComputeGroupSizeARB;
void ecb_glDispatchComputeGroupSizeARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMSTRINGARB)(GLenum,GLenum,GLsizei,const void *);
WXE_EXTERN WXEGLPROGRAMSTRINGARB weglProgramStringARB;
void ecb_glProgramStringARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBINDPROGRAMARB)(GLenum,GLuint);
WXE_EXTERN WXEGLBINDPROGRAMARB weglBindProgramARB;
void ecb_glBindProgramARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDELETEPROGRAMSARB)(GLsizei,const GLuint *);
WXE_EXTERN WXEGLDELETEPROGRAMSARB weglDeleteProgramsARB;
void ecb_glDeleteProgramsARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGENPROGRAMSARB)(GLsizei,GLuint *);
WXE_EXTERN WXEGLGENPROGRAMSARB weglGenProgramsARB;
void ecb_glGenProgramsARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMENVPARAMETER4DARB)(GLenum,GLuint,GLdouble,GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLPROGRAMENVPARAMETER4DARB weglProgramEnvParameter4dARB;
void ecb_glProgramEnvParameter4dARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMENVPARAMETER4DVARB)(GLenum,GLuint,const GLdouble *);
WXE_EXTERN WXEGLPROGRAMENVPARAMETER4DVARB weglProgramEnvParameter4dvARB;
void ecb_glProgramEnvParameter4dvARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMENVPARAMETER4FARB)(GLenum,GLuint,GLfloat,GLfloat,GLfloat,GLfloat);
WXE_EXTERN WXEGLPROGRAMENVPARAMETER4FARB weglProgramEnvParameter4fARB;
void ecb_glProgramEnvParameter4fARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMENVPARAMETER4FVARB)(GLenum,GLuint,const GLfloat *);
WXE_EXTERN WXEGLPROGRAMENVPARAMETER4FVARB weglProgramEnvParameter4fvARB;
void ecb_glProgramEnvParameter4fvARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMLOCALPARAMETER4DARB)(GLenum,GLuint,GLdouble,GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLPROGRAMLOCALPARAMETER4DARB weglProgramLocalParameter4dARB;
void ecb_glProgramLocalParameter4dARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMLOCALPARAMETER4DVARB)(GLenum,GLuint,const GLdouble *);
WXE_EXTERN WXEGLPROGRAMLOCALPARAMETER4DVARB weglProgramLocalParameter4dvARB;
void ecb_glProgramLocalParameter4dvARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMLOCALPARAMETER4FARB)(GLenum,GLuint,GLfloat,GLfloat,GLfloat,GLfloat);
WXE_EXTERN WXEGLPROGRAMLOCALPARAMETER4FARB weglProgramLocalParameter4fARB;
void ecb_glProgramLocalParameter4fARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMLOCALPARAMETER4FVARB)(GLenum,GLuint,const GLfloat *);
WXE_EXTERN WXEGLPROGRAMLOCALPARAMETER4FVARB weglProgramLocalParameter4fvARB;
void ecb_glProgramLocalParameter4fvARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETPROGRAMENVPARAMETERDVARB)(GLenum,GLuint,GLdouble *);
WXE_EXTERN WXEGLGETPROGRAMENVPARAMETERDVARB weglGetProgramEnvParameterdvARB;
void ecb_glGetProgramEnvParameterdvARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETPROGRAMENVPARAMETERFVARB)(GLenum,GLuint,GLfloat *);
WXE_EXTERN WXEGLGETPROGRAMENVPARAMETERFVARB weglGetProgramEnvParameterfvARB;
void ecb_glGetProgramEnvParameterfvARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETPROGRAMLOCALPARAMETERDVARB)(GLenum,GLuint,GLdouble *);
WXE_EXTERN WXEGLGETPROGRAMLOCALPARAMETERDVARB weglGetProgramLocalParameterdvARB;
void ecb_glGetProgramLocalParameterdvARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETPROGRAMLOCALPARAMETERFVARB)(GLenum,GLuint,GLfloat *);
WXE_EXTERN WXEGLGETPROGRAMLOCALPARAMETERFVARB weglGetProgramLocalParameterfvARB;
void ecb_glGetProgramLocalParameterfvARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETPROGRAMSTRINGARB)(GLenum,GLenum,void *);
WXE_EXTERN WXEGLGETPROGRAMSTRINGARB weglGetProgramStringARB;
void ecb_glGetProgramStringARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLFRAMEBUFFERTEXTUREFACEARB)(GLenum,GLenum,GLuint,GLint,GLenum);
WXE_EXTERN WXEGLFRAMEBUFFERTEXTUREFACEARB weglFramebufferTextureFaceARB;
void ecb_glFramebufferTextureFaceARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM1I64ARB)(GLint,GLint64);
WXE_EXTERN WXEGLUNIFORM1I64ARB weglUniform1i64ARB;
void ecb_glUniform1i64ARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM2I64ARB)(GLint,GLint64,GLint64);
WXE_EXTERN WXEGLUNIFORM2I64ARB weglUniform2i64ARB;
void ecb_glUniform2i64ARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM3I64ARB)(GLint,GLint64,GLint64,GLint64);
WXE_EXTERN WXEGLUNIFORM3I64ARB weglUniform3i64ARB;
void ecb_glUniform3i64ARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM4I64ARB)(GLint,GLint64,GLint64,GLint64,GLint64);
WXE_EXTERN WXEGLUNIFORM4I64ARB weglUniform4i64ARB;
void ecb_glUniform4i64ARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM1I64VARB)(GLint,GLsizei,const GLint64 *);
WXE_EXTERN WXEGLUNIFORM1I64VARB weglUniform1i64vARB;
void ecb_glUniform1i64vARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM2I64VARB)(GLint,GLsizei,const GLint64 *);
WXE_EXTERN WXEGLUNIFORM2I64VARB weglUniform2i64vARB;
void ecb_glUniform2i64vARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM3I64VARB)(GLint,GLsizei,const GLint64 *);
WXE_EXTERN WXEGLUNIFORM3I64VARB weglUniform3i64vARB;
void ecb_glUniform3i64vARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM4I64VARB)(GLint,GLsizei,const GLint64 *);
WXE_EXTERN WXEGLUNIFORM4I64VARB weglUniform4i64vARB;
void ecb_glUniform4i64vARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM1UI64ARB)(GLint,GLuint64);
WXE_EXTERN WXEGLUNIFORM1UI64ARB weglUniform1ui64ARB;
void ecb_glUniform1ui64ARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM2UI64ARB)(GLint,GLuint64,GLuint64);
WXE_EXTERN WXEGLUNIFORM2UI64ARB weglUniform2ui64ARB;
void ecb_glUniform2ui64ARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM3UI64ARB)(GLint,GLuint64,GLuint64,GLuint64);
WXE_EXTERN WXEGLUNIFORM3UI64ARB weglUniform3ui64ARB;
void ecb_glUniform3ui64ARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM4UI64ARB)(GLint,GLuint64,GLuint64,GLuint64,GLuint64);
WXE_EXTERN WXEGLUNIFORM4UI64ARB weglUniform4ui64ARB;
void ecb_glUniform4ui64ARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM1UI64VARB)(GLint,GLsizei,const GLuint64 *);
WXE_EXTERN WXEGLUNIFORM1UI64VARB weglUniform1ui64vARB;
void ecb_glUniform1ui64vARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM2UI64VARB)(GLint,GLsizei,const GLuint64 *);
WXE_EXTERN WXEGLUNIFORM2UI64VARB weglUniform2ui64vARB;
void ecb_glUniform2ui64vARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM3UI64VARB)(GLint,GLsizei,const GLuint64 *);
WXE_EXTERN WXEGLUNIFORM3UI64VARB weglUniform3ui64vARB;
void ecb_glUniform3ui64vARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUNIFORM4UI64VARB)(GLint,GLsizei,const GLuint64 *);
WXE_EXTERN WXEGLUNIFORM4UI64VARB weglUniform4ui64vARB;
void ecb_glUniform4ui64vARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETUNIFORMI64VARB)(GLuint,GLint,GLint64 *);
WXE_EXTERN WXEGLGETUNIFORMI64VARB weglGetUniformi64vARB;
void ecb_glGetUniformi64vARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETUNIFORMUI64VARB)(GLuint,GLint,GLuint64 *);
WXE_EXTERN WXEGLGETUNIFORMUI64VARB weglGetUniformui64vARB;
void ecb_glGetUniformui64vARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM1I64ARB)(GLuint,GLint,GLint64);
WXE_EXTERN WXEGLPROGRAMUNIFORM1I64ARB weglProgramUniform1i64ARB;
void ecb_glProgramUniform1i64ARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM2I64ARB)(GLuint,GLint,GLint64,GLint64);
WXE_EXTERN WXEGLPROGRAMUNIFORM2I64ARB weglProgramUniform2i64ARB;
void ecb_glProgramUniform2i64ARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM3I64ARB)(GLuint,GLint,GLint64,GLint64,GLint64);
WXE_EXTERN WXEGLPROGRAMUNIFORM3I64ARB weglProgramUniform3i64ARB;
void ecb_glProgramUniform3i64ARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM4I64ARB)(GLuint,GLint,GLint64,GLint64,GLint64,GLint64);
WXE_EXTERN WXEGLPROGRAMUNIFORM4I64ARB weglProgramUniform4i64ARB;
void ecb_glProgramUniform4i64ARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM1I64VARB)(GLuint,GLint,GLsizei,const GLint64 *);
WXE_EXTERN WXEGLPROGRAMUNIFORM1I64VARB weglProgramUniform1i64vARB;
void ecb_glProgramUniform1i64vARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM2I64VARB)(GLuint,GLint,GLsizei,const GLint64 *);
WXE_EXTERN WXEGLPROGRAMUNIFORM2I64VARB weglProgramUniform2i64vARB;
void ecb_glProgramUniform2i64vARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM3I64VARB)(GLuint,GLint,GLsizei,const GLint64 *);
WXE_EXTERN WXEGLPROGRAMUNIFORM3I64VARB weglProgramUniform3i64vARB;
void ecb_glProgramUniform3i64vARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM4I64VARB)(GLuint,GLint,GLsizei,const GLint64 *);
WXE_EXTERN WXEGLPROGRAMUNIFORM4I64VARB weglProgramUniform4i64vARB;
void ecb_glProgramUniform4i64vARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM1UI64ARB)(GLuint,GLint,GLuint64);
WXE_EXTERN WXEGLPROGRAMUNIFORM1UI64ARB weglProgramUniform1ui64ARB;
void ecb_glProgramUniform1ui64ARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM2UI64ARB)(GLuint,GLint,GLuint64,GLuint64);
WXE_EXTERN WXEGLPROGRAMUNIFORM2UI64ARB weglProgramUniform2ui64ARB;
void ecb_glProgramUniform2ui64ARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM3UI64ARB)(GLuint,GLint,GLuint64,GLuint64,GLuint64);
WXE_EXTERN WXEGLPROGRAMUNIFORM3UI64ARB weglProgramUniform3ui64ARB;
void ecb_glProgramUniform3ui64ARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM4UI64ARB)(GLuint,GLint,GLuint64,GLuint64,GLuint64,GLuint64);
WXE_EXTERN WXEGLPROGRAMUNIFORM4UI64ARB weglProgramUniform4ui64ARB;
void ecb_glProgramUniform4ui64ARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM1UI64VARB)(GLuint,GLint,GLsizei,const GLuint64 *);
WXE_EXTERN WXEGLPROGRAMUNIFORM1UI64VARB weglProgramUniform1ui64vARB;
void ecb_glProgramUniform1ui64vARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM2UI64VARB)(GLuint,GLint,GLsizei,const GLuint64 *);
WXE_EXTERN WXEGLPROGRAMUNIFORM2UI64VARB weglProgramUniform2ui64vARB;
void ecb_glProgramUniform2ui64vARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM3UI64VARB)(GLuint,GLint,GLsizei,const GLuint64 *);
WXE_EXTERN WXEGLPROGRAMUNIFORM3UI64VARB weglProgramUniform3ui64vARB;
void ecb_glProgramUniform3ui64vARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLPROGRAMUNIFORM4UI64VARB)(GLuint,GLint,GLsizei,const GLuint64 *);
WXE_EXTERN WXEGLPROGRAMUNIFORM4UI64VARB weglProgramUniform4ui64vARB;
void ecb_glProgramUniform4ui64vARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOLORTABLE)(GLenum,GLenum,GLsizei,GLenum,GLenum,const GLvoid *);
WXE_EXTERN WXEGLCOLORTABLE weglColorTable;
void ecb_glColorTable(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOLORTABLEPARAMETERFV)(GLenum,GLenum,const GLfloat *);
WXE_EXTERN WXEGLCOLORTABLEPARAMETERFV weglColorTableParameterfv;
void ecb_glColorTableParameterfv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOLORTABLEPARAMETERIV)(GLenum,GLenum,const GLint *);
WXE_EXTERN WXEGLCOLORTABLEPARAMETERIV weglColorTableParameteriv;
void ecb_glColorTableParameteriv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOPYCOLORTABLE)(GLenum,GLenum,GLint,GLint,GLsizei);
WXE_EXTERN WXEGLCOPYCOLORTABLE weglCopyColorTable;
void ecb_glCopyColorTable(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETCOLORTABLE)(GLenum,GLenum,GLenum,GLvoid *);
WXE_EXTERN WXEGLGETCOLORTABLE weglGetColorTable;
void ecb_glGetColorTable(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETCOLORTABLEPARAMETERFV)(GLenum,GLenum,GLfloat *);
WXE_EXTERN WXEGLGETCOLORTABLEPARAMETERFV weglGetColorTableParameterfv;
void ecb_glGetColorTableParameterfv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETCOLORTABLEPARAMETERIV)(GLenum,GLenum,GLint *);
WXE_EXTERN WXEGLGETCOLORTABLEPARAMETERIV weglGetColorTableParameteriv;
void ecb_glGetColorTableParameteriv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOLORSUBTABLE)(GLenum,GLsizei,GLsizei,GLenum,GLenum,const GLvoid *);
WXE_EXTERN WXEGLCOLORSUBTABLE weglColorSubTable;
void ecb_glColorSubTable(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOPYCOLORSUBTABLE)(GLenum,GLsizei,GLint,GLint,GLsizei);
WXE_EXTERN WXEGLCOPYCOLORSUBTABLE weglCopyColorSubTable;
void ecb_glCopyColorSubTable(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCONVOLUTIONFILTER1D)(GLenum,GLenum,GLsizei,GLenum,GLenum,const GLvoid *);
WXE_EXTERN WXEGLCONVOLUTIONFILTER1D weglConvolutionFilter1D;
void ecb_glConvolutionFilter1D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCONVOLUTIONFILTER2D)(GLenum,GLenum,GLsizei,GLsizei,GLenum,GLenum,const GLvoid *);
WXE_EXTERN WXEGLCONVOLUTIONFILTER2D weglConvolutionFilter2D;
void ecb_glConvolutionFilter2D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCONVOLUTIONPARAMETERF)(GLenum,GLenum,GLfloat m[]);
WXE_EXTERN WXEGLCONVOLUTIONPARAMETERF weglConvolutionParameterf;
void ecb_glConvolutionParameterf(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCONVOLUTIONPARAMETERFV)(GLenum,GLenum,const GLfloat *);
WXE_EXTERN WXEGLCONVOLUTIONPARAMETERFV weglConvolutionParameterfv;
void ecb_glConvolutionParameterfv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCONVOLUTIONPARAMETERI)(GLenum,GLenum,GLint m[]);
WXE_EXTERN WXEGLCONVOLUTIONPARAMETERI weglConvolutionParameteri;
void ecb_glConvolutionParameteri(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCONVOLUTIONPARAMETERIV)(GLenum,GLenum,const GLint *);
WXE_EXTERN WXEGLCONVOLUTIONPARAMETERIV weglConvolutionParameteriv;
void ecb_glConvolutionParameteriv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOPYCONVOLUTIONFILTER1D)(GLenum,GLenum,GLint,GLint,GLsizei);
WXE_EXTERN WXEGLCOPYCONVOLUTIONFILTER1D weglCopyConvolutionFilter1D;
void ecb_glCopyConvolutionFilter1D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOPYCONVOLUTIONFILTER2D)(GLenum,GLenum,GLint,GLint,GLsizei,GLsizei);
WXE_EXTERN WXEGLCOPYCONVOLUTIONFILTER2D weglCopyConvolutionFilter2D;
void ecb_glCopyConvolutionFilter2D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETCONVOLUTIONFILTER)(GLenum,GLenum,GLenum,GLvoid *);
WXE_EXTERN WXEGLGETCONVOLUTIONFILTER weglGetConvolutionFilter;
void ecb_glGetConvolutionFilter(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETCONVOLUTIONPARAMETERFV)(GLenum,GLenum,GLfloat *);
WXE_EXTERN WXEGLGETCONVOLUTIONPARAMETERFV weglGetConvolutionParameterfv;
void ecb_glGetConvolutionParameterfv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETCONVOLUTIONPARAMETERIV)(GLenum,GLenum,GLint *);
WXE_EXTERN WXEGLGETCONVOLUTIONPARAMETERIV weglGetConvolutionParameteriv;
void ecb_glGetConvolutionParameteriv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSEPARABLEFILTER2D)(GLenum,GLenum,GLsizei,GLsizei,GLenum,GLenum,const GLvoid *,const GLvoid *);
WXE_EXTERN WXEGLSEPARABLEFILTER2D weglSeparableFilter2D;
void ecb_glSeparableFilter2D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETHISTOGRAM)(GLenum,GLboolean,GLenum,GLenum,GLvoid *);
WXE_EXTERN WXEGLGETHISTOGRAM weglGetHistogram;
void ecb_glGetHistogram(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETHISTOGRAMPARAMETERFV)(GLenum,GLenum,GLfloat *);
WXE_EXTERN WXEGLGETHISTOGRAMPARAMETERFV weglGetHistogramParameterfv;
void ecb_glGetHistogramParameterfv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETHISTOGRAMPARAMETERIV)(GLenum,GLenum,GLint *);
WXE_EXTERN WXEGLGETHISTOGRAMPARAMETERIV weglGetHistogramParameteriv;
void ecb_glGetHistogramParameteriv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETMINMAX)(GLenum,GLboolean,GLenum,GLenum,GLvoid *);
WXE_EXTERN WXEGLGETMINMAX weglGetMinmax;
void ecb_glGetMinmax(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETMINMAXPARAMETERFV)(GLenum,GLenum,GLfloat *);
WXE_EXTERN WXEGLGETMINMAXPARAMETERFV weglGetMinmaxParameterfv;
void ecb_glGetMinmaxParameterfv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETMINMAXPARAMETERIV)(GLenum,GLenum,GLint *);
WXE_EXTERN WXEGLGETMINMAXPARAMETERIV weglGetMinmaxParameteriv;
void ecb_glGetMinmaxParameteriv(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLHISTOGRAM)(GLenum,GLsizei,GLenum,GLboolean);
WXE_EXTERN WXEGLHISTOGRAM weglHistogram;
void ecb_glHistogram(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMINMAX)(GLenum,GLenum,GLboolean);
WXE_EXTERN WXEGLMINMAX weglMinmax;
void ecb_glMinmax(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLRESETHISTOGRAM)(GLenum);
WXE_EXTERN WXEGLRESETHISTOGRAM weglResetHistogram;
void ecb_glResetHistogram(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLRESETMINMAX)(GLenum);
WXE_EXTERN WXEGLRESETMINMAX weglResetMinmax;
void ecb_glResetMinmax(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCURRENTPALETTEMATRIXARB)(GLint);
WXE_EXTERN WXEGLCURRENTPALETTEMATRIXARB weglCurrentPaletteMatrixARB;
void ecb_glCurrentPaletteMatrixARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMATRIXINDEXUBVARB)(GLint,const GLubyte *);
WXE_EXTERN WXEGLMATRIXINDEXUBVARB weglMatrixIndexubvARB;
void ecb_glMatrixIndexubvARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMATRIXINDEXUSVARB)(GLint,const GLushort *);
WXE_EXTERN WXEGLMATRIXINDEXUSVARB weglMatrixIndexusvARB;
void ecb_glMatrixIndexusvARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMATRIXINDEXUIVARB)(GLint,const GLuint *);
WXE_EXTERN WXEGLMATRIXINDEXUIVARB weglMatrixIndexuivARB;
void ecb_glMatrixIndexuivARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSAMPLECOVERAGEARB)(GLfloat,GLboolean);
WXE_EXTERN WXEGLSAMPLECOVERAGEARB weglSampleCoverageARB;
void ecb_glSampleCoverageARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMAXSHADERCOMPILERTHREADSARB)(GLuint);
WXE_EXTERN WXEGLMAXSHADERCOMPILERTHREADSARB weglMaxShaderCompilerThreadsARB;
void ecb_glMaxShaderCompilerThreadsARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLEVALUATEDEPTHVALUESARB)();
WXE_EXTERN WXEGLEVALUATEDEPTHVALUESARB weglEvaluateDepthValuesARB;
void ecb_glEvaluateDepthValuesARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDELETEOBJECTARB)(GLhandleARB);
WXE_EXTERN WXEGLDELETEOBJECTARB weglDeleteObjectARB;
void ecb_glDeleteObjectARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLhandleARB (APIENTRY * WXEGLGETHANDLEARB)(GLenum);
WXE_EXTERN WXEGLGETHANDLEARB weglGetHandleARB;
void ecb_glGetHandleARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDETACHOBJECTARB)(GLhandleARB,GLhandleARB);
WXE_EXTERN WXEGLDETACHOBJECTARB weglDetachObjectARB;
void ecb_glDetachObjectARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLhandleARB (APIENTRY * WXEGLCREATESHADEROBJECTARB)(GLenum);
WXE_EXTERN WXEGLCREATESHADEROBJECTARB weglCreateShaderObjectARB;
void ecb_glCreateShaderObjectARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLSHADERSOURCEARB)(GLhandleARB,GLsizei,const GLchar **,const GLint *);
WXE_EXTERN WXEGLSHADERSOURCEARB weglShaderSourceARB;
void ecb_glShaderSourceARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOMPILESHADERARB)(GLhandleARB);
WXE_EXTERN WXEGLCOMPILESHADERARB weglCompileShaderARB;
void ecb_glCompileShaderARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLhandleARB (APIENTRY * WXEGLCREATEPROGRAMOBJECTARB)();
WXE_EXTERN WXEGLCREATEPROGRAMOBJECTARB weglCreateProgramObjectARB;
void ecb_glCreateProgramObjectARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLATTACHOBJECTARB)(GLhandleARB,GLhandleARB);
WXE_EXTERN WXEGLATTACHOBJECTARB weglAttachObjectARB;
void ecb_glAttachObjectARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLLINKPROGRAMARB)(GLhandleARB);
WXE_EXTERN WXEGLLINKPROGRAMARB weglLinkProgramARB;
void ecb_glLinkProgramARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUSEPROGRAMOBJECTARB)(GLhandleARB);
WXE_EXTERN WXEGLUSEPROGRAMOBJECTARB weglUseProgramObjectARB;
void ecb_glUseProgramObjectARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVALIDATEPROGRAMARB)(GLhandleARB);
WXE_EXTERN WXEGLVALIDATEPROGRAMARB weglValidateProgramARB;
void ecb_glValidateProgramARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETOBJECTPARAMETERFVARB)(GLhandleARB,GLenum,GLfloat *);
WXE_EXTERN WXEGLGETOBJECTPARAMETERFVARB weglGetObjectParameterfvARB;
void ecb_glGetObjectParameterfvARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETOBJECTPARAMETERIVARB)(GLhandleARB,GLenum,GLint *);
WXE_EXTERN WXEGLGETOBJECTPARAMETERIVARB weglGetObjectParameterivARB;
void ecb_glGetObjectParameterivARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETINFOLOGARB)(GLhandleARB,GLsizei,GLsizei *,GLchar *);
WXE_EXTERN WXEGLGETINFOLOGARB weglGetInfoLogARB;
void ecb_glGetInfoLogARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETATTACHEDOBJECTSARB)(GLhandleARB,GLsizei,GLsizei *,GLhandleARB *);
WXE_EXTERN WXEGLGETATTACHEDOBJECTSARB weglGetAttachedObjectsARB;
void ecb_glGetAttachedObjectsARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLint (APIENTRY * WXEGLGETUNIFORMLOCATIONARB)(GLhandleARB,const GLchar *);
WXE_EXTERN WXEGLGETUNIFORMLOCATIONARB weglGetUniformLocationARB;
void ecb_glGetUniformLocationARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETACTIVEUNIFORMARB)(GLhandleARB,GLuint,GLsizei,GLsizei *,GLint *,GLenum *,GLchar *);
WXE_EXTERN WXEGLGETACTIVEUNIFORMARB weglGetActiveUniformARB;
void ecb_glGetActiveUniformARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETUNIFORMFVARB)(GLhandleARB,GLint,GLfloat *);
WXE_EXTERN WXEGLGETUNIFORMFVARB weglGetUniformfvARB;
void ecb_glGetUniformfvARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETUNIFORMIVARB)(GLhandleARB,GLint,GLint *);
WXE_EXTERN WXEGLGETUNIFORMIVARB weglGetUniformivARB;
void ecb_glGetUniformivARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETSHADERSOURCEARB)(GLhandleARB,GLsizei,GLsizei *,GLchar *);
WXE_EXTERN WXEGLGETSHADERSOURCEARB weglGetShaderSourceARB;
void ecb_glGetShaderSourceARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDELETENAMEDSTRINGARB)(GLint,const GLchar *);
WXE_EXTERN WXEGLDELETENAMEDSTRINGARB weglDeleteNamedStringARB;
void ecb_glDeleteNamedStringARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLCOMPILESHADERINCLUDEARB)(GLuint,GLsizei,const GLchar **,const GLint *);
WXE_EXTERN WXEGLCOMPILESHADERINCLUDEARB weglCompileShaderIncludeARB;
void ecb_glCompileShaderIncludeARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLboolean (APIENTRY * WXEGLISNAMEDSTRINGARB)(GLint,const GLchar *);
WXE_EXTERN WXEGLISNAMEDSTRINGARB weglIsNamedStringARB;
void ecb_glIsNamedStringARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBUFFERPAGECOMMITMENTARB)(GLenum,GLintptr,GLsizeiptr,GLboolean);
WXE_EXTERN WXEGLBUFFERPAGECOMMITMENTARB weglBufferPageCommitmentARB;
void ecb_glBufferPageCommitmentARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLTEXPAGECOMMITMENTARB)(GLenum,GLint,GLint,GLint,GLint,GLsizei,GLsizei,GLsizei,GLboolean);
WXE_EXTERN WXEGLTEXPAGECOMMITMENTARB weglTexPageCommitmentARB;
void ecb_glTexPageCommitmentARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETCOMPRESSEDTEXIMAGEARB)(GLenum,GLint,void *);
WXE_EXTERN WXEGLGETCOMPRESSEDTEXIMAGEARB weglGetCompressedTexImageARB;
void ecb_glGetCompressedTexImageARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLLOADTRANSPOSEMATRIXFARB)(const GLfloat *);
WXE_EXTERN WXEGLLOADTRANSPOSEMATRIXFARB weglLoadTransposeMatrixfARB;
void ecb_glLoadTransposeMatrixfARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLLOADTRANSPOSEMATRIXDARB)(const GLdouble *);
WXE_EXTERN WXEGLLOADTRANSPOSEMATRIXDARB weglLoadTransposeMatrixdARB;
void ecb_glLoadTransposeMatrixdARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMULTTRANSPOSEMATRIXFARB)(const GLfloat *);
WXE_EXTERN WXEGLMULTTRANSPOSEMATRIXFARB weglMultTransposeMatrixfARB;
void ecb_glMultTransposeMatrixfARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMULTTRANSPOSEMATRIXDARB)(const GLdouble *);
WXE_EXTERN WXEGLMULTTRANSPOSEMATRIXDARB weglMultTransposeMatrixdARB;
void ecb_glMultTransposeMatrixdARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLWEIGHTBVARB)(GLint,const GLbyte *);
WXE_EXTERN WXEGLWEIGHTBVARB weglWeightbvARB;
void ecb_glWeightbvARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLWEIGHTSVARB)(GLint,const GLshort *);
WXE_EXTERN WXEGLWEIGHTSVARB weglWeightsvARB;
void ecb_glWeightsvARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLWEIGHTIVARB)(GLint,const GLint *);
WXE_EXTERN WXEGLWEIGHTIVARB weglWeightivARB;
void ecb_glWeightivARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLWEIGHTFVARB)(GLint,const GLfloat *);
WXE_EXTERN WXEGLWEIGHTFVARB weglWeightfvARB;
void ecb_glWeightfvARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLWEIGHTDVARB)(GLint,const GLdouble *);
WXE_EXTERN WXEGLWEIGHTDVARB weglWeightdvARB;
void ecb_glWeightdvARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLWEIGHTUBVARB)(GLint,const GLubyte *);
WXE_EXTERN WXEGLWEIGHTUBVARB weglWeightubvARB;
void ecb_glWeightubvARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLWEIGHTUSVARB)(GLint,const GLushort *);
WXE_EXTERN WXEGLWEIGHTUSVARB weglWeightusvARB;
void ecb_glWeightusvARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLWEIGHTUIVARB)(GLint,const GLuint *);
WXE_EXTERN WXEGLWEIGHTUIVARB weglWeightuivARB;
void ecb_glWeightuivARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLVERTEXBLENDARB)(GLint);
WXE_EXTERN WXEGLVERTEXBLENDARB weglVertexBlendARB;
void ecb_glVertexBlendARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETBUFFERPARAMETERIVARB)(GLenum,GLenum,GLint *);
WXE_EXTERN WXEGLGETBUFFERPARAMETERIVARB weglGetBufferParameterivARB;
void ecb_glGetBufferParameterivARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBINDATTRIBLOCATIONARB)(GLhandleARB,GLuint,const GLchar *);
WXE_EXTERN WXEGLBINDATTRIBLOCATIONARB weglBindAttribLocationARB;
void ecb_glBindAttribLocationARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLGETACTIVEATTRIBARB)(GLhandleARB,GLuint,GLsizei,GLsizei *,GLint *,GLenum *,GLchar *);
WXE_EXTERN WXEGLGETACTIVEATTRIBARB weglGetActiveAttribARB;
void ecb_glGetActiveAttribARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLint (APIENTRY * WXEGLGETATTRIBLOCATIONARB)(GLhandleARB,const GLchar *);
WXE_EXTERN WXEGLGETATTRIBLOCATIONARB weglGetAttribLocationARB;
void ecb_glGetAttribLocationARB(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLBLENDBARRIERKHR)();
WXE_EXTERN WXEGLBLENDBARRIERKHR weglBlendBarrierKHR;
void ecb_glBlendBarrierKHR(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLMAXSHADERCOMPILERTHREADSKHR)(GLuint);
WXE_EXTERN WXEGLMAXSHADERCOMPILERTHREADSKHR weglMaxShaderCompilerThreadsKHR;
void ecb_glMaxShaderCompilerThreadsKHR(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLDEPTHBOUNDSEXT)(GLclampd,GLclampd);
WXE_EXTERN WXEGLDEPTHBOUNDSEXT weglDepthBoundsEXT;
void ecb_glDepthBoundsEXT(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLint (APIENTRY * WXEGLUBUILD1DMIPMAPLEVELS)(GLenum,GLint,GLsizei,GLenum,GLenum,GLint,GLint,GLint,const void *);
WXE_EXTERN WXEGLUBUILD1DMIPMAPLEVELS wegluBuild1DMipmapLevels;
void ecb_gluBuild1DMipmapLevels(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLint (APIENTRY * WXEGLUBUILD1DMIPMAPS)(GLenum,GLint,GLsizei,GLenum,GLenum,const void *);
WXE_EXTERN WXEGLUBUILD1DMIPMAPS wegluBuild1DMipmaps;
void ecb_gluBuild1DMipmaps(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLint (APIENTRY * WXEGLUBUILD2DMIPMAPLEVELS)(GLenum,GLint,GLsizei,GLsizei,GLenum,GLenum,GLint,GLint,GLint,const void *);
WXE_EXTERN WXEGLUBUILD2DMIPMAPLEVELS wegluBuild2DMipmapLevels;
void ecb_gluBuild2DMipmapLevels(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLint (APIENTRY * WXEGLUBUILD2DMIPMAPS)(GLenum,GLint,GLsizei,GLsizei,GLenum,GLenum,const void *);
WXE_EXTERN WXEGLUBUILD2DMIPMAPS wegluBuild2DMipmaps;
void ecb_gluBuild2DMipmaps(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLint (APIENTRY * WXEGLUBUILD3DMIPMAPLEVELS)(GLenum,GLint,GLsizei,GLsizei,GLsizei,GLenum,GLenum,GLint,GLint,GLint,const void *);
WXE_EXTERN WXEGLUBUILD3DMIPMAPLEVELS wegluBuild3DMipmapLevels;
void ecb_gluBuild3DMipmapLevels(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLint (APIENTRY * WXEGLUBUILD3DMIPMAPS)(GLenum,GLint,GLsizei,GLsizei,GLsizei,GLenum,GLenum,const void *);
WXE_EXTERN WXEGLUBUILD3DMIPMAPS wegluBuild3DMipmaps;
void ecb_gluBuild3DMipmaps(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLboolean (APIENTRY * WXEGLUCHECKEXTENSION)(const GLubyte *,const GLubyte *);
WXE_EXTERN WXEGLUCHECKEXTENSION wegluCheckExtension;
void ecb_gluCheckExtension(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUCYLINDER)(GLUquadric *,GLdouble,GLdouble,GLdouble,GLint,GLint);
WXE_EXTERN WXEGLUCYLINDER wegluCylinder;
void ecb_gluCylinder(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUDELETEQUADRIC)(GLUquadric *);
WXE_EXTERN WXEGLUDELETEQUADRIC wegluDeleteQuadric;
void ecb_gluDeleteQuadric(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUDISK)(GLUquadric *,GLdouble,GLdouble,GLint,GLint);
WXE_EXTERN WXEGLUDISK wegluDisk;
void ecb_gluDisk(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef const GLubyte * (APIENTRY * WXEGLUERRORSTRING)(GLenum);
WXE_EXTERN WXEGLUERRORSTRING wegluErrorString;
void ecb_gluErrorString(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef const GLubyte * (APIENTRY * WXEGLUGETSTRING)(GLenum);
WXE_EXTERN WXEGLUGETSTRING wegluGetString;
void ecb_gluGetString(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLULOOKAT)(GLdouble,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLULOOKAT wegluLookAt;
void ecb_gluLookAt(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLUquadric * (APIENTRY * WXEGLUNEWQUADRIC)();
WXE_EXTERN WXEGLUNEWQUADRIC wegluNewQuadric;
void ecb_gluNewQuadric(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUORTHO2D)(GLdouble,GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLUORTHO2D wegluOrtho2D;
void ecb_gluOrtho2D(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUPARTIALDISK)(GLUquadric *,GLdouble,GLdouble,GLint,GLint,GLdouble,GLdouble);
WXE_EXTERN WXEGLUPARTIALDISK wegluPartialDisk;
void ecb_gluPartialDisk(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUPERSPECTIVE)(GLdouble,GLdouble,GLdouble,GLdouble);
WXE_EXTERN WXEGLUPERSPECTIVE wegluPerspective;
void ecb_gluPerspective(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUPICKMATRIX)(GLdouble,GLdouble,GLdouble,GLdouble,GLint *);
WXE_EXTERN WXEGLUPICKMATRIX wegluPickMatrix;
void ecb_gluPickMatrix(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLint (APIENTRY * WXEGLUPROJECT)(GLdouble,GLdouble,GLdouble,const GLdouble *,const GLdouble *,const GLint *,GLdouble *,GLdouble *,GLdouble *);
WXE_EXTERN WXEGLUPROJECT wegluProject;
void ecb_gluProject(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUQUADRICDRAWSTYLE)(GLUquadric *,GLenum);
WXE_EXTERN WXEGLUQUADRICDRAWSTYLE wegluQuadricDrawStyle;
void ecb_gluQuadricDrawStyle(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUQUADRICNORMALS)(GLUquadric *,GLenum);
WXE_EXTERN WXEGLUQUADRICNORMALS wegluQuadricNormals;
void ecb_gluQuadricNormals(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUQUADRICORIENTATION)(GLUquadric *,GLenum);
WXE_EXTERN WXEGLUQUADRICORIENTATION wegluQuadricOrientation;
void ecb_gluQuadricOrientation(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUQUADRICTEXTURE)(GLUquadric *,GLboolean);
WXE_EXTERN WXEGLUQUADRICTEXTURE wegluQuadricTexture;
void ecb_gluQuadricTexture(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLint (APIENTRY * WXEGLUSCALEIMAGE)(GLenum,GLsizei,GLsizei,GLenum,const void *,GLsizei,GLsizei,GLenum,GLvoid *);
WXE_EXTERN WXEGLUSCALEIMAGE wegluScaleImage;
void ecb_gluScaleImage(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef void (APIENTRY * WXEGLUSPHERE)(GLUquadric *,GLdouble,GLint,GLint);
WXE_EXTERN WXEGLUSPHERE wegluSphere;
void ecb_gluSphere(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLint (APIENTRY * WXEGLUUNPROJECT)(GLdouble,GLdouble,GLdouble,const GLdouble *,const GLdouble *,const GLint *,GLdouble *,GLdouble *,GLdouble *);
WXE_EXTERN WXEGLUUNPROJECT wegluUnProject;
void ecb_gluUnProject(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
typedef GLint (APIENTRY * WXEGLUUNPROJECT4)(GLdouble,GLdouble,GLdouble,GLdouble,const GLdouble *,const GLdouble *,const GLint *,GLdouble,GLdouble,GLdouble *,GLdouble *,GLdouble *,GLdouble *);
WXE_EXTERN WXEGLUUNPROJECT4 wegluUnProject4;
void ecb_gluUnProject4(ErlNifEnv* env, ErlNifPid *self, ERL_NIF_TERM argv[]);
