<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE chapter SYSTEM "chapter.dtd">

<chapter>
  <header>
    <copyright>
      <year>2003</year><year>2013</year>
      <holder>Ericsson AB. All Rights Reserved.</holder>
    </copyright>
    <legalnotice>
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at
 
          http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.
    
    </legalnotice>

    <title>Mibs</title>
    <prepared>Ingela Anderton</prepared>
    <docno></docno>
    <date>2003-05-19</date>
    <rev>A</rev>
    <file>mibs.xml</file>
  </header>

  <section>
    <title>Structure</title>
    <p>The OTP mibs are stored in the
      <c>$OTP_ROOT/lib/otp_mibs/mibs/</c> directory. They
      are defined in SNMPv2 SMI syntax. An SNMPv1 version of the mib is
      delivered in the <c>mibs/v1</c> directory. The compiled MIB is
      located under <c>priv/mibs</c>, and the generated <c>.hrl</c>
      file under the <c>include</c> directory. To compile a MIB that
      IMPORTS a MIB in the OTP_Mibs application, give the option
      <c>{il, ["otp_mibs/priv/mibs"]}</c> to the MIB compiler.</p>
  </section>

  <section>
    <title>OTP-MIB</title>
    <p>The OTP-MIB mib represents information about Erlang nodes such as
      node name, number of running processes, virtual machine version
      etc. If the MIB should be used in a system, it should be
      loaded into an SNMP agent by using the API function
      <c>otp_mib:load/1</c>.</p>
  </section>

  <section>
    <title>OTP-REG</title>
    <p>The OTP-REG mib defines the unique OTP subtree of object
      identifiers under the Ericsson subtree. Under the OTP subtree
      several object identifiers are defined. This module is typically
      included by OTP applications defining their own mibs, or ASN.1
      modules in general, that require unique object identifiers under
      the OTP subtree.</p>
  </section>

  <section>
    <title>OTP-TC</title>
    <p>The OTP-TC mib provides the textual convention datatype
      <c>OwnerString</c>.</p>
  </section>
</chapter>


