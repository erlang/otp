<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">

<erlref>
  <header>
    <copyright>
      <year>2000</year><year>2013</year>
      <holder>Ericsson AB. All Rights Reserved.</holder>
    </copyright>
    <legalnotice>
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at
 
          http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.
    
    </legalnotice>

    <title>CosNotification_QoSAdmin</title>
    <prepared></prepared>
    <docno></docno>
    <checked></checked>
    <date>2000-02-01</date>
    <rev>1.0</rev>
  </header>
  <module>CosNotification_QoSAdmin</module>
  <modulesummary>This module implements the OMG  CosNotification::QoSAdmin interface.</modulesummary>
  <description>
    <p>To get access to the record definitions for the structures use:      <br></br>
<c>-include_lib("cosNotification/include/*.hrl").</c></p>
    <p>All objects, which inherit this interface, export functions described in this module.</p>
  </description>
  <funcs>
    <func>
      <name>get_qos(Object) -> Reply</name>
      <fsummary>Return a list of name-value pairs which encapsulates the current QoS settings for the target object</fsummary>
      <type>
        <v>Object = #objref</v>
        <v>Reply = [QoSProperty]</v>
        <v>QoSProperty = #'CosNotification_Property'{name, value}</v>
        <v>name = string()</v>
        <v>value = #any</v>
      </type>
      <desc>
        <p>This operation returns a list of name-value pairs which encapsulates the current QoS settings
          for the target object.</p>
      </desc>
    </func>
    <func>
      <name>set_qos(Object, QoS) -> Reply</name>
      <fsummary>Change the QoS settings for the target object</fsummary>
      <type>
        <v>Object = #objref</v>
        <v>QoS = [QoSProperty]</v>
        <v>QoSProperty = #'CosNotification_Property'{name, value}</v>
        <v>name = string()</v>
        <v>value = #any</v>
        <v>Reply = ok | {'EXCEPTION', #'CosNotification_UnsupportedQoS'{qos_err}}</v>
        <v>qos_err = PropertyErrorSeq</v>
        <v>PropertyErrorSeq = [PropertyError]</v>
        <v>PropertyError = #'CosNotification_PropertyError'{code, name, available_range}</v>
        <v>code = 'UNSUPPORTED_PROPERTY' | 'UNAVAILABLE_PROPERTY' | 'UNSUPPORTED_VALUE' |  'UNAVAILABLE_VALUE' | 'BAD_PROPERTY' | 'BAD_TYPE' | 'BAD_VALUE'</v>
        <v>name = string()</v>
        <v>available_range = PropertyRange</v>
        <v>PropertyRange = #CosNotification_PropertyRange{low_val, high_val}</v>
        <v>low_val = high_val = #any</v>
      </type>
      <desc>
        <p>To alter the current QoS settings for the target object this function must be used.
          If it is not possible to set the requested QoS the <c>UnsupportedQoS</c>
          exception is raised, which includes a sequence of <c>PropertyError</c>'s
          describing which QoS, possible range and why is not allowed.</p>
      </desc>
    </func>
    <func>
      <name>validate_qos(Object, QoS) -> Reply</name>
      <fsummary>Validate if the supplied QoS properties is valid for the target object </fsummary>
      <type>
        <v>Object = #objref</v>
        <v>QoS = [QoSProperty]</v>
        <v>QoSProperty = #'Property'{name, value}</v>
        <v>name = string()</v>
        <v>value = #any</v>
        <v>Reply = {ok, NamedPropertyRangeSeq} |  {'EXCEPTION', CosNotification_UnsupportedQoS{}}</v>
        <v>NamedPropertyRangeSeq = [NamedPropertyRange]</v>
        <v>NamedPropertyRange = #CosNotification_NamedPropertyRange{name, range}</v>
        <v>name = string()</v>
        <v>range = #CosNotification_PropertyRange{low_val, high_val}</v>
        <v>low_val = #any</v>
        <v>high_val = #any</v>
      </type>
      <desc>
        <p>The purpose of this operations is to check if a QoS setting is supported 
          by the target object and if so, the operation returns additional properties 
          which could be optionally added as well.</p>
      </desc>
    </func>
  </funcs>
  
</erlref>

