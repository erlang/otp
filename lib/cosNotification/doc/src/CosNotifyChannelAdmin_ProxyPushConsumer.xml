<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">

<erlref>
  <header>
    <copyright>
      <year>2000</year>
      <year>2013</year>
      <holder>Ericsson AB, All Rights Reserved</holder>
    </copyright>
    <legalnotice>
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
 
      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

  The Initial Developer of the Original Code is Ericsson AB.
    </legalnotice>

    <title>CosNotifyChannelAdmin_ProxyPushConsumer</title>
    <prepared></prepared>
    <responsible></responsible>
    <docno></docno>
    <approved>Niclas Eklund</approved>
    <checked></checked>
    <date>2000-02-01</date>
    <rev>1.0</rev>
  </header>
  <module>CosNotifyChannelAdmin_ProxyPushConsumer</module>
  <modulesummary>This module implements the OMG  CosNotifyChannelAdmin::ProxyPushConsumer interface.</modulesummary>
  <description>
    <p>To get access to the record definitions for the structures use:      <br></br>
<c>-include_lib("cosNotification/include/*.hrl").</c></p>
    <p>This module also exports the functions described in:</p>
    <list type="bulleted">
      <item>
        <p><seealso marker="CosNotifyComm_NotifyPublish">CosNotifyComm_NotifyPublish</seealso></p>
      </item>
      <item>
        <p><seealso marker="CosNotification_QoSAdmin">CosNotification_QoSAdmin</seealso></p>
      </item>
      <item>
        <p><seealso marker="CosNotifyFilter_FilterAdmin">CosNotifyFilter_FilterAdmin</seealso></p>
      </item>
      <item>
        <p><seealso marker="CosNotifyChannelAdmin_ProxyConsumer">CosNotifyChannelAdmin_ProxyConsumer</seealso></p>
      </item>
    </list>
  </description>
  <funcs>
    <func>
      <name>connect_any_push_supplier(ProxyPushConsumer, PushSupplier) -> Reply</name>
      <fsummary>Connect a supplier to the proxy</fsummary>
      <type>
        <v>ProxyPushConsumer = #objref</v>
        <v>PushSupplier = #objref</v>
        <v>Reply = ok | {'EXCEPTION', #'CosEventChannelAdmin_AlreadyConnected'{}}</v>
      </type>
      <desc>
        <p>This operation connects a <c>PushSupplier</c> to the target object. If
          a connection already exists the <c>AlreadyConnected</c> exception is raised.</p>
      </desc>
    </func>
    <func>
      <name>push(ProxyPushConsumer, Event) -> Reply</name>
      <fsummary>Push an Any event to the proxy</fsummary>
      <type>
        <v>ProxyPushConsumer = #objref</v>
        <v>Event = #any</v>
        <v>Reply = ok | {'EXCEPTION', #'CosEventChannelAdmin_Disconnected'{}}</v>
      </type>
      <desc>
        <p>This operation pushes an <c>#any{}</c> event to the target object. If no client
          have been connected the <c>Disconnected</c> exception is raised.</p>
      </desc>
    </func>
    <func>
      <name>disconnect_push_consumer(ProxyPushConsumer) -> ok</name>
      <fsummary>Close the connection and terminate the proxy</fsummary>
      <type>
        <v>ProxyPushConsumer = #objref</v>
      </type>
      <desc>
        <p>Invoking this operation will cause the target object to close the connection and
          terminate.</p>
      </desc>
    </func>
  </funcs>
  
</erlref>

