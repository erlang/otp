

// %CopyrightBegin%
// 
// Copyright Ericsson AB 1998-2010. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// 
// %CopyrightEnd%
// Really uggly pragmas


struct S {

#pragma ID TDL1 "LOCAL:SomeLocalId:1"
#pragma ID TDL1 "LOCAL:SomeLocalId:2"

long a

#pragma ID TDL1 "LOCAL:SomeLocalId:3"
#pragma ID TDL1 "LOCAL:SomeLocalId:4"

;

#pragma ID TDL1 "LOCAL:SomeLocalId:5"
#pragma ID TDL1 "LOCAL:SomeLocalId:6"

long b

#pragma ID TDL1 "LOCAL:SomeLocalId:7"
#pragma ID TDL1 "LOCAL:SomeLocalId:8"

;


#pragma ID TDL1 "LOCAL:SomeLocalId:9"
#pragma ID TDL1 "LOCAL:SomeLocalId:10"

};


typedef long TDL1;


exception Exc1{

#pragma version Exc1 2.2
#pragma ID TDL2 "LOCAL:SomeLocalId:11"

};


typedef long TDL2;


exception Exc2 {

#pragma version Exc2 2.2
#pragma ID TDL3 "LOCAL:SomeLocalId:11"
  
  long a
    
#pragma ID TDL3 "LOCAL:SomeLocalId:12"
#pragma ID TDL3 "LOCAL:SomeLocalId:13"
    
    ;
  
#pragma ID TDL3 "LOCAL:SomeLocalId:14"
#pragma ID TDL3 "LOCAL:SomeLocalId:15"
  
  long b 

#pragma ID TDL3 "LOCAL:SomeLocalId:16"

    ;
  
#pragma ID TDL3 "LOCAL:SomeLocalId:17"
  
  
};

typedef long TDL3;

enum E { 
#pragma ID E "LOCAL:SomeLocalId:18"
  a
#pragma ID E "LOCAL:SomeLocalId:19"
  , 
#pragma ID E "LOCAL:SomeLocalId:20"
  b
#pragma ID E "LOCAL:SomeLocalId:21"
, 
#pragma ID E "LOCAL:SomeLocalId:22"
  c 
#pragma ID E "LOCAL:SomeLocalId:23"
};



union U switch (long) {

#pragma ID TDL4 "LOCAL:SomeLocalId:24"

 case 1:

#pragma ID TDL4 "LOCAL:SomeLocalId:25"

   long a

#pragma ID TDL4 "LOCAL:SomeLocalId:26"

;

#pragma ID TDL4 "LOCAL:SomeLocalId:27"

 case 2: 
   
#pragma ID TDL4 "LOCAL:SomeLocalId:28"

 case 3:

#pragma ID TDL4 "LOCAL:SomeLocalId:29"

long b

#pragma ID TDL4 "LOCAL:SomeLocalId:30"

;

#pragma ID TDL4 "LOCAL:SomeLocalId:31"

 default : 

#pragma ID TDL4 "LOCAL:SomeLocalId:32"

long c

#pragma ID TDL4 "LOCAL:SomeLocalId:33"

;

#pragma ID TDL4 "LOCAL:SomeLocalId:34"

};
 

typedef long TDL4;



module M {

  interface I {

    void fun1(
	     
#pragma version fun1 3.0
#pragma ID TDL5 "LOCAL:SomeLocalId:35" 
	     
	     in short b

#pragma ID TDL5 "LOCAL:SomeLocalId:36"
#pragma ID TDL5 "LOCAL:SomeLocalId:37" 

	     ,

#pragma ID TDL5 "LOCAL:SomeLocalId:38"
#pragma ID TDL5 "LOCAL:SomeLocalId:39" 

	     out short c

#pragma ID TDL5 "LOCAL:SomeLocalId:40" 
#pragma ID TDL5 "LOCAL:SomeLocalId:41" 

	      );


    typedef long TDL5;


    void fun2(

#pragma ID TDL6 "LOCAL:SomeLocalId:42"
#pragma ID TDL6 "LOCAL:SomeLocalId:43" 

	      );

    typedef long TDL6;
 
 };

  
  
};
  
