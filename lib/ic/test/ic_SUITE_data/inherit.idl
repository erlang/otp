

// %CopyrightBegin%
// 
// Copyright Ericsson AB 1997-2010. All Rights Reserved.
// 
// The contents of this file are subject to the Erlang Public License,
// Version 1.1, (the "License"); you may not use this file except in
// compliance with the License. You should have received a copy of the
// Erlang Public License along with this software. If not, it can be
// retrieved online at http://www.erlang.org/.
// 
// Software distributed under the License is distributed on an "AS IS"
// basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
// the License for the specific language governing rights and limitations
// under the License.
// 
// %CopyrightEnd%


interface I1 {
  typedef long T1;
  typedef struct S1 {long a; boolean b;} T2;
  typedef string StringT, StringT_arr[10];

  T1 op1( in StringT a, inout char b, out StringT_arr c );
  T2 op2( in char a, inout char b, out StringT_arr c );

  const T1 LongC = 10;
  const StringT StringC = "Hola bambino";

};


interface I2 : I1 {
  T1 op3( in long a);
  
  const long c1 = LongC;
  const string c2 = StringC;
};

interface I3 : I1 {};

interface I4 : I3, I2 {};	// Check that branced inherit works



// Now use cnstants to check that inheritance works as expected

module m1 {
  interface I1 {
    typedef long T1;
    
    const T1 c1 = 9;
  };

  interface I2 : I1 {
    const T1 c2 = c1+5;		// c2 = 14
    const long c3 = c2+c1+4;	// c3 = 27
  };

  interface I3 : I2, I1 {
    const long c1 = 50;		// Overrides I1::c1
    const T1 c4 = c1+c2+c3;	// c4=91
    const T1 c5 = I1::c1+c1+c2+c3; // 100
  };
};

