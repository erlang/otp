<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">

<erlref>
  <header>
    <copyright>
      <year>2001</year>
      <year>2013</year>
      <holder>Ericsson AB, All Rights Reserved</holder>
    </copyright>
    <legalnotice>
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
 
      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

  The Initial Developer of the Original Code is Ericsson AB.
    </legalnotice>

    <title>cosEventDomainApp</title>
    <prepared>Niclas Eklund</prepared>
    <responsible>Niclas Eklund</responsible>
    <docno></docno>
    <approved>Niclas Eklund</approved>
    <checked></checked>
    <date>2001-08-20</date>
    <rev>PA1</rev>
  </header>
  <module>cosEventDomainApp</module>
  <modulesummary>The main module of the cosEventDomain application.</modulesummary>
  <description>
    <p>To get access to the record definitions for the structures use:<br></br><c><![CDATA[-include_lib("cosEventDomain/include/*.hrl").]]></c></p>
    <p>This module contains the functions for starting and stopping the application.</p>
  </description>
  <funcs>
    <func>
      <name>install() -> Return</name>
      <fsummary>Install the cosEventDomain application</fsummary>
      <type>
        <v>Return = ok | {'EXCEPTION', E} | {'EXIT', R}</v>
      </type>
      <desc>
        <p>This operation installs the cosEventDomain application.</p>
      </desc>
    </func>
    <func>
      <name>uninstall() -> Return</name>
      <fsummary>Uninstall the cosEventDomain application</fsummary>
      <type>
        <v>Return = ok | {'EXCEPTION', E} | {'EXIT', R}</v>
      </type>
      <desc>
        <p>This operation uninstalls the cosEventDomain application.</p>
      </desc>
    </func>
    <func>
      <name>start() -> Return</name>
      <fsummary>Start the cosEventDomain application</fsummary>
      <type>
        <v>Return = ok | {error, Reason}</v>
      </type>
      <desc>
        <p>This operation starts the cosEventDomain application.</p>
      </desc>
    </func>
    <func>
      <name>stop() -> Return</name>
      <fsummary>Stop the cosEventDomain application</fsummary>
      <type>
        <v>Return = ok | {error, Reason}</v>
      </type>
      <desc>
        <p>This operation stops the cosEventDomain application.</p>
      </desc>
    </func>
    <func>
      <name>start_factory() -> Factory</name>
      <fsummary>Start a factory with default settings</fsummary>
      <type>
        <v>Factory = #objref</v>
      </type>
      <desc>
        <p>This operation creates a new instance of a
          <seealso marker="CosEventDomainAdmin_EventDomainFactory">Event Domain Factory</seealso>
          using the default settings.</p>
      </desc>
    </func>
    <func>
      <name>start_factory(Options) -> Factory</name>
      <fsummary>Start a factory with settings defined by the given options</fsummary>
      <type>
        <v>Options = [Option]</v>
        <v>Option = currently no options defined.</v>
        <v>Factory = #objref</v>
      </type>
      <desc>
        <p>This operation creates a new instance of a
          <seealso marker="CosEventDomainAdmin_EventDomainFactory">Event Domain Factory</seealso></p>
      </desc>
    </func>
    <func>
      <name>start_factory_link() -> Factory</name>
      <fsummary>Start a factory, which is linked to the invoking process,  with default settings</fsummary>
      <type>
        <v>Factory = #objref</v>
      </type>
      <desc>
        <p>This operation creates a new instance of a
          <seealso marker="CosEventDomainAdmin_EventDomainFactory">Event Domain Factory</seealso>,
          which is linked to the invoking process, using the default settings.</p>
      </desc>
    </func>
    <func>
      <name>start_factory_link(Options) -> Factory</name>
      <fsummary>Start a factory, which is linked to the invoking process, with  settings defined by the given options</fsummary>
      <type>
        <v>Options = [Option]</v>
        <v>Option = currently no options defined.</v>
        <v>Factory = #objref</v>
      </type>
      <desc>
        <p>This operation creates a new instance of a
          <seealso marker="CosEventDomainAdmin_EventDomainFactory">Event Domain Factory</seealso>,
          which is linked to the invoking process, with settings defined by the
          given options. Allowed options are the same as for 
          <c><![CDATA[cosEventDomainApp:start_factory/1]]></c>.</p>
      </desc>
    </func>
    <func>
      <name>stop_factory(Factory) -> Reply</name>
      <fsummary>Terminate the target object</fsummary>
      <type>
        <v>Factory = #objref</v>
        <v>Reply = ok | {'EXCEPTION', E}</v>
      </type>
      <desc>
        <p>This operation stop the target factory.</p>
      </desc>
    </func>
  </funcs>
  
</erlref>

