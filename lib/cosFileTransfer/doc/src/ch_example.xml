<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE chapter SYSTEM "chapter.dtd">

<chapter>
  <header>
    <copyright>
      <year>2000</year><year>2013</year>
      <holder>Ericsson AB. All Rights Reserved.</holder>
    </copyright>
    <legalnotice>
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at
 
          http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.
    
    </legalnotice>

    <title>cosFileTransfer Examples</title>
    <prepared></prepared>
    <docno></docno>
    <date>2000-08-24</date>
    <rev>A</rev>
    <file>ch_example.xml</file>
  </header>

  <section>
    <title>A tutorial on how to create a simple service</title>

    <section>
      <title>Initiate the application</title>
      <p>To use the complete cosFileTransfer application cosProperty
        must be installed.</p>
    </section>

    <section>
      <title>How to run everything</title>
      <p>Below is a short transcript on how to run cosFileTransfer. </p>
      <code type="none">
 
%% Start Mnesia and Orber
mnesia:delete_schema([node()]),
mnesia:create_schema([node()]),
orber:install([node()]),
mnesia:start(),
orber:start(),
 
%% The File Transfer Service depends on the cosProperty
%% application. Hence, we must install cosProperty first.
%% It's NOT necessary to invoke cosProperty:install_db().
cosProperty:install(),     

%% Install File Transfer Service in the IFR.
cosFileTransfer:install(),     

%% Now start the application and necessary services.
cosFileTransfer:start(),

%% Create two Virtual File Systems respectively representing an FTP-
%% and the local NFS file system.
VFSFTP = cosFileTransferApp:create_VFS('FTP', [], FTPHost, 21),
VFSNATIVE = cosFileTransferApp:
            create_VFS({'NATIVE', 'cosFileTransferNATIVE_file'}, 
                       [], MyLocalHost, 0),

%% Login to each system.
{FSFTP, DirFTP} = 'CosFileTransfer_VirtualFileSystem':
                  login(VFSFTP, "myId", "myPwd", "myAccount"),
{FSNATIVE, DirNATIVE} = 'CosFileTransfer_VirtualFileSystem':
                        login(VFSNATIVE, "myId", "myPwd", "myAccount"),

%% If we want to copy a file from the NFS to the FTP we must first
%% create a File object which contains its attributes.
Target = 'CosFileTransfer_FileTransferSession':create_file(FSFTP, 
                          ["/", "ftp", "incoming", "targetFile"])),

 #'CosFileTransfer_FileWrapper'{the_file = Dir} = 
%% Lookup the file we want to copy.
FileWrapper = 'CosFileTransfer_FileTransferSession':get_file(FSNATIVE, 
                          ["/", "home", "myId", "sourceFile"]),
Source = FileWrapper#'CosFileTransfer_FileWrapper'.the_file,

%% Now we are ready to transfer the file. Please note that we most
%% call the source Session object.
'CosFileTransfer_FileTransferSession':transfer(FSNATIVE, Source, Target),
      </code>
    </section>
  </section>
</chapter>

