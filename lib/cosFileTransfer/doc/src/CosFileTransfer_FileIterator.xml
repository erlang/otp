<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">

<erlref>
  <header>
    <copyright>
      <year>2000</year><year>2013</year>
      <holder>Ericsson AB. All Rights Reserved.</holder>
    </copyright>
    <legalnotice>
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at
 
          http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.
    
    </legalnotice>

    <title>CosFileTransfer_FileIterator</title>
    <prepared></prepared>
    <docno></docno>
    <checked></checked>
    <date>2000-11-09</date>
    <rev>PA1</rev>
  </header>
  <module>CosFileTransfer_FileIterator</module>
  <modulesummary>This module implements the OMG CosFileTransfer::FileIterator interface.</modulesummary>
  <description>
    <p>To get access to the record definitions for the structures use:      <br></br>
<c>-include_lib("cosFileTransfer/include/*.hrl").</c></p>
  </description>
  <funcs>
    <func>
      <name>next_one(Iterator) -> Return</name>
      <fsummary>Return the next <c>FileWrapper</c>and a boolean which indicate whether the <c>FileWrapper</c>is valid or not.</fsummary>
      <type>
        <v>Iterator = #objref</v>
        <v>Return = {boolean(), #'CosFileTransfer_FileWrapper'{the_file = File file_type = Type}}</v>
        <v>File = #objref</v>
        <v>Type = nfile | ndirectory</v>
      </type>
      <desc>
        <p>This operation returns true if a <c>FileWrapper</c> exists at the
          current position and the out parameter contains a valid <c>File</c>
          reference. If false is returned the out parameter is a non-valid 
          <c>FileWrapper</c>.</p>
      </desc>
    </func>
    <func>
      <name>next_n(Iterator, Max) -> Return</name>
      <fsummary>Return a list, of length <c>Max</c>or less, containing <c>FileWrappers</c>and a boolean which indicates if more <c>FileWrappers</c>exists</fsummary>
      <type>
        <v>Iterator = #objref</v>
        <v>Max = unsigned long()</v>
        <v>Return = {boolean(), FileList}</v>
        <v>FileList = [#'CosFileTransfer_FileWrapper'{the_file = File file_type = Type}]</v>
        <v>File = #objref</v>
        <v>Type = nfile | ndirectory</v>
      </type>
      <desc>
        <p>This operation returns true if the requested number of <c>FileWrappers</c> 
          can be delivered and there are additional <c>FileWrappers</c>. If false is 
          returned a list, of length <c>Max</c> or less, containing the last valid
          <c>FileWrappers</c> associated with the target object.</p>
      </desc>
    </func>
    <func>
      <name>destroy(Iterator) -> ok</name>
      <fsummary>Terminate the target object</fsummary>
      <type>
        <v>Iterator = #objref</v>
      </type>
      <desc>
        <p>This operation terminates the target object.</p>
      </desc>
    </func>
  </funcs>
  
</erlref>

