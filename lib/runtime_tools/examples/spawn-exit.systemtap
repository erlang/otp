/*
 * %CopyrightBegin%
 *
 * Copyright Scott Lystig Fritchie and Andreas Schultz, 2011-2012. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * %CopyrightEnd%
 */
/*
 * Note: This file assumes that you're using the non-SMP-enabled Erlang
 *       virtual machine, "beam".  The SMP-enabled VM is called "beam.smp".
 *       Note that other variations of the virtual machine also have
 *       different names, e.g. the debug build of the SMP-enabled VM
 *       is "beam.debug.smp".
 *
 *       To use a different virtual machine, replace each instance of
 *       "beam" with "beam.smp" or the VM name appropriate to your
 *       environment.
 */

probe process("beam").mark("process-spawn")
{
    printf("pid %s mfa %s\n", user_string($arg1), user_string($arg2));
}

probe process("beam").mark("process-exit")
{
    printf("pid %s reason %s\n", user_string($arg1), user_string($arg2));
}

probe process("beam").mark("process-exit_signal")
{
    printf("sender %s -> pid %s reason %s\n",
	   user_string($arg1), user_string($arg2), user_string($arg3));
}

probe process("beam").mark("process-exit_signal-remote")
{
    printf("sender %s -> node %s pid %s reason %s\n",
	   user_string($arg1), user_string($arg2), user_string($arg3), user_string($arg4));
}
