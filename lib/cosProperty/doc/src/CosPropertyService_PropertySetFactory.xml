<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">

<erlref>
  <header>
    <copyright>
      <year>2000</year>
      <year>2013</year>
      <holder>Ericsson AB, All Rights Reserved</holder>
    </copyright>
    <legalnotice>
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
 
      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

  The Initial Developer of the Original Code is Ericsson AB.
    </legalnotice>

    <title>CosPropertyService_PropertySetFactory</title>
    <prepared></prepared>
    <responsible></responsible>
    <docno></docno>
    <approved></approved>
    <checked></checked>
    <date>2000-07-25</date>
    <rev>1.0</rev>
  </header>
  <module>CosPropertyService_PropertySetFactory</module>
  <modulesummary>This module implements the OMG CosPropertyService::PropertySetFactory interface.</modulesummary>
  <description>
    <p>To get access to the record definitions for the structures use:      <br></br>
<c>-include_lib("cosProperty/include/CosPropertyService.hrl").</c></p>
  </description>
  <funcs>
    <func>
      <name>create_propertyset(Factory) -> PropertySet</name>
      <fsummary>Create a new <c>PropertySe</c>t with no predefined  properties</fsummary>
      <type>
        <v>Factory = PropertySet = #objref</v>
      </type>
      <desc>
        <p>This operation creates a new <c>PropertySe</c>t with no predefined 
          properties.</p>
      </desc>
    </func>
    <func>
      <name>create_constrained_propertyset(Factory, PropertyTypes, Properties) -> Reply</name>
      <fsummary>Create a new <c>PropertySet</c>with specified constraints</fsummary>
      <type>
        <v>Factory = #objref</v>
        <v>PropertyTypes = [CORBA::TypeCode]</v>
        <v>Properties = [#'CosPropertyService_Property'{property_name = Name, property_value = Value}]</v>
        <v>Name = string()</v>
        <v>Value = #any</v>
        <v>Reply = {'EXCEPTION', #CosPropertyService_ConstraintNotSupported{}} | PropertySet</v>
        <v>PropertySet = #objref</v>
      </type>
      <desc>
        <p>This operation creates a new <c>PropertySet</c> with specific constraints.
          PropertyTypes states allowed TypeCode's and Properties valid 
          <c>CosPropertyService::Property</c> data.</p>
      </desc>
    </func>
    <func>
      <name>create_initial_propertyset(Factory, Properties) -> Reply</name>
      <fsummary>Create a new <c>PropertySet</c>with specified  initial properties</fsummary>
      <type>
        <v>Factory = #objref</v>
        <v>Properties = [#'CosPropertyService_Property'{property_name = Name, property_value = Value}]</v>
        <v>Name = string()</v>
        <v>Value = #any</v>
        <v>Reply = {'EXCEPTION', #CosPropertyService_MultipleExceptions{exceptions = Excs}} | PropertySet</v>
        <v>Excs = [#'CosPropertyService_PropertyException{reason = Reason, failing_property_name = Name}]</v>
        <v>Reason = invalid_property_name | conflicting_property | property_not_found | unsupported_type_code | unsupported_property | unsupported_mode | fixed_property | read_only_property</v>
        <v>PropertySet = #objref</v>
      </type>
      <desc>
        <p>This operation creates a new <c>PropertySet</c> with specific 
          initial properties.</p>
      </desc>
    </func>
  </funcs>
  
</erlref>

