<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">

<erlref>
  <header>
    <copyright>
      <year>2000</year><year>2013</year>
      <holder>Ericsson AB. All Rights Reserved.</holder>
    </copyright>
    <legalnotice>
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at
 
          http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.
    
    </legalnotice>

    <title>cosProperty</title>
    <prepared></prepared>
    <docno></docno>
    <checked></checked>
    <date>2000-06-07</date>
    <rev>PA1</rev>
  </header>
  <module>cosProperty</module>
  <modulesummary>The main module of the cosProperty application</modulesummary>
  <description>
    <p>To get access to the record definitions for the structures use:      <br></br>
<c>-include_lib("cosProperty/include/*.hrl").</c></p>
    <p>This module contains the functions for starting and stopping the application.</p>
  </description>
  <funcs>
    <func>
      <name>install() -> Return</name>
      <fsummary>Install the cosProperty application in the IFR</fsummary>
      <type>
        <v>Return = ok | {'EXIT', Reason}</v>
      </type>
      <desc>
        <p>This operation installs the cosProperty application in the IFR.</p>
      </desc>
    </func>
    <func>
      <name>install_db() -> Return</name>
      <fsummary>Install data in mnesia necessary for running the  cosProperty application</fsummary>
      <type>
        <v>Return = ok | {'EXIT', Reason}</v>
      </type>
      <desc>
        <p>This operation installs data in mnesia necessary for running the 
          cosProperty application.</p>
      </desc>
    </func>
    <func>
      <name>uninstall() -> Return</name>
      <fsummary>Remove all data in the IFR related to the cosProperty  application</fsummary>
      <type>
        <v>Return = ok | {'EXIT', Reason}</v>
      </type>
      <desc>
        <p>This operation removes all data in the IFR related to the cosProperty 
          application.</p>
      </desc>
    </func>
    <func>
      <name>uninstall_db() -> Return</name>
      <fsummary>Remove all data from mnesia related to the cosProperty application</fsummary>
      <type>
        <v>Return = ok | {'EXIT', Reason}</v>
      </type>
      <desc>
        <p>This operation removes all data from mnesia related to the cosProperty
          application.</p>
      </desc>
    </func>
    <func>
      <name>start() -> Return</name>
      <fsummary>Start the cosProperty application</fsummary>
      <type>
        <v>Return = ok | {error, Reason}</v>
      </type>
      <desc>
        <p>This operation starts the cosProperty application.</p>
      </desc>
    </func>
    <func>
      <name>start_SetDefFactory() -> Return</name>
      <fsummary>Start a PropertySetDef Factory</fsummary>
      <type>
        <v>Return = Factory | {'EXCEPTION', E}</v>
        <v>Factory = CosPropertyService::PropertySetDefFactory reference.</v>
      </type>
      <desc>
        <p>This operation starts a PropertySetDef Factory.</p>
      </desc>
    </func>
    <func>
      <name>start_SetFactory() -> Return</name>
      <fsummary>Start a PropertySet Factory</fsummary>
      <type>
        <v>Return = Factory | {'EXCEPTION', E}</v>
        <v>Factory = CosPropertyService::PropertySetDefFactory reference.</v>
      </type>
      <desc>
        <p>This operation starts a PropertySet Factory.</p>
      </desc>
    </func>
    <func>
      <name>stop_SetDefFactory(Factory) -> Return</name>
      <fsummary>Stop the given PropertySetDef Factory</fsummary>
      <type>
        <v>Factory = CosPropertyService::PropertySetDefFactory reference.</v>
        <v>Return = ok | {'EXCEPTION', E}</v>
      </type>
      <desc>
        <p>This operation stops the supplied PropertySetDef Factory.</p>
      </desc>
    </func>
    <func>
      <name>stop_SetFactory(Factory) -> Return</name>
      <fsummary>Stop the given PropertySet Factory</fsummary>
      <type>
        <v>Factory = CosPropertyService::PropertySetFactory reference.</v>
        <v>Return = ok | {'EXCEPTION', E}</v>
      </type>
      <desc>
        <p>This operation stops the supplied PropertySet Factory.</p>
      </desc>
    </func>
    <func>
      <name>stop() -> Return</name>
      <fsummary>Stop the cosProperty application</fsummary>
      <type>
        <v>Return = ok | {error, Reason}</v>
      </type>
      <desc>
        <p>This operation stops the cosProperty application.</p>
      </desc>
    </func>
  </funcs>
  
</erlref>

