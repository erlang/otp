<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">

<erlref>
  <header>
    <copyright>
      <year>2000</year><year>2013</year>
      <holder>Ericsson AB. All Rights Reserved.</holder>
    </copyright>
    <legalnotice>
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at
 
          http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.
    
    </legalnotice>

    <title>CosPropertyService_PropertiesIterator</title>
    <prepared></prepared>
    <docno></docno>
    <checked></checked>
    <date>2000-07-25</date>
    <rev>1.0</rev>
  </header>
  <module>CosPropertyService_PropertiesIterator</module>
  <modulesummary>This module implements the OMG CosPropertyService::PropertiesIterator interface.</modulesummary>
  <description>
    <p>To get access to the record definitions for the structures use:      <br></br>
<c>-include_lib("cosProperty/include/CosPropertyService.hrl").</c></p>
  </description>
  <funcs>
    <func>
      <name>reset(Iterator) -> ok</name>
      <fsummary>Reset the position to the first property</fsummary>
      <type>
        <v>Iterator = #objref</v>
      </type>
      <desc>
        <p>This operation resets the position to the first property. </p>
      </desc>
    </func>
    <func>
      <name>next_one(Iterator) -> Reply</name>
      <fsummary>Return true if a Property exists at the current position  and the out parameter is a valid Property. Otherwise false and a non-valid property</fsummary>
      <type>
        <v>Iterator = #objref</v>
        <v>Reply = {boolean(), #'CosPropertyService_Property'{property_name = Name, property_value = Value}}</v>
        <v>Name = string()</v>
        <v>Value = #any</v>
      </type>
      <desc>
        <p>This operation returns true . If false is returned the out 
          parameter is a non-valid Property.</p>
      </desc>
    </func>
    <func>
      <name>next_n(Iterator, HowMany) -> Reply</name>
      <fsummary>Return true if the requested number of properties can be delivered and there are additional properties. Otherwise false is returned and a sequence of max <c>HowMany</c>properties</fsummary>
      <type>
        <v>Iterator = #objref</v>
        <v>HowMany = long()</v>
        <v>Reply = {boolean(), Properties}</v>
        <v>Properties = [#'CosPropertyService_Property'{property_name = Name, property_value = Value}]</v>
        <v>Name = string()</v>
        <v>Value = #any</v>
      </type>
      <desc>
        <p>This operation returns true if the requested number of properties can be
          delivered and there are additional properties. If false is returned and a 
          sequence of max <c>HowMany</c> properties will be returned and no more 
          properties can be delivered. </p>
      </desc>
    </func>
    <func>
      <name>destroy(Iterator) -> ok</name>
      <fsummary>Terminate the target object</fsummary>
      <type>
        <v>Iterator = #objref</v>
      </type>
      <desc>
        <p>This operation will terminate the Iterator and all subsequent calls
          will fail. </p>
      </desc>
    </func>
  </funcs>
  
</erlref>

