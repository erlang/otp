
predef.erl:19:2: Invalid type specification for function predef:array/1.
 The success typing is predef:array(array:array(_)) -> array:array(_)
 But the spec is predef:array(array()) -> array:array()
 They do not overlap in the 1st argument
predef.erl:24:2: Invalid type specification for function predef:dict/1.
 The success typing is predef:dict(dict:dict(_,_)) -> dict:dict(_,_)
 But the spec is predef:dict(dict()) -> dict:dict()
 They do not overlap in the 1st argument
predef.erl:29:2: Invalid type specification for function predef:digraph/1.
 The success typing is predef:digraph(digraph:graph()) -> [any()]
 But the spec is predef:digraph(digraph()) -> [digraph:edge()]
 They do not overlap in the 1st argument
predef.erl:39:2: Invalid type specification for function predef:gb_set/1.
 The success typing is predef:gb_set(gb_sets:set(_)) -> gb_sets:set(_)
 But the spec is predef:gb_set(gb_set()) -> gb_sets:set()
 They do not overlap in the 1st argument
predef.erl:44:2: Invalid type specification for function predef:gb_tree/1.
 The success typing is predef:gb_tree(gb_trees:tree(_,_)) -> gb_trees:tree(_,_)
 But the spec is predef:gb_tree(gb_tree()) -> gb_trees:tree()
 They do not overlap in the 1st argument
predef.erl:49:2: Invalid type specification for function predef:queue/1.
 The success typing is predef:queue(queue:queue(_)) -> queue:queue(_)
 But the spec is predef:queue(queue()) -> queue:queue()
 They do not overlap in the 1st argument
predef.erl:54:2: Invalid type specification for function predef:set/1.
 The success typing is predef:set(sets:set(_)) -> sets:set(_)
 But the spec is predef:set(set()) -> sets:set()
 They do not overlap in the 1st argument
