<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE appref SYSTEM "appref.dtd">

<appref>
  <header>
    <copyright>
      <year>2005</year><year>2022</year>
      <holder>Ericsson AB. All Rights Reserved.</holder>
    </copyright>
    <legalnotice>
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at
 
          http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.

    </legalnotice>

    <title>STDLIB</title>
    <prepared></prepared>
    <docno></docno>
    <date></date>
    <rev></rev>
  </header>
  <app>STDLIB</app>
  <appsummary>The STDLIB application.</appsummary>
  <description>
    <p>The STDLIB application is mandatory in the sense that the minimal
      system based on Erlang/OTP consists of Kernel and STDLIB.
      The STDLIB application contains no services.</p>
  </description>

  <section>
    <title>Configuration</title>
    <p>The following configuration parameters are defined for the STDLIB
      application. For more information about configuration parameters, see the
      <seefile marker="kernel:app"><c>app(4)</c></seefile> module in Kernel.</p>

    <taglist>
      <tag><marker id="shell_esc"/><c>shell_esc = icl | abort</c></tag>
      <item>
        <p>Can be used to change the behavior of the Erlang shell when
          <em>^G</em> is pressed.</p>
      </item>
      <tag><marker id="restricted_shell"/><c>restricted_shell = module()</c></tag>
      <item>
        <p>Can be used to run the Erlang shell in restricted mode.</p>
      </item>
      <tag><marker id="shell_catch_exception"/><c>shell_catch_exception = boolean()</c></tag>
      <item>
        <p>Can be used to set the exception handling of the evaluator process of
          Erlang shell.</p>
      </item>
      <tag><marker id="shell_expand_location"/><c>shell_expand_location = above | below</c></tag>
      <item>
          <p>Sets where the tab expansion text should appear in the shell.
            The default is <c>below</c>.</p>
      </item>
      <tag><marker id="shell_history_length"/><c>shell_history_length = integer() >= 0</c></tag>
      <item>
        <p>Can be used to determine how many commands are saved by the Erlang
          shell.</p>
      </item>
      <tag><marker id="shell_prompt_func"/><c>shell_prompt_func = {Mod, Func} | default</c></tag>
      <item>
        <p>where</p>
        <list type="bulleted">
          <item><c>Mod = atom()</c></item>
          <item><c>Func = atom()</c></item>
        </list>
        <p>Can be used to set a customized Erlang shell prompt function.</p>
      </item>
      <tag><marker id="shell_saved_results"/><c>shell_saved_results = integer() >= 0</c></tag>
      <item>
        <p>Can be used to determine how many results are saved by the Erlang
          shell.</p>
      </item>
      <tag><marker id="shell_session_slogan"/><c>shell_session_slogan = string() | fun() -> string())</c></tag>
      <item>
        <p>The slogan printed when starting an Erlang shell. Example: </p>
        <code type="erl">
$ erl -stdlib shell_session_slogan '"Test slogan"'
Erlang/OTP 26 [DEVELOPMENT] [erts-13.0.2] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:1] [jit:ns]

Test slogan
1>
        </code>
      </item>
      <tag><marker id="shell_slogan"/><c>shell_slogan = string() | fun(() -> string())</c></tag>
      <item>
        <p>The slogan printed when starting the Erlang shell subsystem. Example: </p>
        <code type="erl">
$ erl -stdlib shell_slogan '"Test slogan"'
Test slogan
Eshell V13.0.2  (abort with ^G)
1>
        </code>
        <p>The default is the return value of <seeerl marker="erts:erlang#system_info_system_version">
          <c>erlang:system_info(system_version)</c></seeerl>.</p>
      </item>
      <tag><marker id="shell_strings"/><c>shell_strings = boolean()</c></tag>
      <item>
        <p>Can be used to determine how the Erlang shell outputs lists of
          integers.</p>
      </item>
    </taglist>
  </section>

  <section>
    <title>See Also</title>
    <p><seefile marker="kernel:app"><c>app(4)</c></seefile>,
      <seeerl marker="kernel:application"><c>application(3)</c></seeerl>,
      <seeerl marker="shell">shell(3)</seeerl></p>
  </section>
</appref>

