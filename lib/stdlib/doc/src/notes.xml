<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE chapter SYSTEM "chapter.dtd">

<chapter>
  <header>
    <copyright>
      <year>2004</year><year>2022</year>
      <holder>Ericsson AB. All Rights Reserved.</holder>
    </copyright>
    <legalnotice>
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at
 
          http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.

    </legalnotice>

    <title>STDLIB Release Notes</title>
    <prepared></prepared>
    <docno></docno>
    <date></date>
    <rev></rev>
    <file>notes.xml</file>
  </header>
  <p>This document describes the changes made to the STDLIB application.</p>

<section><title>STDLIB 5.0</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    All process calls in <c>dets</c> have been updated to use
	    the receive queue optimizations.</p>
          <p>
	    Own Id: OTP-18275 Aux Id: PR-6045 </p>
        </item>
        <item>
	    <p> <c>proc_lib:start*/*</c> has become synchronous when
	    the started process fails. This requires that a failing
	    process use a new function <c>proc_lib:init_fail/2,3</c>,
	    or exits, to indicate failure. All OTP behaviours have
	    been fixed to do this. </p><p> All these start functions
	    now consume the <c>'EXIT'</c> message from a process link
	    for all error returns. Previously it was only the
	    <c>start_link/*</c> functions that did this, and only
	    when the started function exited, not when it used
	    <c>init_ack/1,2</c> or <c>init_fail/2,3</c> to create the
	    return value. </p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-18471 Aux Id: GH-6339, PR-6843 </p>
        </item>
        <item>
	    <p>Fixed a bug where <c>file:read(standard_io, ...)</c>
	    unexpectedly returned <c>eof</c> in binary mode.</p>
          <p>
	    Own Id: OTP-18486 Aux Id: PR-6881 </p>
        </item>
        <item>
	    <p>In the shell, <c>v(N)</c> would fail to retrieve the
	    command if the command's return value was
	    <c>undefined</c>.</p>
          <p>
	    Own Id: OTP-18548 Aux Id: PR-6967 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>The Erlang shell has been improved to support the
	    following features:</p> <list> <item>Auto-complete
	    variables, record names, record field names, map keys,
	    function parameter types and filenames.</item> <item>Open
	    external editor in the shell (with C-o) to edit the
	    current expression in an editor.</item> <item>Support
	    defining records (with types), functions and function
	    typespecs, and custom types in the shell.</item> <item>Do
	    not save pager commands, and input to io:getline in
	    history.</item> </list>
          <p>
	    Own Id: OTP-14835 Aux Id: PR-5924 </p>
        </item>
        <item>
          <p>
	    Gen_server now caches external functions for use in
	    handle_call, handle_cast and handle_info.</p>
          <p>
	    Own Id: OTP-15597 Aux Id: PR-5831 </p>
        </item>
        <item>
	    <p>The TTY/terminal subsystem has been rewritten by
	    moving more code to Erlang from the old linked-in driver
	    and implementing all the I/O primitives needed in a NIF
	    instead. </p><p> On Unix platforms the user should not
	    notice a lot of difference, besides better handling of
	    unicode characters and fixing of some long standing bugs.
	    </p><p> Windows users will notice that erl.exe has the
	    same functionality as a normal Unix shell and that
	    werl.exe has been removed and replaced with a symlink to
	    erl.exe. This makes the Windows Erlang terminal
	    experience identical to that of Unix. </p><p> The
	    re-write brings with it a number of bug fixes and feature
	    additions:</p> <list> <item>The TTY is now reset when
	    Erlang exits, fixing zsh to not break when terminating an
	    Erlang session.</item> <item><c>standard_error</c> now
	    uses the same unicode mode as <c>standard_io</c>.</item>
	    <item>Hitting backspace when searching the shell history
	    with an empty search string no longer breaks the
	    shell.</item> <item>Tab expansion now works on remote
	    nodes started using the JCL interface.</item> <item>It is
	    now possible to configure the shell slogan and the
	    session slogans (that is the texts that appear when you
	    start an Erlang shell). See the kernel documentation for
	    more details.</item> <item>Added shell:start_interactive
	    for starting the interactive shell from a non-interactive
	    Erlang session (for example an escript).</item> <item>On
	    Windows, when starting in detached mode the standard
	    handler are now set to <c>nul</c> devices instead of
	    being unset.</item> <item> Standard I/O now always
	    defaults to <c>unicode</c> mode if supported. Previously
	    the default was <c>latin1</c> if the runtime system had
	    been started with <c>-oldshell</c> or <c>-noshell</c>
	    (for example in an <c>escript</c>). To send raw bytes
	    over standard out, one now explicitly has to specify
	    <c>io:setopts(standard_io, [{encoding, latin1}]).</c>
	    </item> </list>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-17932 Aux Id: PR-6144 GH-3150 GH-3390 GH-4343
	    GH-4225 </p>
        </item>
        <item>
	    <p>Added the <c>zip:zip_get_crc32/2</c> function to
	    retrieve the CRC32 checksum from an opened ZIP
	    archive.</p>
          <p>
	    Own Id: OTP-18159 Aux Id: PR-6904 </p>
        </item>
        <item>
          <p>
	    Added the options <c>post_process_args</c> and
	    <c>detached</c> to the <c>peer:start</c> function.</p>
          <p>
	    Own Id: OTP-18176 Aux Id: PR-6118 </p>
        </item>
        <item>
	    <p>The <c>re:replace/3,4</c> functions now accept a fun
	    as the replacement argument.</p>
          <p>
	    Own Id: OTP-18221 Aux Id: PR-6197 </p>
        </item>
        <item>
	    <p>The performance of the <c>base64</c> module has been
	    significantly improved. For example, on an x86_64 system
	    with the JIT both encode and decode are more than three
	    times faster than in Erlang/OTP 25.</p>
          <p>
	    Own Id: OTP-18228 Aux Id: GH-5639 </p>
        </item>
        <item>
          <p>
	    Improved implementation of <seemfa
	    marker="stdlib:timer#apply_interval/4"><c>timer:apply_interval/4</c></seemfa>
	    reducing load on the timer server, and introduction of
	    the new function <seemfa
	    marker="stdlib:timer#apply_repeatedly/4"><c>timer:apply_repeatedly/4</c></seemfa>.
	    <c>timer:apply_repeatedly/4</c> is similar to
	    <c>timer:apply_interval/4</c>, but
	    <c>timer:apply_repeatedly/4</c> prevents parallel
	    execution of triggered <c>apply</c> operations which
	    <c>timer:apply_interval/4</c> does not.</p>
          <p>
	    Own Id: OTP-18236 Aux Id: PR-6256 </p>
        </item>
        <item>
	    <p>The <c>base64</c> module now supports encoding and
	    decoding with an alternate URL safe alphabet, and an
	    option for accepting or adding missing <c>=</c> padding
	    characters.</p>
          <p>
	    Own Id: OTP-18247 Aux Id: PR-6280, PR-6711 </p>
        </item>
        <item>
          <p>
	    Add <c>shell:whereis/0</c> which can be used to locate
	    the current shell process.</p>
          <p>
	    Own Id: OTP-18272 Aux Id: PR-6279 </p>
        </item>
        <item>
          <p>
	    The Erlang shell's auto-completion when typing <c>tab</c>
	    has been changed to happen after the editing current line
	    instead of before it.</p>
          <p>
	    This behaviour can be configured using a the
	    <c>shell_expand_location</c> STDLIB configuration
	    parameter.</p>
          <p>
	    Own Id: OTP-18278 Aux Id: PR-6260 </p>
        </item>
        <item>
          <p>
	    New function <c>ets:lookup_element/4</c> with a
	    <c>Default</c> argument returned if the key did not exist
	    in the table. The old <c>ets:lookup_element/3</c> raises
	    a <c>badarg</c> exception which can be both inconvenient
	    and slower.</p>
          <p>
	    Own Id: OTP-18279 Aux Id: PR-6234 </p>
        </item>
        <item>
          <p>
	    Typing <c>Ctrl+L</c> in a shell now clears the screen and
	    redraws the current line instead of only redrawing the
	    current line. To only redraw the current line, you must
	    now type <c>Alt+L</c>. This brings the behaviour of
	    <c>Ctrl+L</c> closer to how bash and other shells work.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-18285 Aux Id: PR-6262 </p>
        </item>
        <item>
          <p>
	    <c>peer</c> nodes using <c>standard_io</c> connections
	    now include standard error from the node in the io stream
	    from the started node.</p>
          <p>
	    Own Id: OTP-18287 Aux Id: PR-5955 </p>
        </item>
        <item>
	    <p>A limitation in the binary syntax has been removed. It
	    is now possible to match binary patterns in parallel.
	    Example: <c>&lt;&lt;A:8&gt;&gt; = &lt;&lt;B:4,C:4&gt;&gt;
	    = Bin</c></p>
          <p>
	    Own Id: OTP-18297 Aux Id: GH-6348 </p>
        </item>
        <item>
          <p>
	    Improve type specification of
	    <c>unicode:characters_to_list()</c>.</p>
          <p>
	    Own Id: OTP-18301 Aux Id: PR-6350 </p>
        </item>
        <item>
	    <p>In the <c>lists</c> module, the <c>zip</c> family of
	    functions now takes options to allow handling lists of
	    different lengths.</p>
          <p>
	    Own Id: OTP-18318 Aux Id: PR-6347 </p>
        </item>
        <item>
	    <p>It is documented that <c>$\^X</c> is the ASCII code
	    for Control X, where X is an uppercase or lowercase
	    letter. However, this notation would work for any
	    character X, even then it didn't make sense.</p>
	    <p>In Erlang/OTP 26, it is now documented that the
	    following characters are also allowed to follow the
	    <c>\^</c> characters: <c>@</c>, <c>[</c>, <c>\</c>,
	    <c>]</c>, <c>^</c>, <c>_</c>, and <c>?</c>. Attempt to
	    use other characters will be rejected with a compiler
	    error.</p>
	    <p>The value for <c>$\^?</c> is now 127 (instead of 31 as
	    in earlier releases).</p>
          <p>
	    Own Id: OTP-18337 Aux Id: GH-6477, PR-6503 </p>
        </item>
        <item>
	    <p>The <c>binary:encode_hex/2</c> function has been added
	    to allow the encoded hexadecimal digits to be in either
	    lower or upper case.</p>
          <p>
	    Own Id: OTP-18354 Aux Id: PR-6297 </p>
        </item>
        <item>
          <p>
	    Variants of <c>timer:tc()</c> with user specified time
	    unit have been introduced.</p>
          <p>
	    Own Id: OTP-18355 Aux Id: PR-6507 </p>
        </item>
        <item>
          <p>
	    New function <c>math:tau/0</c>. Returns
	    <c>2*math:pi()</c>.</p>
          <p>
	    Own Id: OTP-18361 Aux Id: PR-6536 </p>
        </item>
        <item>
	    <p>The BIFs <c>min/2</c> and <c>max/2</c> are now allowed
	    to be used in guards and match specs.</p>
          <p>
	    Own Id: OTP-18367 Aux Id: GH-6544 </p>
        </item>
        <item>
          <p>
	    Optimized <c>gen_server:multi_call()</c>.</p>
          <p>
	    Own Id: OTP-18385 Aux Id: PR-6698 </p>
        </item>
        <item>
	    <p>Map comprehensions as suggested in EEP 58 has now been
	    implemented.</p>
          <p>
	    Own Id: OTP-18413 Aux Id: EEP-58, PR-6727 </p>
        </item>
        <item>
	    <p>Some map operations have been optimized by changing
	    the internal sort order of atom keys. This changes the
	    (undocumented) order of how atom keys in small maps are
	    printed and returned by <c>maps:to_list/1</c> and
	    <c>maps:next/1</c>. The new order is unpredictable and
	    may change between different invocations of the Erlang
	    VM.</p>
	    <p>For applications where order is important, there is a
	    new function <c>maps:iterator/2</c> for creating
	    iterators that return the map elements in a deterministic
	    order. There are also new modifiers <c>k</c> and <c>K</c>
	    for the format string for <c>io:format()</c> to support
	    printing map elements ordered.</p>
          <p>
	    Own Id: OTP-18414 Aux Id: PR-6151 </p>
        </item>
        <item>
          <p>
	    Make gen_server fail "silently" with a new return value
	    for init/1.</p>
          <p>
	    Own Id: OTP-18423 Aux Id:
	    https://github.com/erlang/backlog/issues/142 </p>
        </item>
        <item>
	    <p>Improved the selective receive optimization, which can
	    now be enabled for references returned from other
	    functions.</p>
	    <p>This greatly improves the performance of
	    <c>gen_server:send_request/3</c>,
	    <c>gen_server:wait_response/2</c>, and similar
	    functions.</p>
          <p>
	    Own Id: OTP-18431 Aux Id: PR-6739 </p>
        </item>
        <item>
	    <p>It is no longer necessary to enable a feature in the
	    runtime system in order to load modules that are using
	    it. It is sufficient to enable the feature in the
	    compiler when compiling it.</p>
	    <p>That means that to use feature <c>maybe_expr</c> in
	    Erlang/OTP 26, it is sufficient to enable it during
	    compilation.</p>
	    <p>In Erlang/OTP 27, feature <c>maybe_expr</c> will be
	    enabled by default, but it will be possible to disable
	    it.</p>
          <p>
	    Own Id: OTP-18445</p>
        </item>
        <item>
          <p>
	    Static supervisors are very idle processes after they
	    have started so they will now be hibernated after start
	    to improve resource management.</p>
          <p>
	    Own Id: OTP-18474 Aux Id: PR-6895 </p>
        </item>
        <item>
          <p>
	    Deprecates <c>dbg:stop_clear/0</c> because it is simply a
	    function alias to <c>dbg:stop/0</c></p>
          <p>
	    Own Id: OTP-18478 Aux Id: GH-6903 </p>
        </item>
        <item>
	    <p>Support has been added in <c>ms_transform</c> for the
	    actions <c>caller_line/0</c>,
	    <c>current_stacktrace/0</c>, and
	    <c>current_stacktrace/1</c>.</p>
          <p>
	    Own Id: OTP-18494 Aux Id: PR-6924 </p>
        </item>
        <item>
	    <p>The family of enumeration functions in module
	    <c>lists</c> has been extended with <c>enumerate/3</c>
	    that allows a step value to be supplied.</p>
          <p>
	    Own Id: OTP-18495 Aux Id: PR-6943 </p>
        </item>
        <item>
          <p>
	    Update Unicode to version 15.0.0.</p>
          <p>
	    Own Id: OTP-18500</p>
        </item>
        <item>
	    <p>The regular expression library powering the <c>re</c>
	    module is likely to be changed in Erlang/OTP 27. See
	    <seeguide
	    marker="system/general_info:upcoming_incompatibilities#new_re_engine">Upcoming
	    Potential Incompatibilities</seeguide>.</p>
          <p>
	    Own Id: OTP-18511 Aux Id: PR-7017 </p>
        </item>
        <item>
	    <p>Improved the performance of <c>sets:subtract/2</c>
	    when subtracting a small number of elements.</p>
          <p>
	    Own Id: OTP-18515 Aux Id: GH-6990 </p>
        </item>
        <item>
	    <p>The linter will no longer raise warnings for
	    underspecified opaque types.</p>
          <p>
	    Own Id: OTP-18518 Aux Id: GH-7015 </p>
        </item>
        <item>
	    <p>Added the new built-in type <c>dynamic()</c>
	    introduced in EEP-61, improving support for gradual type
	    checkers.</p>
          <p>
	    Own Id: OTP-18522</p>
        </item>
        <item>
          <p>
	    The by <c>gen_statem</c> previously used call proxy
	    process that was used for preventing late replies from
	    reaching the client at timeout or connection loss has
	    been removed. It is no longer needed since <i>process
	    aliases</i> take care of this, are used, and supported by
	    all Erlang nodes that an OTP 26 Erlang node can
	    communicate with.</p>
          <p>
	    Own Id: OTP-18537 Aux Id: PR-7081 </p>
        </item>
        <item>
	    <p>Added the <c>argparse</c> module for simplified
	    argument handling in escripts and similar.</p>
          <p>
	    Own Id: OTP-18558 Aux Id: PR-6852 </p>
        </item>
        <item>
	    <p>Added support for multiple line expressions and
	    navigation in the shell. Added new keybindings:</p>
	    <list> <item> navigate up (ctrl+up)/(alt+up) </item>
	    <item> navigate down (ctrl+down)/(alt+down) </item>
	    <item> insert newline in middle of line (alt+enter)
	    </item> <item> navigate top (alt+&lt;)/(alt+shift+up)
	    </item> <item> navigate bottom
	    (alt+&gt;)/(alt+shift+down) </item> <item> clear current
	    expression (alt+c) </item> <item> cancel search (alt+c)
	    </item> <item> opening editor on mac (option+o)/(alt+o)
	    </item> </list> <p>Modifies the prompt for new lines to
	    make it clearer that the prompt has entered multi-line
	    mode. Supports terminal with small window size, recommend
	    not go lower than 7 rows and 40 columns. Modifies the
	    search prompt to support multi-line statements. Redraw
	    the prompt after continuing from JCL menu. </p>
          <p>
	    Own Id: OTP-18575 Aux Id: PR-7169 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 4.3.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>The type specs in the <c>erl_parse</c> module has been
	    updated to include the <c>maybe</c> construct and the
	    <c>!</c> operator.</p>
          <p>
	    Own Id: OTP-18506 Aux Id: GH-6956 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 4.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a bug that would cause analysis to crash.</p>
          <p>
	    Own Id: OTP-18372 Aux Id: GH-6580 </p>
        </item>
        <item>
	    <p>Fixed a crash when formatting stack traces for error
	    reports.</p>
          <p>
	    Own Id: OTP-18375 Aux Id: GH-6591 </p>
        </item>
        <item>
	    <p>Instead of crashing, the <c>list_to_integer/1</c> and
	    <c>list_to_integer/2</c> BIFs now raise the
	    <c>system_limit</c> exception for overlong lists that
	    can't be converted to integers. Similarly, the
	    <c>string:to_integer/1</c> BIF now returns
	    <c>{error,system_limit}</c> for overlong lists.</p>
          <p>
	    Own Id: OTP-18475 Aux Id: PR-6897 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Removal of non-necessary <c>undefined</c> types added to
	    the state's <c>supervisor</c> record.</p>
          <p>
	    Own Id: OTP-18393 Aux Id: PR-6666 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 4.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p><c>erl_tar</c> can now read gzip-compressed tar files
	    that are padded. There is a new option
	    <c>compressed_one</c> for <c>file:open/2</c> that will
	    read a single member from a gzip file,</p>
          <p>
	    Own Id: OTP-18289 Aux Id: PR-6343 </p>
        </item>
        <item>
          <p>
	    A concurrent call to <c>ets:rename</c> could cause
	    <c>ets:delete_all_objects</c> to fail halfway through
	    with badarg.</p>
          <p>
	    Own Id: OTP-18292 Aux Id: PR-6366 </p>
        </item>
        <item>
	    <p>It is not allowed to call functions from guards. The
	    compiler failed to reject a call in a guard when done by
	    constructing a record with a default initialization
	    expression that called a function.</p>
          <p>
	    Own Id: OTP-18325 Aux Id: GH-6465, GH-6466 </p>
        </item>
        <item>
	    <p>The compiler could crash when using a record with
	    complex field initialization expression as a filter in a
	    list comprehension.</p>
          <p>
	    Own Id: OTP-18336 Aux Id: GH-6501, PR-6502 </p>
        </item>
        <item>
          <p>
	    <c>unicode:characters_to_binary()</c> could build
	    unnecessarily large call stack.</p>
          <p>
	    Own Id: OTP-18351 Aux Id: ERIERL-885, PR-6529 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Improve error message for ets:new/2 name clash. Say "name
	    already exists" instead of less specific "invalid
	    options".</p>
          <p>
	    Own Id: OTP-18283 Aux Id: PR-6338 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 4.1.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    <seeerl marker="stdlib:peer"><c>peer</c></seeerl> nodes
	    failed to halt when the process supervising the control
	    connection crashed. When an alternative control
	    connection was used, this supervision process also quite
	    frequently crashed when the <c>peer</c> node was stopped
	    by the node that started it which caused the <c>peer</c>
	    node to linger without ever halting.</p>
          <p>
	    Own Id: OTP-18249 Aux Id: PR-6301 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 4.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed inconsistency bugs in <seeerl
	    marker="kernel:global"><c>global</c></seeerl> due to
	    <c>nodeup</c>/<c>nodedown</c> messages not being
	    delivered before/after traffic over connections. Also
	    fixed various other inconsistency bugs and deadlocks in
	    both <seeerl
	    marker="kernel:global_group"><c>global_group</c></seeerl>
	    and <c>global</c>.</p>
          <p>
	    As building blocks for these fixes, a new BIF <seemfa
	    marker="erts:erlang#nodes/2"><c>erlang:nodes/2</c></seemfa>
	    has been introduced and <seemfa
	    marker="kernel:net_kernel#monitor_nodes/2"><c>net_kernel:monitor_nodes/2</c></seemfa>
	    has been extended.</p>
          <p>
	    The <seecom
	    marker="erts:erl#hidden"><c>-hidden</c></seecom> and
	    <seecom
	    marker="erts:erl#connect_all"><c>-connect_all</c></seecom>
	    command line arguments did not work if multiple instances
	    were present on the command line which has been fixed.
	    The new kernel parameter <seeapp
	    marker="kernel:kernel_app#connect_all"><c>connect_all</c></seeapp>
	    has also been introduced in order to replace the
	    <c>-connect_all</c> command line argument.</p>
          <p>
	    Own Id: OTP-17934 Aux Id: PR-6007 </p>
        </item>
        <item>
          <p>
	    Fix the <c>public_key:ssh*</c> functions to be listed
	    under the correct release in the Removed Functionality
	    User's Guide.</p>
          <p>
	    Own Id: OTP-18139 Aux Id: PR-6060 </p>
        </item>
        <item>
          <p>
	    The type spec for <c>format_status/1</c> in
	    <c>gen_statem</c>, <c>gen_server</c> and <c>gen_event</c>
	    has been corrected to state that the return value is of
	    the same type as the argument (instead of the same value
	    as the argument).</p>
          <p>
	    Own Id: OTP-18142 Aux Id: PR-6078 </p>
        </item>
        <item>
          <p>
	    If the <c>timer</c> server child spec was already present
	    in <c>kernel_sup</c> but it was not started, the
	    <c>timer</c> server would fail to start with an
	    <c>{error, already_present}</c> error instead of
	    restarting the server.</p>
          <p>
	    Own Id: OTP-18146 Aux Id: PR-5983 </p>
        </item>
        <item>
	    <p>When changing callback module in <c>gen_statem</c> the
	    state_enter calls flag from the old module was used in
	    for the first event in the new module, which could
	    confuse the new module and cause malfunction. This bug
	    has been corrected. </p><p> With this change some
	    <c>sys</c> debug message formats have been modified,
	    which can be a problem for debug code relying on the
	    format. </p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-18239</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>There is a new configure option,
	    <c>--enable-deterministic-build</c>, which will apply the
	    <c>deterministic</c> compiler option when building
	    Erlang/OTP. The <c>deterministic</c> option has been
	    improved to eliminate more sources of non-determinism in
	    several applications.</p>
          <p>
	    Own Id: OTP-18165 Aux Id: PR-5965 </p>
        </item>
        <item>
	    <p>The <c>rfc339_to_system_time/1,2</c> functions now
	    allows the minutes part to be omitted from the time
	    zone.</p>
          <p>
	    Own Id: OTP-18166 Aux Id: PR-6108 </p>
        </item>
        <item>
          <p>
	    The <c>receive</c> statement in <c>gen_event</c> has been
	    optimized to not use selective receive (which was never
	    needed, and could cause severe performance degradation
	    under heavy load).</p>
          <p>
	    Own Id: OTP-18194 Aux Id: PR-6199 </p>
        </item>
        <item>
          <p>
	    Add new API function erl_features:configurable/0</p>
          <p>
	    Own Id: OTP-18199 Aux Id: PR-5790 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 4.0.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    In the initial release of Erlang/OTP 25, the expression
	    bound to the <c>_</c> pseudo-field in a record
	    initialization would always be evaluated once, even if
	    all other fields in the record were explicitly
	    initialized. That would break the use case of binding the
	    expression <c>error(...)</c> to <c>_</c> in order to get
	    an exception if not all fields were initialized.</p>
          <p>
	    The behavior of binding to <c>_</c> has been reverted to
	    the pre-OTP 25 behavior, that is, to not evaluate the
	    expression if all fields have been bound to explicit
	    values.</p>
          <p>
	    Own Id: OTP-18110 Aux Id: GH-6000 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 4.0</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Improve the Erlang code linter's check of unused types.</p>
          <p>
	    Own Id: OTP-17370 Aux Id: GH-4784 </p>
        </item>
        <item>
          <p>
	    Fix race condition in <seemfa
	    marker="stdlib:proc_lib#stop/3"><c>proc_lib:stop/3</c></seemfa>
	    where the process is not stopped when the timeout given
	    is very short.</p>
          <p>
	    Own Id: OTP-17480 Aux Id: GH-4853 PR-4872 </p>
        </item>
        <item>
	    <p>Maps are now fully supported in by
	    <c>ms_transform</c>.</p>
          <p>
	    Own Id: OTP-17518 Aux Id: GH-4915 </p>
        </item>
        <item>
          <p>
	    Fix gen_server:call with the first argument as self() to
	    throw an error instead of failing with a timeout.</p>
          <p>
	    The same fix has also been done for gen_statem:call/3,
	    gen_event:sync_notify/2 and any other functionality
	    relying on the internal gen:call/3 function.</p>
          <p>
	    A similar fix was also done when using io:format/2 and
	    the current group_leader was set to the current process.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-17544 Aux Id: PR-5008 </p>
        </item>
        <item>
          <p>
	    erl_pp printed unary - and + operators with a space
	    between the operator and the operand. This is fixed by
	    not having any space in between.</p>
          <p>
	    Own Id: OTP-17566 Aux Id: PR-5095, GH-5093 </p>
        </item>
        <item>
          <p>
	    Adjust uri_string:normalize behavior for URIs with
	    undefined port (URI string with a port colon but no port
	    value or URI map with port => undefined).</p>
          <p>
	    Remove redundant normalization from http_request module.</p>
          <p>
	    Before this change, normalize would not remove port
	    subcomponent in such cases and could for example return
	    "http://localhost:" URI.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-17627</p>
        </item>
        <item>
          <p>
	    Fix reduction counting bug in <c>re:run</c> that caused
	    the function to yield too frequently when doing
	    <c>global</c> matches.</p>
          <p>
	    Own Id: OTP-17661 Aux Id: PR-5165 </p>
        </item>
        <item>
          <p>
	    Fix the memory value returned from
	    <c>ets:info(Tid,memory)</c> when the
	    <c>read_concurrency</c> option is used.</p>
          <p>
	    Before this fix the memory used by the scheduler specific
	    lock cache lines was not counted towards the total. This
	    caused the returned memory usage to be very incorrect on
	    systems with many schedulers for tables with man locks.</p>
          <p>
	    Own Id: OTP-17832 Aux Id: PR-5494 </p>
        </item>
        <item>
          <p>
	    Avoid confusion by correcting the argument order in the
	    gen_event crash log printout.</p>
          <p>
	    Own Id: OTP-17878</p>
        </item>
        <item>
          <p>
	    Fixed <c>string:next_grapheme/1</c> to return an empty
	    binary in the tail for binary input for the last grapheme
	    cluster.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-18009 Aux Id: PR-5785 </p>
        </item>
        <item>
          <p>
	    Fixed type specifications of the
	    <c>supervisor:sup_name/0</c> and
	    <c>supervisor:sup_ref/0</c> types.</p>
          <p>
	    Own Id: OTP-18034 Aux Id: PR-4661, GH-4622 </p>
        </item>
        <item>
          <p>
	    If a default record field initialization (<c>_ =
	    Expr</c>) was used even though all records fields were
	    explicitly initialized, <c>Expr</c> would not be
	    evaluated. That would not be a problem, except when
	    <c>Expr</c> would bind a variable subsequently used, in
	    which case the compiler would crash.</p>
          <p>
	    As an example, if record <c>#r{}</c> is defined to have
	    only one field <c>a</c>, the following code would crash
	    the compiler:</p>
          <p>
	    <c>#r{a=[],_=V=42}, V</c></p>
          <p>
	    To fix that problem, the compiler will make sure that
	    <c>Expr</c> is always evaluated at least once. The
	    compiler will now rewrite the example to essentially:</p>
          <p>
	    <c>V=42, #r{a=[]}, V</c></p>
          <p>
	    Own Id: OTP-18083</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Users can now configure ETS tables with the
	    <c>{write_concurrency, auto}</c> option. This option
	    forces tables to automatically change the number of locks
	    that are used at run-time depending on how much
	    concurrency is detected. The <c>{decentralized_counters,
	    true}</c> option is enabled by default when
	    <c>{write_concurrency, auto}</c> is active.</p>
          <p>
	    Benchmark results comparing this option with the other
	    ETS optimization options are available here:</p>
          <p>
	    https://erlang.org/bench/ets_bench_result_lock_config.html</p>
          <p>
	    Own Id: OTP-15991 Aux Id: PR-5208 </p>
        </item>
        <item>
          <p>
	    The <c>format_status/2</c> callback for
	    <c>gen_server</c>, <c>gen_statem</c> and <c>gen_event</c>
	    has been deprecated in favor of the new
	    <c>format_status/1</c> callback.</p>
          <p>
	    The new callback adds the possibility to limit and change
	    many more things than the just the state, such as the
	    last received message, the reason for terminating and
	    more events specific to each type of behavior. See the
	    respective modules documentation for more details.</p>
          <p>
	    Own Id: OTP-17351 Aux Id: GH-4673 PR-4952 </p>
        </item>
        <item>
	    <p>The <c>timer</c> module has been modernized and made
	    more efficient, which makes the timer server less
	    susceptible to being overloaded. The <c>timer:sleep/1</c>
	    function now accepts an arbitrarily large integer.</p>
          <p>
	    Own Id: OTP-17481 Aux Id: PR-4811 </p>
        </item>
        <item>
          <p>
	    Add <c>lists:enumerate/[1,2]</c>.</p>
          <p>
	    Own Id: OTP-17523 Aux Id: PR-4928 </p>
        </item>
        <item>
          <p>
	    The configuration files <seecom
	    marker="erts:erl"><c>.erlang</c></seecom>, <seeguide
	    marker="system/reference_manual:distributed"><c>.erlang.cookie</c></seeguide>
	    and <seeerl
	    marker="stdlib:beam_lib#.erlang.crypt"><c>.erlang.crypt</c></seeerl>
	    can now be located in the XDG Config Home directory.</p>
          <p>
	    See the documentation for each file and
	    <c>filename:basedir/2</c> for more details.</p>
          <p>
	    Own Id: OTP-17554 Aux Id: GH-5016 PR-5408 OTP-17821 </p>
        </item>
        <item>
          <p>
	    Support <c>native</c> time unit in <c>calendar</c>
	    functions <c>system_time_to_rfc3339/2</c> and
	    <c>rfc3339_to_system_time</c>.</p>
          <p>
	    Own Id: OTP-17592 Aux Id: ERIERL-663, PR-5243 </p>
        </item>
        <item>
          <p>
	    The tagged tuple tests and fun-calls have been optimized
	    and are now a little bit cheaper than previously.</p>
          <p>
	    These optimizations become possible after making sure
	    that all boxed terms have at least one word allocated
	    after the arity word. This has been accomplished by
	    letting all empty tuples refer to the same empty tuple
	    literal which also reduces memory usage for empty tuples.</p>
          <p>
	    Own Id: OTP-17608</p>
        </item>
        <item>
          <p>
	    The signal queue benchmark in parallel_messages_SUITE and
	    the ETS benchmark in ets_SUITE have benchmark result
	    visualization HTML pages with "fill-screen" buttons to
	    make the graphs bigger. This button did not work as
	    intended before. When pressing the button for a graph,
	    the last graph got replaced with a bigger version and not
	    the one over the button. This is now fixed.</p>
          <p>
	    Own Id: OTP-17630</p>
        </item>
        <item>
          <p>
	    The new module <c>peer</c> supersedes the <c>slave</c>
	    module. The <c>slave</c> module is now deprecated and
	    will be removed in OTP 27.</p>
          <p>
	    <c>peer</c> contains an extended and more robust API for
	    starting erlang nodes.</p>
          <p>
	    Own Id: OTP-17720 Aux Id: PR-5162 </p>
        </item>
        <item>
          <p>
	    This change introduces quote and unquote functions in
	    uri_string module - a replacement for deprecated encode
	    and decode functions from http_uri.</p>
          <p>
	    Own Id: OTP-17778 Aux Id: GH-5368 </p>
        </item>
        <item>
          <p>
	    In order to make it easier for the user to manage
	    multiple outstanding asynchronous <c>call</c> requests,
	    new functionality utilizing request identifier
	    collections have been introduced in <seetype
	    marker="kernel:erpc#request_id_collection"><c>erpc</c></seetype>,
	    <seetype
	    marker="stdlib:gen_server#request_id_collection"><c>gen_server</c></seetype>,
	    <seetype
	    marker="stdlib:gen_statem#request_id_collection"><c>gen_statem</c></seetype>,
	    and <seetype
	    marker="stdlib:gen_event#request_id_collection"><c>gen_event</c></seetype>.</p>
          <p>
	    Own Id: OTP-17784 Aux Id: PR-5792 </p>
        </item>
        <item>
          <p>
	    Update to the Unicode 14.0 specification.</p>
          <p>
	    Own Id: OTP-17869 Aux Id: PR-5595 </p>
        </item>
        <item>
          <p>
	    The following ets types have been renamed to a clearer
	    name: <c>tab/0</c> to <c>table/0</c> and
	    <c>comp_match_spec/0</c> to <c>compiled_match_spec/0</c>.</p>
          <p>
	    The types <c>table_access/0</c> and <c>table_type/0</c>
	    have been exported.</p>
          <p>
	    Own Id: OTP-17901 Aux Id: GH-4968 PR-5649 </p>
        </item>
        <item>
          <p>
	    Add support for locating <c>.asn1</c> files to the
	    default search rules of <c>filelib:find_file/1</c> and
	    <c>filelib:find_source/1</c>.</p>
          <p>
	    Own Id: OTP-17908 Aux Id: GH-5655 PR-5669 </p>
        </item>
        <item>
	    <p>Type specifications have been added to the
	    <c>gen_server</c>, and the documentation has been updated
	    to utilize this. </p><p>This surfaced a few type
	    violations that has been corrected in <c>global</c>,
	    <c>logger_olp</c> and <c>rpc</c>. </p>
          <p>
	    Own Id: OTP-17915 Aux Id: PR-5751, GH-2375, GH-2690 </p>
        </item>
        <item>
	    <p>The non-local function handler for the <c>erl_eval</c>
	    can now be called with either two or three arguments.
	    When called with three arguments, the first argument is
	    the annotation for the node in the abstract format.</p>
	    <p>All errors during evaluation will now be passed
	    through <c>erlang:raise/3</c>. If the restricted shell is
	    active and it does not let <c>erlang:raise/3</c> through,
	    evaluation errors will be printed in less clear way. See
	    the documentation for restricted shell in
	    <c>shell</c>.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-17925 Aux Id: PR-5631 </p>
        </item>
        <item>
	    <p>Added <c>filelib:ensure_path/1</c> that ensures that
	    all directories for the given path exists (unlike
	    <c>filelib:ensure_dir/1</c>, which will not create the
	    last segment of the path).</p>
          <p>
	    Own Id: OTP-17953 Aux Id: PR-5621 </p>
        </item>
        <item>
	    <p>The functions <c>groups_from_list/2</c> and
	    <c>groups_from_list/3</c> have been added to the
	    <c>maps</c> module.</p>
          <p>
	    Own Id: OTP-17969 Aux Id: PR-5588 </p>
        </item>
        <item>
          <p>
	    <c>gen_server</c> has been refactored to throw more
	    readable exceptions when a callback returns bad values in
	    the <c>Timeout</c> field (<c>timeout() | 'hibernate' |
	    {'continue,_}</c>), and also to verify that argument in
	    the <c>gen_server:enter_loop/3,4,5</c> API function.</p>
          <p>
	    Own Id: OTP-17974 Aux Id: GH-5683 </p>
        </item>
        <item>
	    <p>The functions <c>uniq/1</c> and <c>uniq/2</c> for
	    removing duplicates have been added to the <c>lists</c>
	    module.</p>
          <p>
	    Own Id: OTP-17977 Aux Id: GH-5606, PR-5766 </p>
        </item>
        <item>
          <p>
	    Added support for configurable features as described in
	    EEP-60. Features can be enabled/disabled during
	    compilation with options (<c>-enable-feature Feature</c>,
	    <c>-disable-feature Feature</c> and <c>+{feature,
	    Feature, enable|disable}</c>) to <c>erlc</c> as well as
	    with directives (<c>-feature(Feature,
	    enable|disable).</c>) in the file. Similar options can be
	    used to <c>erl</c> for enabling/disabling features
	    allowed at runtime. The new <c>maybe</c> expression
	    (EEP-49) is fully supported as the feature
	    <c>maybe_expr</c>. The features support is documented in
	    the reference manual.</p>
          <p>
	    Own Id: OTP-17988</p>
        </item>
        <item>
	    <p>The function <c>filename:safe_relative_path/1</c>,
	    which has been deprecated since OTP 25, has been removed.
	    Use <c>filelib:safe_relative_path/2</c> instead.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-17991</p>
        </item>
        <item>
	    <p> A new PRNG have been added to the <c>rand</c> module:
	    <c>mwc59</c> which has been developed in collaboration
	    with Sebastiano Vigna. It is intended for applications
	    that need really fast pseudo-random numbers, and it comes
	    with two output value scramblers, one fast and one
	    thorough. </p><p> Two internal functions for the
	    <c>exsp</c> generator have also been exported so they can
	    be used outside the <c>rand</c> plug-in framework to
	    shave off some overhead. </p><p> The internal
	    <c>splitmix64</c> generator has also been exported which
	    can be useful for seeding other kinds of PRNG:s than its
	    own. </p>
          <p>
	    Own Id: OTP-18011</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.17.2.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>It is not allowed to call functions from guards. The
	    compiler failed to reject a call in a guard when done by
	    constructing a record with a default initialization
	    expression that called a function.</p>
          <p>
	    Own Id: OTP-18325 Aux Id: GH-6465, GH-6466 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.17.2.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>When changing callback module in <c>gen_statem</c> the
	    state_enter calls flag from the old module was used in
	    for the first event in the new module, which could
	    confuse the new module and cause malfunction. This bug
	    has been corrected. </p><p> With this change some
	    <c>sys</c> debug message formats have been modified,
	    which can be a problem for debug code relying on the
	    format. </p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-18239</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.17.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>The type specifications for
	    <c>shell_docs:get_doc/3</c>,
	    <c>shell_docs:get_callback_doc/3</c>, and
	    <c>shell_docs:get_type_doc/3</c> incorrectly stated that
	    the returned <c>Metadata</c> was an empty map.</p>
          <p>
	    Own Id: OTP-18081</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.17.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>The compilation time is no longer recorded in BEAM
	    files. There remained several undocumented functions that
	    attempted to retrieve compilation times. Those have now
	    been removed.</p>
          <p>
	    Own Id: OTP-17962</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.17</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix rendering of nbsp on terminals that do not support
	    unicode.</p>
          <p>
	    Own Id: OTP-17662 Aux Id: PR-5206 </p>
        </item>
        <item>
          <p>
	    Improved the <seeerl
	    marker="erl_error"><c>erl_error</c></seeerl> printout for
	    when <seeerl marker="re"><c>re</c></seeerl> fails to
	    compile a regular expression to also print hints about
	    why the compilation failed.</p>
          <p>
	    Own Id: OTP-17750 Aux Id: PR-5366 </p>
        </item>
        <item>
          <p>
	    Fixed spec for <c>supervisor_bridge:start_link()</c>.</p>
          <p>
	    Own Id: OTP-17766 Aux Id: PR-5362 </p>
        </item>
        <item>
          <p>
	    Added missing shutdown clauses in <c>supervisor</c> which
	    could cause erroneous error reports.</p>
          <p>
	    Own Id: OTP-17767 Aux Id: PR-5344 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Add the <c>no_auto_import_types</c> to erl_lint to allow
	    a module to define types of the same name as a predefined
	    type.</p>
          <p>
	    Own Id: OTP-17744 Aux Id: PR-5292 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.16.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed a bug that could cause a child to become orphaned
	    when a supervisor died between unlinking and sending the
	    shutdown signal to this child. </p>
          <p>
	    There was also a possibility for erratic supervisor
	    reports caused by a race between a supervisor shutting
	    down a child and that child exiting by itself at the same
	    time.</p>
          <p>
	    Own Id: OTP-17649 Aux Id: GH-5193, PR-5201 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.16</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix <c>io:format</c> with <c>~p</c> to no longer
	    interpret floats as printable characters.</p>
          <p>
	    Own Id: OTP-17424 Aux Id: GH-4801 PR-4803 </p>
        </item>
        <item>
          <p>
	    Fix specs for base64 encode/decode functions to also
	    include 0.</p>
          <p>
	    Own Id: OTP-17429 Aux Id: GH-4761 </p>
        </item>
        <item>
	    <p>The failing call <c>io:format("~p\n")</c> would result
	    in a warning for line number 0 instead of the correct
	    line and column numbers. This has been corrected, and all
	    warnings for failing calls to <c>io:format()</c> has been
	    rephrased to make it clearer exactly what the problem
	    is.</p>
          <p>
	    Own Id: OTP-17430</p>
        </item>
        <item>
	    <p>When the options <c>warn_missing_spec</c> and
	    <c>export_all</c> were given, there would only be
	    warnings for missing specs for functions that had been
	    explicitly exported using an <c>-export</c>
	    attribute.</p>
          <p>
	    Own Id: OTP-17434 Aux Id: GH-4772 </p>
        </item>
        <item>
	    <p>Calling <c>c:ls/1</c> with an atom whose contents is
	    the the name of a file (as opposed to a directory) would
	    crash.</p>
          <p>
	    Own Id: OTP-17463 Aux Id: GH-4916 </p>
        </item>
        <item>
	    <p>The <c>MODULE</c> and <c>MODULE_STRING</c> macros
	    would always appear to be defined (when tested by
	    <c>-ifdef</c>), even though no <c>-module()</c>
	    declaration had been seen yet. Changed so that <c>-ifdef
	    ?MODULE.</c> will not consider ?MODULE defined if
	    <c>-module()</c> has not been previously seen.</p>
          <p>
	    Own Id: OTP-17505 Aux Id: GH-4995 </p>
        </item>
        <item>
          <p>
	    Fix bug with rendering of missing types and callbacks in
	    shell_docs.</p>
          <p>
	    Own Id: OTP-17573 Aux Id: ERL-1264 GH-4270 </p>
        </item>
        <item>
	    <p>When the <c>deterministic</c> option was given to the
	    compiler, the <c>?FILE</c> macro would be expanded to
	    full path of the source file before the first
	    <c>include</c> directive and to base part of the filename
	    after <c>include</c> directive.</p>
          <p>
	    Own Id: OTP-17581 Aux Id: PR-5141 </p>
        </item>
        <item>
          <p>
	    Fixed broken <c>win32reg:delete_key</c> and fixed
	    <c>win32reg:value</c> for <c>default</c> value.</p>
          <p>
	    Own Id: OTP-17622 Aux Id: PR-5038 </p>
        </item>
        <item>
	    <p>Fixed error information for the call
	    <c>maps:get(some_key, #{})</c>.</p>
          <p>
	    Own Id: OTP-17634 Aux Id: GH-5196 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Most output functions in the <c>io</c> module now print
	    extra error information when provided with invalid
	    arguments. The functions are: <c>io:format</c>,
	    <c>io:fwrite</c>, <c>io:put_chars</c>, <c>io:nl</c> and
	    <c>io:write</c>.</p>
          <p>
	    Own Id: OTP-17317 Aux Id: PR-4757 </p>
        </item>
        <item>
          <p>
	    EEP-54 (Provide more information about errors) now
	    includes two new return values for the
	    <c>format_error</c> callback, <c>general</c> and
	    <c>reason</c>.</p>
          <p>
	    Multi-line error descriptions returned from a
	    <c>format_error</c> callback are now correctly indented.</p>
          <p>
	    The documentation for <seeerl
	    marker="stdlib:erl_error"><c>erl_error</c></seeerl>,
	    <seemfa
	    marker="erts:erlang#error/3"><c>error/3</c></seemfa> and
	    <seeguide marker="system/reference_manual:errors">Errors
	    and Error Handling</seeguide> in the Erlang Reference
	    Manual have been extended.</p>
          <p>
	    Own Id: OTP-17454 Aux Id: PR-4764 </p>
        </item>
        <item>
	    <p>In the documentation for the <c>lists</c> module, it
	    has been clarified that predicate funs must return a
	    boolean.</p>
          <p>
	    Own Id: OTP-17503 Aux Id: GH-4985 </p>
        </item>
        <item>
	    <p>The documentation for <c>c:c/1</c>, <c>c:c/2</c>, and
	    <c>c:c/3</c> has been clarified.</p>
          <p>
	    Own Id: OTP-17571 Aux Id: GH-5103 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.15.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix a bug that could cause a crash when formatting tuples
	    using the control sequences <c>p</c> or <c>P</c> and
	    limiting the output with the option <c>chars_limit</c>.</p>
          <p>
	    Own Id: OTP-17525 Aux Id: GH-5053 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.15.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix a bug that could cause a loop when formatting terms
	    using the control sequences p or P and limiting the
	    output with the option <c>chars_limit</c>.</p>
          <p>
	    Own Id: OTP-17459 Aux Id: GH-4824, GH-4842 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.15</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Time-outs in <c>gen_statem</c> with relative time
	    <c>0</c> did not behave quite according to the intended
	    model. This has now been corrected.</p> <p>The correction
	    introduces a small potential incompatibility e.g when
	    combining a state time-out with inserted events, and the
	    inserted event does a state change in the state with the
	    time-out. Before this correction the state time-out could
	    be delivered even after the second state change, but now
	    it is guaranteed that a state time-out is only delivered
	    in the state it was started for, even in this corner
	    case.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-15107 Aux Id: ERL-1381, PR-2813 </p>
        </item>
        <item>
          <p>
	    Fix bugs in <c>erl_eval</c> concerning bitstring
	    comprehensions.</p>
          <p>
	    Own Id: OTP-16865</p>
        </item>
        <item>
	    <p>File names that start with a dot (such as
	    "<c>.gitignore</c>" are now treated as file names and not
	    extensions by <c>filename:extension/1</c> and
	    <c>filename:rootname/1</c>.</p>
          <p>
	    Own Id: OTP-16905</p>
        </item>
        <item>
	    <p>Fixed a bug where <c>beam_lib:chunks/3</c> with the
	    <c>allow_missing_chunks</c> option would crash if a named
	    chunk was missing.</p>
          <p>
	    Own Id: OTP-16950 Aux Id: ERL-1378 </p>
        </item>
        <item>
          <p>
	    A floating point zero (0.0) can be both positive (+0.0)
	    and negative (-0.0). Multiple bugs in the compiler,
	    runtime system, and STDLIB have been fixed to ensure that
	    the minus sign on 0.0 is not lost.</p>
          <p>
	    Own Id: OTP-17077 Aux Id: ERL-1431, PR-2903, PR-2905,
	    PR-2906 </p>
        </item>
        <item>
	    <p>Eliminated a Dialyzer crashed when the <c>-MMD</c>
	    option is used to generate a dependency file and a BEAM
	    file a the same time.</p>
          <p>
	    Own Id: OTP-17118 Aux Id: PR-2825 </p>
        </item>
        <item>
          <p>
	    Fixed bug in <seeerl
	    marker="stdlib:shell_docs"><c>shell_docs</c></seeerl> and
	    <c>erl_docgen</c> that interpreted <c>em</c> tags as
	    <c>strong</c>.</p>
          <p>
	    Own Id: OTP-17122</p>
        </item>
        <item>
	    <p>On Solaris, the <c>math:acos/1</c> and
	    <c>math:asin/1</c> functions would not fail for arguments
	    outside the valid domain.</p>
          <p>
	    Own Id: OTP-17133</p>
        </item>
        <item>
          <p>
	    Silence <c>unused_record</c> warnings when using
	    <c>ms_transform</c>. The parse transform
	    <c>ms_transform</c> replaces records with tuples, which
	    can cause the Erlang code linter to emit warnings about
	    unused records.</p>
          <p>
	    Own Id: OTP-17186</p>
        </item>
        <item>
	    <p>Documented a deficiency in the <c>re</c> module
	    regarding the <c>[:ascii:]</c> character class matching
	    Latin-1 characters.</p>
          <p>
	    Own Id: OTP-17222 Aux Id: GH-4544 </p>
        </item>
        <item>
          <p>
	    Fixed <c>spec</c> of start functions in generic
	    behaviors.</p>
          <p>
	    Own Id: OTP-17342 Aux Id: GH-4725 PR-4726 </p>
        </item>
        <item>
          <p>
	    Supervisors rejected child specs with a shutdown value of
	    0.</p>
          <p>
	    Own Id: OTP-17364 Aux Id: PR-4747 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>In the <c>rand</c> module it is now possible to seed
	    the default algorithm using an algorithm alias:
	    <c>default</c>. </p> <p> Generating pseudo random
	    binaries has been implemented with <c>rand:bytes/1</c>
	    and <c>rand:bytes_s/2</c>. </p>
          <p>
	    Own Id: OTP-14646 Aux Id: PR-2920 </p>
        </item>
        <item>
          <p>
	    New functions have been added to the <c>proplists</c>
	    module: <c>to_map/1,2</c> and <c>from_map/1</c>.</p>
          <p>
	    Own Id: OTP-14647 Aux Id: PR-2910 </p>
        </item>
        <item>
          <p>
	    New functions have been added to the <c>queue</c> module:
	    <c>all/2</c>, <c>any/2</c>, <c>delete/2</c>,
	    <c>delete_r/2</c>, <c>delete_with/2</c>, and
	    <c>delete_with_r/2</c>.</p>
          <p>
	    Own Id: OTP-14650 Aux Id: PR-2850 </p>
        </item>
        <item>
          <p>
	    New function have been added to the <c>queue</c> module:
	    <c>fold/2</c> and <c>filtermap/2</c>.</p>
          <p>
	    Own Id: OTP-14793 Aux Id: PR-2791 </p>
        </item>
        <item>
          <p>
	    Support for handling abstract code created before OTP R15
	    has been dropped.</p>
          <p>
	    Own Id: OTP-16678 Aux Id: PR-2627 </p>
        </item>
        <item>
          <p>
	    Extended error information for failing BIF calls as
	    proposed in <url
	    href="https://github.com/erlang/eep/blob/master/eeps/eep-0054.md">EEP
	    54</url> has been implemented.</p>
          <p>
	    When a BIF call from the Erlang shell fails, more
	    information about which argument or arguments that were
	    in error will be printed. The same extended error
	    information will by <c>proc_lib</c>, <c>common_test</c>,
	    and <c>qlc</c> when BIF calls fail.</p>
          <p>
	    For applications that wish to provide the same extended
	    error information, there are new functions
	    <c>erl_error:format_exception/3</c> and
	    <c>erl_error:format_exception/4</c>.</p>
          <p>
	    There is a new <c>error/3</c> BIF that allows
	    applications or libraries to provide extended error
	    information in the same way for their own exceptions.</p>
          <p>
	    Own Id: OTP-16686</p>
        </item>
        <item>
          <p>
	    The <seeguide
	    marker="system/reference_manual:processes#process-aliases"><i>process
	    alias</i></seeguide> feature as outlined by <url
	    href="https://github.com/erlang/eep/blob/master/eeps/eep-0053.md">EEP
	    53</url> has been introduced. It is introduced in order
	    to provide a lightweight mechanism that can prevent late
	    replies after timeout or connection loss. For more
	    information, see EEP 53 and the documentation of the new
	    <seemfa
	    marker="erts:erlang#alias/1"><c>alias/1</c></seemfa> BIF
	    and the new options to the <seemfa
	    marker="erts:erlang#monitor/3"><c>monitor/3</c></seemfa>
	    BIF.</p>
          <p>
	    The <c>call</c> operation in the framework used by
	    <c>gen_server</c>, <c>gen_statem</c>, and
	    <c>gen_event</c> has been updated to utilize alias in
	    order to prevent late responses. The <c>gen_statem</c>
	    behavior still use a proxy process in the distributed
	    case, since it has always prevented late replies and
	    aliases wont work against pre OTP 24 nodes. The proxy
	    process can be removed in OTP 26.</p>
          <p>
	    The alias feature also made it possible to introduce new
	    functions similar to the <seemfa
	    marker="kernel:erpc#receive_response/2"><c>erpc:receive_response()</c></seemfa>
	    function in the gen behaviors, so the new functions
	    <seemfa
	    marker="stdlib:gen_server#receive_response/2"><c>gen_server:receive_response()</c></seemfa>,
	    <seemfa
	    marker="stdlib:gen_statem#receive_response/2"><c>gen_statem:receive_response()</c></seemfa>,
	    <seemfa
	    marker="stdlib:gen_event#receive_response/2"><c>gen_event:receive_response()</c></seemfa>
	    have also been introduced.</p>
          <p>
	    Own Id: OTP-16718 Aux Id: PR-2735 </p>
        </item>
        <item>
          <p>
	    Improved documentation about exit signals emitted when a
	    <c>gen_server</c> terminates.</p>
          <p>
	    Own Id: OTP-16910 Aux Id: PR-2771 </p>
        </item>
        <item>
          <p>
	    New functions have been added to the <c>maps</c> module:
	    <c>merge_with/3</c>, <c>intersect/2</c>,
	    <c>intersect_with/3</c>, <c>filtermap/2</c>,
	    <c>from_keys/2</c>, and <c>maps:foreach/2</c>.</p>
          <p>
	    <c>maps:merge_with/3</c> is the same as <c>merge/2</c>
	    but takes an extra fun that is used to combine items with
	    the same key.</p>
          <p>
	    <c>maps:intersect/2</c> computes the intersection of two
	    maps.</p>
          <p>
	    <c>maps:intersect_with/3</c> is the same as
	    <c>intersect/2</c> but takes an extra fun that is used to
	    combine intersecting items.</p>
          <p>
	    <c>maps:filtermap/2</c> allows filtering and mapping of a
	    map in a single pass.</p>
          <p>
	    <c>maps:from_keys/2</c> constructs a map from a list of
	    keys and a single value and can be used to to optimize
	    sets operations such as from_list/1, filter/2,
	    intersection/2, and subtract/2.</p>
          <p>
	    <c>maps:foreach/2</c> allows iteration over a map without
	    returning any value.</p>
          <p>
	    Own Id: OTP-16936 Aux Id: ERL-1367 </p>
        </item>
        <item>
	    <p>The experimental HiPE application has been removed,
	    together with all related functionality in other
	    applications.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-16963</p>
        </item>
        <item>
          <p>
	    The <c>filename:src/1</c> function which was deprecated
	    in OTP 20 has been removed. Use
	    <c>filelib:find_source/1,3</c> instead.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-16971</p>
        </item>
        <item>
          <p>
	    The pretty printer for floating point number have been
	    changed to make it easier to see if the integer part of
	    the number has been rounded. After the change the digit
	    that may have been rounded always appears last or just
	    before the exponent character (e or E). This is
	    accomplished by always printing the number using
	    scientific notation if it is so large that the integer
	    part could be rounded.</p>
          <p>
	    Own Id: OTP-16980 Aux Id: ERL-1308 </p>
        </item>
        <item>
          <p>
	    Accept references up to a size of 160-bits from remote
	    nodes. This is the first step in an upgrade path toward
	    using references up to 160-bits in a future OTP release.</p>
          <p>
	    Own Id: OTP-17005 Aux Id: OTP-16718 </p>
        </item>
        <item>
          <p>
	    Add option <c>location</c> to
	    <c>erl_parse:abstract/2</c>.</p>
          <p>
	    Own Id: OTP-17024</p>
        </item>
        <item>
          <p>
	    All long running functions in the maps API are now
	    yielding. In previous releases the functions
	    <c>maps:from_list/1</c>, <c>maps:keys/1</c> and
	    <c>maps:values/1</c> did not yield. This could cause
	    unfair scheduling of processes.</p>
          <p>
	    Own Id: OTP-17057</p>
        </item>
        <item>
	    <p>The <c>sets</c> module now has an optional map-based
	    implementation, as described in <c>EEP 50</c>.</p>
	    <p>To use this implementation, pass the
	    <c>{version,2}</c> option to <c>sets:new/1</c> or
	    <c>sets:from_list/2</c>.</p>
          <p>
	    Own Id: OTP-17059 Aux Id: PR-2864 </p>
        </item>
        <item>
          <p>
	    Added <seemfa
	    marker="shell_docs#supported_tags/0"><c>shell_docs:supported_tags/0</c></seemfa>.
	    This function can be used to retrieve the tags currently
	    supported by <c>shell_docs</c>.</p>
          <p>
	    Own Id: OTP-17120</p>
        </item>
        <item>
          <p>
	    The <c>application/erlang+html</c> documentation storage
	    format used by <seeerl
	    marker="shell_docs"><c>shell_docs</c></seeerl> has been
	    updated to include the tags <c>b</c>, <c>strong</c>,
	    <c>h4</c>, <c>h5</c> and <c>h6</c>.</p>
          <p>
	    Own Id: OTP-17121</p>
        </item>
        <item>
          <p>
	    Do not pretty-print <c>catch</c> expressions with
	    unnecessary parentheses. The re-write of the Erlang
	    parser grammar in PR-2584 implies that parentheses around
	    <c>catch</c> expressions are in many cases no longer
	    required.</p>
          <p>
	    Own Id: OTP-17169 Aux Id: PR-2584 </p>
        </item>
        <item>
          <p>
	    Improved explanation of <c>{continue,Continue}</c> in
	    <c>Module:init/1</c> of the <c>gen_server</c>
	    documentation.</p>
          <p>
	    Own Id: OTP-17171 Aux Id: PR-3011 </p>
        </item>
        <item>
	    <p>The <c>erl_eval</c> module now accepts a map for
	    keeping track of bindings. Using an <c>orddict</c> for
	    bindings will still work.</p>
          <p>
	    Own Id: OTP-17175</p>
        </item>
        <item>
	    <p>Documented <c>epp:scan_erl_form/1</c> and added
	    <c>epp:scan_file/2</c>.</p>
          <p>
	    Own Id: OTP-17199 Aux Id: PR-2658 </p>
        </item>
        <item>
          <p>
	    The standard floating point printing algorithm used by
	    the <c>io</c> and <c>io_lib</c> modules has been changed
	    from the algorithm described in [1] to the Ryu algorithm
	    [2]. This gives a significant speed improvement for the
	    printing of most floating point numbers and a small
	    memory consumption improvement.</p>
          <p>
	    [1]: Robert G. Burger and R. Kent Dybvig. 1996. Printing
	    floating-point numbers quickly and accurately. In
	    Proceedings of the ACM SIGPLAN 1996 conference on
	    Programming language design and implementation (PLDI
	    '96). Association for Computing Machinery, New York, NY,
	    USA, 108–116. DOI:https://doi.org/10.1145/231379.231397</p>
          <p>
	    [2]: Ulf Adams. 2018. Ryū: fast float-to-string
	    conversion. In Proceedings of the 39th ACM SIGPLAN
	    Conference on Programming Language Design and
	    Implementation (PLDI 2018). Association for Computing
	    Machinery, New York, NY, USA, 270–282.
	    DOI:https://doi.org/10.1145/3192366.3192369</p>
          <p>
	    Thanks to Thomas Depierre</p>
          <p>
	    Own Id: OTP-17210</p>
        </item>
        <item>
          <p>
	    Add hex encoding and decoding functions in the binary
	    module.</p>
          <p>
	    Own Id: OTP-17236 Aux Id: PR-3014 </p>
        </item>
        <item>
	    <p>The undocumented and partially broken
	    <c>ets:filter/3</c> function has been removed.</p>
          <p>
	    Own Id: OTP-17263</p>
        </item>
        <item>
          <p>
	    Add support in <seeerl
	    marker="shell_docs"><c>shell_docs</c></seeerl> to display
	    any <c>"text"</c> documentation format. This means that
	    <c>h(Module)</c> in the shell now can display the
	    <c>"text/markdown"</c> of Elixir documentation.</p>
          <p>
	    Own Id: OTP-17267</p>
        </item>
        <item>
          <p>
	    The internal hashing of keys within ETS tables of types
	    <c>set</c>, <c>bag</c>, <c>duplicate_bag</c> has been
	    salted to diverge from <c>erlang:phash2</c>. This to
	    avoid bad hashing if <c>phash2</c> is used to distribute
	    the keys over separate tables/nodes.</p>
          <p>
	    Own Id: OTP-17276 Aux Id: PR-2979 </p>
        </item>
        <item>
          <p>
	    Updated to the Unicode 13.0 specification.</p>
          <p>
	    Own Id: OTP-17327 Aux Id: PR-4707 </p>
        </item>
        <item>
          <p>
	    Add compiler option <c>{nowarn_unused_record,
	    RecordNames}</c>. Document compiler option
	    <c>nowarn_unused_type</c>.</p>
          <p>
	    Own Id: OTP-17330</p>
        </item>
        <item>
          <p>
	    Implementation of <url
	    href="https://github.com/erlang/eep/blob/master/eeps/eep-0056.md">EEP
	    56</url> in supervisor. It adds the concept of
	    <c>significant</c> children as well as the
	    <c>auto_shutdown</c> supervisor flag.</p>
          <p>
	    See the <seeerl marker="stdlib:supervisor">supervisor
	    manual page</seeerl> for more information.</p>
          <p>
	    Own Id: OTP-17334 Aux Id: PR-4638, EEP-56 </p>
        </item>
        <item>
          <p>
	    Fixed warnings in code matching on underscore prefixed
	    variables.</p>
          <p>
	    Own Id: OTP-17385 Aux Id: OTP-17123 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.14.2.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix a bug that could cause a crash when formatting tuples
	    using the control sequences <c>p</c> or <c>P</c> and
	    limiting the output with the option <c>chars_limit</c>.</p>
          <p>
	    Own Id: OTP-17525 Aux Id: GH-5053 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.14.2.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix a bug that could cause a loop when formatting terms
	    using the control sequences p or P and limiting the
	    output with the option <c>chars_limit</c>.</p>
          <p>
	    Own Id: OTP-17459 Aux Id: GH-4824, GH-4842 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.14.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Dictionaries that have become zipped by the zip module
	    did not get executable permission (for the file owner)
	    which makes the files inside the dictionary inaccessible.
	    This is fixed by giving dictionaries inside a zip archive
	    XRW permission.</p>
          <p>
	    Own Id: OTP-17295 Aux Id: GH-4687 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.14.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Handle maps in <c>erl_parse:tokens()</c>.</p>
          <p>
	    Own Id: OTP-16978</p>
        </item>
        <item>
          <p>
	    The erlang shell function <c>rr</c> has been fixed to be
	    able to read records from files within a code archive.</p>
          <p>
	    Own Id: OTP-17182 Aux Id: PR-3002 </p>
        </item>
        <item>
	    <p>If <c>beam_lib</c> is asked to return abstract code
	    for a BEAM file produced by Elixir and Elixir is not
	    installed on the computer, <c>beam_lib</c> will no longer
	    crash, but will return an error tuple. The
	    <c>cover:compile_beam()</c> and
	    <c>cover:compile_beam_directory()</c> functions have been
	    updated to also return an error tuple in that
	    situation.</p>
          <p>
	    Own Id: OTP-17194 Aux Id: GH-4353 </p>
        </item>
        <item>
          <p>
	    Correct example module <c>erl_id_trans</c> regarding the
	    <c>{char, C}</c> type.</p>
          <p>
	    Own Id: OTP-17273</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.14</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    This change fixes the handling of deep lists in the path
	    component when using uri_string:recompose/1.</p>
          <p>
	    Own Id: OTP-16941</p>
        </item>
        <item>
          <p>
	    Fix <seeerl
	    marker="shell_docs"><c>shell_docs</c></seeerl> to clear
	    shell decorations (bold/underline) when paginating
	    output.</p>
          <p>
	    Fix various small renderings issues when integrating
	    <seeerl marker="shell_docs"><c>shell_docs</c></seeerl>
	    with edoc.</p>
          <p>
	    Own Id: OTP-17047</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Improved the API and documentation of the uri_string
	    module.</p>
          <p>
	    Added a new chapter to the Users Guide about Uniform
	    Resource Identifiers and their handling with the new API.</p>
          <p>
	    Added two new API functions:
	    uri_string:allowed_characters/0 and
	    uri_string:percent_decode/1.</p>
          <p>
	    This change has been marked as potentially incompatible
	    as uri_string:normalize/2 used to decode percent-encoded
	    character triplets that corresponded to characters not in
	    the reserved set. After this change,
	    uri_string:normalize/2 will only decode those
	    percent-encoded triplets that correspond to characters in
	    the unreserved set (ALPHA / DIGIT / "-" / "." / "_" /
	    "~").</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-16460</p>
        </item>
        <item>
          <p>
	    The <c>shell_docs</c> module has been expanded with the
	    possibility to configure unicode, ansi and column size
	    for the rendered text.</p>
          <p>
	    Own Id: OTP-16990</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.13.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>The functions <c>digraph:in_edges/2</c> and
	    <c>digraph:out_edges/2</c> would return false edges if
	    called for a vertex that had a '_' atom in its name
	    term.</p>
          <p>
	    Own Id: OTP-16655</p>
        </item>
        <item>
	    <p><c>filelib:wildcard("not-a-directory/..")</c> should
	    return an empty list. On Windows it returned
	    <c>"not-a-directory/.."</c>.</p>
          <p>
	    Own Id: OTP-16700</p>
        </item>
        <item>
          <p>
	    Fix the typespec of shell_docs:render to use the correct
	    type for an MFA.</p>
          <p>
	    Own Id: OTP-16739</p>
        </item>
        <item>
          <p>
	    Fix uri_string:recompose/1 when host is present but input
	    path is not absolute.</p>
          <p>
	    This change prevents the recompose operation to change
	    the top level domain of the host when the path does not
	    start with a slash.</p>
          <p>
	    Own Id: OTP-16751 Aux Id: ERL-1283 </p>
        </item>
        <item>
	    <p>The <c>epp</c> module would return a badly formed
	    error term when an '<c>if</c>' preprocessor directive
	    referenced an undefined symbol. <c>epp:format_error/1</c>
	    would crash when called with the bad error term.</p>
          <p>
	    Own Id: OTP-16816 Aux Id: ERL-1310 </p>
        </item>
        <item>
          <p>
	    <c>lists:sublist(List, Start, Len)</c> failed with an
	    exception if <c>Start &gt; length(List) + 1</c> even
	    though it is explicitly documented that "It is not an
	    error for <c>Start+Len</c> to exceed the length of the
	    list".</p>
          <p>
	    Own Id: OTP-16830 Aux Id: ERL-1334, PR-2718 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.13.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>When a temporary child of a <c>simple_one_for_one
	    supervisor</c> died, the internal state of the supervisor
	    would be corrupted in a way that would cause the
	    supervisor to retain the start arguments for subsequent
	    children started by the supervisor, causing unnecessary
	    growth of the supervisor's heap. There state corruption
	    could potentially cause other problems as well.</p>
          <p>
	    Own Id: OTP-16804</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.13</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Compiling a match specification with excessive nesting
	    caused the runtime system to crash due to scheduler stack
	    exhaustion. Instead of crashing the runtime system,
	    effected functions will now raise a <c>system_limit</c>
	    error exception in this situation.</p>
          <p>
	    Own Id: OTP-16431 Aux Id: ERL-592 </p>
        </item>
        <item>
	    <p> Initialization of record fields using <c>_</c> is no
	    longer allowed if the number of affected fields is zero.
	    </p>
          <p>
	    Own Id: OTP-16516</p>
        </item>
        <item>
	    <p> Fix bugs in <c>eval_bits</c>. </p>
          <p>
	    Own Id: OTP-16545</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Improved the printout of single line logger events for
	    most of the OTP behaviours in STDLIB and Kernel. This
	    includes <c>proc_lib</c>, <c>gen_server</c>,
	    <c>gen_event</c>, <c>gen_statem</c>, <c>gen_fsm</c>,
	    <c>supervisor</c>, <c>supervisor_bridge</c> and
	    <c>application</c>.</p>
          <p>
	    Improved the <seeerl
	    marker="kernel:logger_formatter#chars_limit"><c>chars_limit</c></seeerl>
	    and <seeerl
	    marker="kernel:logger_formatter#depth"><c>depth</c></seeerl>
	    handling in <c>proc_lib</c> and when formatting of
	    exceptions.</p>
          <p>
	    Own Id: OTP-15299</p>
        </item>
        <item>
          <p>
	    Remove usage and documentation of old requests of the
	    I/O-protocol.</p>
          <p>
	    Own Id: OTP-15695</p>
        </item>
        <item>
	    <p>Improved ETS scalability of concurrent calls that
	    change the size of a table, like <c>ets:insert/2</c> and
	    <c>ets:delete/2</c>.</p> <p>This performance feature was
	    implemented for <c>ordered_set</c> in OTP 22.0 and does
	    now apply for all ETS table types.</p> <p>The improved
	    scalability may come at the cost of longer latency of
	    <c>ets:info(T,size)</c> and <c>ets:info(T,memory)</c>. A
	    new table option <c>decentralized_counters</c> has
	    therefore been added. It is default <c>true</c> for
	    <c>ordered_set</c> with <c>write_concurrency</c> enabled
	    and default <c>false</c> for all other table types.</p>
          <p>
	    Own Id: OTP-15744 Aux Id: OTP-15623, PR-2229 </p>
        </item>
        <item>
	    <p> Handle Unicode filenames in the <c>zip</c> module.
	    </p>
          <p>
	    Own Id: OTP-16005 Aux Id: ERL-1003, ERL-1150 </p>
        </item>
        <item>
          <p>
	    Unicode support was updated to the Unicode 12.1 standard.</p>
          <p>
	    Own Id: OTP-16073 Aux Id: PR-2339 </p>
        </item>
        <item>
          <p>
	    All of the modules <seemfa
	    marker="stdlib:proc_lib#start_monitor/3"><c>proc_lib</c></seemfa>,
	    <seemfa
	    marker="stdlib:gen_server#start_monitor/3"><c>gen_server</c></seemfa>,
	    <seemfa
	    marker="stdlib:gen_statem#start_monitor/3"><c>gen_statem</c></seemfa>,
	    and <seemfa
	    marker="stdlib:gen_event#start_monitor/0"><c>gen_event</c></seemfa>
	    have been extended with a <c>start_monitor()</c>
	    function. For more information, see the documentation of
	    <c>start_monitor()</c> for these modules.</p>
          <p>
	    Own Id: OTP-16120 Aux Id: ERIERL-402, PR-2427 </p>
        </item>
        <item>
          <p>
	    Updates for new <c>erlang:term_to_iovec()</c> BIF.</p>
          <p>
	    Own Id: OTP-16128 Aux Id: OTP-15618 </p>
        </item>
        <item>
	    <p>Documented a quirk regarding extraction from file
	    descriptors in <c>erl_tar</c>.</p>
          <p>
	    Own Id: OTP-16171 Aux Id: ERL-1057 </p>
        </item>
        <item>
          <p>
	    Added <c>ok</c> as return value to
	    <c>gen_server:reply/2</c></p>
          <p>
	    Own Id: OTP-16210 Aux Id: PR-2411 </p>
        </item>
        <item>
	    <p>New functions have been added to <seeerl
	    marker="c"><c>c(3)</c></seeerl> for printing embedded
	    documentation for Erlang modules. The functions are:</p>
	    <taglist> <tag>h/1,2,3</tag> <item>Print the
	    documentation for a Module:Function/Arity.</item>
	    <tag>ht/1,2,3</tag> <item>Print the type documentation
	    for a Module:Type/Arity.</item> </taglist> <p>The
	    embedded documentation is created when building the
	    Erlang/OTP documentation.</p>
          <p>
	    Own Id: OTP-16222</p>
        </item>
        <item>
	    <p> Add <c>indent</c> and <c>linewidth</c> to the options
	    of the <c>erl_pp</c> module's functions. </p>
          <p>
	    Own Id: OTP-16276 Aux Id: PR-2443 </p>
        </item>
        <item>
          <p>
	    Minor updates due to the new spawn improvements made.</p>
          <p>
	    Own Id: OTP-16368 Aux Id: OTP-15251 </p>
        </item>
        <item>
	    <p>The compiler will now raise a warning when inlining is
	    used in modules that load NIFs.</p>
          <p>
	    Own Id: OTP-16429 Aux Id: ERL-303 </p>
        </item>
        <item>
	    <p>Refactored the internal handling of deprecated and
	    removed functions.</p>
          <p>
	    Own Id: OTP-16469</p>
        </item>
        <item>
	    <p> Extend <c>erl_parse:abstract/1,2</c> to handle
	    external fun expressions (<c>fun M:F/A</c>). </p>
          <p>
	    Own Id: OTP-16480</p>
        </item>
        <item>
	    <p>Added <c>filelib:safe_relative_path/2</c> to replace
	    <c>filename:safe_relative_path/1</c>, which did not
	    safely handle symbolic links.</p>
	    <p><c>filename:safe_relative_path/1</c> has been
	    deprecated.</p>
          <p>
	    Own Id: OTP-16483 Aux Id: PR-2542 </p>
        </item>
        <item>
          <p>
	    The module <c>shell_docs</c> has been added. The module
	    contains functions for rendering, validating and
	    normalizing embedded documentation.</p>
          <p>
	    Own Id: OTP-16500</p>
        </item>
        <item>
          <p>
	    Module and function auto-completion in the shell now
	    looks at all available modules instead of only those
	    loaded. A module is considered available if it either is
	    loaded already or would be loaded if called.</p>
          <p>
	    The auto-completion has also been expanded to work in the
	    new <c>h/1,2,3</c> function in <c>c(3)</c>.</p>
          <p>
	    Own Id: OTP-16501 Aux Id: OTP-16494, OTP-16222,
	    OTP-16406, OTP-16499, OTP-16500, PR-2545, ERL-708 </p>
        </item>
        <item>
	    <p>Updated the internal <c>pcre</c> library to
	    <c>8.44</c>.</p>
          <p>
	    Own Id: OTP-16557</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.12.1.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix a bug that could cause a crash when formatting tuples
	    using the control sequences <c>p</c> or <c>P</c> and
	    limiting the output with the option <c>chars_limit</c>.</p>
          <p>
	    Own Id: OTP-17525 Aux Id: GH-5053 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.12.1.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix a bug that could cause a loop when formatting terms
	    using the control sequences p or P and limiting the
	    output with the option <c>chars_limit</c>.</p>
          <p>
	    Own Id: OTP-17459 Aux Id: GH-4824, GH-4842 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.12.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    <seemfa marker="stdlib:re#run/3">re:run(Subject, RE,
	    [unicode])</seemfa> returned <c>nomatch</c> instead of
	    failing with a <c>badarg</c> error exception when
	    <c>Subject</c> contained illegal utf8 and <c>RE</c> was
	    passed as a binary. This has been corrected along with
	    corrections of reduction counting in <c>re:run()</c>
	    error cases.</p>
          <p>
	    Own Id: OTP-16553</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.12</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix type specification for uri_string:normalize/2 that
	    may also return error().</p>
          <p>
	    Own Id: OTP-16322</p>
        </item>
        <item>
          <p>
	    Improve error handling in uri_string:normalize/2. This
	    change fixes a crash when the input URI has faulty
	    percent-encoding.</p>
          <p>
	    Own Id: OTP-16351</p>
        </item>
        <item>
	    <p> Fix minor bugs in the Erlang pretty printer
	    (<c>erl_pp</c>). </p>
          <p>
	    Own Id: OTP-16435</p>
        </item>
        <item>
	    <p> Fix the Erlang parser regarding consecutive unary
	    operators. </p>
          <p>
	    Own Id: OTP-16439</p>
        </item>
        <item>
	    <p> Let <c>calendar:rfc3339_to_system_time()</c> crash
	    when the time offset is missing. </p>
          <p>
	    Own Id: OTP-16514 Aux Id: ERL-1182 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Implement uri_string:resolve/{2,3} that can be used to
	    resolve a URI reference against a base URI.</p>
          <p>
	    Own Id: OTP-16321</p>
        </item>
        <item>
          <p>
	    In <c>gen_statem</c> it is now possible to change the
	    callback module for a running server. See
	    <c>gen_statem</c>'s documentation for
	    <c>change_callback_module</c>,
	    <c>push_callback_module</c>, and
	    <c>pop_callback_module</c>.</p>
          <p>
	    Own Id: OTP-16477 Aux Id: PR-2531 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.11.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>A directory traversal vulnerability has been
	    eliminated in erl_tar. erl_tar will now refuse to extract
	    symlinks that points outside the targeted extraction
	    directory and will return
	    <c>{error,{Path,unsafe_symlink}}</c>. (Thanks to Eric
	    Meadows-Jönsson for the bug report and for suggesting a
	    fix.)</p>
          <p>
	    Own Id: OTP-16441</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.11.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The <c>ets:update_counter/4</c> core dumped when given an
	    ordered_set with write_concurrency enabled and an invalid
	    position. This bug has been fixed.</p>
          <p>
	    Own Id: OTP-16378 Aux Id: ERL-1125 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.11</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The functions <seemfa
	    marker="stdlib:unicode#characters_to_list/2"><c>unicode:characters_to_list()</c></seemfa>
	    and <seemfa
	    marker="stdlib:unicode#characters_to_binary/3"><c>unicode:characters_to_binary()</c></seemfa>
	    raised a <c>badarg</c> exception instead of returning an
	    error tuple when passed very large invalid code points as
	    input.</p>
          <p>
	    Own Id: OTP-16052</p>
        </item>
        <item>
	    <p>Fixed a bug in the linter where list and binary
	    comprehensions could suppress unsafe variable errors.</p>
          <p>
	    Own Id: OTP-16053 Aux Id: ERL-1039 </p>
        </item>
        <item>
	    <p>Fixed incorrect type specifications for
	    <c>erl_tar:open/2</c>, <c>create/2,3</c>, and
	    <c>add/4</c>.</p>
          <p>
	    Own Id: OTP-16085 Aux Id: PR-2379 </p>
        </item>
        <item>
          <p>
	    Fixed erroneous type spec for <seemfa
	    marker="stdlib:binary#list_to_bin/1"><c>binary:list_to_bin/1</c></seemfa>.
	    Argument type was changed from <c>iodata()</c> to
	    <c>iolist()</c>.</p>
          <p>
	    Own Id: OTP-16132 Aux Id: ERL-1041 </p>
        </item>
        <item>
          <p>
	    Fix a race in <c>pool:pspawn_link</c> that caused a
	    <c>noproc</c> error to be thrown when using it to spawn a
	    very short lived process.</p>
          <p>
	    Own Id: OTP-16211</p>
        </item>
        <item>
          <p>
	    Fixed a performance issue in ETS lookup when using the
	    <c>compressed</c> option and the term contained atoms.
	    Before this fix the decompress algorithm for atoms would
	    unnecessarily take a global lock to validate the atom.</p>
          <p>
	    Own Id: OTP-16316</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>Added a new compiler/linter option to disable warnings
	    for unused types (<c>nowarn_unused_type</c>).</p>
          <p>
	    Own Id: OTP-16262 Aux Id: ERIERL-435 </p>
        </item>
        <item>
          <p>
	    ETS tables have been optimized to not use any locks when
	    running in a system with only one scheduler enabled. This
	    can provide significant performance gains for
	    applications that use ETS tables heavily.</p>
          <p>
	    Own Id: OTP-16315</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.10</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    <c>re:run()</c> now yields when validating utf8 in a
	    large subject.</p>
          <p>
	    Own Id: OTP-15836 Aux Id: ERL-876 </p>
        </item>
        <item>
          <p>
	    Upgraded the ERTS internal PCRE library from version 8.42
	    to version 8.43. See <url
	    href="http://pcre.org/original/changelog.txt">http://pcre.org/original/changelog.txt</url>
	    for information about changes made to PCRE. This library
	    implements major parts of the <seeerl
	    marker="stdlib:re"><c>re</c></seeerl> regular
	    expressions module.</p>
          <p>
	    Own Id: OTP-15889</p>
        </item>
        <item>
          <p>
	    The bug with ID ERL-717 has been fixed. The functions
	    <c>io:columns()</c> and <c>io:rows()</c> only worked
	    correctly inside interactive erlang shells before this
	    fix. These functions returned <c>{error,enotsup}</c>
	    before this fix even if stdout and stdin were connected
	    to a terminal when they were invoked from an escript or a
	    program started with e.g., <c>erl -noshell</c>.</p>
          <p>
	    Own Id: OTP-15959 Aux Id: ERL-717 </p>
        </item>
        <item>
	    <p>Fixed handling of ".." and "@" in wildcards. ".."
	    would only work when preceded by a literal pattern such
	    as in "a/..", not when preceded by wildcard characters
	    such as in "*/..". The combination "@/.." was also
	    broken, and in addition "@" in a pattern could degrade
	    performance of the wildcard matching.</p>
          <p>
	    Own Id: OTP-15987 Aux Id: ERL-1029 </p>
        </item>
        <item>
	    <p> Make sure <c>ets:fun2ms()</c> can handle <c>++/2</c>
	    in the head of functions when called from the shell. </p>
          <p>
	    Own Id: OTP-15992 Aux Id: PR-2322 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>Debugging of time-outs in <c>gen_statem</c> has been
	    improved. Starting a time-out is now logged in
	    <c>sys:log</c> and <c>sys:trace</c>. Running time-outs
	    are visible in server crash logs, and with
	    <c>sys:get_status</c>. Due to this system events
	    <c>{start_timer, Action, State}</c> and
	    <c>{insert_timout, Event, State}</c> have been added,
	    which may surprise tools that rely on the format of these
	    events. </p> <p>New features: The <c>EventContent</c> of
	    a running time-out can be updated with <c>{TimeoutType,
	    update, NewEventContent}</c>. Running time-outs can be
	    cancelled with <c>{TimeoutType, cancel}</c> which is more
	    readable than using <c>Time = infinity</c>. </p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-15510</p>
        </item>
        <item>
          <p>
	    <c>re:run()</c> now avoids validating utf8 in the subject
	    more than once in the same call. This validation could
	    previously be performed multiple times when the
	    <c>global</c> option was passed.</p>
          <p>
	    Own Id: OTP-15831 Aux Id: ERL-876 </p>
        </item>
        <item>
          <p>
	    ETS <c>ordered_set</c> tables with
	    <c>write_concurrency</c> enabled has got a performance
	    issue fixed. There were no limits for the values of
	    internal statistics counters before this fix. This could
	    result in that the data structure sometimes reacted
	    slowly to a change in how many parallel processes were
	    using it.</p>
          <p>
	    Own Id: OTP-15906</p>
        </item>
        <item>
	    <p>The <c>ordsets:union/1</c> is now faster when passed a
	    long list of ordsets.</p>
          <p>
	    Own Id: OTP-15927</p>
        </item>
        <item>
          <p>
	    <c>unicode:characters_to_binary()</c> could return very
	    small binaries as reference counted off heap binaries.
	    This could cause an unnecessary large memory usage and an
	    unnecessary load on the binary allocator. Small binaries
	    are now always returned as heap binaries.</p>
          <p>
	    Own Id: OTP-16002 Aux Id: ERIERL-366 </p>
        </item>
        <item>
	    <p> Display a more meaningful error message when a bad
	    I/O server is used in a script written in Erlang
	    (<c>escript</c>). </p>
          <p>
	    Own Id: OTP-16006 Aux Id: ERL-992 </p>
        </item>
        <item>
          <p>
	    New feature <c>ets:info(_, binary)</c> to get information
	    about all reference counted binaries kept by a table.
	    This is the same kind of debug information that
	    <c>process_info(_, binary)</c> returns for a process.</p>
          <p>
	    Own Id: OTP-16035 Aux Id: ERIERL-366 </p>
        </item>
        <item>
          <p>
	    Corrected ETS documentation about the behavior of
	    compiled match specifications when serialized through
	    external format.</p>
          <p>
	    Own Id: OTP-16038 Aux Id: PR-2366 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.9.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p> Fix a bug that could cause a loop when formatting
	    terms using the control sequences <c>p</c> or <c>P</c>
	    and limiting the output with the option
	    <c>chars_limit</c>. </p>
          <p>
	    Own Id: OTP-15875 Aux Id: ERL-967 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.9.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p> Fix a bug that could cause a failure when formatting
	    binaries using the control sequences <c>p</c> or <c>P</c>
	    and limiting the output with the option
	    <c>chars_limit</c>. </p>
          <p>
	    Own Id: OTP-15847 Aux Id: ERL-957 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.9</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p> Fix a bug in <c>string:lexemes/2</c>. </p> <p> The
	    bug was found when optimizing the handling of deep lists
	    of Unicode characters in the <c>string</c> module. </p>
          <p>
	    Own Id: OTP-15649</p>
        </item>
        <item>
	    <p>A bug has been fixed in the <c>maps</c> implementation
	    that could cause a crash or memory usage to grow until
	    the machine ran out of memory. This could happen when
	    inserting a new key-value pair with a key <c>K1</c>
	    containing a binary <c>B1</c> into a map <c>M</c> having
	    a key <c>K2</c> with a binary <c>B2</c> if the following
	    conditions were met:</p> <list> <item><c>B1 =/=
	    B2</c></item> <item><c>size(B1) >= 4294967296</c></item>
	    <item><c>size(B2) >= 4294967296</c></item>
	    <item><c>size(M) >= 32</c></item> <item><c>(size(B1) rem
	    4294967296) == (size(B2) rem 4294967296)</c></item>
	    <item>the first <c>(size(B1) rem 4294967296)</c> bytes
	    are the same both in <c>B1</c> and <c>B2</c></item>
	    <item>substituting <c>B1</c> in <c>K1</c> with <c>B2</c>
	    would create a term with the same value as
	    <c>K2</c></item> </list> <p>The root cause of the problem
	    is that the <c>maps</c> implementation only hashed the
	    first <c>(X rem 4294967296)</c> bytes of binaries so that
	    different binaries could get the same hash value
	    independently of the hash seed.</p>
          <p>
	    Own Id: OTP-15707</p>
        </item>
        <item>
	    <p> Since the introduction of the stack trace variable,
	    the Erlang Pretty Printer has left out the exception
	    class <c>throw</c> even when the stack trace variable
	    cannot be left out, which is not correct Erlang code. The
	    fix is to always include the exception class
	    <c>throw</c>. </p>
          <p>
	    Own Id: OTP-15751</p>
        </item>
        <item>
	    <p><c>record_info/2</c> is a pseudo-function that
	    requires literal arguments known at compile time.
	    Therefore, the following usage is illegal: <c>fun
	    record/info/2</c>. The compiler would crash when during
	    compilation of that kind of code. Corrected to issue a
	    compilation error.</p>
          <p>
	    Own Id: OTP-15760 Aux Id: ERL-907 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p> A new <c>rand</c> module algorithm, <c>exro928ss</c>
	    (Xoroshiro928**), has been implemented. It has got a
	    really long period and good statistical quality for all
	    output bits, while still being only about 50% slower than
	    the default algorithm. </p><p> The same generator is also
	    used as a long period counter in a new <c>crypto</c>
	    plugin for the <c>rand</c> module, algorithm
	    <c>crypto_aes</c>. This plugin uses AES-256 to scramble
	    the counter which buries any detectable statistical
	    artifacts. Scrambling is done in chunks which are cached
	    to get good amortized speed (about half of the default
	    algorithm). </p>
          <p>
	    Own Id: OTP-14461 Aux Id: PR-1857 </p>
        </item>
        <item>
          <p>
	    Types related to server naming and starting have been
	    exported from <c>gen_statem</c>. These are:
	    <c>server_name/0</c>, <c>server_ref/0</c>,
	    <c>start_opt/0</c>, <c>start_ret/0</c> and
	    <c>enter_loop_opt/0</c>.</p>
          <p>
	    Own Id: OTP-14724 Aux Id: PR-2056 </p>
        </item>
        <item>
          <p>
	    The default algorithm for the <c>rand</c> module has been
	    changed to <c>exsss</c> (Xorshift116**) which is a
	    combination of the Xorshift116 (<c>exsp</c>) state update
	    and a new scrambler "StarStar" from the 2018 paper
	    "Scrambled Linear Pseudorandom Number Generators" by
	    David Blackman and Sebastiano Vigna. This combination
	    should not have the caveat of weak low bits that the
	    previous default algorithm(s) have had, with the cost of
	    about 10% lower speed. See GitHub pull request #1969.</p>
          <p>
	    Own Id: OTP-14731 Aux Id: PR-1969 </p>
        </item>
        <item>
          <p>
	    The generic state machine behaviour <c>gen_statem</c> has
	    gotten code cleanup and documentation improvements from
	    GitHub Pull Request #1855, even though the PR itself was
	    rejected.</p>
          <p>
	    Own Id: OTP-14737 Aux Id: PR-1855 </p>
        </item>
        <item>
          <p>
	    Update Unicode specification to version 11.0.</p>
          <p>
	    Own Id: OTP-15111</p>
        </item>
        <item>
          <p>
	    ETS option <c>write_concurrency</c> now also affects and
	    improves the scalability of <c>ordered_set</c> tables.
	    The implementation is based on a data structure called
	    contention adapting search tree, where the lock
	    granularity adapts to the actual amount of concurrency
	    exploited by the applications in runtime.</p>
          <p>
	    Own Id: OTP-15128</p>
        </item>
        <item>
          <p>
	    Optimized <c>maps:new/0</c> with trivial Erlang
	    implementation, making use of literal terms (the empty
	    map) not needing dynamic heap allocation.</p>
          <p>
	    Own Id: OTP-15200 Aux Id: PR-1878 </p>
        </item>
        <item>
	    <p>The <c>gen_*</c> behaviours have been changed so that
	    if logging of the last N messages through
	    <c>sys:log/2,3</c> is active for the server, this log is
	    included in the terminate report.</p> <p>To accomplish
	    this the format of "System Events" as defined in the man
	    page for <c>sys</c> has been clarified and cleaned up, a
	    new function <c>sys:get_log/1</c> has been added, and
	    <c>sys:get_debug/3</c> has been deprecated. Due to these
	    changes, code that relies on the internal badly
	    documented format of "System Events", need to be
	    corrected.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-15381</p>
        </item>
        <item>
          <p>
	    The <c>gen_statem</c> behaviour engine loop has been
	    optimized for better performance in particular when the
	    callback module returns some actions, that is better
	    performance for more realistic applications than the Echo
	    Benchmark.</p>
          <p>
	    Own Id: OTP-15452</p>
        </item>
        <item>
	    <p> Do not allow function specifications for functions
	    residing in other modules. </p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-15563 Aux Id: ERL-845, OTP-15562 </p>
        </item>
        <item>
          <p>
	    The <c>persistent_term</c> functions <c>put/2</c> and
	    <c>erase/1</c> are now yielding.</p>
          <p>
	    Own Id: OTP-15615</p>
        </item>
        <item>
	    <p>Previously, all ETS tables used centralized counter
	    variables to keep track of the number of items stored and
	    the amount of memory consumed. These counters can cause
	    scalability problems (especially on big NUMA systems).
	    This change adds an implementation of a decentralized
	    counter and modifies the implementation of ETS so that
	    ETS tables of type <c>ordered_set</c> with
	    <c>write_concurrency</c> enabled use the decentralized
	    counter. Experiments indicate that this change
	    substantially improves the scalability of ETS
	    <c>ordered_set</c> tables with <c>write_concurrency</c>
	    enabled in scenarios with frequent <c>ets:insert/2</c>
	    and <c>ets:delete/2</c> calls.</p>
          <p>
	    Own Id: OTP-15623 Aux Id: PR-2190 </p>
        </item>
        <item>
	    <p> Use <c>ssh</c> instead of <c>rsh</c> as the default
	    remote shell. </p>
          <p>
	    Own Id: OTP-15633 Aux Id: PR-1787 </p>
        </item>
        <item>
	    <p>Added <c>beam_lib:strip/2</c> and friends, which
	    accept a list of chunks that should be preserved when
	    stripping.</p>
          <p>
	    Own Id: OTP-15680 Aux Id: PR-2114 </p>
        </item>
        <item>
	    <p> Optimize printing of maps with <c>io_lib:write()</c>.
	    Also optimize pretty printing of strings (<c>~s</c> and
	    <c>~ts</c>) when limiting the output with the
	    <c>chars_limit</c> option. </p>
          <p>
	    Own Id: OTP-15705</p>
        </item>
        <item>
	    <p> There are new compiler options <c>nowarn_removed</c>
	    and <c>{nowarn_removed,Items}</c> to suppress warnings
	    for functions and modules that have been removed from
	    OTP.</p>
          <p>
	    Own Id: OTP-15749 Aux Id: ERL-904 </p>
        </item>
        <item>
	    <p> Let the Erlang Pretty Printer put atomic parts on the
	    same line. </p>
          <p>
	    Own Id: OTP-15755</p>
        </item>
        <item>
	    <p> Add option <c>quote_singleton_atom_types</c> to the
	    Erlang Pretty Printer's functions. Setting the option to
	    <c>true</c> adds quotes to all singleton atom types. </p>
          <p>
	    Own Id: OTP-15756</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.8.2.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    <seemfa marker="stdlib:re#run/3">re:run(Subject, RE,
	    [unicode])</seemfa> returned <c>nomatch</c> instead of
	    failing with a <c>badarg</c> error exception when
	    <c>Subject</c> contained illegal utf8 and <c>RE</c> was
	    passed as a binary. This has been corrected along with
	    corrections of reduction counting in <c>re:run()</c>
	    error cases.</p>
          <p>
	    Own Id: OTP-16553</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.8.2.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>A directory traversal vulnerability has been
	    eliminated in erl_tar. erl_tar will now refuse to extract
	    symlinks that points outside the targeted extraction
	    directory and will return
	    <c>{error,{Path,unsafe_symlink}}</c>. (Thanks to Eric
	    Meadows-Jönsson for the bug report and for suggesting a
	    fix.)</p>
          <p>
	    Own Id: OTP-16441</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.8.2.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p> Fix a bug that could cause a loop when formatting
	    terms using the control sequences <c>p</c> or <c>P</c>
	    and limiting the output with the option
	    <c>chars_limit</c>. </p>
          <p>
	    Own Id: OTP-15875 Aux Id: ERL-967 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.8.2.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p> Fix a bug that could cause a failure when formatting
	    binaries using the control sequences <c>p</c> or <c>P</c>
	    and limiting the output with the option
	    <c>chars_limit</c>. </p>
          <p>
	    Own Id: OTP-15847 Aux Id: ERL-957 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.8.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A bug in gen_statem has been fixed where the internal
	    timeout message could arrive as an info to the callback
	    module during high load due to incorrect use of
	    asynchronous timer cancel.</p>
          <p>
	    Own Id: OTP-15295</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.8.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a performance regression when reading files
	    opened with the <c>compressed</c> flag.</p>
          <p>
	    Own Id: OTP-15706 Aux Id: ERIERL-336 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.8</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p> Fix a bug in the Erlang Pretty Printer: long atom
	    names in combination with <c>&lt;&lt;&gt;&gt;</c> could
	    cause a crash. </p>
          <p>
	    Own Id: OTP-15592 Aux Id: ERL-818 </p>
        </item>
        <item>
	    <p> Fix bugs that could cause wrong results or bad
	    performance when formatting lists of characters using the
	    control sequences <c>p</c> or <c>P</c> and limiting the
	    output with the option <c>chars_limit</c>. </p>
          <p>
	    Own Id: OTP-15639</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Improved ETS documentation about safe table traversal and
	    the partially bound key optimization for
	    <c>ordered_set</c>.</p>
          <p>
	    Own Id: OTP-15545 Aux Id: PR-2103, PR-2139 </p>
        </item>
        <item>
	    <p> Optimize <c>calendar:gregorian_days_to_date/1</c>.
	    </p>
          <p>
	    Own Id: OTP-15572 Aux Id: PR-2121 </p>
        </item>
        <item>
	    <p> Optimize functions
	    <c>calendar:rfc3339_to_system_time()</c> and
	    <c>calendar:system_time_to_rfc3339()</c>. </p>
          <p>
	    Own Id: OTP-15630</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.7.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p> Optimize pretty printing of terms. The slower
	    behaviour was introduced in Erlang/OTP 20. </p>
          <p>
	    Own Id: OTP-15573 Aux Id: ERIERL-306 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.7</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Document <c>bit_size</c> in match specifications and
	    allow it in <c>ets:fun2ms</c>.</p>
          <p>
	    Own Id: OTP-15343 Aux Id: PR-1962 </p>
        </item>
        <item>
	    <p>The <c>beam()</c> type in <c>beam_lib</c> is defined
	    as <c>module() | file:filename() | binary()</c>. The
	    <c>module()</c> is misleading. Giving the module name as
	    an atom will only work if the BEAM file is in a current
	    directory.</p>
	    <p>To avoid confusion, <c>module()</c> has been removed
	    from the type. That means that there will be a Dialyzer
	    warning for code that call <c>beam_lib</c> with an atom
	    as filename, but the calls will still work.</p>
          <p>
	    Own Id: OTP-15378 Aux Id: ERL-696 </p>
        </item>
        <item>
          <p>
	    <c>unicode_util</c> crashed on certain emoji grapheme
	    clusters in binary strings.</p>
          <p>
	    Own Id: OTP-15428 Aux Id: ERL-777 </p>
        </item>
        <item>
	    <p>When an external fun was used, warnings for unused
	    variables could be suppressed.</p>
          <p>
	    Own Id: OTP-15437 Aux Id: ERL-762 </p>
        </item>
        <item>
          <p>
	    Fix reduction count in lists:member/2</p>
          <p>
	    Own Id: OTP-15474 Aux Id: ERIERL-229 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>When specified, the <c>+{source,Name}</c> option will
	    now override the actual file name in stack traces,
	    instead of only affecting the return value of
	    <c>Mod:module_info()</c>.</p>
	    <p>The <c>+deterministic</c> flag will also affect stack
	    traces now, omitting all path information except the file
	    name, fixing a long-standing issue where deterministic
	    builds required deterministic paths.</p>
          <p>
	    Own Id: OTP-15245 Aux Id: ERL-706 </p>
        </item>
        <item>
	    <p>List subtraction (The <c>--</c> operator) will now
	    yield properly on large inputs.</p>
          <p>
	    Own Id: OTP-15371</p>
        </item>
        <item>
          <p>
	    <c>calendar:system_time_to_rfc3339/1,2</c> no longer
	    remove trailing zeros from fractions.</p>
          <p>
	    Own Id: OTP-15464</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.6</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>The specs of <c>filename:basedir/2,3</c> are
	    corrected.</p>
          <p>
	    Own Id: OTP-15252 Aux Id: ERL-667 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p> Let <c>dets:open_file()</c> exit with a <c>badarg</c>
	    message if given a raw file name (a binary). </p>
          <p>
	    Own Id: OTP-15253 Aux Id: OTP-13229, ERL-55 </p>
        </item>
        <item>
	    <p> The <c>Format</c> argument of the formatting
	    functions in modules <c>io</c> and <c>io_lib</c> is
	    accepted even if it is, for example, a list of binaries.
	    This is how it used to be before Erlang/OTP 21.0. </p>
          <p>
	    Own Id: OTP-15304</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.5.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p> Fix a bug that could cause a crash when formatting a
	    list of non-characters using the control sequences
	    <c>p</c> or <c>P</c> and limiting the output with the
	    option <c>chars_limit</c>. </p>
          <p>
	    Own Id: OTP-15159</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.5</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p><c>gen_statem</c> improvements.</p> <p> When using an
	    exception that is valid but not allowed in a state enter
	    call, the reason has been changed from
	    <c>{bad_action_from_state_function,Action}</c> to
	    <c>{bad_state_enter_action_from_state_function,Action}</c>.
	    </p><p> Timer parsing has been improved. Many erroneous
	    timeout tuples was not handled correctly. </p><p> The
	    documentation has been updated, in particular the User's
	    Guide and the pointer to it from the Reference Manual is
	    much more obvious. </p>
          <p>
	    Own Id: OTP-14015</p>
        </item>
        <item>
          <p>
	    The type specifications for <c>file:posix/0</c> and
	    <c>inet:posix/0</c> have been updated according to which
	    errors file and socket operations should be able to
	    return.</p>
          <p>
	    Own Id: OTP-14019 Aux Id: ERL-550 </p>
        </item>
        <item>
	    <p> File operations used to accept <seetype
	    marker="kernel:file#name_all">filenames</seetype>
	    containing null characters (integer value zero). This
	    caused the name to be truncated and in some cases
	    arguments to primitive operations to be mixed up.
	    Filenames containing null characters inside the filename
	    are now <em>rejected</em> and will cause primitive file
	    operations to fail. </p> <p> Also environment variable
	    operations used to accept <seetype
	    marker="kernel:os#env_var_name">names</seetype> and
	    <seetype
	    marker="kernel:os#env_var_value">values</seetype> of
	    environment variables containing null characters (integer
	    value zero). This caused operations to silently produce
	    erroneous results. Environment variable names and values
	    containing null characters inside the name or value are
	    now <em>rejected</em> and will cause environment variable
	    operations to fail. </p> <p>Primitive environment
	    variable operations also used to accept the <c>$=</c>
	    character in environment variable names causing various
	    problems. <c>$=</c> characters in environment variable
	    names are now also <em>rejected</em>. </p> <p>Also
	    <seemfa
	    marker="kernel:os#cmd/1"><c>os:cmd/1</c></seemfa> now
	    reject null characters inside its <seetype
	    marker="kernel:os#os_command">command</seetype>.
	    </p> <p><seemfa
	    marker="erts:erlang#open_port/2"><c>erlang:open_port/2</c></seemfa>
	    will also reject null characters inside the port name
	    from now on.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-14543 Aux Id: ERL-370 </p>
        </item>
        <item>
	    <p> Make <c>io_lib:unscan_format/1</c> work with pad char
	    and default precision. </p>
          <p>
	    Own Id: OTP-14958 Aux Id: PR-1735 </p>
        </item>
        <item>
	    <p> The control sequence modifiers <c>t</c> and <c>l</c>
	    can be used together in the same control sequence which
	    makes it possible to have Unicode atoms and no detection
	    of printable character lists at the same time. </p>
          <p>
	    Own Id: OTP-14971 Aux Id: PR-1743 </p>
        </item>
        <item>
	    <p> Fix a bug in the Erlang code linter: the check of
	    guard expressions no longer returns <c>false</c> if the
	    map syntax is used. The bug affected the Erlang shell,
	    the Debugger, and other modules evaluating abstract code.
	    </p>
          <p>
	    Own Id: OTP-15035 Aux Id: ERL-613 </p>
        </item>
        <item>
          <p>
	    A sys debug fun of type {Fun,State} should not be
	    possible to install twice. This was, however, possible if
	    the current State was 'undefined', which was mistaken for
	    non-existing fun. This has been corrected.</p>
          <p>
	    Own Id: OTP-15049</p>
        </item>
        <item>
          <p>
	    Fix <c>io:putchars/2</c> stacktrace rewriting at errors
	    to point to a valid function.</p>
          <p>
	    Own Id: OTP-15101</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    The <c>gen_server</c> has gotten a new callback
	    <c>handle_continue/2</c> for check pointing the state.
	    This is useful at least when implementing behaviours on
	    top of <c>gen_server</c> and for some start up scenarios.</p>
          <p>
	    Own Id: OTP-13019 Aux Id: PR-1490 </p>
        </item>
        <item>
	    <p> The semantics of timeout parameter
	    <c>{clean_timeout,infinity}</c> to
	    <c>gen_statem:call/3</c> has been changed to use a proxy
	    process for the call. With this change
	    <c>clean_timeout</c> implicates a proxy process with no
	    exceptions. This may be a hard to observe
	    incompatibility: in the presence of network problems a
	    late reply could arrive in the caller's message queue
	    when catching errors. That will not happen after this
	    correction. </p><p> The semantics of timeout parameter
	    <c>infinity</c> has not been changed. </p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-13073 Aux Id: PR-1595 </p>
        </item>
        <item>
	    <p>A new logging API is added to Erlang/OTP, see the
	    <seeerl
	    marker="kernel:logger"><c>logger(3)</c></seeerl> manual
	    page, and section <seeguide
	    marker="kernel:logger_chapter">Logging</seeguide> in the
	    Kernel User's Guide.</p>
	    <p>Calls to <c>error_logger</c> are automatically
	    redirected to the new API, and legacy error logger event
	    handlers can still be used. It is, however, recommended
	    to use the Logger API directly when writing new code.</p>
	    <p>Notice the following potential incompatibilities:</p>
	    <list> <item><p>Kernel configuration parameters
	    <c>error_logger</c> still works, but is overruled if the
	    default handler's output destination is configured with
	    Kernel configuration parameter <c>logger</c>.</p> <p>In
	    general, parameters for configuring error logger are
	    overwritten by new parameters for configuring
	    Logger.</p></item> <item><p>The concept of SASL error
	    logging is deprecated, meaning that by default the SASL
	    application does not affect which log events are
	    logged.</p> <p>By default, supervisor reports and crash
	    reports are logged by the default Logger handler started
	    by Kernel, and end up at the same destination (terminal
	    or file) as other standard log event from Erlang/OTP.</p>
	    <p>Progress reports are not logged by default, but can be
	    enabled by setting the primary log level to info, for
	    example with the Kernel configuration parameter
	    <c>logger_level</c>.</p> <p>To obtain backwards
	    compatibility with the SASL error logging functionality
	    from earlier releases, set Kernel configuration parameter
	    <c>logger_sasl_compatible</c> to <c>true</c>. This
	    prevents the default Logger handler from logging any
	    supervisor-, crash-, or progress reports. Instead, SASL
	    adds a separate Logger handler during application start,
	    which takes care of these log events. The SASL
	    configuration parameters <c>sasl_error_logger</c> and
	    <c>sasl_errlog_type</c> specify the destination (terminal
	    or file) and severity level to log for these
	    events.</p></item></list>
          <p>
	    Since Logger is new in Erlang/OTP 21.0, we do reserve the
	    right to introduce changes to the Logger API and
	    functionality in patches following this release. These
	    changes might or might not be backwards compatible with
	    the initial version.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-13295</p>
        </item>
        <item>
	    <p> Add functions
	    <c>calendar:system_time_to_local_time/2</c> and
	    <c>calendar:system_time_to_universal_time/2</c>. </p>
          <p>
	    Own Id: OTP-13413</p>
        </item>
        <item>
	    <p> Functions <c>rand:uniform_real/0</c> and
	    <c>rand:uniform_real_s/1</c> have been added. They
	    produce uniformly distributed numbers in the range <c>0.0
	    =&lt; X &lt; 1.0</c> that are as close to random real
	    numbers as Normalized IEEE 754 Double Precision allows.
	    Because the random real number exactly <c>0.0</c> is
	    infinitely improbable they will never return exactly
	    <c>0.0</c>. </p><p> These properties are useful when you
	    need to call for example <c>math:log(X)</c> or <c>1 /
	    X</c> on a random value <c>X</c>, since that will never
	    fail with a number from these new functions. </p>
          <p>
	    Own Id: OTP-13764 Aux Id: PR-1574 </p>
        </item>
        <item>
          <p>
	    Added maps:iterator/0 and maps:next/1 to be used for
	    iterating over the key-value associations in a map.</p>
          <p>
	    Own Id: OTP-14012</p>
        </item>
        <item>
	    <p>Changed the default behaviour of <c>.erlang</c>
	    loading: <c>.erlang</c> is no longer loaded from the
	    current directory. <c>c:erlangrc(PathList)</c> can be
	    used to search and load an <c>.erlang</c> file from user
	    specified directories.</p> <p><c>escript</c>,
	    <c>erlc</c>, <c>dialyzer</c> and <c>typer</c> no longer
	    load an <c>.erlang</c> at all.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-14439</p>
        </item>
        <item>
          <p>
	    Added new uri_string module to stdlib for handling URIs
	    (RFC 3986).</p>
          <p>
	    Own Id: OTP-14496</p>
        </item>
        <item>
          <p>
	    Update Unicode specification to version 10.0.</p>
          <p>
	    Own Id: OTP-14503</p>
        </item>
        <item>
	    <p><c>filelib:wildcard()</c> now allows characters with a
	    special meaning to be escaped using backslashes.</p>
	    <p>This is an incompatible change, but note that the use
	    of backslashes in wildcards would already work
	    differently on Windows and Unix. Existing calls to
	    <c>filelib:wildcard()</c> needs to be updated. On
	    Windows, directory separators must always be written as a
	    slash.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-14577</p>
        </item>
        <item>
          <p>
	    The supervisor now stores its child specifications in a
	    map instead of a list. This causes a significant
	    improvement when starting many children under a
	    non-simple_one_for_one supervisor.</p>
          <p>
	    Own Id: OTP-14586</p>
        </item>
        <item>
	    <p> The <c>base64</c> module is optimized. </p> <p> Note
	    that the functions <c>encode/1</c>, <c>decode/1</c>, and
	    <c>mime_decode/1</c> fail unless called with an argument
	    of the documented type. They used to accept any
	    <c>iodata()</c>. </p>
          <p>
	    Own Id: OTP-14624 Aux Id: PR-1565 </p>
        </item>
        <item>
	    <p> Add function <c>lists:search/2</c>. </p>
          <p>
	    Own Id: OTP-14675 Aux Id: PR-102 </p>
        </item>
        <item>
          <p>
	    uri_string module extended with functions for handling
	    application/x-www-form-urlencoded query strings based on
	    the HTML5 specification.</p>
          <p>
	    Own Id: OTP-14747</p>
        </item>
        <item>
	    <p> Add functions
	    <c>calendar:rfc3339_to_system_time/1,2</c> and
	    <c>calendar:system_time_to_rfc3339/1,2</c>. </p>
          <p>
	    Own Id: OTP-14764</p>
        </item>
        <item>
	    <p> The stack traces returned by the functions of the
	    <c>erl_eval</c> module more accurately reflect where the
	    exception occurred. </p>
          <p>
	    Own Id: OTP-14826 Aux Id: PR 1540 </p>
        </item>
        <item>
	    <p> Add options <c>atime</c>, <c>mtime</c>, <c>ctime</c>,
	    <c>uid</c>, and <c>gid</c> to the <c>erl_tar:add/3,4</c>
	    functions. </p>
          <p>
	    Own Id: OTP-14834 Aux Id: PR 1608 </p>
        </item>
        <item>
	    <p>Added <c>ets:whereis/1</c> for retrieving the table
	    identifier of a named table.</p>
          <p>
	    Own Id: OTP-14884</p>
        </item>
        <item>
          <p>
	    Improved URI normalization functions in the uri_string
	    module.</p>
          <p>
	    Own Id: OTP-14910</p>
        </item>
        <item>
	    <p> The new functions <c>io_lib:fwrite/3</c> and
	    <c>io_lib:format/3</c> take a third argument, an option
	    list. The only option is <c>chars_limit</c>, which is
	    used for limiting the number of returned characters. The
	    limit is soft, which means that the number of returned
	    characters exceeds the limit with at most a smallish
	    amount. If the limit is set, the functions
	    <c>format/3</c> and <c>fwrite/3</c> try to distribute the
	    number of characters evenly over the control sequences
	    <c>pPswW</c>. Furthermore, the control sequences
	    <c>pPwP</c> try to distribute the number of characters
	    evenly over substructures. </p> <p> A modification of the
	    control sequences <c>pPwW</c> is that even if there is no
	    limit on the number of returned characters, all
	    associations of a map are printed to the same depth. The
	    aim is to give a more consistent output as the order of
	    map keys is not defined. As before, if the depth is less
	    than the number of associations of a map, the selection
	    of associations to print is arbitrary. </p>
          <p>
	    Own Id: OTP-14983</p>
        </item>
        <item>
	    <p> Add functions <c>ordsets:is_empty/1</c> and
	    <c>sets:is_empty/1</c>. </p>
          <p>
	    Own Id: OTP-14996 Aux Id: ERL-557, PR-1703 </p>
        </item>
        <item>
          <p>
	    Improve performance of <c>string:uppercase/1</c>,
	    <c>string:lowercase/1</c> and <c>string:casefold/1</c>
	    when handling ASCII characters.</p>
          <p>
	    Own Id: OTP-14998</p>
        </item>
        <item>
	    <p>External funs with literal values for module, name,
	    and arity (e.g. <c>erlang:abs/1</c>) are now treated as
	    literals. That means more efficient code that produces
	    less garbage on the heap.</p>
          <p>
	    Own Id: OTP-15003</p>
        </item>
        <item>
          <p>
	    sys:statistics(Pid,get) did not report 'out' messages
	    from gen_server. This is now corrected.</p>
          <p>
	    Own Id: OTP-15047</p>
        </item>
        <item>
          <p>
	    A sys debug function can now have the format
	    {Id,Fun,State} in addition to the old {Fun,State}. This
	    allows installing multiple instances of a debug fun.</p>
          <p>
	    Own Id: OTP-15048</p>
        </item>
        <item>
	    <p> The <c>lib</c> module is removed:</p> <list
	    type="bulleted"> <item><c>lib:error_message/2</c> is
	    removed.</item> <item><c>lib:flush_receive/0</c> is
	    removed.</item> <item><c>lib:nonl/1</c> is
	    removed.</item> <item><c>lib:progname/0</c> is replaced
	    by <c>ct:get_progname/0</c>.</item>
	    <item><c>lib:send/2</c> is removed.</item>
	    <item><c>lib:sendw/2</c> is removed.</item> </list>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-15072 Aux Id: PR 1786, OTP-15114 </p>
        </item>
        <item>
          <p>
	    Function <c>ets:delete_all_objects/1</c> now yields the
	    scheduler thread for large tables that take significant
	    time to clear. This to improve real time characteristics
	    of other runnable processes.</p>
          <p>
	    Own Id: OTP-15078</p>
        </item>
        <item>
	    <p> In control sequences of the functions
	    <c>io:fwrite/2,3</c> and <c>io_lib:fwrite/2,3</c>
	    containing <c>p</c> or <c>P</c>, a field width of value
	    <c>0</c> means that no line breaks are inserted. This is
	    in contrast to the old behaviour, where <c>0</c> used to
	    insert line breaks after every subterm. To insert line
	    breaks after every subterm, a field width of value
	    <c>1</c> can be used. </p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-15103 Aux Id: ERL-607 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.4.5.1</title>

    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>List subtraction (The <c>--</c> operator) will now
	    yield properly on large inputs.</p>
          <p>
	    Own Id: OTP-15371</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.4.5</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The <c>Module:init/1</c> function in <c>gen_statem</c>
	    may return an actions list containing any action, but an
	    erroneous check only allowed state enter actions so e.g
	    <c>{next_event,internal,event}</c> caused a server crash.
	    This bug has been fixed.</p>
          <p>
	    Own Id: OTP-13995</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.4.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p> Correct <c>filelib:find_source()</c> and
	    <c>filelib:find_file()</c> to by default also search one
	    level below <c>src</c>. This is in accordance with the
	    Design Principles which states that an application can
	    have Erlang source files one level below the <c>src</c>
	    directory. </p>
          <p>
	    Own Id: OTP-14832 Aux Id: ERL-527 </p>
        </item>
        <item>
	    <p> The contract of <c>erl_tar:table/2</c> is corrected.
	    </p>
          <p>
	    Own Id: OTP-14860 Aux Id: PR 1670 </p>
        </item>
        <item>
	    <p> Correct a few contracts. </p>
          <p>
	    Own Id: OTP-14889</p>
        </item>
        <item>
          <p>
	    Fix string:prefix/2 to handle an empty string as second
	    argument.</p>
          <p>
	    Own Id: OTP-14942 Aux Id: PR-1702 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.4.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p> Make <c>ets:i/1</c> exit cleaner when ^D is input
	    while browsing a table. Only the old Erlang shell is
	    affected (<c>erl(1)</c> flag <c>-oldshell</c>). </p>
          <p>
	    Own Id: OTP-14663</p>
        </item>
        <item>
          <p>
	    Fixed handling of windows UNC paths in module
	    <c>filename</c>.</p>
          <p>
	    Own Id: OTP-14693</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Improve performance of the new string functionality when
	    handling ASCII characters.</p>
          <p>
	    Own Id: OTP-14670</p>
        </item>
        <item>
          <p>
	    Added a clarification to the documentation of
	    <c>unicode:characters_to_list/2</c>.</p>
          <p>
	    Own Id: OTP-14798</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.4.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p> Fix a bug in the Erlang shell where recursively
	    defined records with typed fields could cause a loop.
	    </p>
          <p>
	    Own Id: OTP-14488 Aux Id: PR-1489 </p>
        </item>
        <item>
          <p>
	    Make edlin handle grapheme clusters instead of codepoints
	    to improve the handling multi-codepoints characters.</p>
          <p>
	    Own Id: OTP-14542</p>
        </item>
        <item>
	    <p>There could be false warnings for
	    <c>erlang:get_stacktrace/0</c> being used outside of a
	    <c>try</c> block when using multiple <c>catch</c>
	    clauses.</p>
          <p>
	    Own Id: OTP-14600 Aux Id: ERL-478 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p> The Erlang code linter no longer checks that the
	    functions mentioned in <c>nowarn_deprecated_function</c>
	    options are declared in the module. </p>
          <p>
	    Own Id: OTP-14378</p>
        </item>
        <item>
          <p>
	    General Unicode improvements.</p>
          <p>
	    Own Id: OTP-14462</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.4.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p> A bug in <c>proc_lib:format()</c> introduced in
	    Erlang/OTP 20.0 is corrected. </p>
          <p>
	    Own Id: OTP-14482 Aux Id: PR-1488 </p>
        </item>
        <item>
          <p>
	    Fix string:len/1 to be compatible with previous versions.</p>
          <p>
	    Own Id: OTP-14487 Aux Id: ERIERL-40 </p>
        </item>
        <item>
          <p>
	    In OTP-20.0, the behavior of c, make, and ct_make was
	    changed so that in some cases the beam files by default
	    would be written to the directory where the source files
	    were found. This is now changed back to the old behavior
	    so beam files are by default written to current
	    directory.</p>
          <p>
	    Own Id: OTP-14489 Aux Id: ERL-438 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>For many releases, it has been legal to override a BIF
	    with a local function having the same name. However,
	    calling a local function with the same name as guard BIF
	    as filter in a list comprehension was not allowed.</p>
          <p>
	    Own Id: OTP-13690</p>
        </item>
        <item>
	    <p> A new (default) pseudo-random number generator
	    algorithm Xoroshiro116+ has been implemented in the
	    <c>rand</c> module. </p><p> The old algorithm
	    implementations had a number of flaws so they are all
	    deprecated, but corrected versions of two of them have
	    been added. See the documentation. </p>
          <p>
	    Own Id: OTP-14295 Aux Id: PR-1372 </p>
        </item>
        <item>
	    <p> The Erlang shell, <c>qlc:string_to_handle()</c>, and
	    the Debugger (the Evaluator area and Edit variable window
	    of the Bindings area) can parse pids, ports, references,
	    and external funs, as long as they can be created in the
	    running system. </p>
          <p>
	    Own Id: OTP-14296</p>
        </item>
        <item>
	    <p>Internal code change: Calls to <c>catch</c> followed
	    by a call to <c>erlang:get_stacktrace/0</c> has been
	    rewritten to use <c>try</c> instead of <c>catch</c> to
	    make the code future-proof.</p>
          <p>
	    Own Id: OTP-14400</p>
        </item>
        <item>
	    <p> The <c>ms_transform</c> module, used by
	    <c>ets:fun2ms/1</c> and <c>dbg:fun2ms/1</c>, evaluates
	    constant arithmetic expressions. This is necessary since
	    the Erlang compiler, which normally evaluates constant
	    expressions, does not recognize the format generated by
	    <c>ms_transform</c>. </p>
          <p>
	    Own Id: OTP-14454 Aux Id: ERIERL-29 </p>
        </item>
        <item>
	    <p> The state machine engine <c>gen_statem</c> can now
	    handle generic time-outs (multiple named) as well as
	    absolute time-out time. See the documentation. </p><p>
	    The <c>gen_statem</c> callback <c>Module:init/1</c> has
	    become mandatory to harmonize with other <c>gen_*</c>
	    modules. This may be an incompatibility for
	    <c>gen_statem</c> callback modules that use
	    <c>gen_statem:enter_loop/4-6</c>. </p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-14531</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Improved unicode support for strings. Added normalization
	    functions in the <c>unicode</c> module. Extended the
	    <c>string</c> module API with new functions with improved
	    unicode handling and that works on grapheme clusters. The
	    new functions operates on the <c>unicode:chardata()</c>
	    type, thus they also accept <c>UTF-8 binaries</c> as
	    input. </p>
          <p>
	    The old string API have been marked as obsolete. The
	    return values have been changed for some error cases.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-10289 Aux Id: OTP-10309 </p>
        </item>
        <item>
	    <p>There are two new guard BIFs '<c>floor/1</c>' and
	    '<c>ceil/1</c>'. They both return integers. In the
	    '<c>math</c>' module, there are two new BIFs with the
	    same names that return floating point values.</p>
          <p>
	    Own Id: OTP-13692</p>
        </item>
        <item>
          <p>
	    Making code_change, terminate and handle_info callbacks
	    optional in the OTP behaviours.</p>
          <p>
	    Own Id: OTP-13801</p>
        </item>
        <item>
	    <p> The support for Dets files created with Erlang/OTP R7
	    and earlier is removed. </p>
          <p>
	    Own Id: OTP-13830</p>
        </item>
        <item>
	    <p>Replaced usage of deprecated symbolic <seetype
	    marker="erts:erlang#time_unit"><c>time
	    unit</c></seetype> representations.</p>
          <p>
	    Own Id: OTP-13831 Aux Id: OTP-13735 </p>
        </item>
        <item>
	    <p>The function <c>fmod/2</c> has been added to the
	    <c>math</c> module.</p>
          <p>
	    Own Id: OTP-14000</p>
        </item>
        <item>
	    <p>The EXIT signals received from processes using
	    <c>proc_lib</c> now looks like EXIT signals from
	    processes that were spawned using <c>spawn_link</c>. In
	    particular, that means that the stack trace is now
	    included in the EXIT signal so that it can see where the
	    process crashed.</p>
          <p>
	    Own Id: OTP-14001</p>
        </item>
        <item>
	    <p><c>sets:add_element/2</c> is faster when adding an
	    element that is already present, and
	    <c>sets:del_element/2</c> is faster when the element to
	    be deleted is not present. This optimization can make
	    certain operations, such as sets:union/2 with many
	    overlapping elements, up to two orders of magnitude
	    faster.</p>
          <p>
	    Own Id: OTP-14035</p>
        </item>
        <item>
          <p>
	    Add information in doc about supervisor shutdown reason
	    when maximum restart frequency is reached.</p>
          <p>
	    Own Id: OTP-14037 Aux Id: PR-1233 </p>
        </item>
        <item>
          <p>
	    Added <c>rand:jump/[0|1]</c> functions.</p>
          <p>
	    Own Id: OTP-14038 Aux Id: PR-1235 </p>
        </item>
        <item>
	    <p>Functions for detecting changed code has been added.
	    <c>code:modified_modules/0</c> returns all currently
	    loaded modules that have changed on disk.
	    <c>code:module_status/1</c> returns the status for a
	    module. In the shell and in <c>c</c> module, <c>mm/0</c>
	    is short for <c>code:modified_modules/0</c>, and
	    <c>lm/0</c> reloads all currently loaded modules that
	    have changed on disk.</p>
          <p>
	    Own Id: OTP-14059</p>
        </item>
        <item>
	    <p>Each assert macro in <c>assert.hrl</c> now has a
	    corresponding version with an extra argument, for adding
	    comments to assertions. These can for example be printed
	    as part of error reports, to clarify the meaning of the
	    check that failed.</p>
          <p>
	    Own Id: OTP-14066</p>
        </item>
        <item>
	    <p><c>error_logger_tty_h</c> and
	    <c>error_logger_file_h</c> now inserts the node
	    information for nonlocal messages before the message
	    itself instead of after, both for readability and so as
	    not to change the line termination property at the end of
	    the message.</p>
          <p>
	    Own Id: OTP-14068</p>
        </item>
        <item>
	    <p>The Erlang code linter checks for badly formed type
	    constraints. </p>
          <p>
	    Own Id: OTP-14070 Aux Id: PR-1214 </p>
        </item>
        <item>
	    <p>By default, there will now be a warning when
	    <c>export_all</c> is used. The warning can be disabled
	    using <c>nowarn_export_all</c>.</p>
          <p>
	    Own Id: OTP-14071</p>
        </item>
        <item>
	    <p>When a <c>gen_server</c> process crashes, the
	    stacktrace for the client will be printed to facilitate
	    debugging.</p>
          <p>
	    Own Id: OTP-14089</p>
        </item>
        <item>
	    <p>Optimized ETS operations by changing table identifier
	    type from integer to reference. The reference enables a
	    more direct mapping to the table with less potential lock
	    contention and makes especially creation and deletion of
	    tables scale much better.</p> <p>The change of the opaque
	    type for the ETS table identifiers may cause failure in
	    code that make faulty assumptions about this opaque
	    type.</p> <note> <p> The number of tables stored at one
	    Erlang node <em>used</em> to be limited. This is no
	    longer the case (except by memory usage). The previous
	    default limit was about 1400 tables and could be
	    increased by setting the environment variable
	    <c>ERL_MAX_ETS_TABLES</c> before starting the Erlang
	    runtime system. This hard limit has been removed, but it
	    is currently useful to set the <c>ERL_MAX_ETS_TABLES</c>
	    anyway. It should be set to an approximate of the maximum
	    amount of tables used. This since an internal table for
	    named tables is sized using this value. If large amounts
	    of named tables are used and <c>ERL_MAX_ETS_TABLES</c>
	    hasn't been increased, the performance of named table
	    lookup will degrade. </p> </note>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-14094</p>
        </item>
        <item>
	    <p><c>take/2</c> has been added to <c>dict</c>,
	    <c>orddict</c>, and <c>gb_trees</c>. <c>take_any/2</c>
	    has been added to <c>gb_trees</c>.</p>
          <p>
	    Own Id: OTP-14102</p>
        </item>
        <item>
          <p>
	    Extend gen_event API to handle options as well.</p>
          <p>
	    Own Id: OTP-14123</p>
        </item>
        <item>
          <p>
	    Advice on how to tune the supervisor restart frequency
	    (intensity and period) is added to System Documentation -
	    Design Principles - Supervisor Behaviour.</p>
          <p>
	    Own Id: OTP-14168 Aux Id: PR-1289 </p>
        </item>
        <item>
          <p>
	    gen_fsm is deprecated and is replaced by gen_statem,
	    however for backwards compatibility reasons gen_fsm may
	    continue to exist as an undocumented feature for quite
	    some time.</p>
          <p>
	    Own Id: OTP-14183</p>
        </item>
        <item>
	    <p>The shell functions <c>c/1</c> and <c>c/2</c> have
	    been extended so that if the argument is a module name
	    instead of a file name, it automatically locates the
	    .beam file and the corresponding source file, and then
	    recompiles the module using the same compiler options
	    (plus any options passed to c/2). If compilation fails,
	    the old beam file is preserved. Also adds <c>c(Mod, Opts,
	    Filter)</c>, where the Filter argument allows you to
	    remove old compiler options before the new options are
	    added.</p> <p>New utility functions <c>file_find/2/3</c>
	    and <c>find_source/1/2/3</c> have been added to
	    <c>filelib</c>.</p>
          <p>
	    Own Id: OTP-14190</p>
        </item>
        <item>
	    <p><c>erl_tar</c> in previous versions of OTP only
	    supports the USTAR format. That limited path names to at
	    most 255 bytes, and did not support Unicode characters in
	    names in a portable way.</p>
	    <p><c>erl_tar</c> now has support for reading tar
	    archives in the formats currently in common use, such as
	    v7, STAR, USTAR, PAX, and GNU tar's extensions to the
	    STAR/USTAR format. When writing tar archives,
	    <c>erl_tar</c> can now write them in the <c>PAX</c>
	    format if necessary (for example, to support very long
	    filenames or filenames with Unicode characters). If
	    possible, <c>erl_tar</c> will still write tar archives in
	    the USTAR for maximum portability.</p>
          <p>
	    Own Id: OTP-14226</p>
        </item>
        <item>
	    <p><c>base64:mime_decode/1</c> has been optimized so that
	    it is now almost as fast as<c>base64:decode/1</c>; it
	    used be noticeably slower.</p>
          <p>
	    Own Id: OTP-14245</p>
        </item>
        <item>
	    <p><c>erl_tar</c> will now strip any leading '<c>/</c>'
	    from pathnames when extracting files from a tar archive
	    and write a message to the error logger. There is also
	    new check for directory traversal attacks; if a relative
	    path points above the current working directory the
	    extraction will be aborted.</p>
          <p>
	    Own Id: OTP-14278</p>
        </item>
        <item>
	    <p> Miscellaneous updates due to atoms containing
	    arbitrary Unicode characters. </p>
          <p>
	    Own Id: OTP-14285</p>
        </item>
        <item>
          <p>
	    The Crypto application now supports generation of
	    cryptographically strong random numbers (floats &lt; 1.0
	    and integer arbitrary ranges) as a plugin to the 'rand'
	    module.</p>
          <p>
	    Own Id: OTP-14317 Aux Id: PR-1372 </p>
        </item>
        <item>
          <p>
	    Add new function <c>ets:select_replace/2</c> which
	    performs atomic "compare-and-swap" operations for ETS
	    objects using match specifications.</p>
          <p>
	    Own Id: OTP-14319 Aux Id: PR-1076 </p>
        </item>
        <item>
	    <p> The Erlang code linter checks for bad <c>dialyzer</c>
	    attributes. It also checks for bad type variables in type
	    declarations. </p>
          <p>
	    Own Id: OTP-14323</p>
        </item>
        <item>
	    <p> Two new functions has been implemented in the
	    <c>rand</c> module; <c>normal/2</c> and
	    <c>normal_s/3</c>, that both produce normal distribution
	    (pseudo) random numbers with mean value and variance
	    according to arguments. </p>
          <p>
	    Own Id: OTP-14328 Aux Id: PR-1382 </p>
        </item>
        <item>
          <p>
	    Upgraded the OTP internal PCRE library from version 8.33
	    to version 8.40. This library is used for implementation
	    of the <seeerl marker="stdlib:re"><c>re</c></seeerl>
	    regular expressions module.</p>
          <p>
	    Besides various bug fixes, the new version allows for
	    better stack protection. In order to utilize this
	    feature, the stack size of normal scheduler threads is
	    now by default set to 128 kilo words on all platforms.
	    The stack size of normal scheduler threads can be set
	    upon system start by passing the <seecom
	    marker="erts:erl#sched_thread_stack_size"><c>+sss</c></seecom>
	    command line argument to the <seecom
	    marker="erts:erl"><c>erl</c></seecom> command.</p>
          <p>
	    See <url
	    href="http://pcre.org/original/changelog.txt">http://pcre.org/original/changelog.txt</url>
	    for information about changes made to PCRE between the
	    versions 8.33 and 8.40.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-14331 Aux Id: ERL-208 </p>
        </item>
        <item>
          <p>
	    Added function <c>re:version/0</c> which returns
	    information about the OTP internal PCRE version used for
	    implementation of the <c>re</c> module.</p>
          <p>
	    Own Id: OTP-14347 Aux Id: PR-1412 </p>
        </item>
        <item>
	    <p>The format of debug information that is stored in BEAM
	    files (when <c>debug_info</c> is used) has been changed.
	    The purpose of the change is to better support other
	    BEAM-based languages such as Elixir or LFE.</p>
	    <p>All tools included in OTP (dialyzer, debugger, cover,
	    and so on) will handle both the new format and the
	    previous format. Tools that retrieve the debug
	    information using <c>beam_lib:chunk(Beam,
	    [abstract_code])</c> will continue to work with both the
	    new and old format. Tools that call
	    <c>beam_lib:chunk(Beam, ["Abst"])</c> will not work with
	    the new format.</p>
	    <p>For more information, see the description of
	    <c>debug_info</c> in the documentation for
	    <c>beam_lib</c> and the description of the
	    <c>{debug_info,{Backend,Data}}</c> option in the
	    documentation for <c>compile</c>.</p>
          <p>
	    Own Id: OTP-14369 Aux Id: PR-1367 </p>
        </item>
        <item>
          <p>
	    Add option hibernate_after to gen_server, gen_statem and
	    gen_event. Also added to the deprecated gen_fsm
	    behaviour.</p>
          <p>
	    Own Id: OTP-14405</p>
        </item>
        <item>
	    <p> The size of crash reports created by
	    <c>gen_server</c>, <c>gen_statem</c> and <c>proc_lib</c>
	    is limited with aid of the Kernel application variable
	    <c>error_logger_format_depth</c>. The purpose is to limit
	    the size of the messages sent to the <c>error_logger</c>
	    process when processes with huge message queues or states
	    crash. </p> <p>The crash report generated by
	    <c>proc_lib</c> includes the new tag
	    <c>message_queue_len</c>. The neighbour report also
	    includes the new tag <c>current_stacktrace</c>. Finally,
	    the neighbour report no longer includes the tags
	    <c>messages</c> and <c>dictionary</c>. </p> <p> The new
	    function <c>error_logger:get_format_depth/0</c> can be
	    used to retrieve the value of the Kernel application
	    variable <c>error_logger_format_depth</c>. </p>
          <p>
	    Own Id: OTP-14417</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>An escript with only two lines would not work.</p>
          <p>
	    Own Id: OTP-14098</p>
        </item>
        <item>
	    <p> Characters (<c>$char</c>) can be used in constant
	    pattern expressions. They can also be used in types and
	    contracts. </p>
          <p>
	    Own Id: OTP-14103 Aux Id: ERL-313 </p>
        </item>
        <item>
	    <p> The signatures of <c>erl_parse:anno_to_term/1</c> and
	    <c>erl_parse:anno_from_term/1</c> are corrected. Using
	    these functions no longer results in false Dialyzer
	    warnings. </p>
          <p>
	    Own Id: OTP-14131</p>
        </item>
        <item>
	    <p>Pretty-printing of maps is improved. </p>
          <p>
	    Own Id: OTP-14175 Aux Id: seq13277 </p>
        </item>
        <item>
	    <p>If any of the following functions in the <c>zip</c>
	    module crashed, a file would be left open:
	    <c>extract()</c>, <c>unzip()</c>, <c>create()</c>, or
	    <c>zip()</c>. This has been corrected.</p>
	    <p>A <c>zip</c> file having a "Unix header" could not be
	    unpacked.</p>
          <p>
	    Own Id: OTP-14189 Aux Id: ERL-348, ERL-349 </p>
        </item>
        <item>
	    <p> Improve the Erlang shell's tab-completion of long
	    names. </p>
          <p>
	    Own Id: OTP-14200 Aux Id: ERL-352 </p>
        </item>
        <item>
          <p>
	    The reference manual for <c>sys</c> had some faulty
	    information about the 'get_modules' message used by
	    processes where modules change dynamically during
	    runtime. The documentation is now corrected.</p>
          <p>
	    Own Id: OTP-14248 Aux Id: ERL-367 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Bug fixes, new features and improvements to gen_statem:</p>
          <p>
	    A new type init_result/1 has replaced the old
	    init_result/0, so if you used that old type (that was
	    never documented) you have to change your code, which may
	    be regarded as a potential incompatibility.</p>
          <p>
	    Changing callback modes after code change did not work
	    since the new callback mode was not recorded. This bug
	    has been fixed.</p>
          <p>
	    The event types state_timeout and {call,From} could not
	    be generated with a {next_event,EventType,EventContent}
	    action since they did not pass the runtime type check.
	    This bug has now been corrected.</p>
          <p>
	    State entry calls can now be repeated using (new) state
	    callback returns {repeat_state,...},
	    {repeat_state_and_data,_} and repeat_state_and_data.</p>
          <p>
	    There have been lots of code cleanup in particular
	    regarding timer handling. For example is async
	    cancel_timer now used. Error handling has also been
	    cleaned up.</p>
          <p>
	    To align with probable future changes to the rest of
	    gen_*, terminate/3 has now got a fallback and
	    code_change/4 is not mandatory.</p>
          <p>
	    Own Id: OTP-14114</p>
        </item>
        <item>
	    <p><c>filename:safe_relative_path/1</c> to sanitize a
	    relative path has been added.</p>
          <p>
	    Own Id: OTP-14215</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    When a simple_one_for_one supervisor is shutting down,
	    and a child exits with an exit reason of the form
	    {shutdown, Term}, an error report was earlier printed.
	    This is now corrected.</p>
          <p>
	    Own Id: OTP-13907 Aux Id: PR-1158, ERL-163 </p>
        </item>
        <item>
	    <p> Allow empty list as parameter of the fun used with
	    <c>dbg:fun2ms/1</c>. </p>
          <p>
	    Own Id: OTP-13974</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    The new behaviour gen_statem has been improved with 3 new
	    features: the possibility to use old style non-proxy
	    timeouts for gen_statem:call/2,3, state entry code, and
	    state timeouts. These are backwards compatible. Minor
	    code and documentation improvements has been performed
	    including a borderline semantics correction of timeout
	    zero handling.</p>
          <p>
	    Own Id: OTP-13929 Aux Id: PR-1170, ERL-284 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The <c>zip:unzip/1,2</c> and <c>zip:extract/1,2</c>
	    functions have been updated to handle directory traversal
	    exploits. Any element in the zip file that contains a
	    path that points to a directory above the top level
	    working directory, <c>cwd</c>, will instead be extracted
	    in <c>cwd</c>. An error message is printed for any such
	    element in the zip file during the unzip operation. The
	    <c>keep_old_files</c> option determines if a file will
	    overwrite a previous file with the same name within the
	    zip file.</p>
          <p>
	    Own Id: OTP-13633</p>
        </item>
        <item>
	    <p> Correct the contracts for
	    <c>ets:match_object/1,3</c>. </p>
          <p>
	    Own Id: OTP-13721 Aux Id: PR-1113 </p>
        </item>
        <item>
          <p>
	    Errors in type specification and Emacs template
	    generation for <c>gen_statem:code_change/4</c> has been
	    fixed from bugs.erlang.org's Jira cases ERL-172 and
	    ERL-187.</p>
          <p>
	    Own Id: OTP-13746 Aux Id: ERL-172, ERL-187 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    gen_statem has been changed to set the callback mode for
	    a server to what Module:callback_mode/0 returns. This
	    facilitates e.g code downgrade since the callback mode
	    now becomes a property of the currently active code, not
	    of the server process.</p>
          <p>
	    Exception handling from Module:init/1 has also been
	    improved.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-13752</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.0.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p> Correct a bug regarding typed records in the Erlang
	    shell. The bug was introduced in OTP-19.0. </p>
          <p>
	    Own Id: OTP-13719 Aux Id: ERL-182 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 3.0</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p> Fix a race bug affecting <c>dets:open_file/2</c>.
	    </p>
          <p>
	    Own Id: OTP-13260 Aux Id: seq13002 </p>
        </item>
        <item>
	    <p>Don't search for non-existing Map keys twice</p>
	    <p>For <c>maps:get/2,3</c> and <c>maps:find/2</c>,
	    searching for an immediate key, e.g. an atom, in a small
	    map, the search was performed twice if the key did not
	    exist.</p>
          <p>
	    Own Id: OTP-13459</p>
        </item>
        <item>
          <p>
	    Avoid stray corner-case math errors on Solaris, e.g. an
	    error is thrown on underflows in exp() and pow() when it
	    shouldn't be.</p>
          <p>
	    Own Id: OTP-13531</p>
        </item>
        <item>
	    <p>Fix linting of map key variables</p>
	    <p>Map keys cannot be unbound and then used in parallel
	    matching.</p>
	    <p>Example: <c> #{ K := V } = #{ k := K } = M.</c> This
	    is illegal if <c>'K'</c> is not bound.</p>
          <p>
	    Own Id: OTP-13534 Aux Id: ERL-135 </p>
        </item>
        <item>
          <p>
	    Fixed a bug in re on openbsd where sometimes re:run would
	    return an incorrect result.</p>
          <p>
	    Own Id: OTP-13602</p>
        </item>
        <item>
          <p>
	    To avoid potential timer bottleneck on supervisor
	    restart, timer server is no longer used when the
	    supervisor is unable to restart a child.</p>
          <p>
	    Own Id: OTP-13618 Aux Id: PR-1001 </p>
        </item>
        <item>
	    <p> The Erlang code preprocessor (<c>epp</c>) can handle
	    file names spanning over many tokens. Example:
	    <c>-include("a" "file" "name").</c>. </p>
          <p>
	    Own Id: OTP-13662 Aux Id: seq13136 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>The types of The Abstract Format in the
	    <c>erl_parse</c> module have been refined. </p>
          <p>
	    Own Id: OTP-10292</p>
        </item>
        <item>
	    <p> Undocumented syntax for function specifications,
	    <c>-spec F/A :: Domain -&gt; Range</c>, has been removed
	    (without deprecation). </p> <p> Using the
	    <c>is_subtype(V, T)</c> syntax for constraints (in
	    function specifications) is no longer documented, and the
	    newer syntax <c>V :: T</c> should be used instead. The
	    Erlang Parser still recognizes the <c>is_subtype</c>
	    syntax, and will continue to do so for some time. </p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-11879</p>
        </item>
        <item>
	    <p>The '<c>random</c>' module has been deprecated. Use
	    the '<c>rand</c>' module instead.</p>
          <p>
	    Own Id: OTP-12502 Aux Id: OTP-12501 </p>
        </item>
        <item>
	    <p>Background: In record fields with a type declaration
	    but without an initializer, the Erlang parser inserted
	    automatically the singleton type <c>'undefined'</c> to
	    the list of declared types, if that value was not present
	    there. That is, the record declaration:</p>
          <p>
	    -record(rec, {f1 :: float(), f2 = 42 :: integer(), f3 ::
	    some_mod:some_typ()}).</p>
	    <p>was translated by the parser to:</p>
          <p>
	    -record(rec, {f1 :: float() | 'undefined', f2 = 42 ::
	    integer(), f3 :: some_mod:some_typ() | 'undefined'}).</p>
	    <p>The rationale for this was that creation of a "dummy"
	    <c>#rec{}</c> record should not result in a warning from
	    dialyzer that, for example, the implicit initialization
	    of the <c>#rec.f1</c> field violates its type
	    declaration.</p>
	    <p>Problems: This seemingly innocent action has some
	    unforeseen consequences.</p>
	    <p>For starters, there is no way for programmers to
	    declare that e.g. only floats make sense for the
	    <c>f1</c> field of <c>#rec{}</c> records when there is no
	    "obvious" default initializer for this field. (This also
	    affects tools like PropEr that use these declarations
	    produced by the Erlang parser to generate random
	    instances of records for testing purposes.)</p>
	    <p>It also means that dialyzer does not warn if e.g. an
	    <c>is_atom/1</c> test or something more exotic like an
	    <c>atom_to_list/1</c> call is performed on the value of
	    the <c>f1</c> field.</p>
	    <p>Similarly, there is no way to extend dialyzer to warn
	    if it finds record constructions where <c>f1</c> is not
	    initialized to some float.</p>
	    <p>Last but not least, it is semantically problematic
	    when the type of the field is an opaque type: creating a
	    union of an opaque and a structured type is very
	    problematic for analysis because it fundamentally breaks
	    the opacity of the term at that point.</p>
	    <p>Change: To solve these problems the parser will not
	    automatically insert the <c>'undefined'</c> value
	    anymore; instead the user has the option to choose the
	    places where this value makes sense (for the field) and
	    where it does not and insert the <c>| 'undefined'</c>
	    there manually.</p>
	    <p>Consequences of this change: This change means that
	    dialyzer will issue a warning for all places where
	    records with uninitialized fields are created and those
	    fields have a declared type that is incompatible with
	    <c>'undefined'</c> (e.g. <c>float()</c>). This warning
	    can be suppressed easily by adding <c>| 'undefined'</c>
	    to the type of this field. This also adds documentation
	    that the user really intends to create records where this
	    field is uninitialized.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-12719</p>
        </item>
        <item>
	    <p> Remove deprecated functions in the modules
	    <c>erl_scan</c> and <c>erl_parse</c>. </p>
          <p>
	    Own Id: OTP-12861</p>
        </item>
        <item>
	    <p>The pre-processor can now expand the ?FUNCTION_NAME
	    and ?FUNCTION_ARITY macros.</p>
          <p>
	    Own Id: OTP-13059</p>
        </item>
        <item>
	    <p> A new behaviour <c>gen_statem</c> has been
	    implemented. It has been thoroughly reviewed, is stable
	    enough to be used by at least two heavy OTP applications,
	    and is here to stay. But depending on user feedback, we
	    do not expect but might find it necessary to make minor
	    not backwards compatible changes into OTP-20.0, so its
	    state can be designated as "not quite experimental"...
	    </p> <p> The <c>gen_statem</c> behaviour is intended to
	    replace <c>gen_fsm</c> for new code. It has the same
	    features and add some really useful: </p> <list
	    type="bulleted"> <item>State code is gathered</item>
	    <item>The state can be any term</item> <item>Events can
	    be postponed</item> <item>Events can be self
	    generated</item> <item>A reply can be sent from a later
	    state</item> <item>There can be multiple sys traceable
	    replies</item> </list> <p> The callback model(s) for
	    <c>gen_statem</c> differs from the one for
	    <c>gen_fsm</c>, but it is still fairly easy to rewrite
	    from <c>gen_fsm</c> to <c>gen_statem</c>. </p>
          <p>
	    Own Id: OTP-13065 Aux Id: PR-960 </p>
        </item>
        <item>
          <p>
	    Optimize binary:split/2 and binary:split/3 with native
	    BIF implementation.</p>
          <p>
	    Own Id: OTP-13082</p>
        </item>
        <item>
	    <p>Background: The types of record fields have since R12B
	    been put in a separate form by <c>epp:parse_file()</c>,
	    leaving the record declaration form untyped. The separate
	    form, however, does not follow the syntax of type
	    declarations, and parse transforms inspecting
	    <c>-type()</c> attributes need to know about the special
	    syntax. Since the compiler stores the return value of
	    <c>epp:parse_file()</c> as debug information in the
	    abstract code chunk (<c>"Abst"</c> or
	    <c>abstract_code</c>), tools too need to know about the
	    special syntax, if they inspect <c>-type()</c> attributes
	    in abstract code.</p>
	    <p>Change: No separate type form is created by
	    <c>epp:parse_file()</c>, but the type information is kept
	    in the record fields. This means that all parse
	    transforms and all tools inspecting <c>-record()</c>
	    declarations need to recognize <c>{typed_record_field,
	    Field, Type}</c>.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-13148</p>
        </item>
        <item>
          <p>
	    Unsized fields of the type <c>bytes</c> in binary
	    generators are now forbidden. (The other ways of writing
	    unsized fields, such as <c>binary</c>, are already
	    forbidden.)</p>
          <p>
	    Own Id: OTP-13152</p>
        </item>
        <item>
	    <p> The type <c>map()</c> is built-in, and cannot be
	    redefined. </p>
          <p>
	    Own Id: OTP-13153</p>
        </item>
        <item>
	    <p> Let <c>dets:open_file()</c> exit with a <c>badarg</c>
	    message if given a raw file name (a binary). </p>
          <p>
	    Own Id: OTP-13229 Aux Id: ERL-55 </p>
        </item>
        <item>
	    <p> Add <c>filename:basedir/2,3</c></p> <p>basedir
	    returns suitable path(s) for 'user_cache', 'user_config',
	    'user_data', 'user_log', 'site_config' and 'site_data'.
	    On linux and linux like systems the paths will respect
	    the XDG environment variables.</p>
          <p>
	    Own Id: OTP-13392</p>
        </item>
        <item>
	    <p>There are new preprocessor directives
	    <c>-error(Term)</c> and <c>-warning(Term)</c> to cause a
	    compilation error or a compilation warning,
	    respectively.</p>
          <p>
	    Own Id: OTP-13476</p>
        </item>
        <item>
          <p>
	    Optimize <c>'++'</c> operator and <c>lists:append/2</c>
	    by using a single pass to build a new list while checking
	    for properness.</p>
          <p>
	    Own Id: OTP-13487</p>
        </item>
        <item>
          <p>
	    Add <c>maps:update_with/3,4</c> and <c>maps:take/2</c></p>
          <p>
	    Own Id: OTP-13522 Aux Id: PR-1025 </p>
        </item>
        <item>
	    <p><c>lists:join/2</c> has been added. Similar to
	    <c>string:join/2</c> but works with arbitrary lists.</p>
          <p>
	    Own Id: OTP-13523</p>
        </item>
        <item>
	    <p>Obfuscate asserts to make Dialyzer shut up.</p>
          <p>
	    Own Id: OTP-13524 Aux Id: PR-1002 </p>
        </item>
        <item>
          <p>
	    Supervisors now explicitly add their callback module in
	    the return from sys:get_status/1,2. This is to simplify
	    custom supervisor implementations. The Misc part of the
	    return value from sys:get_status/1,2 for a supervisor is
	    now:</p>
          <p>
	    [{data, [{"State",
	    State}]},{supervisor,[{"Callback",Module}]}]</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-13619 Aux Id: PR-1000 </p>
        </item>
        <item>
          <p>
	    Relax translation of initial calls in <c>proc_lib</c>,
	    i.e. remove the restriction to only do the translation
	    for <c>gen_server</c> and <c>gen_fsm</c>. This enables
	    user defined <c>gen</c> based generic callback modules to
	    be displayed nicely in <c>c:i()</c> and observer.</p>
          <p>
	    Own Id: OTP-13623</p>
        </item>
        <item>
	    <p>The function <c>queue:lait/1</c> (misspelling of
	    <c>liat/1</c>) is now deprecated.</p>
          <p>
	    Own Id: OTP-13658</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 2.8.0.1</title>

    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>List subtraction (The <c>--</c> operator) will now
	    yield properly on large inputs.</p>
          <p>
	    Own Id: OTP-15371</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 2.8</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix evaluation in matching of bound map key variables in
	    the interpreter.</p>
          <p>
	    Prior to this patch, the following code would not
	    evaluate: <c>X = key,(fun(#{X := value}) -&gt; true
	    end)(#{X => value})</c></p>
          <p>
	    Own Id: OTP-13218</p>
        </item>
        <item>
	    <p> Fix <c>erl_eval</c> not using non-local function
	    handler. </p>
          <p>
	    Own Id: OTP-13228 Aux Id: ERL-32 </p>
        </item>
        <item>
	    <p> The Erlang Code Linter no longer crashes if there is
	    a <c>-deprecated()</c> attribute but no <c>-module()</c>
	    declaration. </p>
          <p>
	    Own Id: OTP-13230 Aux Id: ERL-62 </p>
        </item>
        <item>
          <p>
	    The timestamp in the result returned by <c>dets:info(Tab,
	    safe_fixed)</c> was unintentionally broken as a result of
	    the time API rewrites in OTP 18.0. This has now been
	    fixed.</p>
          <p>
	    Own Id: OTP-13239 Aux Id: OTP-11997 </p>
        </item>
        <item>
	    <p>A rare race condition in <c>beam_lib</c> when using
	    encrypted abstract format has been eliminated.</p>
          <p>
	    Own Id: OTP-13278</p>
        </item>
        <item>
          <p>
	    Improved maps:with/2 and maps:without/2 algorithms</p>
          <p>
	    The new implementation speeds up the execution
	    significantly for all sizes of input.</p>
          <p>
	    Own Id: OTP-13376</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Time warp safety improvements.</p>
          <p>
	    Introduced the options <c>monotonic_timestamp</c>, and
	    <c>strict_monotonic_timestamp</c> to the trace,
	    sequential trace, and system profile functionality. This
	    since the already existing <c>timestamp</c> option is not
	    time warp safe.</p>
          <p>
	    Introduced the option <c>safe_fixed_monotonic_time</c> to
	    <c>ets:info/2</c> and <c>dets:info/2</c>. This since the
	    already existing <c>safe_fixed</c> option is not time
	    warp safe.</p>
          <p>
	    Own Id: OTP-13222 Aux Id: OTP-11997 </p>
        </item>
        <item>
          <p>
	    In the shell Ctrl+W (delete word) will no longer consider
	    "." as being part of a word.</p>
          <p>
	    Own Id: OTP-13281</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 2.7</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>The Erlang Pretty Printer uses <c>::</c> for function
	    type constraints.</p> <p>A bug concerning pretty printing
	    of annotated type union elements in map pair types has
	    been fixed.</p> <p>Some minor issues regarding the
	    documentation of types and specs have been corrected.</p>
          <p>
	    Own Id: OTP-13084</p>
        </item>
        <item>
	    <p> The shell command <c>rp</c> prints strings as lists
	    of integers if pretty printing of lists is set to
	    <c>false</c>. </p>
          <p>
	    Own Id: OTP-13145</p>
        </item>
        <item>
          <p>
	    The shell would crash if a bit syntax expression with
	    conflicting types were given (e.g. if a field type was
	    given as '<c>integer-binary</c>'). (Thanks to Aleksei
	    Magusev for reporting this bug.)</p>
          <p>
	    Own Id: OTP-13157</p>
        </item>
        <item>
	    <p>The <c>rand:export_seed/0</c> would never return
	    '<c>undefined</c>' even if no seed has previously been
	    created. Fixed to return '<c>undefined</c>' if there is
	    no seed in the process dictionary.</p>
          <p>
	    Own Id: OTP-13162</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Add support for the Delete, Home and End keys in the
	    Erlang shell.</p>
          <p>
	    Own Id: OTP-13032</p>
        </item>
        <item>
	    <p><c>beam_lib:all_chunks/1</c> and
	    <c>beam_lib:build_module/1</c> have been documented.</p>
          <p>
	    Own Id: OTP-13063</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 2.6</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p> In OTP 18.0, <c>qlc</c> does not handle syntax errors
	    well. This bug has been fixed. </p>
          <p>
	    Own Id: OTP-12946</p>
        </item>
        <item>
          <p>
	    Optimize zip:unzip/2 when uncompressing to memory.</p>
          <p>
	    Own Id: OTP-12950</p>
        </item>
        <item>
          <p>
	    The STDLIB reference manual is updated to show
	    correct information about the return value of
	    <c>gen_fsm:reply/2</c>.</p>
          <p>
	    Own Id: OTP-12973</p>
        </item>
        <item>
	    <p>re:split2,3 and re:replace/3,4 now correctly handles
	    pre-compiled patterns that have been compiled using the
	    '<c>unicode</c>' option.</p>
          <p>
	    Own Id: OTP-12977</p>
        </item>
        <item>
          <p>
	    Export <c>shell:catch_exception/1</c> as documented.</p>
          <p>
	    Own Id: OTP-12990</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>A mechanism for limiting the amount of text that the
	    built-in error logger events will produce has been
	    introduced. It is useful for limiting both the size of
	    log files and the CPU time used to produce them.</p>
	    <p>This mechanism is experimental in the sense that it
	    may be changed if it turns out that it does not solve the
	    problem it is supposed to solve. In that case, there may
	    be backward incompatible improvements to this
	    mechanism.</p>
	    <p>See the documentation for the config parameter
	    <c>error_logger_format_depth</c> in the Kernel
	    application for information about how to turn on this
	    feature.</p>
          <p>
	    Own Id: OTP-12864</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 2.5</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix handling of single dot in filename:join/2</p>
          <p>
	    The reference manual says that filename:join(A,B) is
	    equivalent to filename:join([A,B]). In some rare cases
	    this turns out not to be true. For example:</p>
          <p>
	    <c>filename:join("/a/.","b") -&gt; "/a/./b"</c> vs
	    <c>filename:join(["/a/.","b"]) -&gt; "/a/b"</c>.</p>
          <p>
	    This has been corrected. A single dot is now only kept if
	    it occurs at the very beginning or the very end of the
	    resulting path.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-12158</p>
        </item>
        <item>
          <p>
	    The undocumented option <c>generic_debug</c> for
	    <c>gen_server</c> has been removed.</p>
          <p>
	    Own Id: OTP-12183</p>
        </item>
        <item>
          <p>
	    erl_lint:icrt_export/4 has been rewritten to make the
	    code really follow the scoping rules of Erlang, and not
	    just in most situations by accident.</p>
          <p>
	    Own Id: OTP-12186</p>
        </item>
        <item>
          <p>
	    Add 'trim_all' option to binary:split/3</p>
          <p>
	    This option can be set to remove _ALL_ empty parts of the
	    result of a call to binary:split/3.</p>
          <p>
	    Own Id: OTP-12301</p>
        </item>
        <item>
	    <p> Correct orddict(3) regarding evaluation order of
	    <c>fold()</c> and <c>map()</c>. </p>
          <p>
	    Own Id: OTP-12651 Aux Id: seq12832 </p>
        </item>
        <item>
          <p>
	    Correct <c>maps</c> module error exceptions </p>
          <p>
	    Bad input to maps module function will now yield the
	    following exceptions:</p>
          <list> <item>{badmap, NotMap}, or </item> <item>badarg.</item>
          </list>
          <p>
	    Own Id: OTP-12657</p>
        </item>
        <item>
          <p>
	    It is now possible to paste text in JCL mode (using
	    Ctrl-Y) that has been copied in the previous shell
	    session. Also a bug that caused the JCL mode to crash
	    when pasting text has been fixed.</p>
          <p>
	    Own Id: OTP-12673</p>
        </item>
        <item>
          <p>
	    Add <c>uptime()</c> shell command.</p>
          <p>
	    Own Id: OTP-12752</p>
        </item>
        <item>
          <p>
	    Cache nowarn_bif_clash functions in erl_lint.</p>
          <p>
	    This patch stores nowarn_bif_clash in the lint record. By
	    using erlc +'{eprof,lint_module}' when compiling the
	    erlang parser, we noticed the time spent on
	    nowarn_function/2 reduced from 30% to 0.01%.</p>
          <p>
	    Own Id: OTP-12754</p>
        </item>
        <item>
          <p>
	    Optimize the Erlang Code Linter by using the cached
	    filename information.</p>
          <p>
	    Own Id: OTP-12772</p>
        </item>
        <item>
          <p>
	    If a child of a simple_one_for_one returns ignore from
	    its start function no longer store the child for any
	    restart type. It is not possible to restart or delete the
	    child because the supervisor is a simple_one_for_one.</p>
          <p>
	    Own Id: OTP-12793</p>
        </item>
        <item>
          <p>
	    Make <c>ets:file2tab</c> preserve enabled
	    <c>read_concurrency</c> and <c>write_concurrency</c>
	    options for tables.</p>
          <p>
	    Own Id: OTP-12814</p>
        </item>
        <item>
          <p>
	    There are many cases where user code needs to be able to
	    distinguish between a socket that was closed normally and
	    one that was aborted. Setting the option
	    {show_econnreset, true} enables the user to receive
	    ECONNRESET errors on both active and passive sockets.</p>
          <p>
	    Own Id: OTP-12841</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Allow maps for supervisor flags and child specs</p>
          <p>
	    Earlier, supervisor flags and child specs were given as
	    tuples. While this is kept for backwards compatibility,
	    it is now also allowed to give these parameters as maps,
	    see <seeerl
	    marker="stdlib:supervisor#sup_flags">sup_flags</seeerl>
	    and <seeerl
	    marker="stdlib:supervisor#child_spec">child_spec</seeerl>.</p>
          <p>
	    Own Id: OTP-11043</p>
        </item>
        <item>
          <p>
	    A new system message, <c>terminate</c>, is added. This
	    can be sent with <c>sys:terminate/2,3</c>. If the
	    receiving process handles system messages properly it
	    will terminate shortly after receiving this message.</p>
          <p>
	    The new function <c>proc_lib:stop/1,3</c> utilizes this
	    new system message and monitors the receiving process in
	    order to facilitate a synchronous stop mechanism for
	    'special processes'.</p>
          <p>
	    <c>proc_lib:stop/1,3</c> is used by the following
	    functions:</p>
	    <list> <item><c>gen_server:stop/1,3</c> (new)</item>
	    <item><c>gen_fsm:stop/1,3</c> (new)</item>
	    <item><c>gen_event:stop/1,3</c> (modified to be
	    synchronous)</item> <item><c>wx_object:stop/1,3</c>
	    (new)</item> </list>
          <p>
	    Own Id: OTP-11173 Aux Id: seq12353 </p>
        </item>
        <item>
          <p>
	    Remove the <c>pg</c> module, which has been deprecated
	    through OTP-17, is now removed from the STDLIB
	    application. This module has been marked experimental for
	    more than 15 years, and has largely been superseded by
	    the <c>pg2</c> module from the Kernel application.</p>
          <p>
	    Own Id: OTP-11907</p>
        </item>
        <item>
          <p>
	    New BIF: <c>erlang:get_keys/0</c>, lists all keys
	    associated with the process dictionary. Note:
	    <c>erlang:get_keys/0</c> is auto-imported.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-12151 Aux Id: seq12521 </p>
        </item>
        <item>
	    <p> Add three new functions to <c>io_lib</c>--
	    <c>scan_format/2</c>, <c>unscan_format/1</c>, and
	    <c>build_text/1</c>-- which expose the parsed form of the
	    format control sequences to make it possible to easily
	    modify or filter the input to <c>io_lib:format/2</c>.
	    This can e.g. be used in order to replace unbounded-size
	    control sequences like <c>~w</c> or <c>~p</c> with
	    corresponding depth-limited <c>~W</c> and <c>~P</c>
	    before doing the actual formatting. </p>
          <p>
	    Own Id: OTP-12167</p>
        </item>
        <item>
	    <p> Introduce the <c>erl_anno</c> module, an abstraction
	    of the second element of tokens and tuples in the
	    abstract format. </p>
          <p>
	    Own Id: OTP-12195</p>
        </item>
        <item>
          <p>
	    Support variables as Map keys in expressions and patterns</p>
	    <p>Erlang will accept any expression as keys in Map
	    expressions and it will accept literals or bound
	    variables as keys in Map patterns.</p>
          <p>
	    Own Id: OTP-12218</p>
        </item>
        <item>
	    <p> The last traces of Mnemosyne Rules have been removed.
	    </p>
          <p>
	    Own Id: OTP-12257</p>
        </item>
        <item>
          <p>
	    Properly support maps in match_specs</p>
          <p>
	    Own Id: OTP-12270</p>
        </item>
        <item>
          <p>
	    New function <c>ets:take/2</c>. Works the same as
	    <c>ets:delete/2</c> but also returns the deleted
	    object(s).</p>
          <p>
	    Own Id: OTP-12309</p>
        </item>
        <item>
	    <p><c>string:tokens/2</c> is somewhat faster, especially
	    if the list of separators only contains one separator
	    character.</p>
          <p>
	    Own Id: OTP-12422 Aux Id: seq12774 </p>
        </item>
        <item>
	    <p>The documentation of the Abstract Format (in the ERTS
	    User's Guide) has been updated with types and
	    specification. (Thanks to Anthony Ramine.) </p> <p> The
	    explicit representation of parentheses used in types of
	    the abstract format has been removed. Instead the new
	    functions <c>erl_parse:type_inop_prec()</c> and
	    <c>erl_parse:type_preop_prec()</c> can be used for
	    inserting parentheses where needed. </p>
          <p>
	    Own Id: OTP-12492</p>
        </item>
        <item>
          <p>
	    Prevent zip:zip_open/[12] from leaking file descriptors
	    if parent process dies.</p>
          <p>
	    Own Id: OTP-12566</p>
        </item>
        <item>
          <p>
	    Add a new random number generator, see <c>rand</c>
	    module. It have better characteristics and an improved
	    interface.</p>
          <p>
	    Own Id: OTP-12586 Aux Id: OTP-12501, OTP-12502 </p>
        </item>
        <item>
	    <p><c>filename:split/1</c> when given an empty binary
	    will now return an empty list, to make it consistent with
	    return value when given an empty list.</p>
          <p>
	    Own Id: OTP-12716</p>
        </item>
        <item>
          <p>
	    Add <c>sync</c> option to <c>ets:tab2file/3</c>.</p>
          <p>
	    Own Id: OTP-12737 Aux Id: seq12805 </p>
        </item>
        <item>
	    <p> Add functions <c>gb_sets:iterator_from()</c> and
	    <c>gb_trees:iterator_from()</c>. (Thanks to Kirill
	    Kinduk.) </p>
          <p>
	    Own Id: OTP-12742</p>
        </item>
        <item>
          <p>
	    Add <c>maps:filter/2</c> to maps module.</p>
          <p>
	    Own Id: OTP-12745</p>
        </item>
        <item>
          <p>
	    Change some internal data structures to Maps in order to
	    speed up compilation time. Measured speed up is around
	    10%-15%.</p>
          <p>
	    Own Id: OTP-12774</p>
        </item>
        <item>
	    <p> Update <c>orddict</c> to use parameterized types and
	    specs. (Thanks to UENISHI Kota.) </p>
          <p>
	    Own Id: OTP-12785</p>
        </item>
        <item>
	    <p>The assert macros in <c>eunit</c> has been moved out
	    to <c>stdlib/include/assert.hrl</c>. This files get
	    included by <c>eunit.hrl</c>. Thus, nothing changes for
	    eunit users, but the asserts can now also be included
	    separately.</p>
          <p>
	    Own Id: OTP-12808</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 2.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Behaviour of character types \d, \w and \s has always
	    been to not match characters with value above 255, not
	    128, i.e. they are limited to ISO-Latin-1 and not ASCII</p>
          <p>
	    Own Id: OTP-12521</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    c:m/1 now displays the module's MD5 sum.</p>
          <p>
	    Own Id: OTP-12500</p>
        </item>
        <item>
          <p>
	    Make ets:i/1 handle binary input from IO server.</p>
          <p>
	    Own Id: OTP-12550</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 2.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The documentation of string:tokens/2 now explicitly
	    specifies that adjacent separator characters do not give
	    any empty strings in the resulting list of tokens.</p>
          <p>
	    Own Id: OTP-12036</p>
        </item>
        <item>
          <p>
	    Fix broken deprecation warnings in ssh application</p>
          <p>
	    Own Id: OTP-12187</p>
        </item>
        <item>
          <p>
	    Maps: Properly align union typed assoc values in
	    documentation</p>
          <p>
	    Own Id: OTP-12190</p>
        </item>
        <item>
          <p>
	    Fix filelib:wildcard/2 when 'Cwd' ends with a dot</p>
          <p>
	    Own Id: OTP-12212</p>
        </item>
        <item>
          <p>
	    Allow <c>Name/Arity</c> syntax in maps values inside
	    attributes.</p>
          <p>
	    Own Id: OTP-12213</p>
        </item>
        <item>
          <p>
	    Fix edlin to correctly save text killed with ctrl-u.
	    Prior to this fix, entering text into the Erlang shell
	    and then killing it with ctrl-u followed by yanking it
	    back with ctrl-y would result in the yanked text being
	    the reverse of the original killed text.</p>
          <p>
	    Own Id: OTP-12224</p>
        </item>
        <item>
          <p>
	    If a callback function was terminated with exit/1, there
	    would be no stack trace in the ERROR REPORT produced by
	    gen_server. This has been corrected.</p>
          <p>
	    To keep the backwards compatibility, the actual exit
	    reason for the process is not changed.</p>
          <p>
	    Own Id: OTP-12263 Aux Id: seq12733 </p>
        </item>
        <item>
          <p>
	    Warnings produced by <c>ms_transform</c> could point out
	    the wrong line number.</p>
          <p>
	    Own Id: OTP-12264</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Supports tar file creation on other media than file
	    systems mounted on the local machine.</p>
          <p>
	    The <c>erl_tar</c> api is extended with
	    <c>erl_tar:init/3</c> that enables usage of user provided
	    media storage routines. A ssh-specific set of such
	    routines is hidden in the new function
	    <c>ssh_sftp:open_tar/3</c> to simplify creating a tar
	    archive on a remote ssh server.</p>
          <p>
	    A chunked file reading option is added to
	    <c>erl_tar:add/3,4</c> to save memory on e.g small
	    embedded systems. The size of the slices read from a file
	    in that case can be specified.</p>
          <p>
	    Own Id: OTP-12180 Aux Id: seq12715 </p>
        </item>
        <item>
          <p>
	    I/O requests are optimized for long message queues in the
	    calling process.</p>
          <p>
	    Own Id: OTP-12315</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 2.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The type spec of the FormFunc argument to
	    sys:handle_debug/4 was erroneously pointing to dbg_fun().
	    This is now corrected and the new type is format_fun().</p>
          <p>
	    Own Id: OTP-11800</p>
        </item>
        <item>
          <p>
	    Behaviors such as gen_fsm and gen_server should always
	    invoke format_status/2 before printing the state to the
	    logs.</p>
          <p>
	    Own Id: OTP-11967</p>
        </item>
        <item>
	    <p> The documentation of <c>dets:insert_new/2</c> has
	    been corrected. (Thanks to Alexei Sholik for reporting
	    the bug.) </p>
          <p>
	    Own Id: OTP-12024</p>
        </item>
        <item>
          <p>
	    Printing a term with io_lib:format and control sequence
	    w, precision P and field width F, where F&lt; P would
	    fail in one of the two following ways:</p>
          <p>
	    1) If P &lt; printed length of the term, an infinite loop
	    would be entered, consuming all available memory.</p>
          <p>
	    2) If P &gt;= printed length of the term, an exception
	    would be raised.</p>
          <p>
	    These two problems are now corrected.</p>
          <p>
	    Own Id: OTP-12041</p>
        </item>
        <item>
          <p>
	    The documentation of <c>maps:values/1</c> has been
	    corrected.</p>
          <p>
	    Own Id: OTP-12055</p>
        </item>
        <item>
          <p>
	    Expand shell functions in map expressions.</p>
          <p>
	    Own Id: OTP-12063</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Add maps:with/2</p>
          <p>
	    Own Id: OTP-12137</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 2.1.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    OTP-11850 fixed filelib:wildcard/1 to work with broken
	    symlinks. This correction, however, introduced problems
	    since symlinks were no longer followed for functions like
	    filelib:ensure_dir/1, filelib:is_dir/1,
	    filelib:file_size/1, etc. This is now corrected.</p>
          <p>
	    Own Id: OTP-12054 Aux Id: seq12660 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 2.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p><c>filelib:wildcard("broken_symlink")</c> would return
	    an empty list if "broken_symlink" was a symlink that did
	    not point to an existing file.</p>
          <p>
	    Own Id: OTP-11850 Aux Id: seq12571 </p>
        </item>
        <item>
	    <p><c>erl_tar</c> can now handle files names that contain
	    Unicode characters. See "UNICODE SUPPORT" in the
	    documentation for <c>erl_tar</c>.</p>
	    <p>When creating a tar file, <c>erl_tar</c> would
	    sometime write a too short end of tape marker. GNU tar
	    would correctly extract files from such tar file, but
	    would complain about "A lone zero block at...".</p>
          <p>
	    Own Id: OTP-11854</p>
        </item>
        <item>
	    <p> When redefining and exporting the type <c>map()</c>
	    the Erlang Code Linter (<c>erl_lint</c>) erroneously
	    emitted an error. This bug has been fixed. </p>
          <p>
	    Own Id: OTP-11872</p>
        </item>
        <item>
          <p>
	    Fix evaluation of map updates in the debugger and
	    erl_eval</p>
          <p>
	    Reported-by: José Valim</p>
          <p>
	    Own Id: OTP-11922</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>The following native functions now bump an appropriate
	    amount of reductions and yield when out of
	    reductions:</p> <list>
	    <item><c>erlang:binary_to_list/1</c></item>
	    <item><c>erlang:binary_to_list/3</c></item>
	    <item><c>erlang:bitstring_to_list/1</c></item>
	    <item><c>erlang:list_to_binary/1</c></item>
	    <item><c>erlang:iolist_to_binary/1</c></item>
	    <item><c>erlang:list_to_bitstring/1</c></item>
	    <item><c>binary:list_to_bin/1</c></item> </list>
	    <p>Characteristics impact:</p> <taglist>
	    <tag>Performance</tag> <item>The functions converting
	    from lists got a performance loss for very small lists,
	    and a performance gain for very large lists.</item>
	    <tag>Priority</tag> <item>Previously a process executing
	    one of these functions effectively got an unfair priority
	    boost. This priority boost depended on the input size.
	    The larger the input was, the larger the priority boost
	    got. This unfair priority boost is now lost. </item>
	    </taglist>
          <p>
	    Own Id: OTP-11888</p>
        </item>
        <item>
          <p>
	    Add <c>maps:get/3</c> to maps module. The function will
	    return the supplied default value if the key does not
	    exist in the map.</p>
          <p>
	    Own Id: OTP-11951</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 2.0</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The option dupnames did not work as intended in re. When
	    looking for names with {capture, [Name, ...]}, re:run
	    returned a random instance of the match for that name,
	    instead of the leftmost matching instance, which was what
	    the documentation stated. This is now corrected to adhere
	    to the documentation. The option {capture,all_names}
	    along with a re:inspect/2 function is also added to
	    further help in using named subpatterns.</p>
          <p>
	    Own Id: OTP-11205</p>
        </item>
        <item>
          <p>
	    If option 'binary' was set for standard_input, then c:i()
	    would hang if the output was more than one page long -
	    i.e. then input after "(c)ontinue (q)uit --&gt;" could
	    not be read. This has been corrected. (Thanks to José
	    Valim)</p>
          <p>
	    Own Id: OTP-11589</p>
        </item>
        <item>
          <p>
	    stdlib/lists: Add function droplast/1 This functions
	    drops the last element of a non-empty list. lists:last/1
	    and lists:droplast/1 are the dual of hd/1 and tl/1 but
	    for the end of a list. (Thanks to Hans Svensson)</p>
          <p>
	    Own Id: OTP-11677</p>
        </item>
        <item>
          <p>
	    Allow all auto imports to be suppressed at once.
	    Introducing the no_auto_import attribute:
	    -compile(no_auto_import). Useful for code generation
	    tools that always use the qualified function names and
	    want to avoid the auto imported functions clashing with
	    local ones. (Thanks to José Valim.)</p>
          <p>
	    Own Id: OTP-11682</p>
        </item>
        <item>
          <p>
	    supervisor_bridge does no longer report normal
	    termination of children. The reason is that in some
	    cases, for instance when the restart strategy is
	    simple_one_for_one, the log could be completely
	    overloaded with reports about normally terminating
	    processes. (Thanks to Artem Ocheredko)</p>
          <p>
	    Own Id: OTP-11685</p>
        </item>
        <item>
	    <p> The type annotations for alternative registries using
	    the {via, Module, Name} syntax for sup_name() and
	    sup_ref() in the supervisor module are now consistent
	    with the documentation. Dialyzer should no longer
	    complain about valid supervisor:start_link() and
	    supervisor:start_child() calls. (Thanks to Caleb
	    Helbling.) </p>
          <p>
	    Own Id: OTP-11707</p>
        </item>
        <item>
	    <p> Two Dets bugs have been fixed. When trying to open a
	    short file that is not a Dets file, the file was deleted
	    even with just read access. Calling
	    <c>dets:is_dets_file/1</c> with a file that is not a Dets
	    file, a file descriptor was left open. (Thanks to Håkan
	    Mattsson for reporting the bugs.) </p>
          <p>
	    Own Id: OTP-11709</p>
        </item>
        <item>
          <p>
	    Fix race bug in <c>ets:all</c>. Concurrent creation of
	    tables could cause other tables to not be included in the
	    result. (Thanks to Florian Schintke for bug report)</p>
          <p>
	    Own Id: OTP-11726</p>
        </item>
        <item>
          <p>
	    erl_eval now properly evaluates '=='/2 when it is used in
	    guards. (Thanks to José Valim)</p>
          <p>
	    Own Id: OTP-11747</p>
        </item>
        <item>
          <p>
	    Calls to proplists:get_value/3 are replaced by the faster
	    lists:keyfind/3 in io_lib_pretty. Elements in the list
	    are always 2-tuples. (Thanks to Andrew Thompson)</p>
          <p>
	    Own Id: OTP-11752</p>
        </item>
        <item>
	    <p> A qlc bug where filters were erroneously optimized
	    away has been fixed. Thanks to Sam Bobroff for reporting
	    the bug. </p>
          <p>
	    Own Id: OTP-11758</p>
        </item>
        <item>
          <p>
	    A number of compiler errors where unusual or nonsensical
	    code would crash the compiler have been reported by Ulf
	    Norell and corrected by Anthony Ramine.</p>
          <p>
	    Own Id: OTP-11770</p>
        </item>
        <item>
	    <p> Since Erlang/OTP R16B the Erlang Core Linter
	    (<c>erl_lint</c>) has not emitted errors when built-in
	    types were re-defined. This bug has been fixed. (Thanks
	    to Roberto Aloi.) </p>
          <p>
	    Own Id: OTP-11772</p>
        </item>
        <item>
          <p>
	    The functions <c>sys:get_state/1,2</c> and
	    <c>sys:replace_state/2,3</c> are fixed so they can now be
	    run while the process is sys suspended. To accomplish
	    this, the new callbacks <c>Mod:system_get_state/1</c> and
	    <c>Mod:system_replace_state/2</c> are added, which are
	    also implemented by the generic behaviours
	    <c>gen_server</c>, <c>gen_event</c> and <c>gen_fsm</c>.</p>
          <p>
	    The potential incompatibility refers to:</p>
	    <list> <item>The previous behaviour of intercepting the
	    system message and passing a tuple of size 2 as the last
	    argument to <c>sys:handle_system_msg/6</c> is no longer
	    supported.</item> <item>The error handling when
	    <c>StateFun</c> in <c>sys:replace_state/2,3</c> fails is
	    changed from being totally silent to possibly (if the
	    callback module does not catch) throw an exception in the
	    client process.</item> </list>
          <p>
	    (Thanks to James Fish and Steve Vinoski)</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-11817</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Options to set match_limit and match_limit_recursion are
	    added to re:run. The option report_errors is also added
	    to get more information when re:run fails due to limits
	    or compilation errors.</p>
          <p>
	    Own Id: OTP-10285</p>
        </item>
        <item>
	    <p> The pre-defined types <c>array/0</c>, <c>dict/0</c>,
	    <c>digraph/0</c>, <c>gb_set/0</c>, <c>gb_tree/0</c>,
	    <c>queue/0</c>, <c>set/0</c>, and <c>tid/0</c> have been
	    deprecated. They will be removed in Erlang/OTP 18.0. </p>
	    <p> Instead the types <c>array:array/0</c>,
	    <c>dict:dict/0</c>, <c>digraph:graph/0</c>,
	    <c>gb_set:set/0</c>, <c>gb_tree:tree/0</c>,
	    <c>queue:queue/0</c>, <c>sets:set/0</c>, and
	    <c>ets:tid/0</c> can be used. (Note: it has always been
	    necessary to use <c>ets:tid/0</c>.) </p> <p> It is
	    allowed in Erlang/OTP 17.0 to locally re-define the types
	    <c>array/0</c>, <c>dict/0</c>, and so on. </p> <p> New
	    types <c>array:array/1</c>, <c>dict:dict/2</c>,
	    <c>gb_sets:set/1</c>, <c>gb_trees:tree/2</c>,
	    <c>queue:queue/1</c>, and <c>sets:set/1</c> have been
	    added. </p> <p> A compiler option,
	    <c>nowarn_deprecated_type</c>, has been introduced. By
	    including the attribute </p> <c>
	    -compile(nowarn_deprecated_type).</c> <p> in an Erlang
	    source file, warnings about deprecated types can be
	    avoided in Erlang/OTP 17.0. </p> <p> The option can also
	    be given as a compiler flag: </p> <c> erlc
	    +nowarn_deprecated_type file.erl</c>
          <p>
	    Own Id: OTP-10342</p>
        </item>
        <item>
          <p>
	    Calls to erlang:open_port/2 with 'spawn' are updated to
	    handle space in the command path.</p>
          <p>
	    Own Id: OTP-10842</p>
        </item>
        <item>
	    <p> Dialyzer's <c>unmatched_return</c> warnings have been
	    corrected. </p>
          <p>
	    Own Id: OTP-10908</p>
        </item>
        <item>
          <p>
	    Forbid unsized fields in patterns of binary generators
	    and simplified v3_core's translation of bit string
	    generators. (Thanks to Anthony Ramine.)</p>
          <p>
	    Own Id: OTP-11186</p>
        </item>
        <item>
          <p>
	    The version of the PCRE library Used by Erlang's re
	    module is raised to 8.33 from 7.6. This means, among
	    other things, better Unicode and Unicode Character
	    Properties support. New options connected to PCRE 8.33
	    are also added to the re module (ucd, notempty_atstart,
	    no_start_optimize). PCRE has extended the regular
	    expression syntax between 7.6 and 8.33, why this imposes
	    a potential incompatibility. Only very complicated
	    regular expressions may be affected, but if you know you
	    are using obscure features, please test run your regular
	    expressions and verify that their behavior has not
	    changed.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-11204</p>
        </item>
        <item>
          <p>
	    Added dict:is_empty/1 and orddict:is_empty/1. (Thanks to
	    Magnus Henoch.)</p>
          <p>
	    Own Id: OTP-11353</p>
        </item>
        <item>
          <p>
	    A call to either the <c>garbage_collect/1</c> BIF or the
	    <c>check_process_code/2</c> BIF may trigger garbage
	    collection of another processes than the process calling
	    the BIF. The previous implementations performed these
	    kinds of garbage collections without considering the
	    internal state of the process being garbage collected. In
	    order to be able to more easily and more efficiently
	    implement yielding native code, these types of garbage
	    collections have been rewritten. A garbage collection
	    like this is now triggered by an asynchronous request
	    signal, the actual garbage collection is performed by the
	    process being garbage collected itself, and finalized by
	    a reply signal to the process issuing the request. Using
	    this approach processes can disable garbage collection
	    and yield without having to set up the heap in a state
	    that can be garbage collected.</p>
          <p>
	    The <seemfa
	    marker="erts:erlang#garbage_collect/2"><c>garbage_collect/2</c></seemfa>,
	    and <seemfa
	    marker="erts:erlang#check_process_code/3"><c>check_process_code/3</c></seemfa>
	    BIFs have been introduced. Both taking an option list as
	    last argument. Using these, one can issue asynchronous
	    requests.</p>
          <p>
	    <c>code:purge/1</c> and <c>code:soft_purge/1</c> have
	    been rewritten to utilize asynchronous
	    <c>check_process_code</c> requests in order to
	    parallelize work.</p>
          <p>
	    Characteristics impact: A call to the
	    <c>garbage_collect/1</c> BIF or the
	    <c>check_process_code/2</c> BIF will normally take longer
	    time to complete while the system as a whole wont be as
	    much negatively effected by the operation as before. A
	    call to <c>code:purge/1</c> and <c>code:soft_purge/1</c>
	    may complete faster or slower depending on the state of
	    the system while the system as a whole wont be as much
	    negatively effected by the operation as before.</p>
          <p>
	    Own Id: OTP-11388 Aux Id: OTP-11535, OTP-11648 </p>
        </item>
        <item>
	    <p> Improve the documentation of the supervisor's
	    <c>via</c> reference. (Thanks to MaximMinin.) </p>
          <p>
	    Own Id: OTP-11399</p>
        </item>
        <item>
	    <p><c>orddict:from_list/1</c> now uses the optimized sort
	    routines in the <c>lists</c> module instead of
	    (essentially) an insertion sort. Depending on the input
	    data, the speed of the new <c>from_list/1</c> is anything
	    from slightly faster up to several orders of magnitude
	    faster than the old <c>from_list/1</c>.</p> (Thanks to
	    Steve Vinoski.)
          <p>
	    Own Id: OTP-11552</p>
        </item>
        <item>
          <p>
	    EEP43: New data type - Maps</p>
          <p>
	    With Maps you may for instance:</p>
          <taglist>
            <tag/> <item><c>M0 = #{ a =&gt; 1, b =&gt; 2}, % create
	      associations</c></item>
            <tag/><item><c>M1 = M0#{ a := 10 }, % update values</c></item>
            <tag/><item><c>M2 = M1#{ "hi" =&gt;
	      "hello"}, % add new associations</c></item>
            <tag/><item><c>#{ "hi" := V1, a := V2, b := V3} = M2.
               % match keys with values</c></item>
          </taglist>
        <p>
	    For information on how to use Maps please see Map Expressions in the
		<seeguide marker="system/reference_manual:expressions#map_expressions">
			Reference Manual</seeguide>.</p>
          <p>
	    The current implementation is without the following
	    features:</p>
          <taglist>
            <tag/><item>No variable keys</item>
	    <tag/><item>No single value access</item>
            <tag/><item>No map comprehensions</item>
          </taglist>
          <p>
	    Note that Maps is <em>experimental</em> during OTP 17.0.</p>
          <p>
	    Own Id: OTP-11616</p>
        </item>
        <item>
          <p>
	    When tab completing the erlang shell now expands
	    zero-arity functions all the way to closing parenthesis,
	    unless there is another function with the same name and a
	    different arity. (Thanks to Pierre Fenoll.)</p>
          <p>
	    Own Id: OTP-11684</p>
        </item>
        <item>
	    <p> The Erlang Code Preprocessor (<c>epp</c>) could loop
	    when encountering a circular macro definition in an
	    included file. This bug has been fixed. </p> <p> Thanks
	    to Maruthavanan Subbarayan for reporting the bug, and to
	    Richard Carlsson for providing a bug fix. </p>
          <p>
	    Own Id: OTP-11728</p>
        </item>
        <item>
	    <p> The Erlang Code Linter (<c>erl_lint</c>) has since
	    Erlang/OTP R13B emitted warnings whenever any of the
	    types <c>arity()</c>, <c>bitstring()</c>,
	    <c>iodata()</c>, or <c>boolean()</c> were re-defined. Now
	    errors are emitted instead. </p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-11771</p>
        </item>
        <item>
	    <p> The <c>encoding</c> option of
	    <c>erl_parse:abstract/2</c> has been extended to include
	    <c>none</c> and a callback function (a predicate). </p>
          <p>
	    Own Id: OTP-11807</p>
        </item>
        <item>
          <p>
	    Export zip option types to allow referal from other
	    modules.</p>
          <p>
	    Thanks to Pierre Fenoll and Håkan Mattson</p>
          <p>
	    Own Id: OTP-11828</p>
        </item>
        <item>
          <p>
	    The module <c>pg</c> has been deprecated and will be
	    removed in Erlang/OTP 18.</p>
          <p>
	    Own Id: OTP-11840</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 1.19.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix typo in gen_server.erl. Thanks to Brian L. Troutwine.</p>
          <p>
	    Own Id: OTP-11398</p>
        </item>
        <item>
          <p>
	    Spec for atan2 should be atan2(Y, X), not atan2(X, Y).
	    Thanks to Ary Borenszweig.</p>
          <p>
	    Own Id: OTP-11465</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Add XML marker for regexp syntax. Thanks to Håkan
	    Mattson.</p>
          <p>
	    Own Id: OTP-11442</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 1.19.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p> The functions <c>dets:foldl/3</c>,
	    <c>dets:foldr/3</c>, and <c>dets:traverse/2</c> did not
	    release the table after having traversed the table to the
	    end. The bug was introduced in R16B. (Thanks to Manuel
	    Duran Aguete.) </p>
          <p>
	    Own Id: OTP-11245</p>
        </item>
        <item>
	    <p> If the <c>fun M:F/A</c> construct was used
	    erroneously the linter could crash. (Thanks to Mikhail
	    Sobolev.) </p>
          <p>
	    Own Id: OTP-11254</p>
        </item>
        <item>
	    <p> The specifications of <c>io_lib:fread/2,3</c> have
	    been corrected. (Thanks to Chris King and Kostis Sagonas
	    for pinpointing the bug.) </p>
          <p>
	    Own Id: OTP-11261</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Fixed type typo in gen_server.</p>
          <p>
	    Own Id: OTP-11200</p>
        </item>
        <item>
          <p>
	    Update type specs in filelib and io_prompt. Thanks to
	    Jose Valim.</p>
          <p>
	    Own Id: OTP-11208</p>
        </item>
        <item>
          <p>
	    Fix typo in abcast() function comment. Thanks to Johannes
	    Weissl.</p>
          <p>
	    Own Id: OTP-11219</p>
        </item>
        <item>
          <p>
	    Make edlin understand a few important control keys.
	    Thanks to Stefan Zegenhagen.</p>
          <p>
	    Own Id: OTP-11251</p>
        </item>
        <item>
          <p>
	    Export the edge/0 type from the digraph module. Thanks to
	    Alex Ronne Petersen.</p>
          <p>
	    Own Id: OTP-11266</p>
        </item>
        <item>
          <p>
	    Fix variable usage tracking in erl_lint and fixed unsafe
	    variable tracking in try expressions. Thanks to Anthony
	    Ramine.</p>
          <p>
	    Own Id: OTP-11268</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 1.19.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p> The Erlang scanner no longer accepts floating point
	    numbers in the input string. </p>
          <p>
	    Own Id: OTP-10990</p>
        </item>
        <item>
          <p>
	    When converting a faulty binary to a list with
	    unicode:characters_to_list, the error return value could
	    contain a faulty "rest", i.e. the io_list of characters
	    that could not be converted was wrong. This happened only
	    if input was a sub binary and conversion was from utf8.
	    This is now corrected.</p>
          <p>
	    Own Id: OTP-11080</p>
        </item>
        <item>
	    <p>The type <c>hook_function()</c> has been corrected in
	    <c>erl_pp</c>, the Erlang Pretty Printer. </p>
	    <p>The printing of invalid forms, e.g. record field
	    types, has also been fixed. It has been broken since
	    R16B. </p>
	    <p> (Thanks to Tom&#225;&#353; Janou&#353;ek.) </p>
          <p>
	    Own Id: OTP-11100</p>
        </item>
        <item>
          <p>
	    Fix receive support in erl_eval with a BEAM module.
	    Thanks to Anthony Ramine.</p>
          <p>
	    Own Id: OTP-11137</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Delete obsolete note about simple-one-for-one supervisor.
	    Thanks to Magnus Henoch.</p>
          <p>
	    Own Id: OTP-10938</p>
        </item>
        <item>
	    <p> When selecting encoding of a script written in Erlang
	    (<c>escript</c>) the optional directive on the second
	    line is now recognized. </p>
          <p>
	    Own Id: OTP-10951</p>
        </item>
        <item>
	    <p> The function <c>erl_parse:abstract/2</c> has been
	    documented. </p>
          <p>
	    Own Id: OTP-10992</p>
        </item>
        <item>
          <p>
	    Integrate elliptic curve contribution from Andreas
	    Schultz </p>
          <p>
	    In order to be able to support elliptic curve cipher
	    suites in SSL/TLS, additions to handle elliptic curve
	    infrastructure has been added to public_key and crypto.</p>
          <p>
	    This also has resulted in a rewrite of the crypto API to
	    gain consistency and remove unnecessary overhead. All OTP
	    applications using crypto has been updated to use the new
	    API.</p>
          <p>
	    Impact: Elliptic curve cryptography (ECC) offers
	    equivalent security with smaller key sizes than other
	    public key algorithms. Smaller key sizes result in
	    savings for power, memory, bandwidth, and computational
	    cost that make ECC especially attractive for constrained
	    environments.</p>
          <p>
	    Own Id: OTP-11009</p>
        </item>
        <item>
          <p>
	    Added sys:get_state/1,2 and sys:replace_state/2,3. Thanks
	    to Steve Vinoski.</p>
          <p>
	    Own Id: OTP-11013</p>
        </item>
        <item>
          <p>
	    Optimizations to gen mechanism. Thanks to Loïc Hoguin.</p>
          <p>
	    Own Id: OTP-11025</p>
        </item>
        <item>
          <p>
	    Optimizations to gen.erl. Thanks to Loïc Hoguin.</p>
          <p>
	    Own Id: OTP-11035</p>
        </item>
        <item>
          <p>
	    Use erlang:demonitor(Ref, [flush]) where applicable.
	    Thanks to Loïc Hoguin.</p>
          <p>
	    Own Id: OTP-11039</p>
        </item>
        <item>
	    <p>Erlang source files with non-ASCII characters are now
	    encoded in UTF-8 (instead of latin1).</p>
          <p>
	    Own Id: OTP-11041 Aux Id: OTP-10907 </p>
        </item>
        <item>
          <p>
	    Fix rest_for_one and one_for_all restarting a child not
	    terminated. Thanks to James Fish.</p>
          <p>
	    Own Id: OTP-11042</p>
        </item>
        <item>
          <p>
	    Fix excessive CPU consumption of timer_server. Thanks to
	    Aliaksey Kandratsenka.</p>
          <p>
	    Own Id: OTP-11053</p>
        </item>
        <item>
          <p>
	    Rename and document lists:zf/2 as lists:filtermap/2.
	    Thanks to Anthony Ramine.</p>
          <p>
	    Own Id: OTP-11078</p>
        </item>
        <item>
          <p>
	    Fixed an inconsistent state in epp. Thanks to Anthony
	    Ramine</p>
          <p>
	    Own Id: OTP-11079</p>
        </item>
        <item>
          <p>
	    c:ls(File) will now print File, similar to ls(1) in Unix.
	    The error messages have also been improved. (Thanks to
	    Bengt Kleberg.)</p>
          <p>
	    Own Id: OTP-11108</p>
        </item>
        <item>
          <p>
	    Support callback attributes in erl_pp. Thanks to Anthony
	    Ramine.</p>
          <p>
	    Own Id: OTP-11140</p>
        </item>
        <item>
          <p>
	    Improve erl_lint performance. Thanks to José Valim.</p>
          <p>
	    Own Id: OTP-11143</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 1.19.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p> Bugs related to Unicode have been fixed in the
	    <c>erl_eval</c> module. </p>
          <p>
	    Own Id: OTP-10622 Aux Id: kunagi-351 [262] </p>
        </item>
        <item>
	    <p><c>filelib:wildcard("some/relative/path/*.beam",
	    Path)</c> would fail to match any file. That is,
	    filelib:wildcard/2 would not work if the first component
	    of the pattern did not contain any wildcard characters.
	    (A previous attempt to fix the problem in R15B02 seems to
	    have made matters worse.)</p>
	    <p>(Thanks to Samuel Rivas and Tuncer Ayaz.)</p>
	    <p>There is also an incompatible change to the
	    <c>Path</c> argument. It is no longer allowed to be a
	    binary.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-10812</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p> The new STDLIB application variable
	    <c>shell_strings</c> can be used for determining how the
	    Erlang shell outputs lists of integers. The new function
	    <c>shell:strings/1</c> toggles the value of the variable.
	    </p> <p> The control sequence modifier <c>l</c> can be
	    used for turning off the string recognition of <c>~p</c>
	    and <c>~P</c>. </p>
          <p>
	    Own Id: OTP-10755</p>
        </item>
        <item>
	    <p> Miscellaneous updates due to Unicode support. </p>
          <p>
	    Own Id: OTP-10820</p>
        </item>
        <item>
	    <p> Extend <c>~ts</c> to handle binaries with characters
	    coded in ISO-latin-1 </p>
          <p>
	    Own Id: OTP-10836</p>
        </item>
        <item>
          <p>
	    The +pc flag to erl can be used to set the range of
	    characters considered printable. This affects how the
	    shell and io:format("~tp",...) functionality does
	    heuristic string detection. More can be read in STDLIB
	    users guide.</p>
          <p>
	    Own Id: OTP-10884</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 1.19</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Wildcards such as "some/path/*" passed to
	    <c>filelib:wildcard/2</c> would fail to match any file.
	    (Thanks to Samuel Rivas for reporting this bug.)</p>
          <p>
	    Own Id: OTP-6874 Aux Id: kunagi-190 [101] </p>
        </item>
        <item>
          <p>
	    Fixed error handling in proc_lib:start which could hang
	    if the spawned process died in init.</p>
          <p>
	    Own Id: OTP-9803 Aux Id: kunagi-209 [120] </p>
        </item>
        <item>
          <p>
	    Allow ** in filelib:wildcard</p>
          <p>
	    Two adjacent * used as a single pattern will match all
	    files and zero or more directories and subdirectories.
	    (Thanks to José Valim)</p>
          <p>
	    Own Id: OTP-10431</p>
        </item>
        <item>
          <p>
	    Add the \gN and \g{N} syntax for back references in
	    re:replace/3,4 to allow use with numeric replacement
	    strings. (Thanks to Vance Shipley)</p>
          <p>
	    Own Id: OTP-10455</p>
        </item>
        <item>
          <p>
	    Export ets:match_pattern/0 type (Thanks to Joseph Wayne
	    Norton)</p>
          <p>
	    Own Id: OTP-10472</p>
        </item>
        <item>
          <p>
	    Fix printing the empty binary at depth 1 with ~W (Thanks
	    to Andrew Thompson)</p>
          <p>
	    Own Id: OTP-10504</p>
        </item>
        <item>
	    <p> The type <c>ascii_string()</c> in the <c>base64</c>
	    module has been corrected. The type
	    <c>file:file_info()</c> has been cleaned up. The type
	    <c>file:fd()</c> has been made opaque in the
	    documentation. </p>
          <p>
	    Own Id: OTP-10624 Aux Id: kunagi-352 [263] </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p> Dets tables are no longer fixed while traversing with
	    a bound key (when only the objects with the right key are
	    matched). This optimization affects the functions
	    <c>match/2</c>, <c>match_object/2</c>, <c>select/2</c>,
	    <c>match_delete/2</c>, and <c>select_delete/2</c>. </p>
          <p>
	    Own Id: OTP-10097</p>
        </item>
        <item>
	    <p> Support for Unicode has been implemented. </p>
          <p>
	    Own Id: OTP-10302</p>
        </item>
        <item>
	    <p> The linter now warns for opaque types that are not
	    exported, as well as for under-specified opaque types.
	    </p>
          <p>
	    Own Id: OTP-10436</p>
        </item>
        <item>
	    <p> The type <c>file:name()</c> has been substituted for
	    the type <c>file:filename()</c> in the following
	    functions in the <c>filename</c> module:
	    <c>absname/2</c>, <c>absname_join/2</c>, <c>join/1,2</c>,
	    and <c>split/1</c>. </p>
          <p>
	    Own Id: OTP-10474</p>
        </item>
        <item>
          <p>
	    If a child process fails in its start function, then the
	    error reason was earlier only reported as an error report
	    from the error_handler, and supervisor:start_link would
	    only return <c>{error,shutdown}</c>. This has been
	    changed so the supervisor will now return
	    <c>{error,{shutdown,Reason}}</c>, where <c>Reason</c>
	    identifies the failing child and its error reason.
	    (Thanks to Tomas Pihl)</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-10490</p>
        </item>
        <item>
	    <p>Where necessary a comment stating encoding has been
	    added to Erlang files. The comment is meant to be removed
	    in Erlang/OTP R17B when UTF-8 becomes the default
	    encoding. </p>
          <p>
	    Own Id: OTP-10630</p>
        </item>
        <item>
	    <p> The contracts and types of the modules
	    <c>erl_scan</c> and <c>sys</c> have been corrected and
	    improved. (Thanks to Kostis Sagonas.) </p>
          <p>
	    Own Id: OTP-10658</p>
        </item>
        <item>
	    <p> The Erlang shell now skips the rest of the line when
	    it encounters an Erlang scanner error. </p>
          <p>
	    Own Id: OTP-10659</p>
        </item>
        <item>
          <p>
	    Clean up some specs in the proplists module. (Thanks to
	    Kostis Sagonas.)</p>
          <p>
	    Own Id: OTP-10663</p>
        </item>
        <item>
	    <p> Some examples overflowing the width of PDF pages have
	    been corrected. </p>
          <p>
	    Own Id: OTP-10665</p>
        </item>
        <item>
          <p>
	    Enable escript to accept emulator arguments when script
	    file has no shebang. Thanks to Magnus Henoch</p>
          <p>
	    Own Id: OTP-10691</p>
        </item>
        <item>
          <p>
	    Fix bug in queue:out/1, queue:out_r/1 that makes it
	    O(N^2) in worst case. Thanks to Aleksandr Erofeev.</p>
          <p>
	    Own Id: OTP-10722</p>
        </item>
        <item>
	    <p> There are new functions in the <c>epp</c> module
	    which read the character encoding from files. See
	    <c>epp(3)</c> for more information. </p>
          <p>
	    Own Id: OTP-10742 Aux Id: OTP-10302 </p>
        </item>
        <item>
	    <p> The functions in <c>io_lib</c> have been adjusted for
	    Unicode. The existing functions <c>write_string()</c> and
	    so on now take Unicode strings, while the old behavior
	    has been taken over by new functions
	    <c>write_latin1_string()</c> and so on. There are also
	    new functions to write Unicode strings as Latin-1
	    strings, mainly targetted towards the Erlang pretty
	    printer (<c>erl_pp</c>). </p>
          <p>
	    Own Id: OTP-10745 Aux Id: OTP-10302 </p>
        </item>
        <item>
	    <p> The new functions <c>proc_lib:format/2</c> and
	    <c>erl_parse:abstract/2</c> accept an encoding as second
	    argument. </p>
          <p>
	    Own Id: OTP-10749 Aux Id: OTP-10302 </p>
        </item>
        <item>
          <p>
	    Increased potential concurrency in ETS for
	    <c>write_concurrency</c> option. The number of internal
	    table locks has increased from 16 to 64. This makes it
	    four times less likely that two concurrent processes
	    writing to the same table would collide and thereby
	    serialized. The cost is an increased constant memory
	    footprint for tables using write_concurrency. The memory
	    consumption per inserted record is not affected. The
	    increased footprint can be particularly large if
	    <c>write_concurrency</c> is combined with
	    <c>read_concurrency</c>.</p>
          <p>
	    Own Id: OTP-10787</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 1.18.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Minor test updates</p>
          <p>
	    Own Id: OTP-10591</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 1.18.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed bug where if given an invalid drive letter on
	    windows ensure dir would go into an infinite loop.</p>
          <p>
	    Own Id: OTP-10104</p>
        </item>
        <item>
          <p>
	    Calls to gen_server:enter_loop/4 where ServerName has a
	    global scope and no timeout is given now works correctly.</p>
          <p>
	    Thanks to Sam Bobroff for reporting the issue.</p>
          <p>
	    Own Id: OTP-10130</p>
        </item>
        <item>
          <p>
	    fix escript/primary archive reloading</p>
          <p>
	    If the mtime of an escript/primary archive file changes
	    after being added to the code path, correctly reload the
	    archive and update the cache. (Thanks to Tuncer Ayaz)</p>
          <p>
	    Own Id: OTP-10151</p>
        </item>
        <item>
          <p>
	    Fix bug that in some cases could cause corrupted binaries
	    in ETS tables with <c>compressed</c> option.</p>
          <p>
	    Own Id: OTP-10182</p>
        </item>
        <item>
          <p>
	    Fix filename:nativename/1 on Win32</p>
          <p>
	    Don't choke on paths given as binary argument on Win32.
	    Thanks to Jan Klötzke</p>
          <p>
	    Own Id: OTP-10188</p>
        </item>
        <item>
          <p>
	    Fix bug in <c>ets:test_ms/2</c> that could cause emulator
	    crash when using <c>'$_'</c> in match spec.</p>
          <p>
	    Own Id: OTP-10190</p>
        </item>
        <item>
          <p>
	    Fix bug where zip archives wrongly have a first disk
	    number set to 1</p>
          <p>
	    Own Id: OTP-10223</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p> The message printed by the Erlang shell as an
	    explanation of the <c>badarith</c> error has been
	    corrected. (Thanks to Matthias Lang.) </p>
          <p>
	    Own Id: OTP-10054</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 1.18.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    References to <c>is_constant/1</c> (which was removed in
	    the R12 release) has been removed from documentation and
	    code.</p>
          <p>
	    Own Id: OTP-6454 Aux Id: seq10407 </p>
        </item>
        <item>
          <p>
	    Leave control back to gen_server during supervisor's
	    restart loop</p>
          <p>
	    When an attempt to restart a child failed, supervisor
	    would earlier keep the execution flow and try to restart
	    the child over and over again until it either succeeded
	    or the restart frequency limit was reached. If none of
	    these happened, supervisor would hang forever in this
	    loop.</p>
          <p>
	    This commit adds a timer of 0 ms where the control is
	    left back to the gen_server which implements the
	    supervisor. This way any incoming request to the
	    supervisor will be handled - which could help breaking
	    the infinite loop - e.g. shutdown request for the
	    supervisor or for the problematic child.</p>
          <p>
	    This introduces some incompatibilities in stdlib due to
	    new return values from supervisor:</p>
          <list>
	    <item>restart_child/2 can now return
	    {error,restarting}</item> <item>delete_child/2 can now
	    return {error,restarting}</item> <item>which_children/1
	    returns a list of {Id,Child,Type,Mods}, where Child, in
	    addition to the old pid() or 'undefined', now also can be
	    'restarting'.</item>
          </list>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-9549</p>
        </item>
        <item>
          <p>
	    If a temporary child's start function returned 'ignore',
	    then the supervisor would keep it's child specification.
	    This has been corrected. Child specifications for
	    non-existing temporary children shall never be kept.</p>
          <p>
	    Own Id: OTP-9782 Aux Id: seq11964 </p>
        </item>
        <item>
	    <p> Use universal time as base in error logger</p>
          <p>
	    Previous conversion used the deprecated
	    calendar:local_time_to_universal_time/1 </p>
          <p>
	    Own Id: OTP-9854</p>
        </item>
        <item>
	    <p>Calling a guard test (such as is_list/1) from the
	    top-level in a guard, would cause a compiler crash if
	    there was a local definition with the same name.
	    Corrected to reject the program with an error
	    message.</p>
          <p>
	    Own Id: OTP-9866</p>
        </item>
        <item>
          <p>
	    Fix the type spec from the doc of binary:part/3 (Thanks
	    to Ricardo Catalinas Jiménez)</p>
          <p>
	    Own Id: OTP-9920</p>
        </item>
        <item>
          <p>
	    Correct spelling of registered (Thanks to Richard
	    Carlsson)</p>
          <p>
	    Own Id: OTP-9925</p>
        </item>
        <item>
          <p>
	    Put gb_trees documentation into alphabetical order
	    (Thanks to Aidan Hobson Sayers)</p>
          <p>
	    Own Id: OTP-9929</p>
        </item>
        <item>
          <p>
	    Fix bug in ETS with <c>compressed</c> option and
	    insertion of term containing large integers (>2G) on
	    64-bit machines. Seen to cause emulator crash. (Thanks to
	    Diego Llarrull for excellent bug report)</p>
          <p>
	    Own Id: OTP-9932</p>
        </item>
        <item>
          <p>
	    Add plugin support for alternative name lookup This patch
	    introduces a new way of locating a behaviour instance:
	    {via, Module, Name}. (Thanks to Ulf Wiger)</p>
          <p>
	    Own Id: OTP-9945</p>
        </item>
        <item>
	    <p> The function <c>digraph_utils:condensation/1</c> used
	    to create a digraph containing loops contradicting the
	    documentation which states that the created digraph is
	    free of cycles. This bug has been fixed. (Thanks to
	    Kostis Sagonas for finding the bug.) </p>
          <p>
	    Own Id: OTP-9953</p>
        </item>
        <item>
	    <p> When an escript ends now all printout to standard
	    output and standard error gets out on the terminal. This
	    bug has been corrected by changing the behaviour of
	    erlang:halt/0,1, which should fix the same problem for
	    other escript-like applications, i.e that data stored in
	    the output port driver buffers got lost when printing on
	    a TTY and exiting through erlang:halt/0,1. </p>
	    <p> The BIF:s erlang:halt/0,1 has gotten improved
	    semantics and there is a new BIF erlang:halt/2 to
	    accomplish something like the old semantics. See the
	    documentation. </p>
	    <p> Now erlang:halt/0 and erlang:halt/1 with an integer
	    argument will close all ports and allow all pending async
	    threads operations to finish before exiting the emulator.
	    Previously erlang:halt/0 and erlang:halt(0) would just
	    wait for pending async threads operations but not close
	    ports. And erlang:halt/1 with a non-zero integer argument
	    would not even wait for pending async threads operations.
	    </p>
	    <p> To roughly the old behaviour, to not wait for ports
	    and async threads operations when you exit the emulator,
	    you use erlang:halt/2 with an integer first argument and
	    an option list containing {flush,false} as the second
	    argument. Note that now is flushing not dependant of the
	    exit code, and you cannot only flush async threads
	    operations which we deemed as a strange behaviour anyway.
	    </p>
	    <p>Also, erlang:halt/1,2 has gotten a new feature: If the
	    first argument is the atom 'abort' the emulator is
	    aborted producing a core dump, if the operating system so
	    allows. </p>
          <p>
	    Own Id: OTP-9985</p>
        </item>
        <item>
          <p>
	    Add escript win32 alternative invocation. escript can now
	    be started as both "escript.exe" and "escript" (Thanks to
	    Pierre Rouleau)</p>
          <p>
	    Own Id: OTP-9997</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 1.18</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Improved algorithm in module <c>random</c>. Avoid seed
	    values that are even divisors of the primes and by that
	    prevent getting sub-seeds that are stuck on zero. Worst
	    case was random:seed(0,0,0) that produced a series of
	    only zeros. This is an incompatible change in the sense
	    that applications that relies on reproducing a specific
	    series for a given seed will fail. The pseudo random
	    output is still deterministic but different compared to
	    earlier versions.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-8713</p>
        </item>
        <item>
	    <p> Calls to <c>global:whereis_name/1</c> have been
	    substituted for calls to
	    <c>global:safe_whereis_name/1</c> since the latter is not
	    safe at all.</p>
	    <p>The reason for not doing this earlier is that setting
	    a global lock masked out a bug concerning the restart of
	    supervised children. The bug has now been fixed by a
	    modification of <c>global:whereis_name/1</c>. (Thanks to
	    Ulf Wiger for code contribution.)</p>
	    <p>A minor race conditions in <c>gen_fsm:start*</c> has
	    been fixed: if one of these functions returned <c>{error,
	    Reason}</c> or ignore, the name could still be registered
	    (either locally or in <c>global</c>. (This is the same
	    modification as was done for gen_server in OTP-7669.)</p>
	    <p>The undocumented function
	    <c>global:safe_whereis_name/1</c> has been removed. </p>
          <p>
	    Own Id: OTP-9212 Aux Id: seq7117, OTP-4174 </p>
        </item>
        <item>
          <p>
	    If a child of a supervisor terminates with reason
	    {shutdown,Term} it is now handled by the supervisor as if
	    the reason was 'shutdown'. </p>
          <p>
	    For children with restart type 'permanent', this implies
	    no change. For children with restart type 'transient',
	    the child will no longer be restarted and no supervisor
	    report will be written. For children with restart type
	    'temporary', no supervisor report will be written.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-9222</p>
        </item>
        <item>
          <p>
	    Minor improvement of documentation regarding supervisor
	    restart strategy for temporary and transient child
	    processes.</p>
          <p>
	    Own Id: OTP-9381</p>
        </item>
        <item>
	    <p>A Dets table with sufficiently large buckets could not
	    always be repaired. This bug has been fixed. </p> <p>The
	    format of Dets files has been modified. When downgrading
	    tables created with the new system will be repaired.
	    Otherwise the modification should not be noticeable. </p>
          <p>
	    Own Id: OTP-9607</p>
        </item>
        <item>
	    <p> A few contracts in the <c>lists</c> module have been
	    corrected. </p>
          <p>
	    Own Id: OTP-9616</p>
        </item>
        <item>
          <p>
	    Add '-callback' attributes in stdlib's behaviours</p>
          <p>
	    Replace the behaviour_info(callbacks) export in stdlib's
	    behaviours with -callback' attributes for all the
	    callbacks. Update the documentation with information on
	    the callback attribute Automatically generate
	    'behaviour_info' function from '-callback' attributes</p>
          <p>
	    'behaviour_info(callbacks)' is a special function that is
	    defined in a module which describes a behaviour and
	    returns a list of its callbacks.</p>
          <p>
	    This function is now automatically generated using the
	    '-callback' specs. An error is returned by lint if user
	    defines both '-callback' attributes and the
	    behaviour_info/1 function. If no type info is needed for
	    a callback use a generic spec for it. Add '-callback'
	    attribute to language syntax</p>
          <p>
	    Behaviours may define specs for their callbacks using the
	    familiar spec syntax, replacing the '-spec' keyword with
	    '-callback'. Simple lint checks are performed to ensure
	    that no callbacks are defined twice and all types
	    referred are declared.</p>
          <p>
	    These attributes can be then used by tools to provide
	    documentation to the behaviour or find discrepancies in
	    the callback definitions in the callback module.</p>
          <p>
	    Add callback specs into 'application' module in kernel
	    Add callback specs to tftp module following internet
	    documentation Add callback specs to inets_service module
	    following possibly deprecated comments</p>
          <p>
	    Own Id: OTP-9621</p>
        </item>
        <item>
	    <p> If a Dets table had been properly closed but the
	    space management data could not been read, it was not
	    possible to repair the file. This bug has been fixed.
	    </p>
          <p>
	    Own Id: OTP-9622</p>
        </item>
        <item>
          <p>
	    The Unicode noncharacter code points 16#FFFE and 16#FFFE
	    were not allowed to be encoded or decoded using the
	    <c>unicode</c> module or bit syntax. That was
	    inconsistent with the other noncharacters 16#FDD0 to
	    16#FDEF that could be encoded/decoded. To resolve the
	    inconsistency, 16#FFFE and 16#FFFE can now be encoded and
	    decoded. (Thanks to Alisdair Sullivan.)</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-9624</p>
        </item>
        <item>
          <p>
	    Make epp search directory of current file first when
	    including another file This completes a partial fix in
	    R11 that only worked for include_lib(). (Thanks to
	    Richard Carlsson)</p>
          <p>
	    Own Id: OTP-9645</p>
        </item>
        <item>
          <p>
	    ms_transform: Fix incorrect `variable shadowed' warnings</p>
          <p>
	    This patch removes incorrect passing of variable bindings
	    from one function clause to another. (Thanks to Haitao
	    Li)</p>
          <p>
	    Own Id: OTP-9646</p>
        </item>
        <item>
          <p>
	    Explicitly kill dynamic children in supervisors</p>
          <p>
	    According to the supervisor's documentation: "Important
	    note on simple-one-for-one supervisors: The dynamically
	    created child processes of a simple-one-for-one
	    supervisor are not explicitly killed, regardless of
	    shutdown strategy, but are expected to terminate when the
	    supervisor does (that is, when an exit signal from the
	    parent process is received)."</p>
          <p>
	    All is fine as long as we stop simple_one_for_one
	    supervisor manually. Dynamic children catch the exit
	    signal from the supervisor and leave. But, if this
	    happens when we stop an application, after the top
	    supervisor has stopped, the application master kills all
	    remaining processes associated to this application. So,
	    dynamic children that trap exit signals can be killed
	    during their cleanup (here we mean inside terminate/2).
	    This is unpredictable and highly time-dependent.</p>
          <p>
	    In this commit, supervisor module is patched to
	    explicitly terminate dynamic children accordingly to the
	    shutdown strategy.</p>
          <p>
	    NOTE: Order in which dynamic children are stopped is not
	    defined. In fact, this is "almost" done at the same time.</p>
          <p>
	    Stack errors when dynamic children are stopped</p>
          <p>
	    Because a simple_one_for_one supervisor can have many
	    workers, we stack errors during its shutdown to report
	    only one message for each encountered error type. Instead
	    of reporting the child's pid, we use the number of
	    concerned children. (Thanks to Christopher Faulet)</p>
          <p>
	    Own Id: OTP-9647</p>
        </item>
        <item>
          <p>
	    Allow an infinite timeout to shutdown worker processes</p>
          <p>
	    Now, in child specification, the shutdown value can also
	    be set to infinity for worker children. This restriction
	    was removed because this is not always possible to
	    predict the shutdown time for a worker. This is highly
	    application-dependent. Add a warning to docs about
	    workers' shutdown strategy (Thanks to Christopher Faulet)</p>
          <p>
	    Own Id: OTP-9648</p>
        </item>
        <item>
          <p>
	    A badarg would sometimes occur in supervisor when
	    printing error reports and the child pid was undefined.
	    This has been corrected.</p>
          <p>
	    Own Id: OTP-9669</p>
        </item>
        <item>
          <p>
	    Fix re:split spec not to accept option 'global'(Thanks to
	    Shunichi Shinohara)</p>
          <p>
	    Own Id: OTP-9691</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p> Fix a few tests that used to fail on the HiPE
	    platform. </p>
          <p>
	    Own Id: OTP-9637</p>
        </item>
        <item>
	    <p>Variables are now now allowed in '<c>fun M:F/A</c>' as
	    suggested by Richard O'Keefe in EEP-23.</p>
	    <p>The representation of '<c>fun M:F/A</c>' in the
	    abstract format has been changed in an incompatible way.
	    Tools that directly read or manipulate the abstract
	    format (such as parse transforms) may need to be updated.
	    The compiler can handle both the new and the old format
	    (i.e. extracting the abstract format from a pre-R15 BEAM
	    file and compiling it using compile:forms/1,2 will work).
	    The <c>syntax_tools</c> application can also handle both
	    formats.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-9643</p>
        </item>
        <item>
          <p>
	    Tuple funs (a two-element tuple with a module name and a
	    function) are now officially deprecated and will be
	    removed in R16. Use '<c>fun M:F/A</c>' instead. To make
	    you aware that your system uses tuple funs, the very
	    first time a tuple fun is applied, a warning will be sent
	    to the error logger.</p>
          <p>
	    Own Id: OTP-9649</p>
        </item>
        <item>
          <p>
	    The deprecated '<c>regexp</c>' module has been removed.
	    Use the '<c>re</c>' module instead.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-9737</p>
        </item>
        <item>
          <p>
	    <c>filename:find_src/1,2</c> will now work on stripped
	    BEAM files (reported by Per Hedeland). The HiPE compiler
	    will also work on stripped BEAM files. The BEAM compiler
	    will no longer include compilation options given in the
	    source code itself in <c>M:module_info(compile)</c>
	    (because those options will be applied anyway if the
	    module is re-compiled).</p>
          <p>
	    Own Id: OTP-9752</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 1.17.5</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    erl_tar:extract failed when executed inside a directory
	    with some parent directory to which the user has no read
	    access. This has been corrected.</p>
          <p>
	    Own Id: OTP-9368</p>
        </item>
        <item>
	    <p> A bug in <c>erl_scan:set_attribute/3</c> has been
	    fixed. </p>
          <p>
	    Own Id: OTP-9412</p>
        </item>
        <item>
	    <p> The contract of <c>io_lib:fread()</c> has been
	    corrected. </p>
          <p>
	    Own Id: OTP-9413 Aux Id: seq11873 </p>
        </item>
        <item>
          <p>
	    A crash in io_lib:fread/2 when end of input data was
	    encountered while trying to match literal characters,
	    which should return {more,_,_,_} but instead crashed, has
	    been corrected. Reported by Klas Johansson.</p>
          <p>
	    A similar peculiarity for io:fread when encountering end
	    of file before any field data has also been corrected.</p>
          <p>
	    Own Id: OTP-9439</p>
        </item>
        <item>
	    <p> The contract of <c>timer:now_diff()</c> has been
	    corrected. (Thanks to Alex Morarash). </p>
          <p>
	    Own Id: OTP-9450</p>
        </item>
        <item>
          <p>
	    Fix minor typo in gen_fsm documentation (Thanks to Haitao
	    Li)</p>
          <p>
	    Own Id: OTP-9456</p>
        </item>
        <item>
	    <p>The contracts of <c>zip:zip_list_dir/1</c> and
	    <c>zip:zip_get/2</c> have been corrected. </p>
          <p>
	    Own Id: OTP-9471 Aux Id: seq11887, OTP-9472 </p>
        </item>
        <item>
	    <p> A bug in <c>zip:zip_open()</c> has been fixed. </p>
          <p>
	    Own Id: OTP-9472 Aux Id: seq11887, OTP-9471 </p>
        </item>
        <item>
          <p>
	    Fix trivial documentation errors(Thanks to Matthias Lang)</p>
          <p>
	    Own Id: OTP-9498</p>
        </item>
        <item>
          <p>
	    Add a proplist() type</p>
          <p>
	    Recently I was adding specs to an API and found that
	    there is no canonical proplist() type defined. (Thanks to
	    Ryan Zezeski)</p>
          <p>
	    Own Id: OTP-9499</p>
        </item>
        <item>
          <p>
	    fix supervisors restarting temporary children</p>
          <p>
	    In the current implementation of supervisors, temporary
	    children should never be restarted. However, when a
	    temporary child is restarted as part of a one_for_all or
	    rest_for_one strategy where the failing process is not
	    the temporary child, the supervisor still tries to
	    restart it.</p>
          <p>
	    Because the supervisor doesn't keep some of the MFA
	    information of temporary children, this causes the
	    supervisor to hit its restart limit and crash.</p>
          <p>
	    This patch fixes the behaviour by inserting a clause in
	    terminate_children/2-3 (private function) that will omit
	    temporary children when building a list of killed
	    processes, to avoid having the supervisor trying to
	    restart them again.</p>
          <p>
	    Only supervisors in need of restarting children used the
	    list, so the change should be of no impact for the
	    functions that called terminate_children/2-3 only to kill
	    all children.</p>
          <p>
	    The documentation has been modified to make this
	    behaviour more explicit. (Thanks to Fred Hebert)</p>
          <p>
	    Own Id: OTP-9502</p>
        </item>
        <item>
          <p>
	    fix broken edoc annotations (Thanks to Richard Carlsson)</p>
          <p>
	    Own Id: OTP-9516</p>
        </item>
        <item>
	    <p> XML files have been corrected. </p>
          <p>
	    Own Id: OTP-9550 Aux Id: OTP-9541 </p>
        </item>
        <item>
          <p>
	    Handle rare race in the crypto key server functionality</p>
          <p>
	    Own Id: OTP-9586</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p> Types and specifications have been added. </p>
          <p>
	    Own Id: OTP-9356</p>
        </item>
        <item>
	    <p> The contracts of the <c>queue</c> module have been
	    modified. </p>
          <p>
	    Own Id: OTP-9418</p>
        </item>
        <item>
	    <p> Contracts in STDLIB and Kernel have been improved and
	    type errors have been corrected. </p>
          <p>
	    Own Id: OTP-9485</p>
        </item>
        <item>
          <p>
	    Types for several BIFs have been extended/corrected. Also
	    the types for types for <c>lists:keyfind/3</c>,
	    <c>lists:keysearch/3</c>, and <c>lists:keyemember/3</c>
	    have been corrected. The incorrect/incomplete types could
	    cause false dialyzer warnings.</p>
          <p>
	    Own Id: OTP-9496</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 1.17.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p> The default value <c>undefined</c> was added to
	    records field types in such a way that the result was not
	    always a well-formed type. This bug has been fixed. </p>
          <p>
	    Own Id: OTP-9147</p>
        </item>
        <item>
          <p>
	    Update index file atomically</p>
          <p>
	    Since the log_mf_h index file might be read by other
	    processes than the error handler (e.g. by the rb tool),
	    this file should be updated atomically. This will avoid
	    hitting the time gap between opening the file in write
	    mode (and thus emptying the file) and the actual update
	    with the new contents. To do this, a temporary file is
	    written, and the file:rename/1 used to replace the real
	    index file.</p>
          <p>
	    Own Id: OTP-9148</p>
        </item>
        <item>
          <p>
	    Fixed various typos across the documentation (Thanks to
	    Tuncer Ayaz)</p>
          <p>
	    Own Id: OTP-9154</p>
        </item>
        <item>
          <p>
	    Supervisors should not save child-specs for temporary
	    processes when they terminate as they should not be
	    restarted. Saving the temporary child spec will result in
	    that you cannot start a new temporary process with the
	    same child spec as an already terminated temporary
	    process. Since R14B02 you cannot restart a temporary
	    temporary process as arguments are no longer saved, it
	    has however always been semantically incorrect to restart
	    a temporary process. Thanks to Filipe David Manana for
	    reporting this and suggesting a solution.</p>
          <p>
	    Own Id: OTP-9167 Aux Id: OTP-9064 </p>
        </item>
        <item>
          <p>
	    Various small documentation fixes (Thanks to Bernard
	    Duggan)</p>
          <p>
	    Own Id: OTP-9172</p>
        </item>
        <item>
          <p>
	    Fix format_status bug for unregistered gen_event
	    processes</p>
          <p>
	    Port the gen_fsm code for format_status to gen_event in
	    order to prevent a lists:concat([...,pid()]) crash when
	    calling sys:get_status/1 on an unregistered gen_event
	    process.</p>
          <p>
	    Refactor format_status header code from gen_* behaviours
	    to module gen.</p>
          <p>
	    Extend the format_status tests in gen_event_SUITE to
	    cover format_status bugs with anonymous gen_event
	    processes. (Thanks To Geoff Cant)</p>
          <p>
	    Own Id: OTP-9218</p>
        </item>
        <item>
          <p>
	    List of pids changed to 'set' in supervisor for dynamic
	    temporary children. Accessing the list would not scale
	    well when adding/deleting many children. (Thanks to
	    Evgeniy Khramtsov)</p>
          <p>
	    Own Id: OTP-9242</p>
        </item>
        <item>
          <p>
	    Change pool module to attempt to attach to nodes that are
	    already running</p>
          <p>
	    The pool module prints out an error message and takes no
	    further action for nodes that are already running. This
	    patch changes that behavior so that if the return from
	    slave:start/3 is {already_running, Node} then an attempt
	    to attach to the node is still made. This makes sense
	    because the node has been specified by the user in the
	    .hosts.erlang file indicating a wish for the node to be
	    part of the pool and a manual attach can be successfully
	    made after the pool is started.(Thanks to Kelly
	    McLaughlin)</p>
          <p>
	    Own Id: OTP-9244</p>
        </item>
        <item>
          <p>
	    unicode: document 16#FFFE and 16#FFFF (non chars)(Thanks
	    to Tuncer Ayaz)</p>
          <p>
	    Own Id: OTP-9256</p>
        </item>
        <item>
          <p>
	    re: remove gratuitous "it " in manpage (Thanks to Tuncer
	    Ayaz)</p>
          <p>
	    Own Id: OTP-9307</p>
        </item>
        <item>
	    <p> A bug in erl_eval(3) has been fixed. </p>
          <p>
	    Own Id: OTP-9322</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Add <c>timer:tc/1</c> and remove the catch in <c>tc/2</c>
	    and <c>tc/3</c>. The time measuring functions will thus
	    no longer trap exits, errors or throws caused by the
	    measured function.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-9169</p>
        </item>
        <item>
          <p>
	    Allow supervisor:terminate_child(SupRef,Pid) for
	    simple_one_for_one supervisors</p>
          <p>
	    supervisor:terminate_child/2 was earlier not allowed if
	    the supervisor used restart strategy simple_one_for_one.
	    This is now changed so that children of this type of
	    supervisors can be terminated by specifying the child's
	    Pid.</p>
          <p>
	    (Thanks to Vance Shipley.)</p>
          <p>
	    Own Id: OTP-9201</p>
        </item>
        <item>
	    <p> Types and specifications have been added. </p>
          <p>
	    Own Id: OTP-9267</p>
        </item>
        <item>
	    <p> Erlang types and specifications are used for
	    documentation. </p>
          <p>
	    Own Id: OTP-9271</p>
        </item>
        <item>
	    <p>Allow Dets tablenames to be arbitrary terms.</p>
          <p>
	    Own Id: OTP-9282</p>
        </item>
        <item>
	    <p> A specification that could cause problems for
	    Dialyzer has been fixed. An opaque type in erl_eval has
	    been turned in to a ordinary type. This is a temporary
	    fix. </p>
          <p>
	    Own Id: OTP-9333</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 1.17.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Two bugs in io:format for ~F.~Ps has been corrected. When
	    length(S) >= abs(F) > P, the precision P was incorrectly
	    ignored. When F == P > length(S) the result was
	    incorrectly left adjusted. Bug found by Ali Yakout who
	    also provided a fix.</p>
          <p>
	    Own Id: OTP-8989 Aux Id: seq11741 </p>
        </item>
        <item>
	    <p>Fix exception generation in the io module</p>
          <p>
	    Some functions did not generate correct badarg exception
	    on a badarg exception.</p>
          <p>
	    Own Id: OTP-9045</p>
        </item>
        <item>
          <p>
	    Fixes to the dict and orddict module documentation</p>
          <p>
	    Fixed grammar and one inconsistency (Key - Value instead
	    of key/value, since everywhere else the former is used).
	    (thanks to Filipe David Manana)</p>
          <p>
	    Own Id: OTP-9083</p>
        </item>
        <item>
          <p>
	    Add ISO week number calculation functions to the calendar
	    module in stdlib</p>
          <p>
	    This new feature adds the missing week number function to
	    the calendar module of the stdlib application. The
	    implementation conforms to the ISO 8601 standard. The new
	    feature has been implemented tested and documented
	    (thanks to Imre Horvath).</p>
          <p>
	    Own Id: OTP-9087</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Implement the 'MAY' clauses from RFC4648 regarding the
	    pad character to make mime_decode() and
	    mime_decode_to_string() functions more tolerant of badly
	    padded base64. The RFC is quoted below for easy
	    reference.</p>
          <p>
	    "RFC4648 Section 3.3 with reference to MIME decoding:
	    Furthermore, such specifications MAY ignore the pad
	    character, "=", treating it as non-alphabet data, if it
	    is present before the end of the encoded data. If more
	    than the allowed number of pad characters is found at the
	    end of the string (e.g., a base 64 string terminated with
	    "==="), the excess pad characters MAY also be ignored."</p>
          <p>
	    Own Id: OTP-9020</p>
        </item>
        <item>
          <p>
	    Supervisors will no longer save start parameters for
	    temporary processes as they will not be restarted. In the
	    case of simple_one_for_one workers such as ssl-connection
	    processes this will substantial reduce the memory
	    footprint of the supervisor.</p>
          <p>
	    Own Id: OTP-9064</p>
        </item>
        <item>
          <p>
	    When running escript it is now possible to add the -n
	    flag and the escript will be compiled using +native.</p>
          <p>
	    Own Id: OTP-9076</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 1.17.2.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Several type specifications for standard libraries were
	    wrong in the R14B01 release. This is now corrected. The
	    corrections concern types in re,io,filename and the
	    module erlang itself.</p>
          <p>
	    Own Id: OTP-9008</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 1.17.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p> When several clients accessed a Dets table
	    simultaneously, one of them calling
	    <c>dets:insert_new/2</c>, the Dets server could crash.
	    Alternatively, under the same conditions, <c>ok</c> was
	    sometimes returned instead of <c>true</c>. (Thanks to
	    John Hughes.) </p>
          <p>
	    Own Id: OTP-8856</p>
        </item>
        <item>
	    <p> When several clients accessed a Dets table
	    simultaneously, inserted or updated objects were
	    sometimes lost due to the Dets file being truncated.
	    (Thanks to John Hughes.) </p>
          <p>
	    Own Id: OTP-8898</p>
        </item>
        <item>
	    <p> When several clients accessed a Dets table
	    simultaneously, modifications of the Dets server's
	    internal state were sometimes thrown away. The symptoms
	    are diverse: error with reason <c>bad_object</c>;
	    inserted objects not returned by <c>lookup()</c>; et
	    cetera. (Thanks to John Hughes.) </p>
          <p>
	    Own Id: OTP-8899</p>
        </item>
        <item>
	    <p> If a Dets table was closed after calling
	    <c>bchunk/2</c>, <c>match/1,3</c>,
	    <c>match_object/1,3</c>, or <c>select/1,3</c> and then
	    opened again, a subsequent call using the returned
	    continuation would normally return a reply. This bug has
	    fixed; now the call fails with reason <c>badarg</c>. </p>
          <p>
	    Own Id: OTP-8903</p>
        </item>
        <item>
	    <p> Cover did not collect coverage data for files such as
	    Yecc parses containing include directives. The bug has
	    been fixed by modifying <c>epp</c>, the Erlang Code
	    Preprocessor. </p>
          <p>
	    Own Id: OTP-8911</p>
        </item>
        <item>
	    <p> If a Dets table with fewer slots than keys was opened
	    and then closed after just a lookup, the contents were no
	    longer well-formed. This bug has been fixed. (Thanks to
	    Matthew Evans.) </p>
          <p>
	    Own Id: OTP-8923</p>
        </item>
        <item>
          <p>
	    In a supervisor, when it terminates a child, if that
	    child happens to have exited fractionally early, with
	    normal, the supervisor reports this as an error. This
	    should not be reported as an error.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-8938 Aux Id: seq11615 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    The documentation filelib:wildcard/1,2 now describes the
	    character set syntax for wildcards.</p>
          <p>
	    Own Id: OTP-8879 Aux Id: seq11683 </p>
        </item>
        <item>
	    <p>Buffer overflows have been prevented in <c>erlc</c>,
	    <c>dialyzer</c>, <c>typer</c>, <c>run_test</c>,
	    <c>heart</c>, <c>escript</c>, and <c>erlexec</c>.</p>
	    (Thanks to Michael Santos.)
          <p>
	    Own Id: OTP-8892</p>
        </item>
        <item>
          <p>
	    Using a float for the number of copies for
	    <c>string:copies/2</c> resulted in an infinite loop. Now
	    it will fail with an exception instead. (Thanks to
	    Michael Santos.)</p>
          <p>
	    Own Id: OTP-8915</p>
        </item>
        <item>
          <p>
	    New ETS option <c>compressed</c>, to enable a more
	    compact storage format at the expence of heavier table
	    operations. For test and evaluation, <c>erl +ec</c> can
	    be used to force compression on all ETS tables.</p>
          <p>
	    Own Id: OTP-8922 Aux Id: seq11658 </p>
        </item>
        <item>
	    <p> The default maximum number of slots of a Dets table
	    has been changed as to be equal to the maximum number of
	    slots. (Thanks to Richard Carlsson.) </p>
          <p>
	    Own Id: OTP-8959</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 1.17.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>reference() has been substituted for ref() in the
	    documentation.</p>
          <p>
	    Own Id: OTP-8733</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    The ms_transform now warns if the fun head shadows
	    surrounding variables (just like the warnings you would
	    get for an ordinary fun in the same context).</p>
          <p>
	    Own Id: OTP-6759</p>
        </item>
        <item>
          <p>
	    ets:select_reverse/{1,2,3} are now documented.</p>
          <p>
	    Own Id: OTP-7863</p>
        </item>
        <item>
          <p>
	    Large parts of the <c>ethread</c> library have been
	    rewritten. The <c>ethread</c> library is an Erlang
	    runtime system internal, portable thread library used by
	    the runtime system itself.</p>
          <p>
	    Most notable improvement is a reader optimized rwlock
	    implementation which dramatically improve the performance
	    of read-lock/read-unlock operations on multi processor
	    systems by avoiding ping-ponging of the rwlock cache
	    lines. The reader optimized rwlock implementation is used
	    by miscellaneous rwlocks in the runtime system that are
	    known to be read-locked frequently, and can be enabled on
	    ETS tables by passing the <seeerl
	    marker="stdlib:ets#new_2_read_concurrency">{read_concurrency,
	    true}</seeerl> option upon table creation. See the
	    documentation of <seemfa
	    marker="stdlib:ets#new/2">ets:new/2</seemfa> for more
	    information. The reader optimized rwlock implementation
	    can be fine tuned when starting the runtime system. For
	    more information, see the documentation of the <seecom
	    marker="erts:erl#+rg">+rg</seecom> command line argument
	    of <c>erl</c>.</p>
          <p>
	    There is also a new implementation of rwlocks that is not
	    optimized for readers. Both implementations interleaves
	    readers and writers during contention as opposed to,
	    e.g., the NPTL (Linux) pthread rwlock implementation
	    which use either a reader or writer preferred strategy.
	    The reader/writer preferred strategy is problematic since
	    it starves threads doing the non-preferred operation.</p>
          <p>
	    The new rwlock implementations in general performs better
	    in ERTS than common pthread implementations. However, in
	    some extremely heavily contended cases this is not the
	    case. Such heavy contention can more or less only appear
	    on ETS tables. This when multiple processes do very large
	    amounts of write locked operations simultaneously on the
	    same table. Such use of ETS is bad regardless of rwlock
	    implementation, will never scale, and is something we
	    strongly advise against.</p>
          <p>
	    The new rwlock implementations depend on atomic
	    operations. If no native atomic implementation is found,
	    a fallback solution will be used. Using the fallback
	    implies a performance degradation. That is, it is more
	    important now than before to build OTP with a native
	    atomic implementation.</p>
          <p>
	    The <c>ethread</c> library contains native atomic
	    implementations for, x86 (32 and 64 bit), powerpc (32
	    bit), sparc V9 (32 and 64 bit), and tilera (32 bit). On
	    other hardware gcc's builtin support for atomic memory
	    access will be used if such exists. If no such support is
	    found, <c>configure</c> will warn about no atomic
	    implementation available.</p>
          <p>
	    The <c>ethread</c> library can now also use the
	    <c>libatomic_ops</c> library for atomic memory accesses.
	    This makes it possible for the Erlang runtime system to
	    utilize optimized native atomic operations on more
	    platforms than before. If <c>configure</c> warns about no
	    atomic implementation available, try using the
	    <c>libatomic_ops</c> library. Use the <seeguide
	    marker="system/installation_guide:INSTALL#Advanced-configuration-and-build-of-ErlangOTP">--with-libatomic_ops=PATH</seeguide>
	    <c>configure</c> command line argument when specifying
	    where the <c>libatomic_ops</c> installation is located.
	    The <c>libatomic_ops</c> library can be downloaded from:
	    <url
	    href="http://www.hpl.hp.com/research/linux/atomic_ops/">http://www.hpl.hp.com/research/linux/atomic_ops/</url></p>
          <p>
	    The changed API of the <c>ethread</c> library has also
	    caused modifications in the Erlang runtime system.
	    Preparations for the to come "delayed deallocation"
	    feature has also been done since it depends on the
	    <c>ethread</c> library.</p>
          <p>
	    <em>Note</em>: When building for x86, the <c>ethread</c>
	    library will now use instructions that first appeared on
	    the pentium 4 processor. If you want the runtime system
	    to be compatible with older processors (back to 486) you
	    need to pass the <seeguide
	    marker="system/installation_guide:INSTALL#Advanced-configuration-and-build-of-ErlangOTP">--enable-ethread-pre-pentium4-compatibility</seeguide>
	    <c>configure</c> command line argument when configuring
	    the system.</p>
          <p>
	    Own Id: OTP-8544</p>
        </item>
        <item>
          <p>
	    Some Built In Functions (BIFs) from the module erlang was
	    never made autoimported for backward compatibility
	    reasons. As local functions now override autoimports, new
	    autoimports is no longer a problem, why the following
	    BIFs are finally made autoimported: monitor/2, monitor/3,
	    demonitor/2, demonitor/3, error/1, error/2,
	    integer_to_list/2, list_to_integer/2.</p>
          <p>
	    Own Id: OTP-8763</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 1.17</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>The Erlang code preprocessor (<c>epp</c>) sent extra
	    messages on the form <c>{eof,Location}</c> to the client
	    when parsing the <c>file</c> attribute. This bug,
	    introduced in R11B, has been fixed.</p>
          <p>
	    Own Id: OTP-8470</p>
        </item>
        <item>
	    <p>The abstract type 'fun' could not be printed by the
	    Erlang pretty printer (<c>erl_pp</c>). This bug has been
	    fixed.</p>
          <p>
	    Own Id: OTP-8473</p>
        </item>
        <item>
	    <p>The function <c>erl_scan:reserved_word/1</c> no longer
	    returns <c>true</c> when given the word <c>spec</c>. This
	    bug was introduced in STDLIB-1.15.3 (R12B-3).</p>
          <p>
	    Own Id: OTP-8567</p>
        </item>
        <item>
	    <p>The documentation of <c>lists:keysort/2</c> states
	    that the sort is stable.</p>
          <p>
	    Own Id: OTP-8628 Aux Id: seq11576 </p>
        </item>
        <item>
          <p>
	    The shell's line editing has been improved to more
	    resemble the behaviour of readline and other shells.
	    (Thanks to Dave Peticolas)</p>
          <p>
	    Own Id: OTP-8635</p>
        </item>
        <item>
	    <p>The Erlang code preprocessor (<c>epp</c>) did not
	    correctly handle premature end-of-input when defining
	    macros. This bug, introduced in STDLIB 1.16, has been
	    fixed.</p>
          <p>
	    Own Id: OTP-8665 Aux Id: OTP-7810 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    The module binary from EEP31 (and EEP9) is implemented.</p>
          <p>
	    Own Id: OTP-8217</p>
        </item>
        <item>
	    <p>The erlang pretty printer (<c>erl_pp</c>) no longer
	    quotes atoms in types.</p>
          <p>
	    Own Id: OTP-8501</p>
        </item>
        <item>
	    <p>The Erlang code preprocessor (<c>epp</c>) now
	    considers records with no fields as typed.</p>
          <p>
	    Own Id: OTP-8503</p>
        </item>
        <item>
          <p>
	    Added function <c>zip:foldl/3</c> to iterate over zip
	    archives.</p>
          <p>
	    Added functions to create and extract escripts. See
	    <c>escript:create/2</c> and <c>escript:extract/2</c>.</p>
          <p>
	    The undocumented function <c>escript:foldl/3</c> has been
	    removed. The same functionality can be achieved with the
	    more flexible functions <c>escript:extract/2</c> and
	    <c>zip:foldl/3</c>.</p>
          <p>
	    Record fields has been annotated with type info. Source
	    files as been adapted to fit within 80 chars and trailing
	    whitespace has been removed.</p>
          <p>
	    Own Id: OTP-8521</p>
        </item>
        <item>
	    <p>The Erlang parser no longer duplicates the singleton
	    type <c>undefined</c> in the type of record fields
	    without initial value.</p>
          <p>
	    Own Id: OTP-8522</p>
        </item>
        <item>
	    <p>A regular expression with many levels of parenthesis
	    could cause a buffer overflow. That has been corrected.
	    (Thanks to Michael Santos.)</p>
          <p>
	    Own Id: OTP-8539</p>
        </item>
        <item>
	    <p>When defining macros the closing right parenthesis
	    before the dot is now mandatory.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-8562</p>
        </item>
        <item>
          <p>
	    Some properties of a compiled re pattern are defined to
	    allow for guard tests.</p>
          <p>
	    Own Id: OTP-8577</p>
        </item>
        <item>
	    <p>Local and imported functions now override the
	    auto-imported BIFs when the names clash. The pre R14
	    behaviour was that auto-imported BIFs would override
	    local functions. To avoid that old programs change
	    behaviour, the following will generate an error:</p>
	    <list><item><p>Doing a call without explicit module name
	    to a local function having a name clashing with the name
	    of an auto-imported BIF that was present (and
	    auto-imported) before OTP R14A</p></item>
	    <item><p>Explicitly importing a function having a name
	    clashing with the name of an autoimported BIF that was
	    present (and autoimported) before OTP R14A</p></item>
	    <item><p>Using any form of the old compiler directive
	    <c>nowarn_bif_clash</c></p></item> </list> <p>If the BIF
	    was added or auto-imported in OTP R14A or later,
	    overriding it with an import or a local function will
	    only result in a warning,</p> <p>To resolve clashes, you
	    can either use the explicit module name <c>erlang</c> to
	    call the BIF, or you can remove the auto-import of that
	    specific BIF by using the new compiler directive
	    <c>-compile({no_auto_import,[F/A]}).</c>, which makes all
	    calls to the local or imported function without explicit
	    module name pass without warnings or errors.</p> <p>The
	    change makes it possible to add auto-imported BIFs
	    without breaking or silently changing old code in the
	    future. However some current code ingeniously utilizing
	    the old behaviour or the <c>nowarn_bif_clash</c> compiler
	    directive, might need changing to be accepted by the
	    compiler.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-8579</p>
        </item>
        <item>
	    <p>The undocumented, unsupport, and deprecated function
	    <c>lists:flat_length/1</c> has been removed.</p>
          <p>
	    Own Id: OTP-8584</p>
        </item>
        <item>
          <p>
	    A bug in re that could cause certain regular expression
	    matches never to terminate is corrected. (Thanks to
	    Michael Santos and Gordon Guthrie.)</p>
          <p>
	    Own Id: OTP-8589</p>
        </item>
        <item>
	    <p>Nested records can now be accessed without
	    parenthesis. See the Reference Manual for examples.
	    (Thanks to YAMASHINA Hio and Tuncer Ayaz.)</p>
          <p>
	    Own Id: OTP-8597</p>
        </item>
        <item>
	    <p><c>receive</c> statements that can only read out a
	    newly created reference are now specially optimized so
	    that it will execute in constant time regardless of the
	    number of messages in the receive queue for the process.
	    That optimization will benefit calls to
	    <c>gen_server:call()</c>. (See <c>gen:do_call/4</c> for
	    an example of a receive statement that will be
	    optimized.)</p>
          <p>
	    Own Id: OTP-8623</p>
        </item>
        <item>
	    <p>The beam_lib:cmp/2 function now compares BEAM files in
	    stricter way. The BEAM files will be considered different
	    if there are any changes except in the compilation
	    information ("CInf") chunk. beam_lib:cmp/2 used to ignore
	    differences in the debug information (significant for
	    Dialyzer) and other chunks that did not directly change
	    the run-time behavior.</p>
          <p>
	    Own Id: OTP-8625</p>
        </item>
        <item>
          <p>
	    When a gen_server, gen_fsm process, or gen_event
	    terminates abnormally, sometimes the text representation
	    of the process state can occupy many lines of the error
	    log, depending on the definition of the state term. A
	    mechanism to trim out parts of the state from the log has
	    been added (using a format_status/2 callback). See the
	    documentation.</p>
          <p>
	    Own Id: OTP-8630</p>
        </item>
        <item>
          <p>
	    Calling <c>sys:get_status()</c> for processes that have
	    globally registered names that were not atoms would cause
	    a crash. Corrected. (Thanks to Steve Vinoski.)</p>
          <p>
	    Own Id: OTP-8656</p>
        </item>
        <item>
	    <p>The Erlang scanner has been augmented with two new
	    tokens: <c>..</c> and <c>...</c>.</p>
          <p>
	    Own Id: OTP-8657</p>
        </item>
        <item>
	    <p>Expressions evaluating to integers can now be used in
	    types and function specifications where hitherto only
	    integers were allowed ("Erlang_Integer").</p>
          <p>
	    Own Id: OTP-8664</p>
        </item>
        <item>
	    <p>The compiler optimizes record operations better.</p>
          <p>
	    Own Id: OTP-8668</p>
        </item>
        <item>
          <p>
	    The recently added BIFs erlang:min/2, erlang:max/2 and
	    erlang:port_command/3 are now auto-imported (as they were
	    originally intended to be). Due to the recent compiler
	    change (OTP-8579), the only impact on old code defining
	    it's own min/2, max/2 or port_command/3 functions will be
	    a warning, the local functions will still be used. The
	    warning can be removed by using
	    -compile({no_auto_import,[min/2,max/2,port_command/3]}).
	    in the source file.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-8669 Aux Id: OTP-8579 </p>
        </item>
        <item>
          <p>
	    Now, binary_to_term/2 is auto-imported. This will cause a
	    compile warning if and only if a module has got a local
	    function with that name.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-8671</p>
        </item>
        <item>
          <p>
	    The predefined builtin type tid() has been removed.
	    Instead, ets:tid() should be used.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-8687</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 1.16.5</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Because of a race condition, using filelib:ensure_dir/1
	    from multiple processes to create the same path or parts
	    of the same directory structure, filelib:ensure_dir/1
	    could return a meaningless {error,eexist}. That race
	    condition has been eliminated, and {error,eexist} will
	    now be returned only if there exists a regular file,
	    device file, or some other non-directory file with the
	    same name. (Thanks to Tuncer Ayaz.)</p>
          <p>
	    Own Id: OTP-8389</p>
        </item>
        <item>
	    <p>A number of bugs concerning re and unicode are
	    corrected:</p>
	    <p>re:compile no longer loses unicode option, which also
	    fixes bug in re:split.</p>
	    <p>re:replace now handles unicode charlist replacement
	    argument</p>
	    <p>re:replace now handles unicode RE charlist argument
	    correctly</p>
	    <p>re:replace now handles binary unicode output correctly
	    when nothing is replaced.</p>
	    <p>Most code, testcases and error isolation done by Rory
	    Byrne.</p>
          <p>
	    Own Id: OTP-8394</p>
        </item>
        <item>
          <p>
	    The loading of native code was not properly atomic in the
	    SMP emulator, which could cause crashes. Also a per-MFA
	    information table for the native code has now been
	    protected with a lock since it turns that it could be
	    accessed concurrently in the SMP emulator. (Thanks to
	    Mikael Pettersson.)</p>
          <p>
	    Own Id: OTP-8397</p>
        </item>
        <item>
          <p>
	    user.erl (used in oldshell) is updated to handle unicode
	    in prompt strings (io:get_line/{1,2}). io_lib is also
	    updated to format prompts with the 't' modifier (i.e. ~ts
	    instead of ~s).</p>
          <p>
	    Own Id: OTP-8418 Aux Id: OTP-8393 </p>
        </item>
        <item>
          <p>
	    The re module: A regular expression with an option change
	    at the start of a pattern that had top-level alternatives
	    could cause overwriting and/or a crash. (Thanks to
	    Michael Santos.)</p>
          <p>
	    Own Id: OTP-8438</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    The ability for the gen_server and gen_fsm callback
	    modules to format their own state for display under the
	    sys:get_status/1,2 calls has been restored and
	    documented. (Thanks to Steve Vinoski.)</p>
          <p>
	    Own Id: OTP-8324</p>
        </item>
        <item>
          <p>
	    c:nc/{1,2} used to assume that the beam file was created
	    in the same directory as the source code and failed to
	    load the code if it was not. Corrected to look for the
	    beam file in the current directory or in the directory
	    specified by the <c>{outdir,Dir}</c> option. (Thanks to
	    Alex Suraci.)</p>
          <p>
	    Own Id: OTP-8337</p>
        </item>
        <item>
	    <p>The documentation is now possible to build in an open
	    source environment after a number of bugs are fixed and
	    some features are added in the documentation build
	    process. </p>
	    <p>- The arity calculation is updated.</p>
	    <p>- The module prefix used in the function names for
	    bif's are removed in the generated links so the links
	    will look like
	    "http://www.erlang.org/doc/man/erlang.html#append_element-2"
	    instead of
	    "http://www.erlang.org/doc/man/erlang.html#erlang:append_element-2".</p>
	    <p>- Enhanced the menu positioning in the html
	    documentation when a new page is loaded.</p>
	    <p>- A number of corrections in the generation of man
	    pages (thanks to Sergei Golovan)</p>
	    <p>- The legal notice is taken from the xml book file so
	    OTP's build process can be used for non OTP
	    applications.</p>
          <p>
	    Own Id: OTP-8343</p>
        </item>
        <item>
          <p>
	    Shell tab completion now works for quoted module and
	    function names. (Thanks to Ulf Wiger.)</p>
          <p>
	    Own Id: OTP-8383</p>
        </item>
        <item>
          <p>
	    Explicit top directories in archive files are now
	    optional.</p>
          <p>
	    For example, if an archive (app-vsn.ez) just contains an
	    app-vsn/ebin/mod.beam file, the file info for the app-vsn
	    and app-vsn/ebin directories are faked using the file
	    info from the archive file as origin. The virtual
	    direcories can also be listed. For short, the top
	    directories are virtual if they does not exist.</p>
          <p>
	    Own Id: OTP-8387</p>
        </item>
        <item>
	    <p>Macros overloading has been implemented. (Thanks to
	    Christopher Faulet.)</p>
          <p>
	    Own Id: OTP-8388</p>
        </item>
        <item>
	    <p>The new function <c>shell:prompt_func/1</c> and the
	    new application configuration parameter
	    <c>shell_prompt_func</c> can be used for customizing the
	    Erlang shell prompt.</p>
          <p>
	    Own Id: OTP-8393</p>
        </item>
        <item>
          <p>
	    Improved handling of typed records in escripts</p>
          <p>
	    Own Id: OTP-8434</p>
        </item>
        <item>
          <p>
	    Added supervisor:count_children/1 to count the number of
	    children being managed without the memory impact of
	    which_children/1. (Thanks to Jay Nelson.)</p>
          <p>
	    Own Id: OTP-8436</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 1.16.4</title>

    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    The documentation is now built with open source tools
	    (xsltproc and fop) that exists on most platforms. One
	    visible change is that the frames are removed.</p>
          <p>
	    Own Id: OTP-8201</p>
        </item>
        <item>
          <p>
	    [escript] The restriction that the first line in escripts
	    must begin with <c>#!</c> has been removed.</p>
          <p>
	    [escript] Some command line options to the escript
	    executable has now been documented. For example you can
	    run an escript in the debugger by just adding a command
	    line option.</p>
          <p>
	    [escript] The documentation of the escript header syntax
	    has been clarified. For example the header is optional.
	    This means that it is possible to directly "execute"
	    <c>.erl</c>, <c>.beam</c> and<c>.zip</c> files.</p>
          <p>
	    Own Id: OTP-8215</p>
        </item>
        <item>
	    <p>Optimized array:from_orddict/1, it is now faster and
	    uses less memory if the orddict was sparse.</p>
	    <p>Changed array:reset/2, it will now never expand the
	    array which it could before for non fixed arrays. See the
	    documentation.</p>
          <p>
	    Own Id: OTP-8216</p>
        </item>
        <item>
	    <p>The Erlang Pretty Printer (<c>erl_pp</c>) now puts the
	    leading <c>[</c> of list comprehensions as well as the
	    leading <c>&lt;&lt;</c> of bit string comprehensions on a
	    separate line in order to expose the Cover counter of the
	    template.</p>
          <p>
	    Own Id: OTP-8227</p>
        </item>
        <item>
	    <p>The extension ".xrl" used for Leex input files is now
	    recognized by the compiler.</p>
          <p>
	    Own Id: OTP-8232</p>
        </item>
        <item>
          <p>
	    Some clarifications have been made in the documentation
	    regarding <c>gen_server</c>, <c>gen_fsm</c>, and
	    <c>gen_event</c> behavior when handling <c>'EXIT'</c>
	    messages from the parent process. For more information
	    see the <seeerl
	    marker="gen_server">gen_server(3)</seeerl>, <seeerl
	    marker="gen_fsm">gen_fsm(3)</seeerl>, and <seeerl
	    marker="gen_event">gen_event(3)</seeerl> documentation.</p>
          <p>
	    Own Id: OTP-8255 Aux Id: seq11419 </p>
        </item>
        <item>
	    <p>The -on_load() directive can be used to run a function
	    when a module is loaded. It is documented in the section
	    about code loading in the Reference Manual.</p>
          <p>
	    Own Id: OTP-8295</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 1.16.3.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
            An erroneous type spec for <c>gen:start/6</c> caused
            dialyzer to erroneously issue warnings when
            <c>{spawn_opt, SpawnOptionList}</c> was passed in the
            option list to the <c>gen_server</c> and <c>gen_fsm</c>
            start functions.</p>
          <p>
            Own Id: OTP-8068 Aux Id: seq11323, seq11314 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 1.16.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>The linter used to crash on invalid <c>-opaque</c>
	    declarations.</p>
          <p>
	    Own Id: OTP-8051</p>
        </item>
        <item>
	    <p>Bugs in <c>digraph:add_edge/5</c> and
	    <c>digraph:del_path/3</c> have been fixed. (Thanks to
	    Crystal Din.)</p>
          <p>
	    Own Id: OTP-8066</p>
        </item>
        <item>
	    <p>When trying to insert objects with
	    <c>dets:insert_new()</c> into a Dets table of type
	    <c>duplicate_bag</c>, already existing objects would
	    sometimes be duplicated. This bug has been fixed. (Thanks
	    to Crystal Din.)</p>
          <p>
	    Own Id: OTP-8070</p>
        </item>
        <item>
          <p>
	    Running erlc in a very deep directory (with a path length
	    of more 256 or more characters) would cause the emulator
	    to crash in a call to <c>list_to_atom/1</c>. (Thanks to
	    Chris Newcombe.)</p>
          <p>
	    Own Id: OTP-8124</p>
        </item>
        <item>
	    <p>A few minor bugs have been fixed in the Erlang Code
	    Preprocessor (<c>epp</c>).</p>
          <p>
	    Own Id: OTP-8130</p>
        </item>
        <item>
	    <p>A bug in The Erlang Meta Interpreter (<c>erl_eval</c>)
	    has been fixed: exceptions generated in the template of
	    bit string comprehensions were not handled properly.
	    (Thanks to Ulf Wiger.)</p>
          <p>
	    Own Id: OTP-8133</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Option <c>{capture,none}</c> was missing in documentation
	    for <c>re:run/3</c>.</p>
          <p>
	    Own Id: OTP-8113</p>
        </item>
        <item>
	    <p>When <c>erl_scan:tokens()</c> returns an error tuple
	    <c>{error, ErrorInfo, EndLocation</c>}, the list
	    <c>LeftOverChars</c> is the remaining characters of the
	    input data, starting from <c>EndLocation</c>. It used to
	    be the empty list.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-8129</p>
        </item>
        <item>
	    <p>The Erlang Meta Interpreter (<c>erl_eval</c>) has been
	    somewhat optimized when it comes to interpreting
	    <c>receive</c>-expressions. (Thanks to Richard
	    Carlsson.)</p>
          <p>
	    Own Id: OTP-8139</p>
        </item>
        <item>
	    <p>The Erlang Pretty Printer (<c>erl_pp</c>) has been
	    modified as to handle types.</p>
          <p>
	    Own Id: OTP-8150</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 1.16.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>The text of tokens returned by the Erlang scanner
	    (<c>erl_scan</c>) was sometimes empty when the
	    <c>text</c> option was given and <c>StartLocation</c> was
	    a line. This bug has been fixed.</p>
          <p>
	    Own Id: OTP-7965</p>
        </item>
        <item>
	    <p>The documentation for <c>base64:decode/1</c> has been
	    updated to point out that it strips whitespace.</p>
	    <p><c>base64:decode/1</c> and <c>base64:mime_decode/1</c>
	    would sometimes fail instead of stripping away non-base64
	    characters.</p>
          <p>
	    Own Id: OTP-7984</p>
        </item>
        <item>
          <p>
	    Two types in the <c>gen</c> module were corrected.</p>
          <p>
	    Own Id: OTP-8029 Aux Id: seq11296 </p>
        </item>
        <item>
          <p>
	    <c>array:from_orddict([])</c> and
	    <c>array:from_list([])</c> would construct fixed arrays
	    instead of extendible arrays.</p>
          <p>
	    Own Id: OTP-8033</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Interpreted escripts are now tail recursive.</p>
          <p>
	    The function erl_eval:expr/5 has been introduced.</p>
          <p>
	    Own Id: OTP-7933</p>
        </item>
        <item>
          <p>
	    <c>gen_server:call/2,3</c> will be somewhat faster if the
	    calling process has a many messages in its message queue.</p>
          <p>
	    Own Id: OTP-7979</p>
        </item>
        <item>
          <p>
	    Random now supports seed with arity one,
	    <c>random:seed/1</c>, which takes a three-tuple.</p>
          <p>
	    Own Id: OTP-8019</p>
        </item>
        <item>
	    <p>The <c>regexp</c> module now recognizes the escape
	    sequences <c>\xXY</c> and <c>\x{X...}</c>.</p>
          <p>
	    Own Id: OTP-8024</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 1.16.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>The documentation of <c>dets:open_file/1</c> now
	    states that the file is repaired if it has not been
	    properly closed. (Thanks to Ulf Wiger.)</p>
          <p>
	    Own Id: OTP-7895</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>The Erlang scanner no longer returns the text of
	    tokens when the start location is a pair of a line and
	    column unless the new option <c>text</c> is supplied
	    (incompatibility with R13A).</p> <p>There are new
	    functions to access the attributes of tokens:
	    <c>attributes_info/1,2</c> and
	    <c>set_attribute/3</c>.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-7892 Aux Id: OTP-7810 </p>
        </item>
        <item>
          <p>
	    Several glitches and performance issues in the Unicode
	    and I/O-system implementation of R13A have been
	    corrected.</p>
          <p>
	    Own Id: OTP-7896 Aux Id: OTP-7648 OTP-7887 </p>
        </item>
        <item>
          <p>
	    The type spec of filelib:wildcard/2 has been corrected.</p>
          <p>
	    Own Id: OTP-7915</p>
        </item>
        <item>
	    <p>New functions: <c>gb_sets:is_disjoint/2</c>,
	    <c>ordsets:is_disjoint/2</c>, and
	    <c>gb_sets:is_disjoint/2</c>.</p>
          <p>
	    Own Id: OTP-7947</p>
        </item>
        <item>
	    <p>The function <c>gb_trees:map/2</c> which was added in
	    R13A is now documented.</p>
          <p>
	    Own Id: OTP-7948</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 1.16</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a minor race conditions in
	    <c>gen_server:start*</c>: if one of these functions
	    returned <c>{error,Reason}</c> or <c>ignore</c>, the name
	    could still be registered (either locally or in
	    <c>global</c>).</p>
	    <p>A process started by <c>proc_lib</c> in some cases
	    depended on its process dictionary not to be erased, and
	    would crash when terminating abnormally and not generate
	    a proper crash report. This has been corrected (but the
	    initial call will not be shown in the error report if the
	    process dictionary has been erased). NOTE: There is no
	    longer any need to erase the process dictionary for
	    memory conservation reasons, since the actual call
	    arguments are no longer saved in the process
	    dictionary.</p>
          <p>
	    Own Id: OTP-7669</p>
        </item>
        <item>
	    <p>The Erlang preprocessor used wrong line number when
	    stringifying macro arguments. (Thanks to John
	    Hughes.)</p>
          <p>
	    Own Id: OTP-7702</p>
        </item>
        <item>
	    <p>A bug in the <c>qlc</c> module has been fixed: merge
	    join sometimes failed to return all answers. (Thanks to
	    Bernard Duggan.)</p>
          <p>
	    Own Id: OTP-7714</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>A new option, <c>key_equality</c>, has been added to
	    <c>qlc:table/2</c>. This option makes it possible for
	    <c>qlc</c> to better handle tables that use <c>==/2</c>
	    when comparing keys for equality (examples of such tables
	    are ordered ETS tables and gb_table in qlc(3)).</p>
          <p>
	    Own Id: OTP-6674</p>
        </item>
        <item>
	    <p>The functions <c>lists:seq/1,2</c> return the empty
	    list in a few cases when they used to generate an
	    exception, for example <c>lists:seq(1, 0)</c>. See
	    lists(3) for details. (Thanks to Richard O'Keefe.)</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-7230</p>
        </item>
        <item>
          <p>
	    The order of objects visited in select for ordered_set is
	    now documented.</p>
          <p>
	    Own Id: OTP-7339</p>
        </item>
        <item>
          <p>
	    It is now possible to debug code in escripts and
	    archives.</p>
          <p>
	    Own Id: OTP-7626</p>
        </item>
        <item>
	    <p>Support for Unicode is implemented as described in
	    EEP10. Formatting and reading of unicode data both from
	    terminals and files is supported by the io and io_lib
	    modules. Files can be opened in modes with automatic
	    translation to and from different unicode formats. The
	    module 'unicode' contains functions for conversion
	    between external and internal unicode formats and the re
	    module has support for unicode data. There is also
	    language syntax for specifying string and character data
	    beyond the ISO-latin-1 range.</p>
	    <p>The interactive shell will support input and output of
	    unicode characters when the terminal and operating system
	    supports it.</p>
	    <p>Please see the EEP and the io/io_lib manual pages as
	    well as the stdlib users guide for details.</p>
	    <p><em>I/O-protocol incompatibilities:</em></p>
	    <p>The io_protocol between io_Server and client is
	    updated to handle protocol data in unicode formats. The
	    updated protocol is now documented. The specification
	    resides in the stdlib <em>users manual</em>, which is a
	    new part of the manual.</p>
	    <p><em>io module incompatibilities:</em></p>
	    <p>The io:put_chars, io:get_chars and io:get_line all
	    handle and return unicode data. In the case where
	    binaries can be provided (as to io:put_chars), they shall
	    be encoded in UTF-8. When binaries are returned (as by
	    io:get_line/get_chars when the io_server is set in
	    <em>binary mode</em>) the returned data is also
	    <em>always</em> encoded as UTF-8. The file module however
	    still returns byte-oriented data, why file:read can be
	    used instead of io:get_chars to read binary data in
	    ISO-latin-1.</p>
	    <p><em>io_lib module incompatibilities:</em></p>
	    <p>io_lib:format can, given new format directives (i.e
	    "~ts" and "~tc"), return lists containing integers larger
	    than 255. </p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-7648 Aux Id: OTP-7580 OTP-7514 OTP-7494
	    OTP-7443 OTP-7181 EEP10 EEP11 </p>
        </item>
        <item>
          <p>
	    The function <c>pool:attach/1</c> now returns
	    <c>already_attached</c> if the node is already attached,
	    rather than <c>allready_attached</c> (sic!). (Thanks to
	    Edwin Fine.)</p>
          <p>
	    Own Id: OTP-7653 Aux Id: OTP-7603 </p>
        </item>
        <item>
          <p>
	    Preprocessor directives are now allowed in escripts. This
	    means that for example macros may be used in escripts.</p>
          <p>
	    Own Id: OTP-7662</p>
        </item>
        <item>
	    <p>When a process started with <c>proc_lib</c>,
	    <c>gen_server</c>, or <c>gen_fsm</c> exits with reason
	    <c>{shutdown,Term}</c>, a crash report will no longer be
	    generated (to allow a clean shutdown, but still provide
	    additional information to process that are linked to the
	    terminating process).</p>
          <p>
	    Own Id: OTP-7740 Aux Id: seq10847 </p>
        </item>
        <item>
          <p>
	    A new BIF, <c>lists:keyfind/3</c>, has been added. It
	    works like <c>lists:keysearch/3</c> except that it does
	    not wrap the returned tuple in a <c>value</c> tuple in
	    case of success. (Thanks to James Hague for suggesting
	    this function.)</p>
          <p>
	    Own Id: OTP-7752</p>
        </item>
        <item>
	    <p><c>lists:suffix(Suffix, List)</c> used to have a a
	    complexity of <c>length(Suffix)*length(List)</c> (which
	    could become quite slow for some inputs). It has now been
	    re-implemented so that its complexity is
	    <c>length(Suffix)+length(List)</c>. (Thanks to Richard
	    O'Keefe for the new implementation.)</p>
          <p>
	    Own Id: OTP-7797</p>
        </item>
        <item>
	    <p>The Erlang scanner has been augmented as to return
	    white spaces, comments, and exact location of tokens. The
	    functions <c>string/3</c>, <c>tokens/4</c>, and
	    <c>token_info/1,2</c> are new. See erl_scan(3) for
	    details.</p>
	    <p><c>tokens/3,4</c> have been modified as to return a
	    list of tokens instead of an error when <c>eof</c> is
	    encountered before the dot.</p>
          <p>
	    Own Id: OTP-7810</p>
        </item>
        <item>
          <p>
	    <c>filelib:fold_files/5</c> now uses the <c>re</c> module
	    instead of the <c>regexp</c> module for regular
	    expression matching. In practice, this change will not be
	    a problem for most regular expressions used for
	    <c>filelib:fold_files/5</c>. (The major difference in
	    regular expression is that parenthesis and curly brackets
	    is treated as literal characters by <c>regexp</c> but as
	    special characters by <c>re</c>; fortunately, those
	    characters are rarely used in filenames.)</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-7819</p>
        </item>
        <item>
          <p>
	    <c>digraph:new(Type)</c> will now cause a <c>badarg</c>
	    exception if <c>Type</c> is not a valid type. Similarly,
	    <c>digraph_utils:subgraph/2,3</c> will now cause a
	    <c>badarg</c> if the arguments are invalid. (Those
	    functions used to return error tuples if something was
	    wrong.)</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-7824</p>
        </item>
        <item>
	    <p>The argument passed to <c>random:uniform/1</c> must
	    now be an integer (as stated in the documentation). In
	    previous releases, a floating point number was also
	    allowed.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-7827</p>
        </item>
        <item>
	    <p>The copyright notices have been updated.</p>
          <p>
	    Own Id: OTP-7851</p>
        </item>
        <item>
	    <p>A few missing match spec functions was added to
	    dbg:fun2ms; exception_trace/0 and trace/2,3.</p>
	    <p>There is a new function queue:member/2.</p>
	    <p>A bug in io_lib:fread that made it accidentally
	    concatenate fields separated by newline has been
	    corrected. Reported and analyzed by Matthew Palmer to
	    erlang-patches.</p>
          <p>
	    Own Id: OTP-7865</p>
        </item>
      </list>
    </section>

</section>


<section><title>STDLIB 1.15.5</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>A bug in the <c>qlc</c> module has been fixed: when
	    merge joining two query handles the temporary file used
	    for equivalence classes was not truncated properly which
	    could result in poor performance.</p>
          <p>
	    Own Id: OTP-7552</p>
        </item>
        <item>
          <p>
	    The characters 16#C0 and 16#E0 ("A" and "a" with grave
	    accent), were not properly converted by the
	    <c>string:to_lower/1</c> and <c>string:to_upper/1</c>
	    functions. (Thanks to Richard O'Keefe.)</p>
          <p>
	    Own Id: OTP-7589</p>
        </item>
        <item>
          <p>
	    The function <c>pool:attach/1</c> now returns
	    <c>already_attached</c> if the node is already attached,
	    rather than <c>allready_attached</c> (sic!). (Thanks to
	    Edwin Fine.)</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-7603</p>
        </item>
        <item>
	    <p>The documentation for <c>io:get_line/1,2</c> now
	    mentions that the return value can also be
	    <c>{error,Reason}</c>.</p>
          <p>
	    Own Id: OTP-7604 Aux Id: seq11063 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    The split function is now added to the re library.
	    Exceptions and errors from both run, replace and split
	    are made more consistent.</p>
          <p>
	    Own Id: OTP-7514 Aux Id: OTP-7494 </p>
        </item>
        <item>
	    <p>Processes spawned using <c>proc_lib</c> (including
	    <c>gen_server</c> and other library modules that use
	    <c>proc_lib</c>) no longer keep the entire argument list
	    for the initial call, but only the arity.</p>
	    <p>Also, if <c>proc_lib:spawn/1</c> is used to spawn a
	    fun, the actual fun is not kept, but only module,
	    function name, and arity of the function that implements
	    the fun.</p>
	    <p>The reason for the change is that keeping the initial
	    fun (or a fun in an argument list), would prevent
	    upgrading the code for the module. A secondary reason is
	    that keeping the fun and function arguments could waste a
	    significant amount of memory.</p>
	    <p>The drawback with the change is that the crash reports
	    will provide less precise information about the initial
	    call (only <c>Module:Function/Arity</c> instead of
	    <c>Module:Function(Arguments)</c>). The function
	    <c>proc_lib:initial_call/1</c> still returns a list, but
	    each argument has been replaced with a dummy atom.</p>
          <p>
	    Own Id: OTP-7531 Aux Id: seq11036 </p>
        </item>
        <item>
          <p>
	    There is now experimental support for loading of code
	    from archive files. See the documentation of <c>code</c>,
	    <c>init</c>, <c>erl_prim_loader </c> and <c>escript</c>
	    for more info.</p>
          <p>
	    The error handling of <c>escripts</c> has been improved.</p>
          <p>
	    An <c>escript</c> may now set explicit arguments to the
	    emulator, such as <c>-smp enabled</c>.</p>
          <p>
	    An <c>escript</c> may now contain a precompiled beam
	    file.</p>
          <p>
	    An <c>escript</c> may now contain an archive file
	    containing one or more applications (experimental).</p>
          <p>
	    The internal module <c>code_aux</c> has been removed.</p>
          <p>
	    Own Id: OTP-7548 Aux Id: otp-6622 </p>
        </item>
        <item>
          <p>
	    Enabled explicit control of which types of files that
	    should be compressed in a ZIP archive.</p>
          <p>
	    Own Id: OTP-7549 Aux Id: otp-6622 </p>
        </item>
        <item>
          <p>
	    In the job control mode, the "s" and "r" commands now
	    take an optional argument to specify which shell to
	    start. (Thanks to Robert Virding.)</p>
          <p>
	    Own Id: OTP-7617</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 1.15.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A bug in the calendar module could cause
	    calendar:local_time_to_universal_time_dst/1 to return
	    duplicate identical values for local times in timezones
	    without DST. Multiple values should only be returned when
	    a local time is within the hour occurring twice due to
	    shift from DST to non-DST, and certainly only in
	    timezones with DST. The correct behaviour is now
	    implemented.</p>
          <p>
	    Own Id: OTP-7344 Aux Id: seq10960 </p>
        </item>
        <item>
	    <p>The documentation of <c>(d)ets:init_table()</c> has
	    been corrected. (Thanks to Paul Mineiro.)</p>
          <p>
	    Own Id: OTP-7413</p>
        </item>
        <item>
	    <p>The soft upper limit of 60 on the number of non-white
	    characters on a line, which was introduced in R12B-0 for
	    the control sequences <c>p</c> and <c>P</c> of the
	    functions <c>io:fwrite/2,3</c> and
	    <c>io_lib:fwrite/2</c>, has been removed. This means that
	    terms whose printed representation fits on a line will
	    have no NEWLINEs. The Erlang shell still uses the 60
	    character limit, though.</p>
          <p>
	    Own Id: OTP-7421 Aux Id: OTP-6708 </p>
        </item>
        <item>
	    <p>Some debug code has been removed from Dets.</p>
          <p>
	    Own Id: OTP-7424</p>
        </item>
        <item>
	    <p>The documentation of <c>dets:match_delete/2</c> has
	    been corrected. (Thanks to Paul Mineiro.)</p>
          <p>
	    Own Id: OTP-7445</p>
        </item>
        <item>
	    <p>Corrections of digraph(3). (Thanks to Vlad
	    Dumitrescu.)</p>
          <p>
	    Own Id: OTP-7492</p>
        </item>
        <item>
          <p>
	    For the process that an escript runs in, the
	    <c>trap_exit</c> process flag is now <c>false</c> instead
	    of <c>true</c> (as in previous releases). Scripts that
	    depend on the previous (counter-intuitive) behaviour
	    might not work. (Thanks to Bengt Kleberg.)</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-7517</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>The documentation of <c>lists:(u)sort/2</c> now states
	    what is expected of an ordering function.</p>
          <p>
	    Own Id: OTP-7489</p>
        </item>
        <item>
          <p>
	    The re module is extended with repetitive matches (global
	    option) and replacement function.</p>
          <p>
	    Own Id: OTP-7494 Aux Id: OTP-7181 </p>
        </item>
        <item>
	    <p>The Erlang shell now displays a nicer error message
	    when evaluating an undefined command. (Thanks to Richard
	    Carlsson.)</p>
          <p>
	    Own Id: OTP-7495</p>
        </item>
      </list>
    </section>

</section>


<section><title>STDLIB 1.15.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    zip:unzip to/from binary with empty directories did not
	    work. (Thanks to Martin Dvorak.)</p>
          <p>
	    Own Id: OTP-7248</p>
        </item>
        <item>
	    <p>The documentation of the control sequence <c>w</c> of
	    the <c>io_lib</c> module now states that floating point
	    numbers are printed accurately.</p>
          <p>
	    Own Id: OTP-7324 Aux Id: OTP-7084 </p>
        </item>
        <item>
          <p>
	    zip:unzip was not supporting a flavour of the zip format
	    found in jar-files.</p>
          <p>
	    Own Id: OTP-7382 Aux Id: seq10970 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    An experimental module "re" is added to the emulator
	    which interfaces a publicly available regular expression
	    library for Perl-like regular expressions (PCRE). The
	    interface is purely experimental and *will* be subject to
	    change.</p>
          <p>
	    The implementation is for reference and testing in
	    connection to the relevant EEP.</p>
          <p>
	    Own Id: OTP-7181</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 1.15.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p> When inserting many small objects, Dets sometimes
	    crashed when reaching the maximum number of slots.
	    (Thanks to Daniel Goertzen.) </p>
          <p>
	    Own Id: OTP-7146</p>
        </item>
        <item>
	    <p>Processes linked to the Erlang shell did not get an
	    exit signal when the evaluator process was killed. This
	    bug, introduced in R12B-0, has been fixed.</p>
          <p>
	    Own Id: OTP-7184 Aux Id: OTP-6554 </p>
        </item>
        <item>
          <p>
	    Invalid arguments to <c>ets:update_counter/3</c> were not
	    handled correctly. A tuple position (<c>Pos</c>) less
	    than 1 caused the element directly following the key to
	    be updated (as if no position at all had been specified).
	    All invalid values for <c>Pos</c> will now fail with
	    <c>badarg</c>.</p>
          <p>
	    Own Id: OTP-7226</p>
        </item>
        <item>
          <p>
	    For certain terminals, io:columns/0 could return 0
	    instead of enotsup. That is now corrected.</p>
          <p>
	    Own Id: OTP-7229 Aux Id: seq10886 </p>
        </item>
        <item>
	    <p><c>qlc:info()</c> can now handle port identifiers,
	    pids, references, and funs. (Thanks to Wojciech Kaczmare
	    for reporting this bug.)</p> <p>When evaluating the
	    <c>parent_fun</c> messages sent to the process calling
	    <c>qlc:cursor()</c> were sometimes erroneously consumed.
	    This bug has been fixed.</p>
          <p>
	    Own Id: OTP-7232</p>
        </item>
        <item>
	    <p><c>erl_parse:abstract()</c> can now handle bit
	    strings.</p>
          <p>
	    Own Id: OTP-7234</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>The <c>queue</c> module has been rewritten to make it
	    easier to use. Suggestions and discussion from and with
	    among others Lev Walkin, Anders Ramsell and Rober Virding
	    in december 2007 on erlang-questions@erlang.org. It was
	    also discussed to change the internal representation to
	    contain length information which would speed up
	    <c>len/1</c> but that change has been postponed. Anyone
	    interested may write an EEP and try to reach an
	    acceptable compromise for queue overhead and thereby the
	    speed of all other operations than <c>len/1</c>. The
	    <c>queue</c> module is now optimized for fast and minimal
	    garbage <c>in/2</c> and <c>out/1</c> and such. See the
	    documentation.</p>
	    <p>New functions: <c>is_queue/1</c>, <c>get/1</c>,
	    <c>get_r/1</c>, <c>peek/1</c>, <c>peek_r/1</c>,
	    <c>drop/1</c>, <c>drop_r/1</c> and <c>liat/1</c>.
	    <c>is_queue/1</c> is a new predicate, <c>liat/1</c> is a
	    correction of an old misspelling, and the others
	    (<c>get</c>*, <c>peek</c>* and <c>drop</c>*) are new
	    interface functions.</p>
          <p>
	    Own Id: OTP-7064</p>
        </item>
        <item>
	    <p>The functions <c>io_lib:write/1,2</c> and
	    <c>io_lib:print/1,4</c> have been changed when it comes
	    to writing floating point numbers. This change affects
	    the control sequences <c>p</c>, <c>P</c>, <c>w</c>, and
	    <c>W</c> of the <c>io_lib</c> module. (Thanks to Bob
	    Ippolito for code contribution.) </p>
          <p>
	    Own Id: OTP-7084</p>
        </item>
        <item>
          <p>
	    Updated the documentation for
	    <c>erlang:function_exported/3</c> and <c>io:format/2</c>
	    functions to no longer state that those functions are
	    kept mainly for backwards compatibility.</p>
          <p>
	    Own Id: OTP-7186</p>
        </item>
        <item>
          <p>
	    A new BIF ets:update_element/3. To update individual
	    elements within an ets-tuple, without having to read,
	    update and write back the entire tuple.</p>
          <p>
	    Own Id: OTP-7200</p>
        </item>
        <item>
	    <p><c>string:join/2</c> now accepts an empty list as
	    first argument.</p>
          <p>
	    Own Id: OTP-7231 Aux Id: OTP-6671 </p>
        </item>
        <item>
	    <p><c>qlc:info/1,2</c> accepts a new option,
	    <c>depth</c>. The type <c>SelectedObjects</c> used in the
	    description of <c>qlc:table/2</c> has been augmented.</p>
          <p>
	    Own Id: OTP-7238</p>
        </item>
        <item>
	    <p><c>tuple_size/1</c> and <c>byte_size/1</c> have been
	    substituted for <c>size/1</c> in the documentation.</p>
          <p>
	    Own Id: OTP-7244</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 1.15.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Ets:select/3 in combination with
	    ets:repair_continuation/2 and ordered_set data tables
	    could result in function_clause although used as
	    intended. This is now corrected. Thanks to Paul Mineiro
	    for finding and isolating the bug!</p>
          <p>
	    Own Id: OTP-7025</p>
        </item>
        <item>
	    <p>The compiler warning for the deprecated function
	    <c>ftp:close/1</c> now mentions the correct replacement
	    function.</p>
	    <p>The warning for the removed functions in the
	    <c>httpd_util</c> module have been changed to say they
	    have been removed, not merely deprecated. (Thanks to
	    Fredrik Thulin.)</p>
          <p>
	    Own Id: OTP-7034 Aux Id: seq10825 </p>
        </item>
        <item>
	    <p>In <c>(Expr)#r{}</c> (no fields are updated),
	    <c>Expr</c> is no longer evaluated more than once. There
	    is also a test that <c>Expr</c> is of the correct record
	    type. (Thanks to Dominic Williams.)</p>
          <p>
	    Own Id: OTP-7078 Aux Id: OTP-4962 </p>
        </item>
        <item>
	    <p>Documentation bugfixes and clarifications.</p> (Thanks
	    to Joern (opendev@gmail.com), Matthias Lang, and Richard
	    Carlsson.)
          <p>
	    Own Id: OTP-7079</p>
        </item>
        <item>
	    <p>Duplicated objects were sometimes not deleted from the
	    list of answers when a QLC table was traversed using a
	    match specification. (Thanks to Dmitri Girenko.)</p>
          <p>
	    Own Id: OTP-7114</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>The documentation has been updated so as to reflect
	    the last updates of the Erlang shell as well as the minor
	    modifications of the control sequence <c>p</c> of the
	    <c>io_lib</c> module.</p> <p>Superfluous empty lines have
	    been removed from code examples and from Erlang shell
	    examples.</p>
          <p>
	    Own Id: OTP-6944 Aux Id: OTP-6554, OTP-6911 </p>
        </item>
        <item>
	    <p><c>tuple_size/1</c> and <c>byte_size/1</c> have been
	    substituted for <c>size/1</c>.</p>
          <p>
	    Own Id: OTP-7009</p>
        </item>
        <item>
          <p>
	    It is now possible to hibernate a
	    gen_server/gen_event/gen_fsm. In gen_server and gen_fsm,
	    hibernation is triggered by returning the atom
	    'hibernate' instead of a timeout value. In the gen_event
	    case hibernation is triggered by a event handler
	    returning a tuple with an extra element containing the
	    atom 'hibernate'.</p>
          <p>
	    Own Id: OTP-7026 Aux Id: seq10817 </p>
        </item>
        <item>
	    <p>Some undocumented debug functionality has been added
	    to Dets.</p>
          <p>
	    Own Id: OTP-7066</p>
        </item>
        <item>
	    <p>The functions <c>digraph_utils:is_tree/1</c>,
	    <c>digraph_utils:is_arborescence/1</c>, and
	    <c>digraph_utils:arborescence_root/1</c> are new.</p>
          <p>
	    Own Id: OTP-7081</p>
        </item>
        <item>
          <p>
	    The compiler could generate suboptimal code for record
	    updates if the record update code consisted of multiple
	    source code lines.</p>
          <p>
	    Own Id: OTP-7101</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 1.15</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Bugs have been fixed in <c>qlc</c>:</p> <list
	    type="bulleted"> <item>Setting the <c>lookup_fun</c>
	    option of <c>qlc:table/2</c> to <c>undefined</c> could
	    cause a crash.</item> <item>If a QLC restricted some
	    column of a table in such a way that a traversal using a
	    match specification was possible and the QLC also
	    compared the key column or some indexed column of the the
	    table with a column of some other table, <c>qlc</c>
	    always chose to traverse the table first, never
	    considering lookup join. This has been changed so that
	    lookup join is always preferred; if an initial traversal
	    using the match specification is desired, the query needs
	    to be rewritten introducing an extra QLC with the
	    filter(s) restricting the column.</item> <item>When
	    trying to find candidates for match specifications and
	    lookup, filters using variables from one generator only
	    are ignored unless they are placed immediately after the
	    generator and possibly other filters using variables from
	    the same generator. In particular, filters joining two
	    tables should not be placed between the generator and the
	    filters using the generator only.</item> <item>The
	    call-back function <c>TraverseFun</c> used for
	    implementing QLC tables is allowed to return a term other
	    than a list since STDLIB 1.14 (OTP-5195). However, when
	    the returned term was a fun <c>qlc</c> often tried to
	    call the fun instead of returning it.</item> </list> <p>A
	    few minor optimizations have been implemented as
	    well.</p>
          <p>
	    Own Id: OTP-6673</p>
        </item>
        <item>
	    <p>A bug concerning the use of parameterized modules from
	    the shell has been fixed.</p>
          <p>
	    Own Id: OTP-6785</p>
        </item>
        <item>
	    <p>A bug regarding the size expression of the bit syntax
	    has been fixed in the <c>erl_eval</c> module.</p>
          <p>
	    Own Id: OTP-6787</p>
        </item>
        <item>
          <p>
	    The log_mf_h event handler didn't close the index file
	    when it was done reading it causing a file descriptor
	    leak.</p>
          <p>
	    Own Id: OTP-6800</p>
        </item>
        <item>
          <p>
	    Definitions for the <c>filename()</c> and
	    <c>dirname()</c> types have been added to the
	    documentation for the <c>filelib</c> module.</p>
          <p>
	    Own Id: OTP-6870</p>
        </item>
        <item>
	    <p>file:write_file/3, file:write/2 and file:read/2 could
	    crash (contrary to documentation) for odd enough file
	    system problems, e.g write to full file system. This bug
	    has now been corrected.</p> <p>In this process the file
	    module has been rewritten to produce better error codes.
	    Posix error codes now originate from the OS file system
	    calls or are generated only for very similar causes (for
	    example 'enomem' is generated if a memory allocation
	    fails, and 'einval' is generated if the file handle in
	    Erlang is a file handle but currently invalid).</p>
	    <p>More Erlang-ish error codes are now generated. For
	    example <c>{error,badarg}</c> is now returned from
	    <c>file:close/1</c> if the argument is not of a file
	    handle type. See file(3).</p> <p>The possibility to write
	    a single byte using <c>file:write/2</c> instead of a list
	    or binary of one byte, contradictory to the
	    documentation, has been removed.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-6967 Aux Id: OTP-6597 OTP-6291 </p>
        </item>
        <item>
	    <p>A bug concerning the evaluation of the <c>++/2</c>
	    operator has been fixed in <c>erl_eval</c>. (Thanks to
	    Matthew Dempsky.)</p>
          <p>
	    Own Id: OTP-6977</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>The behaviour of the internal functions gen:call/3,4
	    has been changed slightly in the rare case that when the
	    caller was linked to the called server, and the server
	    crashed during the call; its exit signal was consumed by
	    the gen:call/3,4 code and converted to an exit exception.
	    This exit signal is no longer consumed.</p>
	    <p>To even notice this change, 1) the calling process has
	    to be linked to the called server.</p>
          <p>
	    2) the call must not be remote by name that is it must be
	    local or remote by pid, local by name or global by name.</p>
          <p>
	    3) the calling process has to have set
	    <c>process_flag(trap_exit, true)</c>.</p>
          <p>
	    4) the server has to crash during the call.</p>
          <p>
	    5) the calling process has to be sensitive to getting
	    previously consumed <c>{'EXIT',Pid,Reason}</c> messages
	    in its message queue.</p>
	    <p>The old behaviour was once the only way for a client
	    to notice if the server died, but has since
	    <c>erlang:monitor(process, {Name,Node})</c> was
	    introduced and used in gen:call been regarded as an
	    undesired behaviour if not a bug.</p>
	    <p>The affected user APIs are:
	    <c>gen_server:call/2,3</c>,
	    <c>gen_fsm:sync_send_event/2,3</c>,
	    <c>gen_fsm:sync_send_all_state_event/2,3</c>,
	    <c>gen_event:_</c>, <c>sys:_</c> and maybe a few others
	    that hardly will be noticed.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-3954 Aux Id: Seq 4538 </p>
        </item>
        <item>
	    <p>When an exception occurs the Erlang shell now displays
	    the class, the reason, and the stacktrace in a clearer
	    way (rather than dumping the raw EXIT tuples as before).
	    <c>proc_lib:format/1</c> displays the exception of crash
	    reports in the same clearer way.</p> <p>The new shell
	    command <c>catch_exception</c> and the new application
	    configuration parameter <c>shell_catch_exception</c> can
	    be used for catching exceptions that would normally exit
	    the Erlang shell.</p>
          <p>
	    Own Id: OTP-6554 Aux Id: OTP-6289 </p>
        </item>
        <item>
	    <p>The function <c>string:join/2</c> joins strings in a
	    list with a separator. Example: '<c>string:join(["a",
	    "b", "c"], ", ") gives "a, b, c"</c>'</p>
          <p>
	    Own Id: OTP-6671</p>
        </item>
        <item>
	    <p>The control sequence <c>P</c> of the <c>Format</c>
	    argument of the functions <c>io:fwrite/2,3</c> and
	    <c>io_lib:fwrite/2</c> now inserts fewer line breaks when
	    printing tuples and lists. A soft upper limit of 60 on
	    the number of non-white characters on a line has been
	    introduced.</p>
          <p>
	    Own Id: OTP-6708</p>
        </item>
        <item>
          <p>
	    The new module <c>array</c> provides a fast functional
	    array implementation.</p>
          <p>
	    Own Id: OTP-6733</p>
        </item>
        <item>
	    <p>Functions that have long been deprecated have now been
	    removed from the following modules: <c>dict</c>,
	    <c>erl_eval</c>, <c>erl_pp</c>, <c>io</c>, <c>io_lib</c>,
	    <c>lists</c>, <c>orddict</c>, <c>ordsets</c>,
	    <c>sets</c>, and <c>string</c>.</p>
	    <p>The undocumented function <c>lists:zf/3</c> has also
	    been removed (use a list comprehension or
	    <c>lists:zf/2</c> instead).</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-6845</p>
        </item>
        <item>
          <p>
	    Minor documentation corrections for file:pread/2 and
	    file:pread/3.</p>
          <p>
	    Own Id: OTP-6853</p>
        </item>
        <item>
          <p>
	    Contract directives for modules in Kernel and STDLIB.</p>
          <p>
	    Own Id: OTP-6895</p>
        </item>
        <item>
	    <p>The <c>ets:fixtable/2</c> function, which has been
	    deprecated for several releases, has been removed.</p>
	    <p>The <c>ets:info/1</c> function has been reimplemented
	    as a BIF, which guarantees that information returned is
	    consistent.</p>
	    <p>The <c>ets:info/2</c> function now fails with reason
	    <c>badarg</c> if the second argument is invalid.
	    (Dialyzer can be used to find buggy code where the second
	    argument is misspelled.)</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-6906</p>
        </item>
        <item>
	    <p>The Erlang pretty printer <c>erl_pp</c> now inserts
	    more newlines in order to facilitate line coverage
	    analysis by <c>Cover</c>. (Thanks to Thomas Arts.)</p>
          <p>
	    Own Id: OTP-6911</p>
        </item>
        <item>
          <p>
	    The documentation for ets:safe_fixtable/2, ets:foldl/3,
	    and ets:foldr/3 is now clearer about what will happen if
	    objects are inserted during table traversals.</p>
          <p>
	    Own Id: OTP-6928 Aux Id: seq10779 </p>
        </item>
        <item>
          <p>
	    It is now possible to extract files in tar files directly
	    into binaries. It is also possible to add files to tar
	    files directly from binaries.</p>
          <p>
	    Own Id: OTP-6943</p>
        </item>
        <item>
	    <p>The functions <c>keystore/4</c> and <c>keytake/3</c>
	    are new in the <c>lists</c> module.</p>
          <p>
	    Own Id: OTP-6953</p>
        </item>
        <item>
	    <p>The new <c>qlc</c> option <c>tmpdir_usage</c> can be
	    used for outputting messages onto the error logger when a
	    temporary file is about to be created, or to prohibit the
	    usage of temporary files altogether.</p>
          <p>
	    Own Id: OTP-6964</p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 1.14.5.3</title>

    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    The allowed syntax for -type() and -spec() was updated.</p>
          <p>
	    Own Id: OTP-6861 Aux Id: OTP-6834 </p>
        </item>
      </list>
    </section>

</section>

<section><title>STDLIB 1.14.5.2</title>

    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
            The compiler will for forward compatibility ignore the
            -type() and -spec() attributes that will be introduced in
            the R12B release.</p>
          <p>
            Own Id: OTP-6834</p>
        </item>
      </list>
    </section>

</section>
<section><title>STDLIB 1.14.5.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The log_mf_h event handler didn't close the index file
	    when it was done reading it causing a file descriptor
	    leak.</p>
          <p>
	    Own Id: OTP-6800</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    The dict:size/1 and orddict:size/1 functions have been
	    documented.</p>
          <p>
	    Own Id: OTP-6818</p>
        </item>
      </list>
    </section>

</section>

  <section>
    <title>STDLIB 1.14.5</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>Bugs have been fixed in Dets concerning comparison
            (==) and matching (=:=).</p>
          <p>The STDLIB manual pages
            have been updated as to more carefully state when terms
            are matched and when they are compared.</p>
          <p>Own Id: OTP-4738 Aux Id: OTP-4685 </p>
        </item>
        <item>
          <p>The shell has been updated to fix the following flaws:
            Shell process exit left you with an unresponsive initial
            shell if not using oldshell. Starting a restricted shell
            with a nonexisting callback module resulted in a shell
            where no commands could be used, not even init:stop/0.
            Fun's could not be used as parameters to local shell
            functions (in shell_default or user_default) when
            restricted_shell was active.</p>
          <p>Own Id: OTP-6537</p>
        </item>
        <item>
          <p>A bug in QLC's parse transform has been fixed.</p>
          <p>Own Id: OTP-6590</p>
        </item>
        <item>
          <p>A bug concerning <c>lists:sort/1</c> and
            <c>lists:keysort/2</c> and a mix of floating point
            numbers and integers has been fixed.</p>
          <p>Own Id: OTP-6606</p>
        </item>
        <item>
          <p>When calling <c>erlang:garbage_collect/0</c> in the
            Erlang shell not only the evaluator process (the one
            returned by calling <c>self()</c> in the Erlang shell) is
            garbage collected, but also the process holding the
            history list.</p>
          <p>Own Id: OTP-6659</p>
        </item>
        <item>
          <p>Functions of the <c>beam_lib</c> module that used to
            catch exceptions and return a tuple
            <c>{'EXIT',Reason}</c> now exit with the reason
            <c>Reason</c>.</p>
          <p>Own Id: OTP-6711</p>
        </item>
        <item>
          <p>The <c>erl_eval</c> module now calls the non-local
            function handler whenever an operator is evaluated
            (exceptions are <c>andalso</c>, <c>orelse</c>, and
            <c>catch</c>). The non-local function handler is now also
            called when the function or operator occurs in a guard
            test (such calls used to be ignored).</p>
          <p>These changes affect the Erlang shell when running in
            restricted mode: the callback function
            <c>non_local_allowed/3</c> is now called for operators
            such as <c>'!'/2</c>. This means that
            <c>non_local_allowed/3</c> may need to be changed as to
            let operators through. Note that <c>erlang:'!'/2</c> as
            well as <c>erlang:send/2,3</c> have to be restricted in
            order to stop message passing in the shell.</p>
          <p>*** POTENTIAL INCOMPATIBILITY ***</p>
          <p>Own Id: OTP-6714 Aux Id: seq10374 </p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>The new compiler option <c>warn_obsolete_guard</c> can
            be used for turning on warnings for calls to old type
            testing BIFs.</p>
          <p>Own Id: OTP-6585</p>
        </item>
        <item>
          <p>For scripts written using <c>escript</c>, there is a new
            function <c>escript:script_name/0</c>, which can be used
            to retrieve the pathame of the script. The documentation
            has been clarified regarding pre-defined macros such as
            ?MODULE and the module name.</p>
          <p>Own Id: OTP-6593</p>
        </item>
        <item>
          <p>Minor Makefile changes.</p>
          <p>Own Id: OTP-6689 Aux Id: OTP-6742 </p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>STDLIB 1.14.4</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>The MD5 calculation of a BEAM file done by
            <c>code:module_md5/1</c>, <c>beam_lib:md5/1</c>, and by
            the compiler for the default value of the <c>vsn</c>
            attribute have all been changed so that its result will
            be the same on all platforms; modules containing funs
            could get different MD5s on different platforms.</p>
          <p>Own Id: OTP-6459</p>
        </item>
        <item>
          <p>When sorting terms using the <c>file_sorter</c> module
            (the option <c>Format</c> set to <c>term</c>), file
            errors were not always properly handled. This bug has
            been fixed.</p>
          <p>The directory supplied with the
            <c>tmpdir</c> option is no longer checked unless it is
            actually used. The error reason <c>not_a_directory</c>
            can no longer be returned; instead a <c>file_error</c>
            tuple is returned</p>
          <p>Own Id: OTP-6526</p>
        </item>
        <item>
          <p>Bugs regarding <c>try</c>/<c>catch</c> have been fixed
            in the <c>erl_eval</c> module.</p>
          <p>Own Id: OTP-6539</p>
        </item>
        <item>
          <p>When sorting the operands of a join operation, QLC
            called <c>file:open/3</c> with bad arguments. This bug
            has been fixed.</p>
          <p>Own Id: OTP-6562 Aux Id: seq10606 </p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>The functions <c>beam_lib:cmp/1</c> and
            <c>beam_lib:strip/1</c> (and similar functions) have been
            updated to handle optional chunks (such as "FunT") in
            more general way in order to be future compatible.</p>
          <p>The function <c>beam_lib:chunks/3</c> has been
            added.</p>
          <p>The function <c>beam_lib:md5/1</c> has been added.</p>
          <p>Own Id: OTP-6443</p>
        </item>
        <item>
          <p>Added base64 as a module to stdlib, encoding and decoding</p>
          <p>Own Id: OTP-6470</p>
        </item>
        <item>
          <p>Added the functions to_upper/1 and to_lower/1 to the
            string module. These provide case conversion for ISO/IEC
            8859-1 characters (Latin1) and strings.</p>
          <p>Own Id: OTP-6472</p>
        </item>
        <item>
          <p>The callback function <c>non_local_allowed/3</c> used
            by the restricted shell can now return the value
            <c>{{restricted,NewFuncSpec,NewArgList},NewState}</c>
            which can be used for letting the shell call some other
            function than the one specified.</p>
          <p>Own Id: OTP-6497 Aux Id: seq10555 </p>
        </item>
        <item>
          <p>There is a new <c>escript</c> program that can be used
            for writing scripts in Erlang. Erlang scripts don't need
            to be compiled and any arguments can be passed to them
            without risk that they are interpreted by the Erlang
            system.</p>
          <p>Own Id: OTP-6505</p>
        </item>
        <item>
          <p>The <c>Format</c> argument of the functions
            <c>io:fwrite/2,3</c> and <c>io_lib:fwrite/2</c> is now
            allowed to be a binary.</p>
          <p>Own Id: OTP-6517</p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>STDLIB 1.14.3.1</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>The control sequences <c>p</c> and <c>P</c> of the
            <c>Format</c> argument of the functions
            <c>io:fwrite/2,3</c> and <c>io_lib:fwrite/2</c> could
            cause a <c>badarg</c> failure when applied to binaries.
            This bug was introduced in STDLIB 1.14.3. (Thanks to
            Denis Bilenko.)</p>
          <p>Own Id: OTP-6495</p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>Added the option {cwd, Dir} to make zip-archives with
            relative pathnames without having to do (a global)
            file:set_cwd.</p>
          <p>Own Id: OTP-6491 Aux Id: seq10551 </p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>STDLIB 1.14.3</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>The <c>spawn_opt/2,3,4,5</c> option <c>monitor</c> --
            introduced in Kernel 2.11.2 -- is currently not possible
            to use when starting a process using <c>proc_lib</c>,
            that is, also when starting a gen_server, gen_fsm etc. </p>
          <p>This limitation has now been properly documented and the
            behavior of the <c>gen_fsm</c>, <c>gen_server</c>, and
            <c>proc_lib</c> <c>start</c> and <c>start_link</c>
            functions when providing this option has been changed
            from hanging indefinitely to failing with reason
            <c>badarg</c>.</p>
          <p>(Thanks to Fredrik Linder)</p>
          <p>Own Id: OTP-6345</p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>The control sequence <c>P</c> of the <c>Format</c>
            argument of the functions <c>io:fwrite/2,3</c> and
            <c>io_lib:fwrite/2</c> now replaces the tail of binary
            strings with <c>...</c> when the maximum depth has been
            reached. For instance, <c><![CDATA[io:fwrite("~P", [<<"a binary string">>, 3]).]]></c> prints <c><![CDATA[<<"a binary"...>>]]></c>.</p>
          <p>The indentation takes more care not to exceed the
            right margin, if possible.</p>
          <p>If the maximum depth is
            reached while printing a tuple, <c>,...</c> is printed
            instead of <c>|...</c> (this change applies to the
            control sequence <c>W</c> as well).</p>
          <p>Own Id: OTP-6354</p>
        </item>
        <item>
          <p>The Erlang shell command <c>h/0</c> that prints the
            history list now avoids printing (huge) terms referred to
            by <c>v/1</c> but instead just prints the call to
            <c>v/1</c>.</p>
          <p>Own Id: OTP-6390</p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>STDLIB 1.14.2.2</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>The functions <c>dets:select/1,3</c>,
            <c>dets:match/1,3</c>, and <c>dets:match_object/1,3</c>
            have been changed as to never return
            <c>{[],Continuation}</c>. This change affects the
            corresponding functions in Mnesia.</p>
          <p>Bugs have been
            fixed in QLC: <c>qlc:info()</c> could crash if the
            <c>tmpdir</c> option did not designate a valid directory;
            the results of looking up keys are kept in RAM, which
            should improve performance.</p>
          <p>Own Id: OTP-6359</p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>STDLIB 1.14.2.1</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>A bug in <c>erl_pp:exprs()</c> has been fixed.</p>
          <p>Own Id: OTP-6321 Aux Id: seq10497 </p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>STDLIB 1.14.2</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>The control sequences <c>p</c> and <c>P</c> of the
            <c>Format</c> argument of the functions
            <c>io:format/2,3</c> and <c>io_lib:format/2</c> did not
            handle binaries very well. This bug, introduced in
            stdlib-1.14, has been fixed.</p>
          <p>Own Id: OTP-6230</p>
        </item>
        <item>
          <p><c>filelib:wildcard(Wc, PathWithRedundantSlashes)</c>,
            where <c>PathWithRedundantSlashes</c> is a directory path
            containing redundant slashes, such as <c>/tmp/</c> or
            <c>//tmp</c>, could return incorrect results. (Thanks to
            Martin Bjorklund.)</p>
          <p>Own Id: OTP-6271</p>
        </item>
        <item>
          <p>The Erlang code preprocessor crashed if the predefined
            macros ?MODULE or ?MODULE_STRING were used before the
            module declaration. This bug has been fixed.</p>
          <p>Own Id: OTP-6277</p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>Support for faster join of two tables has been added
            to the <c>qlc</c> module. There are two kinds of fast
            joins: lookup join that uses existing indices, and merge
            join that takes two sorted inputs. There is a new
            <c>join</c> option that can be used to force QLC to use a
            particular kind of join in some QLC expression.</p>
          <p>Several other changes have also been included:</p>
          <list type="bulleted">
            <item>
              <p>The new <c>tmpdir</c> option of <c>cursor/2</c>,
                <c>eval/2</c>, <c>fold/4</c>, and <c>info/2</c> can be
                used to set the directory that join uses for temporary
                files. The option also overrides the <c>tmpdir</c> option
                of <c>keysort/3</c> and <c>sort/2</c>.</p>
            </item>
            <item>
              <p>The new <c>lookup</c> option can be used to
                assert that constants are looked up when evaluating some
                QLC expression.</p>
            </item>
            <item>
              <p>The <c>cache</c> and <c>cache_all</c> options
                accept new tags: <c>ets</c>, <c>list</c>, and <c>no</c>.
                The tag <c>list</c> caches answers in a list using a
                temporary file if the answers cannot be held in RAM.
                Combining <c>{cache,list}</c> and <c>{unique, true}</c>
                is equivalent to calling <c>sort/2</c> with the option
                <c>unique</c> set to <c>true</c>. The old tags
                <c>true</c> (equivalent to <c>ets</c>) and <c>false</c>
                (equivalent to <c>no</c>) are recognized for backward
                compatibility.</p>
            </item>
            <item>
              <p>The new option <c>max_list_size</c> can be used
                to set the limit where merge join starts to use temporary
                files for large equivalence classes and when answers
                cached in lists are put on temporary files.</p>
            </item>
            <item>
              <p>There is a new callback <c>is_sorted_key</c> to
                be supplied as an option to <c>table/2</c>.</p>
            </item>
            <item>
              <p>QLC analyzes each and every QLC expression when
                trying to find constants for the lookup function.
                Hitherto only QLC expressions with exactly one generator
                were analyzed.</p>
              <p>Note that only filters with guard
                syntax placed immediately after the generator are
                analyzed. The restriction to guard filters is an
                incompatible change. See <c>qlc(3)</c> for further
                details.</p>
            </item>
            <item>
              <p>In a similar way several match specifications
                for traversal of QLC tables can be utilized for different
                generators of one single QLC expression.</p>
            </item>
            <item>
              <p>A bug has been fixed: when caching answers to a
                sufficiently complex query it could happen that some
                answers were not returned.</p>
            </item>
          </list>
          <p>*** POTENTIAL INCOMPATIBILITY ***</p>
          <p>Own Id: OTP-6038</p>
        </item>
        <item>
          <p>The Erlang pretty printer (<c>erl_pp</c>) is now much
            faster when the code is deeply nested. A few minor bugs
            have been fixed as well.</p>
          <p>Own Id: OTP-6227 Aux Id: OTP-5924 </p>
        </item>
        <item>
          <p>The Erlang shell now tries to garbage collect large
            binaries. Under certain circumstances such binaries could
            otherwise linger on for an indefinite amount of time.</p>
          <p>Own Id: OTP-6239</p>
        </item>
        <item>
          <p>To help Dialyzer find more bugs, many functions in the
            Kernel and STDLIB applications now only accept arguments
            of the type that is documented.</p>
          <p>For instance, the functions <c>lists:prefix/2</c> and
            <c>lists:suffix/2</c> are documented to only accept lists
            as their arguments, but they actually accepted anything
            and returned <c>false</c>. That has been changed so that
            the functions cause an exception if one or both arguments
            are not lists.</p>
          <p>Also, the <c>string:strip/3</c> function is documented
            to take a character argument that is a character to strip
            from one or both ends of the string. Given a list instead
            of a character, it used to do nothing, but will now cause
            an exception.</p>
          <p>Dialyzer will find most cases where those functions
            are passed arguments of the wrong type.</p>
          <p>*** POTENTIAL INCOMPATIBILITY ***</p>
          <p>Own Id: OTP-6295</p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>STDLIB 1.14.1</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>The functions <c>c:y/1,2</c> which call
            <c>yecc:file/1,2</c> are now listed by
            <c>c:help/0</c>.</p>
          <p>Documentation of <c>c:y/1,2</c> has been added to
            <c>c(3)</c>.</p>
          <p>The fact that the control sequence character <c>s</c>
            recognizes binaries and deep character lists has been
            documented in <c>io(3)</c>. This feature was added in
            R11B-0 (OTP-5403).</p>
          <p>Own Id: OTP-6140</p>
        </item>
        <item>
          <p>The shell command rr() sometimes failed to read record
            definitions from file(s). This problem has been fixed.</p>
          <p>Own Id: OTP-6166 Aux Id: OTP-5878 </p>
        </item>
        <item>
          <p>The nonlocal function handler in <c>erl_eval</c>, which
            is used for implementing the restricted mode of the
            Erlang shell, did not handle calls to
            <c>erlang:apply/3</c> correctly. This bug has been fixed.</p>
          <p>Own Id: OTP-6169 Aux Id: seq10374 </p>
        </item>
        <item>
          <p>ets:rename/1 could deadlock, or crash the SMP emulator
            when the table wasn't a named table.</p>
          <p>ets:next/2, and ets:prev/2 could return erroneous results
            on the SMP emulator.</p>
          <p>Own Id: OTP-6198 Aux Id: seq10392, seq10415 </p>
        </item>
        <item>
          <p>When closing a Dets table the space management data was
            sometimes saved in such a way that opening the table
            could not be done without repairing the file. This bug
            has been fixed.</p>
          <p>Own Id: OTP-6206</p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>STDLIB 1.14</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>A bugfix in QLC: two of the call-back functions used
            for implementing QLC tables, <c>TraverseFun</c> and
            <c>LookupFun</c>, are now allowed to return a term other
            than a list. Such a term is immediately returned as the
            results of the current query, and is useful mostly for
            returning error tuples.</p>
          <p>Several other minor bugs have been also been fixed.</p>
          <p>Own Id: OTP-5195</p>
        </item>
        <item>
          <p>The STDLIB modules <c>error_logger_file_h</c> and
            <c>error_logger_tty_h</c> now read the environment
            variable <c>utc_log</c> from the SASL application.</p>
          <p>Own Id: OTP-5535</p>
        </item>
        <item>
          <p><c>ets:info/1</c> has been corrected to behave according
            to the documentation and return a list of tuples, not a
            tuple with tuples.</p>
          <p>*** POTENTIAL INCOMPATIBILITY ***</p>
          <p>Own Id: OTP-5639</p>
        </item>
        <item>
          <p>Referencing a so far undeclared record from the default
            value of some record declaration is from now on considered
            an error by the linter. It is also an error if the default
            value of a record declaration uses or binds a variable.</p>
          <p>*** POTENTIAL INCOMPATIBILITY ***</p>
          <p>Own Id: OTP-5878</p>
        </item>
        <item>
          <p>When a file <c>.hrl</c> file is included using
            <c>-include_lib</c>, the include path is temporarily
            updated to include the directory the <c>.hrl</c> file was
            found in, which will allow that <c>.hrl</c> file to itself
            include files from the same directory as itself using
            <c>-include</c>. (Thanks to Richard Carlsson.)</p>
          <p>Own Id: OTP-5944</p>
        </item>
        <item>
          <p>Corrected <c>filelib:ensure_dir/1</c> which sometimes
            returned <c>true</c> and sometimes <c>ok</c> to always
            return <c>ok</c> when successful. This goes against the
            documentation which said <c>true</c>, but <c>ok</c> was
            judged to be a more logical return value.</p>
          <p>*** POTENTIAL INCOMPATIBILITY ***</p>
          <p>Own Id: OTP-5960 Aux Id: seq10240 </p>
        </item>
        <item>
          <p>The shell now handles records better when used in calls
            on the form <c>{Module, Function}(ArgList)</c>.</p>
          <p>Own Id: OTP-5990 Aux Id: OTP-5876 </p>
        </item>
        <item>
          <p>The functions <c>lists:ukeysort/2</c> and
            <c>lists:ukeymerge/3</c> have been changed in such a way
            that two tuples are considered equal if their keys
            match.</p>
          <p>For the sake of consistency, <c>lists:usort/2</c> and
            <c>lists:umerge/3</c> have been modified too: two elements
            are considered equal if they compare equal.</p>
          <p>The <c>file_sorter</c> module has been modified in a
            similar way: the <c>unique</c> option now applies to the
            key (<c>keysort()</c> and <c>keymerge()</c>) and the
            ordering function (the option <c>{order, Order} </c>).</p>
          <p>*** POTENTIAL INCOMPATIBILITY ***</p>
          <p>Own Id: OTP-6019</p>
        </item>
        <item>
          <p>Correction in documentation for
            <c>ets:update_counter/3</c>; failure with <c>badarg</c>
            also if the counter to be updated is the key.</p>
          <p>Own Id: OTP-6072</p>
        </item>
        <item>
          <p>When sorting terms using the <c>file_sorter</c> module
            and an ordering fun, the sort was not always stable. This
            bug has been fixed.</p>
          <p>Own Id: OTP-6088</p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>Improvements of the linter:</p>
          <list type="bulleted">
            <item>
              <p>The <c>compile</c> attribute is recognized after
                function definitions.</p>
            </item>
            <item>
              <p>The new compiler option
                <c>nowarn_deprecated_function</c> can be used for
                turning off warnings for calls to deprecated functions.</p>
            </item>
            <item>
              <p>The new compiler option
                <c>{nowarn_unused_function,[{Name,Arity}]}</c> turns off
                warnings for unused local functions for the mentioned
                functions. The new options
                <c>{nowarn_deprecated_function,[{Module,Name,Arity}]}</c>
                and <c>{nowarn_bif_clash,[{Name,Arity}]}</c> work
                similarly.</p>
            </item>
          </list>
          <p>The Erlang code preprocessor <c>epp</c> now recognizes
            the <c>file</c> attribute. This attribute is meant to be
            used by tools such as Yecc that generate source code
            files.</p>
          <p>Own Id: OTP-5362</p>
        </item>
        <item>
          <p>The formatting option <c>~s</c> of <c>io:fwrite</c> and
            <c>io_lib:fwrite</c> has been extended to handle arguments
            that are binaries or I/O lists.</p>
          <p>Own Id: OTP-5403</p>
        </item>
        <item>
          <p>The control sequences <c>p</c> and <c>P</c> of the
            <c>Format</c> argument of the functions
            <c>io:format/2,3</c> and <c>io_lib:format/2</c> have been
            changed as to display the contents of binaries containing
            printable characters as strings.</p>
          <p>Own Id: OTP-5485</p>
        </item>
        <item>
          <p>The linter emits warnings for functions exported more
            than once in <c>export</c> attributes.</p>
          <p>Own Id: OTP-5494</p>
        </item>
        <item>
          <p>A manual for STDLIB has been added, <c>stdlib(6)</c>. It
            mentions the configuration parameters for the Erlang
            shell.</p>
          <p>Own Id: OTP-5530</p>
        </item>
        <item>
          <p>Added the <c>zip</c> module with functions for reading
            and creating zip archives. See <c>zip(3)</c>.</p>
          <p>Own Id: OTP-5786</p>
        </item>
        <item>
          <p>Simple-one-for-one supervisors now store the pids of
            child processes using <c>dict</c> instead of a list. This
            significantly improves performance when there are many
            dynamic supervised child processes. (Thanks to Micka&euml;l
            R&eacute;mond et al.)</p>
          <p>Own Id: OTP-5898</p>
        </item>
        <item>
          <p>When given the new option '<c>strict_record_tests</c>',
            the compiler will generate code that verifies the record
            type for '<c>R#record.field</c>' operations in guards. Code
            that verifies record types in bodies has already been
            generated since R10B, but in this release there will be a
            '<c>{badrecord,RecordTag}</c>' instead of a
            '<c>badmatch</c>' if the record verification test fails.
            See the documentation for the <c>compile</c> module for
            more information.</p>
          <p>The Erlang shell always applies strict record tests.</p>
          <p>Own Id: OTP-5915 Aux Id: OTP-5714 </p>
        </item>
        <item>
          <p>The Erlang pretty printer (<c>erl_pp</c>) now tries to
            insert line breaks at appropriate places.</p>
          <p>Own Id: OTP-5924</p>
        </item>
        <item>
          <p>The <c>public</c> option has been removed from
            <c>digraph:new/1</c>. The reason is that several
            functions in the <c>digraph</c> module are implemented
            using multiple ETS accesses, which is not thread safe.
            (Thanks to Ulf Wiger.)</p>
          <p>*** POTENTIAL INCOMPATIBILITY ***</p>
          <p>Own Id: OTP-5985</p>
        </item>
        <item>
          <p>The function <c>lists:keyreplace/4</c> checks that the
            fourth argument (<c>NewTuple</c>) is a tuple.</p>
          <p>Own Id: OTP-6023</p>
        </item>
        <item>
          <p>Added an example of how to reconstruct source code from
            debug info (abstract code) to <c>beam_lib(3)</c>. (Thanks
            to Mats Cronqvist who wrote the example.)</p>
          <p>Own Id: OTP-6073</p>
        </item>
        <item>
          <p>The new compiler option <c>warn_unused_record</c> is used
            for finding unused locally defined record types.</p>
          <p>Own Id: OTP-6105</p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>STDLIB 1.13.12</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p><c>shell_default:xm/1</c> has been added. It calls
            <c>xref:m/1</c>.</p>
          <p>Own Id: OTP-5405 Aux Id: OTP-4101 </p>
        </item>
        <item>
          <p>Warnings are output whenever so far undeclared records are
            referenced from some default value of a record
            declaration. In STDLIB 1.14 (R11B) such forward references
            will cause a compilation error.</p>
          <p>Own Id: OTP-5878</p>
        </item>
        <item>
          <p>The linter's check of the <c>deprecated</c> attribute did
            not take the compile option <c>export_all</c> into
            account. This bug has been fixed.</p>
          <p>Own Id: OTP-5917</p>
        </item>
        <item>
          <p>The Erlang pretty printer did not handle <c>try/catch</c>
            correctly. This bug has been fixed.</p>
          <p>Own Id: OTP-5926</p>
        </item>
        <item>
          <p>Corrected documentation for <c>lists:nthtail/3</c>.</p>
          <p>Added documentation for <c>lists:keymap/3</c>.</p>
          <p>Tried to clarify some other type declarations and
            function descriptions in <c>lists(3)</c>.</p>
          <p>Corrected documentation for <c>timer:now_diff/2</c>.</p>
          <p>Fixed broken links in <c>gen_fsm(3)</c>,
            <c>gen_server(3)</c>, <c>io_lib(3)</c> and <c>lib(3)</c>.</p>
          <p>Own Id: OTP-5931</p>
        </item>
        <item>
          <p>Type checks have been added to functions in
            <c>lists.erl</c>.</p>
          <p>Own Id: OTP-5939</p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>The new STDLIB module <c>erl_expand_records</c> expands
            records in abstract code. It is used by the Erlang shell,
            which means that Compiler is no longer used by the shell.</p>
          <p>Own Id: OTP-5876 Aux Id: OTP-5435 </p>
        </item>
        <item>
          <p>The compiler will now warn that the
            <c>megaco:format_versions/1</c> function is deprecated.</p>
          <p>Own Id: OTP-5976</p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>STDLIB 1.13.11</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>When calling <c>gen_server:enter_loop</c> with a
            registered server name, it was only checked that the
            registered name existed, not that it actually was the
            name of the calling process.</p>
          <p>Own Id: OTP-5854</p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>More detail on <c>beam_lib:version/1</c> in
            documentation.</p>
          <p>Own Id: OTP-5789</p>
        </item>
        <item>
          <p>The new function <c>io:read/3</c> works like
            <c>io:read/1,2</c> but takes a third argument,
            <c>StartLine</c>.</p>
          <p>Own Id: OTP-5813</p>
        </item>
        <item>
          <p>The new function <c>gen_fsm:enter_loop/4,5,6</c>, similar
            to <c>gen_server:enter_loop/3,4,5</c>, has been added.</p>
          <p>Own Id: OTP-5846 Aux Id: seq10163 </p>
        </item>
        <item>
          <p>The function <c>c:i/1</c> is now exported.</p>
          <p>Own Id: OTP-5848 Aux Id: seq10164 </p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>STDLIB 1.13.10</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>A couple of type errors have been fixed in <c>sofs</c>.</p>
          <p>Own Id: OTP-5739</p>
        </item>
        <item>
          <p>The pre-processor used to complain that the macro
            definition '<c>-define(S(S), ??S).</c>' was circular,
            which it isn't. (Thanks to Richard Carlsson.)</p>
          <p>Own Id: OTP-5777</p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>STDLIB 1.13.9</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>The linter, QLC and the module <c>erl_pp</c> did not
            handle the new '<c>fun M:F/A</c>' construct in all
            situations. This problem has been fixed.</p>
          <p>Own Id: OTP-5644</p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>The manual pages for most of the Kernel and some of
            the STDLIB modules have been updated, in particular
            regarding type definitions.</p>
          <p>The documentation of the return value for
            <c>erts:info/1</c> has been corrected.</p>
          <p>The documentation for <c>erlang:statistics/1</c> now
            lists all possible arguments.</p>
          <p>Own Id: OTP-5360</p>
        </item>
        <item>
          <p>Replaced some tuple funs with the new <c>fun M:F/A</c>
            construct.</p>
          <p>The high-order functions in the lists module no longer
            accept bad funs under any circumstances.
            '<c>lists:map(bad_fun, [])</c>' used to return
            '<c>[]</c>' but now causes an exception.</p>
          <p>Unused, broken compatibility code in the <c>ets</c>
            module was removed. (Thanks to Dialyzer.)</p>
          <p>Eliminated 5 discrepancies found by Dialyzer in the
            Appmon application.</p>
          <p>Own Id: OTP-5633</p>
        </item>
        <item>
          <p>The <c>c:i/0</c> function will now run in a paged mode if
            there are more than 100 processes in the system. (Thanks
            to Ulf Wiger.)</p>
          <p><c>erlang:system_info(process_count)</c> has been
            optimized and does now return exactly the same value as
            <c>length(processes())</c>. Previously
            <c>erlang:system_info(process_count)</c> did not include
            exiting processes which are included in
            <c>length(processes())</c>.</p>
          <p>The <c>+P</c> flag for <c>erl</c>, which sets the maximum
            number of processes allowed to exist at the same, no longer
            accepts values higher than 134217727. (You will still
            probably run out of memory before you'll be able to reach
            that limit.)</p>
          <p>Own Id: OTP-5645 Aux Id: seq9984 </p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>STDLIB 1.13.8</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>Very minor corrections in <c>beam_lib</c> and its
            documentation.</p>
          <p>Own Id: OTP-5589</p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>The <c>erlang:port_info/1</c> BIF is now documented.
            Minor corrections of the documentation for
            <c>erlang:port_info/2</c>.</p>
          <p>Added a note to the documentation of the <c>math</c>
            module that all functions are not available on all
            platforms.</p>
          <p>Added more information about the '<c>+c</c>' option in
            the <c>erl</c> man page in the ERTS documentation.</p>
          <p>Own Id: OTP-5555</p>
        </item>
        <item>
          <p>The new <c>fun M:F/A</c> construct creates a fun that
            refers to the latest version of <c>M:F/A</c>. This syntax is
            meant to replace tuple funs <c>{M,F}</c> which have many
            problems.</p>
          <p>The new type test <c>is_function(Fun,A)</c> (which may be
            used in guards) test whether <c>Fun</c> is a fun that can be
            applied with <c>A</c> arguments. (Currently, <c>Fun</c> can
            also be a tuple fun.)</p>
          <p>Own Id: OTP-5584</p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>STDLIB 1.13.7</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p><c>filelib:wildcard/2</c> was broken (it ignored its
            second argument).</p>
          <p>Also, <c>filelib:wildcard("Filename")</c> (where the
            argument does not contain any meta-characters) would
            always return <c>["Filename"]</c>. Corrected so that an
            empty list will be returned if <c>"Filename"</c> does not
            actually exist. (Same correction in
            <c>filelib:wildcard/2</c>.) (This change is a slight
            incompatibility.)</p>
          <p><c>filelib:wildcard/1,2</c> will generate a different
            exception when given bad patterns such as <c>"{a,"</c>. The
            exception used to be caused by
            '<c>exit(missing_delimiter)</c>' but is now
            '<c>erlang:error({badpattern,missing_delimiter})</c>'.</p>
          <p>Own Id: OTP-5523 Aux Id: seq9824 </p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>Further improvements of encrypted debug info: New option
            <c>encrypt_debug_info</c> for compiler.</p>
          <p>Own Id: OTP-5541 Aux Id: seq9837 </p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>STDLIB 1.13.6</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>When opening a Dets table read only an attempt was
            sometimes made to re-hash the table resulting in an error
            message. This problem has been fixed.</p>
          <p>Own Id: OTP-5487 Aux Id: OTP-4989 </p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>It is now possible to encrypt the debug information in
            Beam files, to help keep the source code secret. See the
            documentation for <c>compile</c> on how to provide the key
            for encrypting, and the documentation for <c>beam_lib</c>
            on how to provide the key for decryption so that tools such
            as the Debugger, Xref, or Cover can be used.</p>
          <p>The <c>beam_lib:chunks/2</c> functions now accepts an
            additional chunk type <c>compile_info</c> to retrieve
            the compilation information directly as a term. (Thanks
            to Tobias Lindahl.)</p>
          <p>Own Id: OTP-5460 Aux Id: seq9787 </p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>STDLIB 1.13.5</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>Closing a Dets table kept in RAM would cause a crash if
            the file could not be written. This problem has been
            fixed by returning an error tuple.</p>
          <p>Own Id: OTP-5402</p>
        </item>
        <item>
          <p><c>erl_pp</c> now correctly pretty-prints <c>fun F/A</c>.</p>
          <p>Own Id: OTP-5412</p>
        </item>
        <item>
          <p>The Erlang shell failed if the compiler was not in the
            code path. This problem has been fixed, but in order to
            evaluate records the compiler is still needed.</p>
          <p>Own Id: OTP-5435</p>
        </item>
        <item>
          <p>Corrected the example in the documentation for
            <c>ets:match/2</c>. Also clarified that
            <c>ets:update_counter/3</c> updates the counter atomically.
            (Thanks to Anders Svensson.)</p>
          <p>Own Id: OTP-5452 Aux Id: seq9770, seq9789 </p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>The possibility to start the Erlang shell in parallel
            with the rest of the system was reintroduced for
            backwards compatibility in STDLIB 1.13.1. The flag to be
            used for this is now called <c>async_shell_start</c> and has
            been documented. New shells started from the JCL menu are
            not synchronized with <c>init</c> anymore. This makes it
            possible to start a new shell (e.g. for debugging purposes)
            even if the initial shell has not come up.</p>
          <p>Own Id: OTP-5406 Aux Id: OTP-5218 </p>
        </item>
        <item>
          <p>The compiler will now produce warnings when using the
            deprecated functions in the <c>snmp</c> module.</p>
          <p>Own Id: OTP-5425</p>
        </item>
        <item>
          <p>The function <c>c:zi/0</c> has been removed. Use
            <c>c:i/0</c> instead.</p>
          <p>Own Id: OTP-5432</p>
        </item>
        <item>
          <p>Corrected two minor bugs found by the Dialyzer:
            Calling a parameterized module from a restricted shell
            (i.e. if <c>shell:start_restricted/1</c> has been used)
            would crash the shell evaluator. A debug printout in
            <c>gen_fsm</c> had a clause that would never match; causing
            less information to be printed.</p>
          <p>And a somewhat more serious one also found by
            Dialyzer: <c>rpc:yield/1</c> would crash unless the call
            started by <c>rpc:async_call/4</c> had already finished;
            <c>rpc:nb_yield(Key,infinity)</c> would also crash.</p>
          <p>Cleaned up and removed redundant code found by
            Dialyzer in <c>erlang:dmonitor_p/2</c>.</p>
          <p>Own Id: OTP-5462</p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>STDLIB 1.13.4</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>Bugs in the Erlang shell have been fixed.</p>
          <p>Own Id: OTP-5327</p>
        </item>
        <item>
          <p>Some dead code reported by Dialyzer was eliminated.</p>
          <p>A bug in <c>dbg</c> when tracing to wrap trace files has
            been corrected. It failed to delete any already existing
            wrap trace files with the same names when starting a new
            wrap trace.</p>
          <p>Own Id: OTP-5329</p>
        </item>
        <item>
          <p>The linter could output invalid warnings about bit
            patterns in record initializations. This problem has been
            fixed.</p>
          <p>Own Id: OTP-5338</p>
        </item>
        <item>
          <p><c>ordsets:is_set(NoList)</c>, where <c>NoList</c> is any
            term except a list, would crash. For consistency with
            <c>sets:is_set/1</c> and <c>gb_sets:is_set/1</c>, it now
            returns <c>false</c>.</p>
          <p>Own Id: OTP-5341</p>
        </item>
        <item>
          <p>A BIF <c>erlang:raise/3</c> has been added. See the manual
            for details. It is intended for internal system programming
            only, advanced error handling.</p>
          <p>Own Id: OTP-5376 Aux Id: OTP-5257 </p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>The <c>deprecated</c> attribute is now checked by the
            linter. See <c>xref(3)</c> for a description of the
            <c>deprecated</c> attribute.</p>
          <p>Own Id: OTP-5276</p>
        </item>
        <item>
          <p>The restricted shell will now indicate if the return
            value from a user predicate is on an incorrect form.</p>
          <p>Own Id: OTP-5335</p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>STDLIB 1.13.3</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>Bugs concerning unused and shadowed variables have been
            fixed in the linter.</p>
          <p>Own Id: OTP-5091</p>
        </item>
        <item>
          <p>A bug in the evaluator that caused the shell to choke on
            bit syntax expressions has been fixed.</p>
          <p>Own Id: OTP-5237</p>
        </item>
        <item>
          <p><c>io:format/2</c> et.al no longer crashes for some
            combinations of precision and value for format character
            "g". Previously it crashed if the precision P was 4 or lower
            and the absolute value of the float to print was lower
            than 10^4 but 10^(P-1) or higher. Now it will not crash
            depending on the value of the float.</p>
          <p>Own Id: OTP-5263</p>
        </item>
        <item>
          <p>Bugs in the handling of the bit syntax have been fixed in
            the Erlang shell.</p>
          <p>Own Id: OTP-5269</p>
        </item>
        <item>
          <p><c>gb_sets:del_element/2</c> was changed to do the
            same as <c>gb_sets:delete_any/2</c> which was the
            original intention, not as <c>gb_sets:delete/2</c>. Code
            that relies on <c>gb_sets:del_element/2</c> causing an
            error if the element does not exist must be changed to
            call <c>gb_sets:delete/2</c> instead.</p>
          <p>The documentation was also updated to explicitly
            document functions that were only referred to as
            'aliases' of a documented function. Also, a list of all
            functions common to the <c>gb_sets</c>, <c>sets</c>, and
            <c>ordsets</c> was added.</p>
          <p>*** POTENTIAL INCOMPATIBILITY ***</p>
          <p>Own Id: OTP-5277</p>
        </item>
        <item>
          <p>Debug messages have been removed from the QLC module.</p>
          <p>Own Id: OTP-5283</p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>The size of continuations returned from
            <c>dets:match/1,3</c>, <c>dets:match_object/1,3</c>, and
            <c>dets:select/1,3</c> has been reduced. This affects the
            amount of data Mnesia sends between nodes while
            evaluating QLC queries.</p>
          <p>Own Id: OTP-5232</p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>STDLIB 1.13.2</title>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>The <c>-rsh</c> switch for starting a remote shell
            (introduced with OTP-5210) clashed with an already existing
            switch used by <c>slave</c>. Therefore the switch for
            the remote shell is now instead named <c>-remsh</c>.</p>
          <p>Own Id: OTP-5248 Aux Id: OTP-5210 </p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>STDLIB 1.13.1</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>The Pman 'trace shell' functionality was broken as has
            now been fixed. Furthermore, Pman could not correctly
            find the pid of the active shell if more than one shell
            process was running on the node. This has also been
            corrected.</p>
          <p>Own Id: OTP-5191</p>
        </item>
        <item>
          <p>When the undocumented feature "parameterized modules" was
            used, the ?MODULE macro did not work correctly.</p>
          <p>Own Id: OTP-5224</p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>You can now start Erlang with the <c>-rsh</c> flag which
            gives you a remote initial shell instead of a local one.
            Example:</p>
          <pre>
            erl -sname this_node -rsh other_node@other_host
          </pre>
          <p>Own Id: OTP-5210</p>
        </item>
        <item>
          <p>The man page for the <c>lists</c> module has been updated
            with description of the new <c>zip</c>, <c>unzip</c>,
            and <c>partition/2</c> functions.</p>
          <p>Own Id: OTP-5213</p>
        </item>
        <item>
          <p>The top level group leader used to be listed as job #1 in
            the job list in JCL mode. Since there is no shell
            associated with this process that can be connected to, it
            will no longer be listed.</p>
          <p>Own Id: OTP-5214</p>
        </item>
        <item>
          <p>The possibility to start the Erlang shell in parallel
            with the rest of the system has been reintroduced for
            backwards compatibility. Note that this old behaviour is
            error prone and should not be used unless for some reason
            necessary.</p>
          <p>Own Id: OTP-5218 Aux Id: seq9534 </p>
        </item>
        <item>
          <p>The <c>shell</c> commands <c>rr/1,2,3</c> now accepts
            wildcards when reading record definitions from BEAM
            files.</p>
          <p>Own Id: OTP-5226</p>
        </item>
      </list>
    </section>
  </section>
</chapter>
