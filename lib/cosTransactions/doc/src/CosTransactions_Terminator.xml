<?xml version="1.0" encoding="latin1" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">

<erlref>
  <header>
    <copyright>
      <year>1999</year>
      <year>2011</year>
      <holder>Ericsson AB, All Rights Reserved</holder>
    </copyright>
    <legalnotice>
  The contents of this file are subject to the Erlang Public License,
  Version 1.1, (the "License"); you may not use this file except in
  compliance with the License. You should have received a copy of the
  Erlang Public License along with this software. If not, it can be
  retrieved online at http://www.erlang.org/.

  Software distributed under the License is distributed on an "AS IS"
  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
  the License for the specific language governing rights and limitations
  under the License.

  The Initial Developer of the Original Code is Ericsson AB.
    </legalnotice>

    <title>CosTransactions_Terminator</title>
    <prepared>Niclas Eklund</prepared>
    <responsible>Niclas Eklund</responsible>
    <docno></docno>
    <approved>Niclas Eklund</approved>
    <checked></checked>
    <date>1999-04-12</date>
    <rev>PA1</rev>
  </header>
  <module>CosTransactions_Terminator</module>
  <modulesummary>This module implements the OMG CosTransactions::Terminator interface.</modulesummary>
  <description>
    <p>To get access to the record definitions for the structures use:      <br></br>
<c>-include_lib("cosTransactions/include/CosTransactions.hrl").</c></p>
  </description>
  <funcs>
    <func>
      <name>commit(Terminator, ReportHeuristics) -> Return</name>
      <fsummary>Try to commit a transaction</fsummary>
      <type>
        <v>Terminator = #objref</v>
        <v>ReportHeuristics = boolean()</v>
        <v>Return =  ok | {'EXCEPTION', E}</v>
        <v>E = #'CosTransactions_HeuristicMixed'{} | #'CosTransactions_HeuristicHazrd'{} | #'CosTransactions_TransactionRolledBack'{}</v>
      </type>
      <desc>
        <p>This operation initiates the two-phase commit protocol. If the transaction has not been marked
          <c>'rollback only'</c> and all the participants agree to commit, the operation terminates normally. Otherwise,
          the TransactionRolledBack is raised. If the parameter <c>ReportHeuristics</c> is true and inconsistent
          outcomes by raising an Heuristic Exception.</p>
      </desc>
    </func>
    <func>
      <name>rollback(Terminator) -> Return</name>
      <fsummary>Rollback a transaction</fsummary>
      <type>
        <v>Terminator = #objref</v>
        <v>Return = ok</v>
      </type>
      <desc>
        <p>This operation roles back the transaction. </p>
      </desc>
    </func>
  </funcs>
  
</erlref>

