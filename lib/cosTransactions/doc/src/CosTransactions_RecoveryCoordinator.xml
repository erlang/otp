<?xml version="1.0" encoding="latin1" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">

<erlref>
  <header>
    <copyright>
      <year>1999</year><year>2011</year>
      <holder>Ericsson AB. All Rights Reserved.</holder>
    </copyright>
    <legalnotice>
      The contents of this file are subject to the Erlang Public License,
      Version 1.1, (the "License"); you may not use this file except in
      compliance with the License. You should have received a copy of the
      Erlang Public License along with this software. If not, it can be
      retrieved online at http://www.erlang.org/.
    
      Software distributed under the License is distributed on an "AS IS"
      basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
      the License for the specific language governing rights and limitations
      under the License.
    
    </legalnotice>

    <title>CosTransactions_RecoveryCoordinator</title>
    <prepared></prepared>
    <responsible></responsible>
    <docno></docno>
    <approved></approved>
    <checked></checked>
    <date>1999-04-12</date>
    <rev>PA1</rev>
  </header>
  <module>CosTransactions_RecoveryCoordinator</module>
  <modulesummary>This module implements the OMG CosTransactions::RecoveryCoordinator interface.</modulesummary>
  <description>
    <p>To get access to the record definitions for the structures use:      <br></br>
<c>-include_lib("cosTransactions/include/CosTransactions.hrl").</c></p>
  </description>
  <funcs>
    <func>
      <name>replay_completion(RecoveryCoordinator, Timeout, Resource) -> Return</name>
      <fsummary>Return the current status of the transaction</fsummary>
      <type>
        <v>RecoveryCoordinator = #objref</v>
        <v>Timeout = integer(), milliseconds | 'infinity'</v>
        <v>Resource = #objref</v>
        <v>Return = Status | {'EXCEPTION', E}</v>
        <v>E = #'CosTransactions_NotPrepared'{}</v>
        <v>Status = atom()</v>
      </type>
      <desc>
        <p>The <c>RecoveryCoordinator</c> object is returned by the operation
          <c>CosTransactions_Coordinator:register_resource/3</c>. The <c>replay_completion/2</c>
          may only be used by the registered Resource and returns the current status
          of the transaction. The operation is used when recovering after a failure.</p>
        <p>Possible Status replies:</p>
        <list type="bulleted">
          <item>'StatusCommitted'</item>
          <item>'StatusCommitting'</item>
          <item>'StatusMarkedRollback'</item>
          <item>'StatusRollingBack'</item>
          <item>'StatusRolledBack'</item>
          <item>'StatusActive'</item>
          <item>'StatusPrepared'</item>
          <item>'StatusUnknown'</item>
          <item>'StatusNoTransaction'</item>
          <item>'StatusPreparing'</item>
        </list>
        <warning>
          <p><em>replay_completion/3</em> is blocking and may cause dead-lock if a child
            calls this function at the same time as its parent invokes an operation
            on the child. Dead-lock will not occur if the timeout has any value except 'infinity'.</p>
          <p>If the call is external incoming (intra-ORB) the timeout will not be activated.
            Hence, similar action must be taken if the Resource resides on another vendors ORB.</p>
        </warning>
      </desc>
    </func>
  </funcs>
  
</erlref>

