<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">

<erlref>
  <header>
    <copyright>
      <year>1999</year>
      <year>2013</year>
      <holder>Ericsson AB, All Rights Reserved</holder>
    </copyright>
    <legalnotice>
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
 
      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

  The Initial Developer of the Original Code is Ericsson AB.
    </legalnotice>

    <title>CosTransactions_TransactionFactory</title>
    <prepared></prepared>
    <responsible></responsible>
    <docno></docno>
    <approved></approved>
    <checked></checked>
    <date>1999-04-12</date>
    <rev>PA1</rev>
  </header>
  <module>CosTransactions_TransactionFactory</module>
  <modulesummary>This module implements the OMG CosTransactions::TransactionFactory interface.</modulesummary>
  <description>
    <p>To get access to the record definitions for the structures use:      <br></br>
<c>-include_lib("cosTransactions/include/CosTransactions.hrl").</c></p>
  </description>
  <funcs>
    <func>
      <name>create(TransactionFactory, Timeout) -> Control</name>
      <fsummary>Create a new top-level transaction</fsummary>
      <type>
        <v>TransactionFactory = #objref</v>
        <v>Timeout = integer()</v>
        <v>Control = #objref</v>
      </type>
      <desc>
        <p>This operation creates a new top-level transaction.</p>
        <p>The <c>Timeout</c> argument can be:</p>
        <list type="bulleted">
          <item>0 - no timeout.</item>
          <item>N (integer() > 0) -  the transaction will be subject to being rolled back
           if it does not complete before N seconds have elapsed.</item>
        </list>
      </desc>
    </func>
  </funcs>
  
</erlref>

