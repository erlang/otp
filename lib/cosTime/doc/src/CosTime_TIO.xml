<?xml version="1.0" encoding="latin1" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">

<erlref>
  <header>
    <copyright>
      <year>2000</year>
      <year>2011</year>
      <holder>Ericsson AB, All Rights Reserved</holder>
    </copyright>
    <legalnotice>
  The contents of this file are subject to the Erlang Public License,
  Version 1.1, (the "License"); you may not use this file except in
  compliance with the License. You should have received a copy of the
  Erlang Public License along with this software. If not, it can be
  retrieved online at http://www.erlang.org/.

  Software distributed under the License is distributed on an "AS IS"
  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
  the License for the specific language governing rights and limitations
  under the License.

  The Initial Developer of the Original Code is Ericsson AB.
    </legalnotice>

    <title>CosTime_TIO</title>
    <prepared>Niclas Eklund</prepared>
    <responsible>Niclas Eklund</responsible>
    <docno></docno>
    <approved>Niclas Eklund</approved>
    <checked></checked>
    <date>2000-02-01</date>
    <rev>1.0</rev>
  </header>
  <module>CosTime_TIO</module>
  <modulesummary>This module implements the OMG CosTime::TIO interface.</modulesummary>
  <description>
    <p>To get access to the record definitions for the structures use:      <br></br>
<c>-include_lib("cosTime/include/*.hrl").</c></p>
  </description>
  <funcs>
    <func>
      <name>'_get_time_interval'(TIO) -> TimeInterval</name>
      <fsummary>Return the interval associated with the target object</fsummary>
      <type>
        <v>TIO = #objref</v>
        <v>TimeInterval = #'TimeBase_IntervalT{lower_bound, upper_bound}</v>
        <v>lower_bound = upper_bound = ulonglong</v>
      </type>
      <desc>
        <p>This operation returns the interval associated with the target object.</p>
      </desc>
    </func>
    <func>
      <name>spans(TIO, UTO) -> Reply</name>
      <fsummary>Return an OverlapType which describe how the interval in the target object and the timerange represented by the UTO object  overlap</fsummary>
      <type>
        <v>TIO = UTO = OtherTIO = #objref</v>
        <v>Reply = {OverlapType, OtherTIO}</v>
        <v>OverlapType = 'OTContainer' | 'OTContained' | 'OTOverlap' | 'OTNoOverlap'</v>
      </type>
      <desc>
        <p>This operation returns a <em>OverlapType</em> depending on how the interval
          in the target object and the timerange represented by the UTO object 
          overlap. If the OverlapType is 'OTNoOverlap' the out parameter represents 
          the gap between the two intervals. If OverlapType is one of the others, the
          out parameter represents the overlap interval.
          The definitions of the OverlapType's are:</p>
        <p></p>
        <list type="bulleted">
          <item>'OTContainer' - target objects lower and upper limits are,
           respectively, less or equal to and greater or equal to given object's.</item>
          <item>'OTContained' - target objects lower and upper limits are,
           respectively, greater or equal to and less or equal to given object's.</item>
          <item>'OTOverlap' - target objects interval overlap given object's.</item>
          <item>'OTNoOverlap' - target objects interval do not overlap given object's.</item>
        </list>
      </desc>
    </func>
    <func>
      <name>overlaps(TIO, OtherTIO) -> Reply</name>
      <fsummary>Return an OverlapType which describe how the interval in the target object and the timerange represented by the TIO object  overlap</fsummary>
      <type>
        <v>TIO = OtherTIO = AnotherTIO = #objref</v>
        <v>Reply = {OverlapType, AnotherTIO}</v>
        <v>OverlapType = 'OTContainer' | 'OTContained' | 'OTOverlap' | 'OTNoOverlap'</v>
      </type>
      <desc>
        <p>This operation returns a <em>OverlapType</em> depending on how the interval
          in the target object and the timerange represented by the TIO object 
          overlap. The OverlapType's are described under spans/2.</p>
      </desc>
    </func>
    <func>
      <name>time(TIO) -> UTO</name>
      <fsummary>Return a UTO in which the interval equals the time interval in the target object and time value is the midpoint of the interval</fsummary>
      <type>
        <v>TIO = UTO = #objref</v>
      </type>
      <desc>
        <p>This operation returns a UTO in which the interval equals the time interval
          in the target object and time value is the midpoint of the interval.</p>
      </desc>
    </func>
  </funcs>
  
</erlref>

