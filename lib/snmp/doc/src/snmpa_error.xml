<?xml version="1.0" encoding="latin1" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">

<erlref>
  <header>
    <copyright>
      <year>2002</year><year>2010</year>
      <holder>Ericsson AB. All Rights Reserved.</holder>
    </copyright>
    <legalnotice>
      The contents of this file are subject to the Erlang Public License,
      Version 1.1, (the "License"); you may not use this file except in
      compliance with the License. You should have received a copy of the
      Erlang Public License along with this software. If not, it can be
      retrieved online at http://www.erlang.org/.
    
      Software distributed under the License is distributed on an "AS IS"
      basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
      the License for the specific language governing rights and limitations
      under the License.
    
    </legalnotice>

    <title>snmpa_error</title>
    <prepared></prepared>
    <responsible></responsible>
    <docno></docno>
    <approved></approved>
    <checked></checked>
    <date></date>
    <rev></rev>
    <file>snmpa_error.xml</file>
  </header>
  <module>snmpa_error</module>
  <modulesummary>Functions for Reporting SNMP Errors</modulesummary>
  <description>
    <marker id="desc"></marker>
    <p>The module <c>snmpa_error</c> contains two callback functions 
      which are called if an error occurs at different times during agent 
      operation. These functions in turn calls the corresponding function
      in the configured error report module, which implements the actual 
      report functionality.
      </p>
    <p>Two simple implementation(s) is provided with the
      toolkit; the modules 
      <seealso marker="snmpa_error_logger">snmpa_error_logger</seealso> 
      which is the default and 
      <seealso marker="snmpa_error_io">snmpa_error_io</seealso>.
      </p>
    <p>The error report module is configured using the directive 
      <c>error_report_mod</c>, see
      <seealso marker="snmp_config#configuration_params">configuration parameters</seealso>.
      </p>

      <marker id="config_err"></marker>
  </description>
  <funcs>
    <func>
      <name>config_err(Format, Args) -> void()</name>
      <fsummary>Called if a configuration error occurs</fsummary>
      <type>
        <v>Format = string()</v>
        <v>Args = list()</v>
      </type>
      <desc>
        <p>The function is called if an error occurs during the
          configuration phase, for example if a syntax error is found in
          a configuration file.
          </p>
        <p><c>Format</c> and <c>Args</c> are as in
          <c>io:format(Format, Args)</c>.</p>

	  <marker id="user_err"></marker>
      </desc>
    </func>

    <func>
      <name>user_err(Format, Args) -> void()</name>
      <fsummary>Called if a user related error occurs</fsummary>
      <type>
        <v>Format = string()</v>
        <v>Args = list()</v>
      </type>
      <desc>
        <p>The function is called if a user related error occurs at
          run-time, for example if a user defined instrumentation
          function returns erroneous.
          </p>
        <p><c>Format</c> and <c>Args</c> are as in
          <c>io:format(Format, Args)</c>.</p>
      </desc>
    </func>
  </funcs>
  
</erlref>

