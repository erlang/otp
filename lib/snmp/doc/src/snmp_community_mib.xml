<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">

<erlref>
  <header>
    <copyright>
      <year>1999</year><year>2013</year>
      <holder>Ericsson AB. All Rights Reserved.</holder>
    </copyright>
    <legalnotice>
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at
 
          http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.
    
    </legalnotice>

    <title>snmp_community_mib</title>
    <prepared></prepared>
    <responsible></responsible>
    <docno></docno>
    <approved></approved>
    <checked></checked>
    <date></date>
    <rev></rev>
    <file>snmp_community_mib.xml</file>
  </header>
  <module>snmp_community_mib</module>
  <modulesummary>Instrumentation Functions for SNMP-COMMUNITY-MIB</modulesummary>
  <description>
    <p>The module <c>snmp_community_mib</c> implements the instrumentation
    functions for the SNMP-COMMUNITY-MIB, and functions for configuring the 
    database. </p>
    <p>The configuration files are described in the SNMP User's Manual.</p>

    <marker id="configure"></marker>
  </description>

  <funcs>
    <func>
      <name>configure(ConfDir) -> void()</name>
      <fsummary>Configure the SNMP-COMMUNITY-MIB</fsummary>
      <type>
        <v>ConfDir = string()</v>
      </type>
      <desc>
        <p>This function is called from the supervisor at system
          start-up.
          </p>
        <p>Inserts all data in the configuration files into the
          database and destroys all old rows with StorageType
          <c>volatile</c>.  The rows created from the configuration file
          will have StorageType <c>nonVolatile</c>.
          </p>
        <p>All <c>snmp</c> counters are set to zero.
          </p>
        <p>If an error is found in the configuration file, it is
          reported using the function <c>config_err/2</c> of the error,
          report module and the function fails with reason 
          <c>configuration_error</c>.
          </p>
        <p><c>ConfDir</c> is a string which points to the directory
          where the configuration files are found.
          </p>
        <p>The configuration file read is: <c>community.conf</c>.
          </p>

        <marker id="reconfigure"></marker>
      </desc>
    </func>

    <func>
      <name>reconfigure(ConfDir) -> void()</name>
      <fsummary>Configure the SNMP-COMMUNITY-MIB</fsummary>
      <type>
        <v>ConfDir = string()</v>
      </type>
      <desc>
        <p>Inserts all data in the configuration files into the
          database and destroys all old data, including the rows with
          StorageType <c>nonVolatile</c>.  The rows created from the
          configuration file will have StorageType <c>nonVolatile</c>.
          </p>
        <p>Thus, the data in the SNMP-COMMUNITY-MIB, after this
          function has been called, is from the configuration files.
          </p>
        <p>All <c>snmp</c> counters are set to zero.
          </p>
        <p>If an error is found in the configuration file, it is
          reported using the function <c>config_err/2</c> of the error report 
          module, and the function fails with reason 
          <c>configuration_error</c>.
          </p>
        <p><c>ConfDir</c> is a string which points to the directory
          where the configuration files are found.
          </p>
        <p>The configuration file read is: <c>community.conf</c>.</p>

        <marker id="add_community"></marker>
      </desc>
    </func>

    <func>
      <name>add_community(Idx, CommName, SecName, CtxName, TransportTag) -> Ret</name>
      <name>add_community(Idx, CommName, SecName, EngineId, CtxName, TransportTag) -> Ret</name>
      <fsummary>Added one community</fsummary>
      <type>
        <v>Idx = string()</v>
        <v>CommName = string()</v>
        <v>SecName = string()</v>
	<v>EngineId = string()</v>
        <v>CtxName = string()</v>
        <v>TransportTag = string()</v>
        <v>Ret = {ok, Key} | {error, Reason}</v>
        <v>Key = term()</v>
	<v>Reason = term()</v>
      </type>
      <desc>
        <p>Adds a community to the agent config. 
	Equivalent to one line in the <c>community.conf</c> file.</p>
	<p>With the <c>EngineId</c> argument it is possible to 
	override the configured engine-id (SNMP-FRAMEWORK-MIB).</p>
        <marker id="delete_community"></marker>
      </desc>
    </func>

    <func>
      <name>delete_community(Key) -> Ret</name>
      <fsummary>Delete one community</fsummary>
      <type>
        <v>Key = term()</v>
        <v>Ret = ok | {error, Reason}</v>
        <v>Reason = term()</v>
      </type>
      <desc>
        <p>Delete a community from the agent config.</p>
      </desc>
    </func>
  </funcs>
  
</erlref>

