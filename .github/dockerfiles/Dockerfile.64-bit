ARG BASE=ghcr.io/erlang/otp/ubuntu-base
FROM $BASE

ARG MAKEFLAGS=$MAKEFLAGS
ENV MAKEFLAGS=$MAKEFLAGS \
    ERL_TOP=/buildroot/otp \
    PATH="/Erlang ∅⊤℞/bin":/buildroot/otp/bin:$PATH

ARG ARCHIVE=./otp.tar.gz
COPY $ARCHIVE /buildroot/otp.tar.gz
RUN cd /buildroot && tar -xzf ./otp.tar.gz

WORKDIR /buildroot/otp/

ENV CFLAGS="-O2 -g -Werror"

## Configure (if not cached), check that no application are disabled and then make
RUN if [ ! -f Makefile ]; then \
      touch README.md && \
      ./configure --prefix="/Erlang ∅⊤℞" && \
      if cat lib/*/CONF_INFO || cat lib/*/SKIP || cat lib/SKIP-APPLICATIONS; then exit 1; fi && \
      find . -type f -newer README.md | xargs tar --transform 's:^./:otp/:' -cf ../otp_cache.tar; \
    fi && \
    make && make docs DOC_TARGETS=chunks && \
    sudo make install install-docs DOC_TARGETS=chunks

## Disable -Werror as testcases do not compile with it on
ENV CFLAGS="-O2 -g"

## Update init.sh with correct env vars
RUN echo "export MAKEFLAGS=$MAKEFLAGS" > /buildroot/env.sh && \
    echo "export ERLC_USE_SERVER=$ERLC_USE_SERVER" >> /buildroot/env.sh && \
    echo "export ERL_TOP=\"$ERL_TOP\"" >> /buildroot/env.sh && \
    echo "export PATH=\"$PATH\"" >> /buildroot/env.sh && \
    echo "export ERL_LIBS=\"$ERL_LIBS\"" >> /buildroot/env.sh
