// -*- c -*-
//
// %CopyrightBegin%
//
// Copyright Ericsson AB 2017. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// %CopyrightEnd%
//

LOAD_DOUBLE(Src, Dst) {
    GET_DOUBLE($Src, *(FloatDef *) &$Dst);
}

fload(Reg, Dst) {
    $LOAD_DOUBLE($Reg, $Dst);
}

fstore(Float, Dst) {
    PUT_DOUBLE(*((FloatDef *) &$Float), HTOP);
    $Dst = make_float(HTOP);
    HTOP += FLOAT_SIZE_OBJECT;
}

fconv(Src, Dst) {
    Eterm src = $Src;

    if (is_small(src)) {
        $Dst = (double) signed_val(src);
    } else if (is_big(src)) {
        if (big_to_double(src, &$Dst) < 0) {
            $BADARITH0();
        }
    } else if (is_float(src)) {
        $LOAD_DOUBLE(src, $Dst);
    } else {
        $BADARITH0();
    }
}

FLOAT_OP(Src1, OP, Src2, Dst) {
    ERTS_NO_FPE_CHECK_INIT(c_p);
    $Dst = $Src1 $OP $Src2;
    ERTS_NO_FPE_ERROR(c_p, $Dst, $BADARITH0());
}

i_fadd(Src1, Src2, Dst) {
    $FLOAT_OP($Src1, +, $Src2, $Dst);
}

i_fsub(Src1, Src2, Dst) {
    $FLOAT_OP($Src1, -, $Src2, $Dst);
}

i_fmul(Src1, Src2, Dst) {
    $FLOAT_OP($Src1, *, $Src2, $Dst);
}

i_fdiv(Src1, Src2, Dst) {
    $FLOAT_OP($Src1, /, $Src2, $Dst);
}

i_fnegate(Src, Dst) {
    ERTS_NO_FPE_CHECK_INIT(c_p);
    $Dst = -$Src;
    ERTS_NO_FPE_ERROR(c_p, $Dst, $BADARITH0());
}

%unless NO_FPE_SIGNALS
fclearerror() {
    ERTS_FP_CHECK_INIT(c_p);
}

i_fcheckerror() {
    ERTS_FP_ERROR(c_p, freg[0].fd, $BADARITH0());
}
%endif
