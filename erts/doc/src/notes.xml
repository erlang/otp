<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE chapter SYSTEM "chapter.dtd">

<chapter>
  <header>
    <copyright>
      <year>2004</year><year>2023</year>
      <holder>Ericsson AB. All Rights Reserved.</holder>
    </copyright>
    <legalnotice>
      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at
 
          http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.

    </legalnotice>

    <title>ERTS Release Notes</title>
    <prepared>otp_appnotes</prepared>
    <docno>nil</docno>
    <date>nil</date>
    <rev>nil</rev>
    <file>notes.xml</file>
  </header>
  <p>This document describes the changes made to the ERTS application.</p>

<section><title>Erts 14.0</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>If a local fun was called while reloading the
	    <em>exact same</em> module that defined said fun, there
	    was a small window in which the call would land in code
	    that was yet to be fully loaded.</p>
          <p>
	    Own Id: OTP-18016</p>
        </item>
        <item>
          <p>
	    Fix the TLS distribution to work when starting Erlang in
	    embedded mode and a connection is done before kernel is
	    fully started.</p>
          <p>
	    Own Id: OTP-18248 Aux Id: PR-6227 GH-6085 </p>
        </item>
        <item>
          <p>
	    erl <c>-remsh</c> has been improved to provide better
	    error reasons and work when using a shell without
	    terminal support (that is an "oldshell").</p>
          <p>
	    Own Id: OTP-18271 Aux Id: PR-6279 </p>
        </item>
        <item>
          <p>
	    Fix so that <c>-fno-omit-frame-pointer</c> is applied to
	    all of the Erlang VM when using the JIT so that tools,
	    such as perf, can crawl the process stacks.</p>
          <p>
	    Own Id: OTP-18274 Aux Id: PR-6048 </p>
        </item>
        <item>
          <p>
	    Compilation server now support unicode paths in
	    compilation server for filesystems that are encoded with
	    unicode.</p>
          <p>
	    Own Id: OTP-18277 Aux Id: PR-6306 </p>
        </item>
        <item>
	    <p>Reintroduced the optimization that turned anonymous
	    functions without free variables into literals
	    (OTP-15195). This optimization was lost during
	    refactoring in OTP 24.</p> <p>Alongside this fix, we plan
	    to remove the "fun creator pid" feature in OTP 27. See
	    <seeguide
	    marker="system/general_info:upcoming_incompatibilities#fun_creator_pid">Upcoming
	    Potential Incompatibilities</seeguide> for more
	    details.</p>
          <p>
	    Own Id: OTP-18498</p>
        </item>
        <item>
	    <p>Fixed a crash during tracing on certain platforms that
	    cannot use the machine stack for Erlang code (mainly
	    OpenBSD and Linux with musl).</p>
          <p>
	    Own Id: OTP-18561</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    The <seecref
	    marker="erts:erl_nif#enif_set_option"><c>enif_set_option()</c></seecref>
	    function has been introduced into the NIF API. It can be
	    used in order to set the <seecref
	    marker="erts:erl_nif#delay_halt"><c>ERL_NIF_OPT_DELAY_HALT</c></seecref>
	    and/or <seecref
	    marker="erts:erl_nif#on_halt"><c>ERL_NIF_OPT_ON_HALT</c></seecref>
	    options with which one can synchronize halt of the
	    runtime system with flushing enabled and execution of
	    NIFs. <seemfa marker="erts:erlang#halt/2">Halt of the
	    runtime system <i>without</i> flushing enabled</seemfa>,
	    now terminates the runtime system without execution of
	    <c>atexit</c>/<c>on_exit</c> handlers that may have been
	    installed into the runtime system which might be
	    considered a potential incompatibility.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-17771 Aux Id: GH-5325, PR-6370 </p>
        </item>
        <item>
	    <p>The TTY/terminal subsystem has been rewritten by
	    moving more code to Erlang from the old linked-in driver
	    and implementing all the I/O primitives needed in a NIF
	    instead. </p><p> On Unix platforms the user should not
	    notice a lot of difference, besides better handling of
	    unicode characters and fixing of some long standing bugs.
	    </p><p> Windows users will notice that erl.exe has the
	    same functionality as a normal Unix shell and that
	    werl.exe has been removed and replaced with a symlink to
	    erl.exe. This makes the Windows Erlang terminal
	    experience identical to that of Unix. </p><p> The
	    re-write brings with it a number of bug fixes and feature
	    additions:</p> <list> <item>The TTY is now reset when
	    Erlang exits, fixing zsh to not break when terminating an
	    Erlang session.</item> <item><c>standard_error</c> now
	    uses the same unicode mode as <c>standard_io</c>.</item>
	    <item>Hitting backspace when searching the shell history
	    with an empty search string no longer breaks the
	    shell.</item> <item>Tab expansion now works on remote
	    nodes started using the JCL interface.</item> <item>It is
	    now possible to configure the shell slogan and the
	    session slogans (that is the texts that appear when you
	    start an Erlang shell). See the kernel documentation for
	    more details.</item> <item>Added shell:start_interactive
	    for starting the interactive shell from a non-interactive
	    Erlang session (for example an escript).</item> <item>On
	    Windows, when starting in detached mode the standard
	    handler are now set to <c>nul</c> devices instead of
	    being unset.</item> <item> Standard I/O now always
	    defaults to <c>unicode</c> mode if supported. Previously
	    the default was <c>latin1</c> if the runtime system had
	    been started with <c>-oldshell</c> or <c>-noshell</c>
	    (for example in an <c>escript</c>). To send raw bytes
	    over standard out, one now explicitly has to specify
	    <c>io:setopts(standard_io, [{encoding, latin1}]).</c>
	    </item> </list>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-17932 Aux Id: PR-6144 GH-3150 GH-3390 GH-4343
	    GH-4225 </p>
        </item>
        <item>
	    <p>Add support for socket on Windows.</p> <list>
	    <item>Pre release status.</item> <item>Error codes not
	    finalized.</item> <item>No explicit support for Windows
	    specific options (socket options, flags for read and
	    write).</item> <item>New async api for Windows
	    (completion). See the <c>Asynchronous calls</c> chapter
	    in the (Socket Usage) Users Guide.</item> <item>To ensure
	    platform independence, gen_tcp and gen_udp is
	    <em>intended</em> to be used (not yet updated).</item>
	    </list>
          <p>
	    Own Id: OTP-18029</p>
        </item>
        <item>
          <p>
	    Updated configure cache for Windows. This makes configure
	    run faster on Windows as many more checks are cached.</p>
          <p>
	    Own Id: OTP-18053 Aux Id: PR-6101 </p>
        </item>
        <item>
	    <p>Optimized record updates.</p>
          <p>
	    Own Id: OTP-18126 Aux Id: PR-6033 </p>
        </item>
        <item>
	    <p>Optimized internal hash routines.</p>
          <p>
	    Own Id: OTP-18131</p>
        </item>
        <item>
	    <p> As announced when OTP 25 was released, <seeguide
	    marker="erts:time_correction#Multi_Time_Warp_Mode">multi
	    time warp mode</seeguide> is now enabled by default. This
	    assumes that all code executing on the system is
	    <seeguide
	    marker="erts:time_correction#Time_Warp_Safe_Code">time
	    warp safe</seeguide>. </p> <p> If you have old code in
	    the system that is not time warp safe, you now explicitly
	    need to start the system in <seeguide
	    marker="erts:time_correction#No_Time_Warp_Mode">no time
	    warp mode</seeguide> (or <seeguide
	    marker="erts:time_correction#Single_Time_Warp_Mode">singe
	    time warp mode</seeguide> if it is partially time warp
	    safe) in order to avoid problems. When starting the
	    system in no time warp mode, the system behaves as it did
	    prior to the introduction of the extended time
	    functionality introduced in OTP 18. </p> <p> If you have
	    code that is not time warp safe, you are strongly
	    encouraged to change this so that you can use multi time
	    warp mode. Compared to no time warp mode, multi time warp
	    mode improves scalability and performance as well as
	    accuracy and precision of time measurements. </p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-18135 Aux Id: GH-4965, PR-6046 </p>
        </item>
        <item>
	    <p>There are several new optimization for binary syntax
	    in the JIT:</p> <list> <item>Creation and matching of
	    binaries with segments of fixed sizes have been
	    optimized.</item> <item>Creation and matching of UTF-8
	    segments have been optimized.</item> <item>Appending to
	    binaries has been optimized.</item> </list>
          <p>
	    Own Id: OTP-18137 Aux Id: PR-6259, PR-6404, PR-6576,
	    PR-6804 </p>
        </item>
        <item>
	    <p>As announced since the release of OTP 24, support
	    for:</p> <list> <item><p> version 4 node container types
	    in the external term format are now mandatory. That is,
	    references supporting up to 5 32-bit integer identifiers,
	    and process and port identifiers with support for 64-bit
	    data storage. The distribution flag <seeguide
	    marker="erts:erl_dist_protocol#DFLAG_V4_NC"><c>DFLAG_V4_NC</c></seeguide>
	    is therefor now also mandatory. OTP has since OTP 24
	    supported this. Also note that the external format
	    produced by <c>term_to_binary()</c> and
	    <c>term_to_iovec()</c> will unconditionally produce pids,
	    ports, and references supporting this larger format.
	    </p></item> <item><p> the <seeguide
	    marker="erts:erl_dist_protocol#new_link_protocol">new
	    link protocol</seeguide> introduced in OTP 23.3 is now
	    mandatory. The distribution flag <seeguide
	    marker="erts:erl_dist_protocol#DFLAG_UNLINK_ID"><c>DFLAG_UNLINK_ID</c></seeguide>
	    is therefor now also mandatory. </p></item> </list>
	    <p>Due to the above, OTP 26 nodes will refuse to connect
	    to OTP nodes from releases prior to OTP 24.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-18140 Aux Id: PR-6072 </p>
        </item>
        <item>
	    <p>Optimization of <seeguide
	    marker="system/reference_manual:processes#process-aliases"><i>process
	    aliases</i></seeguide> made possible now that support for
	    <seeguide marker="erl_dist_protocol#DFLAG_V4_NC">version
	    4 node container types</seeguide> in the external term
	    format is mandatory.</p>
          <p>
	    Own Id: OTP-18141 Aux Id: OTP-18140, PR-6073 </p>
        </item>
        <item>
	    <p>The compiler and JIT now generate better code for
	    creation of small maps where all keys are literals known
	    at compile time.</p>
          <p>
	    Own Id: OTP-18185 Aux Id: GH-6139 </p>
        </item>
        <item>
          <p>
	    When <c>erl -eval</c> fails to execute a command, an
	    error description is printed to standard_error.</p>
          <p>
	    Own Id: OTP-18227 Aux Id: PR-6254 </p>
        </item>
        <item>
	    <p>Support for UTF-8 atoms and strings in the NIF
	    interface including new functions
	    <c>enif_make_new_atom</c>, <c>enif_make_new_atom_len</c>
	    and <c>enif_get_string_length</c>.</p>
          <p>
	    Own Id: OTP-18334 Aux Id: PR-6434 </p>
        </item>
        <item>
	    <p>The following <seemfa
	    marker="kernel:inet#setopts/2"><c>inet:setopts/2</c></seemfa>
	    options have been introduced:</p> <taglist> <tag><seeerl
	    marker="kernel:inet#option-reuseport"><c>reuseport</c></seeerl></tag>
	    <item><p>Reuse of local port. Load balancing may or may
	    not be provided depending on underlying OS.</p></item>
	    <tag><seeerl
	    marker="kernel:inet#option-reuseport_lb"><c>reuseport_lb</c></seeerl></tag>
	    <item><p>Reuse of local port. Load balancing
	    provided.</p></item> <tag><seeerl
	    marker="kernel:inet#option-exclusiveaddruse"><c>exclusiveaddruse</c></seeerl></tag>
	    <item><p>Exclusive address/port usage on Windows. This
	    socket option is Windows specific and will silently be
	    ignored on other systems.</p></item> </taglist> <p>The
	    behavior of setting <seeerl
	    marker="kernel:inet#option-reuseaddr"><c>reuseaddr</c></seeerl>
	    on Windows have changed in a <em>backwards
	    incompatible</em> way. The underlying <c>SO_REUSEADDR</c>
	    socket option is now only set if both the <c>reusaddr</c>
	    and the <c>reuseport</c> <c>inet</c> options have been
	    set. This since the underlying <c>SO_REUSEADDR</c> socket
	    option on Windows behaves similar to how BSD behaves if
	    both the underlying socket options <c>SO_REUSEADDR</c>
	    and <c>SO_REUSEPORT</c> have been set. See the
	    documentation of the <c>reuseaddr</c> option for more
	    information.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-18344 Aux Id: PR-6522, PR-6944, OTP-18324,
	    PR-6481, GH-6461 </p>
        </item>
        <item>
	    <p><c>erlang:display/1</c> will now print large maps in a
	    more readable way (similar to how small maps are
	    printed).</p>
          <p>
	    Own Id: OTP-18360 Aux Id: PR-6497 </p>
        </item>
        <item>
	    <p>The BIFs <c>min/2</c> and <c>max/2</c> are now allowed
	    to be used in guards and match specs.</p>
          <p>
	    Own Id: OTP-18367 Aux Id: GH-6544 </p>
        </item>
        <item>
          <p>
	    Fail <c>enif_init_resource_type</c> and friends by
	    returning NULL if not called during load/upgrade. Old
	    behavior was undefined.</p>
          <p>
	    Own Id: OTP-18369</p>
        </item>
        <item>
          <p>
	    New option <c>include_shared_binaries</c> for the
	    <c>max_heap_size</c> process limit. If set to
	    <c>true</c>, large binaries (> 64 bytes), which may be
	    referred by several processes, are included in the memory
	    sum compared against the <c>max_heap_size</c> limit.</p>
          <p>
	    Own Id: OTP-18410 Aux Id: GH-5889, PR-6345 </p>
        </item>
        <item>
	    <p>Map comprehensions as suggested in EEP 58 has now been
	    implemented.</p>
          <p>
	    Own Id: OTP-18413 Aux Id: EEP-58, PR-6727 </p>
        </item>
        <item>
	    <p>Some map operations have been optimized by changing
	    the internal sort order of atom keys. This changes the
	    (undocumented) order of how atom keys in small maps are
	    printed and returned by <c>maps:to_list/1</c> and
	    <c>maps:next/1</c>. The new order is unpredictable and
	    may change between different invocations of the Erlang
	    VM.</p>
	    <p>For applications where order is important, there is a
	    new function <c>maps:iterator/2</c> for creating
	    iterators that return the map elements in a deterministic
	    order. There are also new modifiers <c>k</c> and <c>K</c>
	    for the format string for <c>io:format()</c> to support
	    printing map elements ordered.</p>
          <p>
	    Own Id: OTP-18414 Aux Id: PR-6151 </p>
        </item>
        <item>
	    <p>Reduced memory usage of
	    <c>file:read_file_info/1,2</c></p>
          <p>
	    Own Id: OTP-18424 Aux Id: PR-6716 </p>
        </item>
        <item>
	    <p>Add new function <c>current_stacktrace</c> for trace
	    match specifications used by
	    <c>erlang:trace_pattern/3</c>. </p><p> This new option
	    puts the current stacktrace of the caller into the trace
	    message sent to the trace receiver.</p>
          <p>
	    Own Id: OTP-18425 Aux Id: PR-6628, GH-5333 </p>
        </item>
        <item>
          <p>
	    The amount of significant bits in node local process
	    identifiers and port identifiers has been extended from
	    28 bits to 60 bits on 64-bit runtime systems. This makes
	    these identifiers large enough to in practice never
	    having to be reused during the life time of a node.</p>
          <p>
	    Own Id: OTP-18435 Aux Id: PR-6827 </p>
        </item>
        <item>
          <p>
	    New trace feature <c>call_memory</c>. Similar to
	    <c>call_time</c> tracing, but instead of measure
	    accumulated time in traced functions it measures
	    accumulated heap space consumed by traced functions. It
	    can be used to compare how much different functions are
	    contributing to garbage collection being triggered.</p>
          <p>
	    Own Id: OTP-18440 Aux Id: PR-6351 </p>
        </item>
        <item>
	    <p>It is no longer necessary to enable a feature in the
	    runtime system in order to load modules that are using
	    it. It is sufficient to enable the feature in the
	    compiler when compiling it.</p>
	    <p>That means that to use feature <c>maybe_expr</c> in
	    Erlang/OTP 26, it is sufficient to enable it during
	    compilation.</p>
	    <p>In Erlang/OTP 27, feature <c>maybe_expr</c> will be
	    enabled by default, but it will be possible to disable
	    it.</p>
          <p>
	    Own Id: OTP-18445</p>
        </item>
        <item>
	    <p> Handling of <c>on_load</c> modules during boot has
	    been improved by adding an extra step in the boot order
	    for embedded mode that runs all <c>on_load</c> handlers,
	    instead of relying on explicit invocation of them, later,
	    when the kernel supervision tree starts. </p><p> This is
	    mostly a code improvement and OTP internal simplification
	    to avoid future bugs and to simplify code maintenance.
	    </p>
          <p>
	    Own Id: OTP-18447</p>
        </item>
        <item>
          <p>
	    Introduced the <seeerl
	    marker="erts:erlang#term_to_binary_local"><c>local</c></seeerl>
	    option of <seemfa
	    marker="erts:erlang#term_to_binary/2"><c>term_to_binary/2</c></seemfa>
	    and <seemfa
	    marker="erts:erlang#term_to_iovec/2"><c>term_to_iovec/2</c></seemfa>.</p>
          <p>
	    Own Id: OTP-18477 Aux Id: PR-7006 </p>
        </item>
        <item>
          <p>
	    Document the commonly used practice to create and store
	    static atoms at NIF load time in callbacks <c>load</c> or
	    <c>upgrade</c>.</p>
          <p>
	    Own Id: OTP-18483 Aux Id: PR-6888 </p>
        </item>
        <item>
          <p>
	    Optimize <c>ets:lookup_element</c> for uncompressed
	    tables by using a more efficient method to copy the term
	    from ETS to the heap of the calling process.</p>
          <p>
	    Own Id: OTP-18493 Aux Id: PR-6272 </p>
        </item>
        <item>
	    <p>The default encoding of atoms by <c>term_to_binary</c>
	    and <c>term_to_iovec</c> have changed from Latin1 to
	    UTF-8. The old encoding can still be obtained with
	    options <c>{minor_version, 1}</c>.</p> <p>Apart from
	    encoding code points between 128 and 255 with two bytes
	    (UTF-8) instead of one, most atoms will occupy one less
	    byte as the length field use only one byte instead of two
	    if possible.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-18505 Aux Id: PR-6991 </p>
        </item>
        <item>
          <p>
	    The version of zlib included in the Erlang/OTP source
	    code is now 1.2.13.</p>
          <p>
	    Own Id: OTP-18517</p>
        </item>
        <item>
          <p>
	    <c>gen_tcp:send/*</c>, <c>gen_udp:send/*</c> and
	    <c>gen_sctp:send/*</c> have been optimized to use the
	    infamous receive reference optimization, so now sending
	    should not have bad performance when the calling process
	    has a large message queue.</p>
          <p>
	    Own Id: OTP-18520 Aux Id: GH-6455 </p>
        </item>
        <item>
	    <p>Added the new built-in type <c>dynamic()</c>
	    introduced in EEP-61, improving support for gradual type
	    checkers.</p>
          <p>
	    Own Id: OTP-18522</p>
        </item>
        <item>
          <p>
	    Optimize <c>maps:merge/2</c> memory consumption for small
	    maps (&lt;33 keys) by reusing key tuples or entire maps
	    if the result map has the same number of keys as any of
	    the argument maps.</p>
          <p>
	    Own Id: OTP-18523 Aux Id: PR-7004 </p>
        </item>
        <item>
          <p>
	    Optimize <c>maps:merge/2</c> memory consumption further
	    for small maps by mutating 2nd map to use literal key
	    tuple of 1st map if both have the same keys.</p>
          <p>
	    Own Id: OTP-18524 Aux Id: PR-7004, OTP-18523 </p>
        </item>
        <item>
	    <p><c>ceil/1</c>, <c>floor/1</c>, <c>is_bitstring/1</c>,
	    <c>is_boolean/1</c>, <c>is_function/2</c>, and
	    <c>tuple_size/1</c> can now be used in match
	    specifications.</p>
          <p>
	    Own Id: OTP-18526 Aux Id: GH-7045 </p>
        </item>
        <item>
          <p>
	    Allow IPv6 addresses as host in <c>http</c> packets
	    decoded by <c>erlang:decode_packet/3</c> and
	    <c>gen_tcp</c> packet option. The IPv6 address should be
	    enclosed within <c>[]</c> according to RFC2732.</p>
          <p>
	    Own Id: OTP-18540 Aux Id: PR-6900 </p>
        </item>
        <item>
          <p>
	    Removed the experimental <c>erts_alloc_config</c> module.
	    It no longer produced good configurations and cannot be
	    fixed in a reasonably backwards compatible manner. It has
	    since OTP 25 been deprecated and scheduled for removal in
	    OTP 26.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-18549 Aux Id: PR-7105 </p>
        </item>
        <item>
          <p>
	    ERTS internal thread names have been changed. All threads
	    created by ERTS now have a prefix <c>erts_</c> followed
	    by a type name potentially followed by an integer index.
	    For example, normal schedulers are now named
	    <c>erts_sched_&lt;IX&gt;</c>, dirty CPU schedulers
	    <c>erts_dcpus_&lt;IX&gt;</c>, and dirty IO schedulers
	    <c>erts_dios_&lt;IX&gt;</c>. NIF and driver thread names
	    are truncated at 15 characters regardless of whether the
	    underlying platform support more characters or not.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-18552 Aux Id: PR-6973 </p>
        </item>
        <item>
          <p>
	    Further robustify implementation of large maps (> 32
	    keys). Keys that happen to have same internal 32-bit hash
	    values are now put in collision nodes which are traversed
	    with linear search. This removes the demand for the
	    internal hash function when salted to eventually produce
	    different hashes for all possible pairs of unequal terms.</p>
          <p>
	    Own Id: OTP-18569</p>
        </item>
        <item>
	    <p>In Erlang/OTP 27, <c>0.0</c> will no longer be
	    considered to be exactly equal to <c>-0.0</c>. See
	    <seeguide
	    marker="system/general_info:upcoming_incompatibilities#float_matching">Upcoming
	    Potential Incompatibilities</seeguide>.</p>
          <p>
	    Own Id: OTP-18574</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 13.2.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    If a runtime system which was starting the distribution
	    already had existing pids, ports, or references referring
	    to a node with the same nodename/creation pair that the
	    runtime system was about to use, these already existing
	    pids, ports, or references would not work as expected in
	    various situations after the node had gone alive. This
	    could only occur if the runtime system was communicated
	    such pids, ports, or references prior to the distribution
	    was started. That is, it was extremely unlikely to happen
	    unless the distribution was started dynamically and was
	    even then very unlikely to happen. The runtime system now
	    checks for already existing pids, ports, and references
	    with the same nodename/creation pair that it is about to
	    use. If such are found another creation will be chosen in
	    order to avoid these issues.</p>
          <p>
	    Own Id: OTP-18570 Aux Id: PR-7190 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 13.2.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a bug in the loader that prevented certain
	    modules compiled with <c>no_ssa_opt</c> from being
	    loaded.</p>
          <p>
	    Own Id: OTP-18519 Aux Id: GH-7024 </p>
        </item>
        <item>
          <p>
	    Implementations of the <seecref
	    marker="erts:driver_entry#call"><c>call()</c></seecref>
	    driver callback that returned a faulty encoded result
	    could cause a memory leak and could cause invalid data on
	    the heap of the processes calling <seemfa
	    marker="erts:erlang#port_call/3"><c>erlang:port_call/3</c></seemfa>.</p>
          <p>
	    Own Id: OTP-18525 Aux Id: PR-7049 </p>
        </item>
        <item>
	    <p>Fixed a memory corruption issue when upgrading code.
	    The bug was introduced in <c>OTP 25.3</c></p>
          <p>
	    Own Id: OTP-18553</p>
        </item>
        <item>
	    <p>Fixed configure tests for a few ARM-specific
	    instructions, which prevented the emulator from being
	    built on some platforms.</p>
          <p>
	    Own Id: OTP-18554</p>
        </item>
        <item>
          <p>
	    Aliases created in combination with a monitor using the
	    <c>{alias, explicit_unalias}</c> option stopped working
	    from remote nodes when a <c>'DOWN'</c> signal had been
	    received due to the monitor or if the monitor was removed
	    using the <c>erlang:demonitor()</c> BIF.</p>
          <p>
	    This bug was introduced in OTP 24.3.4.10 and OTP 25.3.</p>
          <p>
	    Own Id: OTP-18557 Aux Id: PR-7131, OTP-18496 </p>
        </item>
        <item>
	    <p>In rare circumstances, bit syntax matching of an
	    invalid code point for a <c>utf32</c> would crash the
	    runtime system.</p>
          <p>
	    Own Id: OTP-18560</p>
        </item>
        <item>
          <p>
	    Building the runtime system failed when native atomic
	    support was missing. Note that execution on such systems
	    have only been rudimentary tested.</p>
          <p>
	    Own Id: OTP-18563 Aux Id: GH-7114, PR-7159 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 13.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a bug on Windows where
	    <c>file:read_file_info/1</c> would fail for files with
	    corrupt metadata.</p>
          <p>
	    Own Id: OTP-18348 Aux Id: GH-6356 </p>
        </item>
        <item>
          <p>
	    Fix <c>process_info(_, binary)</c> to again include
	    "writable binaries" which were lost in OTP-25.0. Writable
	    binaries are an optimization used when binaries are
	    appended upon in a loop.</p>
          <p>
	    Own Id: OTP-18373 Aux Id: PR-6574, GH-6573 </p>
        </item>
        <item>
          <p>
	    Fix rare race when receiving fragmented messages on a
	    terminating connection. Could potentially cause memory
	    leaks as well as double free crashes. Bug exists since
	    OTP 22.0.</p>
          <p>
	    Own Id: OTP-18382 Aux Id: PR-6585 </p>
        </item>
        <item>
          <p>
	    Fixed bug that could maybe cause problems when a file
	    descriptor number is closed by a linked in driver and
	    then opened (reused) and passed to <c>enif_select</c> by
	    a NIF. No actual symptoms seen, only failed internal
	    assertions in debug build.</p>
          <p>
	    Own Id: OTP-18391</p>
        </item>
        <item>
          <p>
	    The runtime system could crash when tracing a process
	    executing on a dirty scheduler.</p>
          <p>
	    Own Id: OTP-18398 Aux Id: PR-6495, GH-6448, GH-5984 </p>
        </item>
        <item>
	    <p>In the binary syntax, attempting to match out integers
	    with size exceeding 2 GiB could crash the runtime
	    system.</p>
          <p>
	    Own Id: OTP-18406 Aux Id: GH-6701 </p>
        </item>
        <item>
	    <p>Fixed edge case in floating-point negation where <c>A
	    = 0.0, B = -A</c> did not produce <c>B = -0.0</c> on
	    x86_64 JIT.</p>
          <p>
	    Own Id: OTP-18411 Aux Id: GH-6717 </p>
        </item>
        <item>
	    <p>Fixed an issue in the JIT that could crash the
	    emulator on some platforms.</p>
          <p>
	    Own Id: OTP-18418</p>
        </item>
        <item>
          <p>
	    Added meta data to the windows installer.</p>
          <p>
	    Own Id: OTP-18429 Aux Id: PR-6587 GH-4232 GH-6537 </p>
        </item>
        <item>
	    <p>Fixed ETS insertion order into <c>bag</c> and
	    <c>duplicate_bag</c> of tuples with identical keys when
	    passed in a list to <c>ets:insert/2</c>. The insert order
	    has been head-to-tail but was accidentally changed in OTP
	    23.0. For <c>bag</c> it was reverted (tail-to-head),
	    while for <c>duplicate_bag</c> it was sometimes reverted
	    depending on the length of the list and number of
	    "reductions" left for the calling process.</p> <p>This
	    fix changes the insert order of <c>ets:insert/2</c> back
	    to always be head-to-tail of the list argument.</p>
          <p>
	    Own Id: OTP-18434 Aux Id: PR-6752 </p>
        </item>
        <item>
	    <p>With the JIT for AArch64 (AMD64), calling <c>bxor</c>
	    in with non-integer arguments in a guard would crash the
	    runtime system.</p>
          <p>
	    Own Id: OTP-18454 Aux Id: PR-6839 </p>
        </item>
        <item>
          <p>
	    Fix bug regarding process flag <c>max_heap_size</c>.
	    Could cause strange behavior when a process was killed
	    due to exceeding the limit.</p>
          <p>
	    Own Id: OTP-18457 Aux Id: PR-6816 </p>
        </item>
        <item>
          <p>
	    Fixed binary comprehensions to be similar to other
	    creation of binary data with respect to its contribution
	    of triggering garbage collection.</p>
          <p>
	    Own Id: OTP-18458</p>
        </item>
        <item>
	    <p>In rare circumstances, when a process exceeded its
	    allowed heap size set by option <c>max_heap_size</c>, it
	    would not be killed as it should be, but instead enter a
	    kind of zombie state it would never get out of.</p>
          <p>
	    Own Id: OTP-18463 Aux Id: PR-6858 </p>
        </item>
        <item>
	    <p>Instead of crashing, the <c>list_to_integer/1</c> and
	    <c>list_to_integer/2</c> BIFs now raise the
	    <c>system_limit</c> exception for overlong lists that
	    can't be converted to integers. Similarly, the
	    <c>string:to_integer/1</c> BIF now returns
	    <c>{error,system_limit}</c> for overlong lists.</p>
          <p>
	    Own Id: OTP-18475 Aux Id: PR-6897 </p>
        </item>
        <item>
          <p>
	    Active process aliases of a process at its termination
	    leaked memory.</p>
          <p>
	    Own Id: OTP-18496 Aux Id: GH-6947, PR-6953 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Support for fully asynchronous distributed signaling
	    where send operations <em>never</em> block. This
	    functionality is by default disabled and can be enabled
	    per process. For more information see the documentation
	    of <seeerl
	    marker="erts:erlang#process_flag_async_dist"><c>process_flag(async_dist,
	    Bool)</c></seeerl>.</p>
          <p>
	    Own Id: OTP-18374 Aux Id: PR-6632 </p>
        </item>
        <item>
	    <p>Added the <c>+JPperf no_fp</c> option to explicitly
	    disable Erlang frame pointers otherwise added when using
	    the <c>+JPperf map</c> option.</p>
          <p>
	    Own Id: OTP-18426</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 13.1.5</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Comparisons between small numbers and pids or ports
	    would in some edge cases say that the number was greater
	    than the pid or port, violating the term order.</p>
          <p>
	    Own Id: OTP-18415</p>
        </item>
        <item>
          <p>
	    <c>process_info(Pid, status)</c> when <c>Pid /=
	    self()</c> could return an erroneous result.</p>
          <p>
	    Own Id: OTP-18421 Aux Id: PR-6806 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 13.1.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a bug in selective receive optimization that
	    could crash 32-bit emulators.</p>
          <p>
	    Own Id: OTP-18383 Aux Id: ERIERL-905 </p>
        </item>
        <item>
          <p>
	    A race condition which was very rarely triggered could
	    cause the signal queue of a process to become
	    inconsistent causing the runtime system to crash.</p>
          <p>
	    Own Id: OTP-18388 Aux Id: OTP-17462, PR-6662 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 13.1.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix perf/gdb JIT symbols to not contain
	    <c>CodeInfoPrologue</c> for the JIT internal module
	    erts_beamasm.</p>
          <p>
	    Own Id: OTP-18256 Aux Id: PR-6316 </p>
        </item>
        <item>
          <p>
	    Fixed minor memory leaks.</p>
          <p>
	    Own Id: OTP-18281 Aux Id: PR-4840 </p>
        </item>
        <item>
	    <p>Fix bugs in <c>ets:insert</c> and
	    <c>ets:insert_new</c> when called with a list of tuples
	    to insert while a concurrent process either deletes or
	    renames the table. The table deletion could be done with
	    <c>ets:delete/1</c> or be caused by termination of the
	    table owning process.</p> <p>Symptoms are either VM crash
	    or strange incorrect behavior from the insert operation.
	    The risk of triggering the bugs increases with the length
	    of the list of tuple to insert. Bugs exist since OTP
	    23.0.</p>
          <p>
	    Own Id: OTP-18284 Aux Id: PR-6305 </p>
        </item>
        <item>
          <p>
	    Boost execution of scheduled thread progress jobs. This
	    to prevent memory exhaustion in extremely rapid
	    allocation/deallocation scenarios, such as repeated ETS
	    table creations/deletions.</p>
          <p>
	    Own Id: OTP-18294 Aux Id: PR-6390 </p>
        </item>
        <item>
          <p>
	    Fix segv crash during crash dumping an ETS table doing
	    <c>ets:delete_all_objects</c>.</p>
          <p>
	    Own Id: OTP-18295</p>
        </item>
        <item>
          <p>
	    Spec for function net:if_names/0 incorrect</p>
          <p>
	    Own Id: OTP-18296 Aux Id: OTP-16464 </p>
        </item>
        <item>
          <p>
	    Fix bug in <c>binary_to_term</c> decoding a binary term
	    2Gbyte or larger.</p>
          <p>
	    Own Id: OTP-18306 Aux Id: GH-6393, PR-6401 </p>
        </item>
        <item>
	    <p>Documentation of <seemfa
	    marker="erts:erlang#module_loaded/1"><c>erlang:module_loaded/1</c></seemfa>
	    has been adjusted:</p> <list><item> It did not previously
	    say that the BIF only returns <c>true</c> for modules
	    loaded as <i>current code</i>. </item><item> The warning
	    claiming that the BIF should only be used by the code
	    server has been removed. </item></list>
          <p>
	    Own Id: OTP-18313 Aux Id: PR-6456 </p>
        </item>
        <item>
          <p>
	    Fix <c>list_to_atom/1</c> for negative code points. Could
	    either return with a positive code point or fail with an
	    incorrect exception.</p>
          <p>
	    Own Id: OTP-18321</p>
        </item>
        <item>
	    <p>Fix rare bug causing VM crash when sending to a pid of
	    a spawning process returned from
	    <c>erlang:processes/0</c>.</p> <p>Only seen when provoked
	    by system process literal_area_collector, triggered by a
	    module purge operation, on a VM started with +Meamin (no
	    customized allocators).</p>
          <p>
	    Own Id: OTP-18322 Aux Id: PR-6479 </p>
        </item>
        <item>
          <p>
	    gen_udp:open/2 with option(s) add_membership or
	    drop_membership would drop earlier options.</p>
          <p>
	    Own Id: OTP-18323 Aux Id: #6476 </p>
        </item>
        <item>
          <p>
	    The <seemfa
	    marker="kernel:inet#setopts/2"><c>inet:setopts/2</c></seemfa>
	    <c>{reuseaddr, true}</c> option will now be ignored on
	    Windows unless the socket is an UDP socket. For more
	    information see the documentation of the <c>reuseaddr</c>
	    option part of the documentation of
	    <c>inet:setopts/2</c>.</p>
          <p>
	    Prior to OTP 25 the <c>{reuseaddr, true}</c> option was
	    ignored for all sockets on Windows, but as of OTP 25.0
	    this was changed so that it was not ignored for any
	    sockets.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-18324 Aux Id: GH-6461, PR-6481 </p>
        </item>
        <item>
          <p>
	    Fix bug in <c>binary_to_term</c> decoding a list of
	    length 1G or longer.</p>
          <p>
	    Own Id: OTP-18328 Aux Id: GH-6439, PR-6440 </p>
        </item>
        <item>
	    <p>Fix bug in <c>binary_to_term</c> (and distributed
	    receive) when decoding a large map (&gt;32 keys) with
	    unsorted small maps (&lt;= 32) as keys of the large
	    map.</p>
	    <p>This was only a problem if the term was encoded by
	    <c>erl_interface</c>, <c>jinterface</c> or otherwise, as
	    the VM itself always encodes small maps with sorted
	    keys.</p>
	    <p>The "binary_to_term" would appear as successful but
	    the created large map was internally inconsistent. The
	    smaller key-maps could not be found with maps:get and
	    friends. Other operations such as map compare and merge
	    could probably also give incorrect results.</p>
          <p>
	    Own Id: OTP-18343 Aux Id: GH-6496 </p>
        </item>
        <item>
          <p>
	    Fix Windows bug in <c>open_port({spawn, Command}, ..)</c>
	    when <c>Command</c> is found via the OS search PATH and
	    that directory path contains white spaces. The port
	    program would start but the command line arguments to it
	    could be incorrect.</p>
          <p>
	    Own Id: OTP-18345 Aux Id: GH-6387, PR-6396 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 13.1.2.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a bug in selective receive optimization that
	    could crash 32-bit emulators.</p>
          <p>
	    Own Id: OTP-18383 Aux Id: ERIERL-905 </p>
        </item>
        <item>
          <p>
	    A race condition which was very rarely triggered could
	    cause the signal queue of a process to become
	    inconsistent causing the runtime system to crash.</p>
          <p>
	    Own Id: OTP-18388 Aux Id: OTP-17462, PR-6662 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 13.1.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Add abandon carrier free utilization limit
	    (<c>+Muacful</c>) option to erts_alloc. This option
	    allows the user to mark unused segments in a memory
	    carrier as re-useable by the OS if needed.</p>
          <p>
	    This functionality was a non-configurable default before
	    Erlang/OTP 25, but removed due to performance issues.</p>
          <p>
	    Own Id: OTP-18290 Aux Id: ERIERL-866 PR-6378 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 13.1.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Listen sockets created with the socket module, leaked
	    (erlang-) monitors.</p>
          <p>
	    Own Id: OTP-18240 Aux Id: #6285 </p>
        </item>
        <item>
          <p>
	    <seemfa
	    marker="erts:erlang#dist_ctrl_get_data_notification/1">Notifications
	    about available distribution data</seemfa> sent to
	    distribution controller processes could be lost.
	    Distribution controller processes can be used when
	    implementing an alternative distribution carrier. The
	    default distribution over tcp was not effected and the
	    bug was also not present on x86/x86_64 platforms.</p>
          <p>
	    Own Id: OTP-18258 Aux Id: GH-6309, PR-6324 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 13.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed inconsistency bugs in <seeerl
	    marker="kernel:global"><c>global</c></seeerl> due to
	    <c>nodeup</c>/<c>nodedown</c> messages not being
	    delivered before/after traffic over connections. Also
	    fixed various other inconsistency bugs and deadlocks in
	    both <seeerl
	    marker="kernel:global_group"><c>global_group</c></seeerl>
	    and <c>global</c>.</p>
          <p>
	    As building blocks for these fixes, a new BIF <seemfa
	    marker="erts:erlang#nodes/2"><c>erlang:nodes/2</c></seemfa>
	    has been introduced and <seemfa
	    marker="kernel:net_kernel#monitor_nodes/2"><c>net_kernel:monitor_nodes/2</c></seemfa>
	    has been extended.</p>
          <p>
	    The <seecom
	    marker="erts:erl#hidden"><c>-hidden</c></seecom> and
	    <seecom
	    marker="erts:erl#connect_all"><c>-connect_all</c></seecom>
	    command line arguments did not work if multiple instances
	    were present on the command line which has been fixed.
	    The new kernel parameter <seeapp
	    marker="kernel:kernel_app#connect_all"><c>connect_all</c></seeapp>
	    has also been introduced in order to replace the
	    <c>-connect_all</c> command line argument.</p>
          <p>
	    Own Id: OTP-17934 Aux Id: PR-6007 </p>
        </item>
        <item>
          <p>
	    Fixed IPv6 multicast_if and membership socket options.</p>
          <p>
	    Own Id: OTP-18091 Aux Id: #5789 </p>
        </item>
        <item>
          <p>
	    Accept funs (NEW_FUN_EXT) with incorrectly encoded size
	    field. This is a workaround for a bug (OTP-18104)
	    existing in OTP 23 and 24 that could cause incorrect size
	    fields in certain cases. The emulator does not use the
	    decoded size field, but <c>erl_interface</c> still does
	    and is not helped by this workaround.</p>
          <p>
	    Own Id: OTP-18093 Aux Id: OTP-18104, PR-5987 </p>
        </item>
        <item>
          <p>
	    Fixed issue with inet:getifaddrs hanging on pure IPv6
	    Windows</p>
          <p>
	    Own Id: OTP-18102 Aux Id: #5904 </p>
        </item>
        <item>
	    <p>Fix faulty distribution encoding of terms with
	    either</p> <list> <item>a fun with bit-string or
	    export-fun in its environment when encoded toward a not
	    yet established (pending) connection</item> <item>or a
	    fun with a binary/bitstring, in its environment,
	    referring to an off-heap binary (larger than 64
	    bytes).</item> </list> <p>The symptom could be failed
	    decoding on the receiving side leading to aborted
	    connection. Fix OTP-18093 is a workaround for theses bugs
	    that makes the VM accepts such faulty encoded funs.</p>
	    <p>The first encoding bug toward pending connection
	    exists only in OTP 23 and 24, but the second one exists
	    also on OTP 25.</p>
          <p>
	    Own Id: OTP-18104 Aux Id: OTP-18093 </p>
        </item>
        <item>
          <p>
	    Fixed emulator crash that could happen during crashdump
	    generation of ETS tables with options <c>ordered_set</c>
	    and <c>{write_concurrency,true}</c>.</p>
          <p>
	    Own Id: OTP-18144 Aux Id: GH-5981 </p>
        </item>
        <item>
          <p>
	    Retrieval of monotonic and system clock resolution on
	    MacOS could cause a crash and/or erroneous results.</p>
          <p>
	    Own Id: OTP-18160 Aux Id: PR-6103 </p>
        </item>
        <item>
          <p>
	    Fix bug where the max allowed size of <c>erl +hmax</c>
	    was lower than what was allowed by <c>process_flag</c>.</p>
          <p>
	    Own Id: OTP-18161 Aux Id: PR-6081 </p>
        </item>
        <item>
	    <p>On computers with ARM64 (AArch64) processors, the JIT
	    could generate incorrect code when more than 4095 bits
	    were skipped at the tail end of a binary match.</p>
          <p>
	    Own Id: OTP-18201</p>
        </item>
        <item>
	    <p>In rare circumstances, an <c>is_binary/1</c> guard
	    test could succeed when given a large integer.</p>
          <p>
	    Own Id: OTP-18216 Aux Id: GH-6239, PR-6240 </p>
        </item>
        <item>
          <p>
	    Fix bug causing <c>ets:info</c> (and sometimes
	    <c>ets:whereis</c>) to return 'undefined' for an existing
	    table if a concurrent process were doing
	    <c>ets:insert</c> with a long list on the same table.</p>
          <p>
	    Own Id: OTP-18218 Aux Id: ERIERL-855 </p>
        </item>
        <item>
          <p>
	    Fix writing and reading of more than 2 GB in a single
	    read/write operation on macOS. Before this fix attempting
	    to read/write more than 2GB would result in
	    <c>{error,einval}</c>.</p>
          <p>
	    Own Id: OTP-18222 Aux Id: PR-6248 GH-6242 </p>
        </item>
        <item>
          <p>
	    Fix bug sometimes causing emulator crash at node shutdown
	    when there are pending connections. Only seen when
	    running duel distribution protocols, inet_drv and
	    inet_tls_dist.</p>
          <p>
	    Own Id: OTP-18243 Aux Id: GH-6247, PR-6258 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>Yield when adjusting large process message queues due
	    to</p> <list> <item><p>copying terms from a literal area
	    prior to removing the literal area.</p></item>
	    <item><p>changing the <c>message_queue_data</c> state
	    from <c>on_heap</c> to <c>off_heap</c>.</p></item>
	    </list> <p>The message queue adjustment work will now be
	    interleaved with all other types of work that processes
	    have to do, even other message queue adjustment work.</p>
          <p>
	    Own Id: OTP-17340 Aux Id: PR-6133 </p>
        </item>
        <item>
          <p>
	    Add rudimentary debug feature (option) for the
	    inet-driver based sockets, such as gen_tcp and gen_udp.</p>
          <p>
	    Own Id: OTP-18032</p>
        </item>
        <item>
          <p>
	    Introduced the <c>hidden</c> and <c>dist_listen</c>
	    options to <seemfa
	    marker="kernel:net_kernel#start/2"><c>net_kernel:start/2</c></seemfa>.</p>
          <p>
	    Also documented the <seecom
	    marker="erts:erl#dist_listen"><c>-dist_listen</c></seecom>
	    command line argument which was erroneously documented as
	    a <c>kernel</c> parameter and not as a command line
	    argument.</p>
          <p>
	    Own Id: OTP-18107 Aux Id: PR-6009 </p>
        </item>
        <item>
          <p>
	    New documentation chapter "Debugging NIFs and Port
	    Drivers" under Interoperability Tutorial.</p>
          <p>
	    Own Id: OTP-18109</p>
        </item>
        <item>
          <p>
	    Add new API function erl_features:configurable/0</p>
          <p>
	    Own Id: OTP-18199 Aux Id: PR-5790 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 13.0.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The <seemfa
	    marker="erlang#monitor/3"><c>monitor/3</c></seemfa> BIF
	    did not apply options to the created monitor if the
	    target process or port did not exist. That is, the
	    corresponding down message would get a <c>`DOWN`</c> tag
	    even if a custom tag had been set, and the returned
	    reference was not an alias even if the <c>alias</c>
	    option had been passed.</p>
          <p>
	    Own Id: OTP-18190 Aux Id: GH-6185, PR-6209 </p>
        </item>
        <item>
          <p>
	    The <seemfa
	    marker="erts:erlang#monotonic_time/1"><c>erlang:monotonic_time/1</c></seemfa>,
	    <seemfa
	    marker="erts:erlang#system_time/1"><c>erlang:system_time/1</c></seemfa>,
	    <seemfa
	    marker="erts:erlang#time_offset/1"><c>erlang:time_offset/1</c></seemfa>,
	    and <seemfa
	    marker="kernel:os#system_time/1"><c>os:system_time/1</c></seemfa>
	    BIFs erroneously failed when passed the argument
	    <c>native</c>.</p>
          <p>
	    Own Id: OTP-18197 Aux Id: GH-6165, PR-6213 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 13.0.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Distributed exit signals could be lost under the
	    following conditions:</p> <list> <item><p> An exit signal
	    from a parent process to a child process was lost if:</p>
	    <list> <item><p> the parent process terminated before the
	    spawn request that created the child had completed,
	    </p></item> <item><p> the spawn request set up a link
	    between parent and child </p></item> <item><p> the spawn
	    request was distributed, and </p></item> <item><p> the
	    exit reason was larger than one machine word. </p></item>
	    </list> </item> <item><p> Loss of a connection over which
	    a not yet completed spawn request was ongoing could cause
	    loss of exit signals. Such loss of exit signals was very
	    rare. Besides the above described connection loss also
	    the following conditions had to be satisfied:</p> <list>
	    <item><p> The spawn request that was interrupted by the
	    connection loss also had to set up a link between the
	    parent process and the child process. </p></item>
	    <item><p> The parent process that issued the spawn
	    request also had to be terminating while the spawn
	    request was interrupted by the connection loss.
	    </p></item> <item><p> The same parent process also had to
	    have made other spawn requests to other nodes than to the
	    node to which the connection was lost. </p></item>
	    <item><p> These spawn requests to the other nodes also
	    had to set up links. </p></item> <item><p> These spawn
	    requests to the other nodes also had to be not yet
	    completed at the time of the connection loss. That is,
	    the spawn reply from the child process had not yet
	    reached the parent process. </p></item> </list> <p>If all
	    the conditions above were met, exit signals to the
	    children spawned due to the above described spawn
	    requests to other nodes <em>could</em> be lost.</p>
	    <p>The above bug also caused a significant memory leak
	    when it was triggered since the destruction of the parent
	    process never completed.</p> </item> </list>
          <p>
	    Own Id: OTP-18164 Aux Id: PR-6114 </p>
        </item>
        <item>
          <p>
	    A race could cause <c>process_info(Pid,
	    message_queue_len)</c> on other processes to return
	    invalid results.</p>
          <p>
	    Own Id: OTP-18169 Aux Id: PR-6134 </p>
        </item>
        <item>
          <p>
	    Fixed reduction counting for handling process system
	    tasks.</p>
          <p>
	    Own Id: OTP-18170 Aux Id: PR-6135 </p>
        </item>
        <item>
          <p>
	    Priority elevation of terminating processes did not work
	    which could cause execution of such processes to be
	    delayed.</p>
          <p>
	    Own Id: OTP-18175 Aux Id: PR-6142 </p>
        </item>
        <item>
          <p>
	    An unlink operation made by a process that terminated
	    before the unlink operation completed, i.e., before it
	    had received an unlink-ack signal from the linked
	    process, caused an exit signal to erroneously be sent
	    from the terminating process to the process being
	    unlinked. This exit signal would most often be ignored by
	    the receiver, but if the receiver of the exit signal
	    concurrently set up a new link, it could receive the exit
	    signal with the actual exit reason of the terminating
	    process instead of a <c>noproc</c> exit reason. It is
	    however very hard to detect that this has happened and
	    has no obvious negative consequences, so it should be
	    considered harmless.</p>
          <p>
	    A distributed unlink-ack signal received by a terminating
	    process was also not properly removed which could cause a
	    minor memory leak.</p>
          <p>
	    Own Id: OTP-18177 Aux Id: PR-6150 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 13.0.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>On computers with the ARM64 (AArch64) architecture
	    (such as Apple Silicon Macs) a <c>rem</c> expression
	    followed by a <c>div</c> expression with the same
	    operands could evaluate to the wrong result if the result
	    of the <c>rem</c> expression was unused.</p>
          <p>
	    Own Id: OTP-18143</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 13.0.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A <c>spawn_reply</c> signal from a remote node could be
	    delayed and be delivered after other signals from the
	    newly spawned process.</p>
          <p>
	    When this bug triggered, the connection to the node where
	    the process was spawned sometimes could be taken down due
	    to the bug. The following error message would then be
	    logged if this happened: <c>Missing 'spawn_reply' signal
	    from the node &lt;RemoteNode&gt; detected by &lt;Pid&gt;
	    on the node &lt;LocalNode&gt;. The node
	    &lt;RemoteNode&gt; probably suffers from the bug with
	    ticket id OTP-17737.</c></p>
          <p>
	    This bug only affected processes which had enabled
	    <seeerl
	    marker="erts:erlang#process_flag_message_queue_data"><c>off_heap</c>
	    <c>message_queue_data</c></seeerl> and parallel reception
	    of signals had been automatically enabled.</p>
          <p>
	    This bug was introduced in OTP 25.0, ERTS version 13.0.</p>
          <p>
	    Own Id: OTP-18105 Aux Id: OTP-16982, PR-6003 </p>
        </item>
        <item>
          <p>
	    Fixed type spec of <c>erlang:system_info(dist_ctrl)</c>.</p>
          <p>
	    Own Id: OTP-18106 Aux Id: PR-5992 </p>
        </item>
        <item>
          <p>
	    The zlib built in to the runtime system has been updated
	    to version 1.2.12. (Note that on most platforms, the
	    platform's own zlib is used.)</p>
          <p>
	    Own Id: OTP-18123 Aux Id: GH-5994 </p>
        </item>
        <item>
          <p>
	    The <c>erlang:is_alive()</c> BIF could return <c>true</c>
	    before configured distribution service was available.
	    This bug was introduced in OTP 25.0 ERTS version 13.0.</p>
          <p>
	    The <c>erlang:monitor_node()</c> and
	    <c>erlang:monitor()</c> BIFs could erroneously fail even
	    though configured distribution service was available.
	    This occurred if these BIFs were called after the
	    distribution had been started using dynamic node name
	    assignment but before the name had been assigned.</p>
          <p>
	    Own Id: OTP-18124 Aux Id: OTP-17558, PR-6032 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 13.0</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The socket option 'reuseaddr' is *no longer* ignored on
	    Windows.</p>
          <p>
	    Own Id: OTP-17447 Aux Id: GH-4819 </p>
        </item>
        <item>
          <p>
	    The growth rate of writable binaries has been adjusted to
	    only increase by 20% after 16MB in size. Before this
	    change the size would always double.</p>
          <p>
	    This change may degrade write performance of large
	    binaries.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-17569 Aux Id: PR-4793 </p>
        </item>
        <item>
          <p>
	    Fix reduction counting bug in <c>re:run</c> that caused
	    the function to yield too frequently when doing
	    <c>global</c> matches.</p>
          <p>
	    Own Id: OTP-17661 Aux Id: PR-5165 </p>
        </item>
        <item>
          <p>
	    Fix spelling mistakes in epmd error messages.</p>
          <p>
	    Own Id: OTP-17758 Aux Id: PR-5391 </p>
        </item>
        <item>
          <p>
	    Fix bug where the "newshell" would trigger a newline at
	    the column width of the terminal, even if the next
	    character to be printed was a newline. This would cause
	    the terminal to render two newlines instead of one.</p>
          <p>
	    Own Id: OTP-17779 Aux Id: GH-5403 PR-5599 </p>
        </item>
        <item>
          <p>
	    Fix the memory value returned from
	    <c>ets:info(Tid,memory)</c> when the
	    <c>read_concurrency</c> option is used.</p>
          <p>
	    Before this fix the memory used by the scheduler specific
	    lock cache lines was not counted towards the total. This
	    caused the returned memory usage to be very incorrect on
	    systems with many schedulers for tables with man locks.</p>
          <p>
	    Own Id: OTP-17832 Aux Id: PR-5494 </p>
        </item>
        <item>
          <p>
	    Fix the undocumented <c>--profile_boot</c> option to work
	    again.</p>
          <p>
	    Own Id: OTP-17836 Aux Id: PR-5546 </p>
        </item>
        <item>
          <p>
	    [socket] Encode of sockaddr has been improved.</p>
          <p>
	    Own Id: OTP-18020</p>
        </item>
        <item>
          <p>
	    Fix <c>erl_child_setup</c> (the program used by
	    <c>open_port({spawn,...})</c> and <c>os:cmd/1</c>) to
	    better handle partial reads from the Erlang VM.</p>
          <p>
	    Own Id: OTP-18047 Aux Id: PR-5861 </p>
        </item>
        <item>
	    <p>The runtime system would crash when attempting to
	    create more than 33554431 atoms.</p>
          <p>
	    Own Id: OTP-18068 Aux Id: GH-5903 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Users can now configure ETS tables with the
	    <c>{write_concurrency, auto}</c> option. This option
	    forces tables to automatically change the number of locks
	    that are used at run-time depending on how much
	    concurrency is detected. The <c>{decentralized_counters,
	    true}</c> option is enabled by default when
	    <c>{write_concurrency, auto}</c> is active.</p>
          <p>
	    Benchmark results comparing this option with the other
	    ETS optimization options are available here:</p>
          <p>
	    https://erlang.org/bench/ets_bench_result_lock_config.html</p>
          <p>
	    Own Id: OTP-15991 Aux Id: PR-5208 </p>
        </item>
        <item>
          <p>
	    The net module now works on Windows.</p>
          <p>
	    Own Id: OTP-16464</p>
        </item>
        <item>
	    <p>To enable more optimizations, BEAM files compiled with
	    OTP 21 and earlier cannot be loaded in OTP 25.</p>
          <p>
	    Own Id: OTP-16702</p>
        </item>
        <item>
          <p>
	    Optimize minor garbage collection for processes with
	    large number of binaries, funs and/or external
	    pids/ports/refs. This is a continuation of the
	    optimization (OTP-17602) released in OTP-24.1.</p>
          <p>
	    Own Id: OTP-16852 Aux Id: ERL-1347, PR-5195 </p>
        </item>
        <item>
          <p>
	    The signal queue of a process with
	    message_queue_data=off_heap* has been optimized to allow
	    parallel reception of signals from multiple processes. </p>
          <p>
	    This is possible to do as Erlang only guarantees that
	    signals (i.e., message signals and non-message signals)
	    sent from a single process to another process are ordered
	    in send order. However, there are no ordering guarantees
	    for signals sent from different processes to a particular
	    process. Therefore, several processes can send signals in
	    parallel to a specific process without synchronizing with
	    each other. However, such signal sending was previously
	    always serialized as the senders had to acquire the lock
	    for the outer signal queue of the receiving process. This
	    parallel signal sending optimization yields much better
	    scalability for signal sending than what was previously
	    possible, see
	    https://erlang.org/bench/sigq_bench_result.html for
	    benchmark results.</p>
          <p>
	    * Information about how to enable the
	    message_queue_data=off_heap setting can be found in the
	    documentation of the function erlang:process_flag/2.</p>
          <p>
	    Own Id: OTP-16982 Aux Id: PR-5020 </p>
        </item>
        <item>
	    <p>The JIT now works for 64-bit ARM processors.</p>
          <p>
	    Own Id: OTP-17119 Aux Id: PR-4869 </p>
        </item>
        <item>
          <p>
	    Added support for the compile attribute <c>-nifs()</c> to
	    empower compiler and loader with information about which
	    functions may be overridden as NIFs by
	    <c>erlang:load_nif/2</c>. It is recommended to use this
	    attribute in all modules that load NIF libraries.</p>
          <p>
	    Own Id: OTP-17151 Aux Id: ERIERL-590, PR-5479 </p>
        </item>
        <item>
          <p>
	    A test case has been added to the otp_SUITE that test
	    that the dependency versions for OTP's applications are
	    correct. The test case uses xref to check if the used
	    functions are available in the specified dependency
	    versions. The test case depends on the Erlang/OTP team's
	    testing infrastructure and will be skipped if its
	    dependencies are not met.</p>
          <p>
	    Own Id: OTP-17224</p>
        </item>
        <item>
          <p>
	    An Erlang installation directory is now relocatable on
	    the file system given that the paths in the
	    installation's <c>RELEASES</c> file are paths that are
	    relative to the installations root directory. The
	    <c>`release_handler:create_RELEASES/4</c> function can
	    generate a <c>RELEASES</c> file with relative paths if
	    its <c>RootDir</c> parameter is set to the empty string.</p>
          <p>
	    Own Id: OTP-17304</p>
        </item>
        <item>
	    <p>The following distribution flags are now mandatory:
	    <c>DFLAG_BIT_BINARIES</c>, <c>DFLAG_EXPORT_PTR_TAG</c>,
	    <c>DFLAG_MAP_TAGS</c>, <c>DFLAG_NEW_FLOATS</c>, and
	    <c>DFLAG_FUN_TAGS</c>. This mainly concerns libraries or
	    application that implement the distribution protocol
	    themselves.</p>
          <p>
	    Own Id: OTP-17318 Aux Id: PR-4972 </p>
        </item>
        <item>
          <p>
	    Input for <c>configure</c> scripts adapted to
	    <c>autoconf</c> 2.71.</p>
          <p>
	    Own Id: OTP-17414 Aux Id: PR-4967 </p>
        </item>
        <item>
	    <p>When binary construction using the binary syntax
	    fails, the error message printed in the shell and by
	    <c>erl_error:format_exception/3,4</c> will contain more
	    detailed information about what went wrong.</p>
          <p>
	    Own Id: OTP-17504 Aux Id: GH-4971, PR-5281, PR-5752 </p>
        </item>
        <item>
          <p>
	    The configuration files <seecom
	    marker="erts:erl"><c>.erlang</c></seecom>, <seeguide
	    marker="system/reference_manual:distributed"><c>.erlang.cookie</c></seeguide>
	    and <seeerl
	    marker="stdlib:beam_lib#.erlang.crypt"><c>.erlang.crypt</c></seeerl>
	    can now be located in the XDG Config Home directory.</p>
          <p>
	    See the documentation for each file and
	    <c>filename:basedir/2</c> for more details.</p>
          <p>
	    Own Id: OTP-17554 Aux Id: GH-5016 PR-5408 OTP-17821 </p>
        </item>
        <item>
          <p>
	    Make <c>byte_size/1</c> and <c>binary_part/2/3</c>
	    callable from match specs (in ETS and tracing).</p>
          <p>
	    Own Id: OTP-17555 Aux Id: PR-5027 </p>
        </item>
        <item>
          <p>
	    Dynamic node name improvements: <c>erlang:is_alive/0</c>
	    changed to return true for pending dynamic node name and
	    new function <c>net_kernel:get_state/0</c>.</p>
          <p>
	    Own Id: OTP-17558 Aux Id: OTP-17538, PR-5111, GH-5402 </p>
        </item>
        <item>
          <p>
	    A new option called <c>short</c> has been added to the
	    functions <c>erlang:float_to_list</c> and
	    <c>erlang:float_to_binary</c>. This option creates the
	    shortest correctly rounded string representation of the
	    given float that can be converted back to the same float
	    again.</p>
          <p>
	    Own Id: OTP-17562 Aux Id: GH-4492 </p>
        </item>
        <item>
          <p>
	    The tagged tuple tests and fun-calls have been optimized
	    and are now a little bit cheaper than previously.</p>
          <p>
	    These optimizations become possible after making sure
	    that all boxed terms have at least one word allocated
	    after the arity word. This has been accomplished by
	    letting all empty tuples refer to the same empty tuple
	    literal which also reduces memory usage for empty tuples.</p>
          <p>
	    Own Id: OTP-17608</p>
        </item>
        <item>
          <p>
	    The signal queue benchmark in parallel_messages_SUITE and
	    the ETS benchmark in ets_SUITE have benchmark result
	    visualization HTML pages with "fill-screen" buttons to
	    make the graphs bigger. This button did not work as
	    intended before. When pressing the button for a graph,
	    the last graph got replaced with a bigger version and not
	    the one over the button. This is now fixed.</p>
          <p>
	    Own Id: OTP-17630</p>
        </item>
        <item>
          <p>
	    The test case num_bif_SUITE:t_float_to_string previously
	    failed sometimes as it assumed a certain rounding of
	    floats printed with sprintf but the rounding type is
	    platform specific.</p>
          <p>
	    Own Id: OTP-17636</p>
        </item>
        <item>
          <p>
	    Optimize interpreter to create heap binaries of small
	    match contexts if possible.</p>
          <p>
	    This optimization was already done in the JIT.</p>
          <p>
	    Own Id: OTP-17660 Aux Id: PR-5164 </p>
        </item>
        <item>
          <p>
	    Optimize integer multiplication for x86 JIT</p>
          <p>
	    Own Id: OTP-17667 Aux Id: PR-5237 </p>
        </item>
        <item>
          <p>
	    Removed use of node creation value zero as a wildcard.
	    Also prevent zero from being used as creation by
	    <c>erl_interface</c> and <c>jinterface</c> nodes.</p>
          <p>
	    Own Id: OTP-17682 Aux Id: PR-5347 </p>
        </item>
        <item>
          <p>
	    Distributed spawn operations now require <seeguide
	    marker="erts:erl_dist_protocol#DFLAG_SPAWN">distributed
	    <c>spawn_request()</c></seeguide> support. Distributed
	    <c>spawn_request()</c> was introduced in OTP 23. That is,
	    distributed spawn operations against Erlang nodes of
	    releases prior to OTP 23 will fail.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-17683 Aux Id: PR-5306 </p>
        </item>
        <item>
	    <p>The Erlang compiler now includes type information in
	    BEAM files, and the JIT can now use that type information
	    to do optimizations such as eliminating or simplifying
	    type tests.</p>
          <p>
	    Own Id: OTP-17684 Aux Id: PR-5316, PR-5664 </p>
        </item>
        <item>
	    <p>Improved the JIT's support for external tools like
	    <c>perf</c> and <c>gdb</c>, allowing them to show line
	    numbers and even the original Erlang source code when
	    that can be found.</p>
	    <p>To aid them in finding the source code, the
	    <c>absolute_path</c> compiler option has been added to
	    embed the absolute file path of a module.</p>
          <p>
	    Own Id: OTP-17685</p>
        </item>
        <item>
          <p>
	    Add [32-bit] to the Erlang shell title row for 32-bit
	    VMs.</p>
          <p>
	    Own Id: OTP-17717 Aux Id: PR-5290 </p>
        </item>
        <item>
	    <p>Instructions for how to build the runtime system for
	    iOS/iPadOS can now be found in
	    <c>HOWTO/INSTALL.md</c>.</p>
          <p>
	    Own Id: OTP-17728 Aux Id: PR-5284 </p>
        </item>
        <item>
          <p>
	    Add support for static Elixir NIF modules with
	    non-alphanumeric characters by using new macro
	    <c>STATIC_ERLANG_NIF_LIBNAME</c>.</p>
          <p>
	    Own Id: OTP-17729 Aux Id: PR-5477 </p>
        </item>
        <item>
          <p>
	    Add new function <c>caller_line</c> to for trace match
	    specifications used by erlang:trace_pattern/3.</p>
          <p>
	    This new option puts the line number of the caller into
	    the trace message sent to the trace receiver.</p>
          <p>
	    Own Id: OTP-17753 Aux Id: PR-5305 GH-5297 </p>
        </item>
        <item>
          <p>
	    A new <c>erl</c> command line argument <c>+ssrct</c> has
	    been introduced which will cause the runtime system to
	    skip reading CPU topology information. This reduce start
	    up time especially when the CPU topology is large.
	    Reading of CPU topology information is now also skipped
	    if a user defined CPU topology is set using the
	    <c>+sct</c> command line argument.</p>
          <p>
	    Own Id: OTP-17762 Aux Id: GH-5204, PR-5219 </p>
        </item>
        <item>
          <p>
	    The default time warp mode will change in Erlang/OTP 26.
	    Added a warning about this upcoming potential
	    incompatibility to the documentation.</p>
          <p>
	    Own Id: OTP-17772 Aux Id: GH-4965 PR-5644 </p>
        </item>
        <item>
	    <p>The emulator will no longer mark unused memory as
	    discardable (e.g. through <c>madvise(2)</c>), as it
	    caused more problems than it solved.</p>
          <p>
	    Own Id: OTP-17824</p>
        </item>
        <item>
	    <p>When a record matching or record update fails, a
	    <c>{badrecord,ExpectedRecordTag}</c> exception used to be
	    raised. In this release, the exception has been changed
	    to <c>{badrecord,ActualValue}</c>, where
	    <c>ActualValue</c> is the actual that was found instead
	    of the expected record.</p>
          <p>
	    Own Id: OTP-17841 Aux Id: PR-5694 </p>
        </item>
        <item>
          <p>
	    Removed the previously undocumented and unsupported
	    <c>emem</c> tool.</p>
          <p>
	    Own Id: OTP-17892 Aux Id: PR-5591 </p>
        </item>
        <item>
          <p>
	    Remove version number from the default install path on
	    Windows.</p>
          <p>
	    Own Id: OTP-17899 Aux Id: PR-5524 </p>
        </item>
        <item>
          <p>
	    On Windows apply the limit flag
	    JOB_OBJECT_LIMIT_BREAKAWAY_OK in the Erlang service to be
	    able to start a OS child process with a different session
	    number.</p>
          <p>
	    Own Id: OTP-17927 Aux Id: PR-5283 </p>
        </item>
        <item>
          <p>
	    New erl command line option <c>+IOs</c>. It can be used
	    to disable scheduler thread poll optimization, which has
	    been seen to cause degraded event latency in some use
	    cases.</p>
          <p>
	    Own Id: OTP-17945 Aux Id: GH-4759, PR-5809 </p>
        </item>
        <item>
          <p>
	    An API for multihomed SCTP connect has been added in the
	    guise of <c>gen_sctp:connectx_init/*</c></p>
          <p>
	    Own Id: OTP-17951 Aux Id: PR-5656 </p>
        </item>
        <item>
          <p>
	    [socket] Add encoding of the field hatype of the type
	    sockaddr_ll (family 'packet').</p>
          <p>
	    Own Id: OTP-17968 Aux Id: OTP-16464 </p>
        </item>
        <item>
          <p>
	    A cross compilation issue has been fixed about finding
	    libdlpi during the configure phase.</p>
          <p>
	    Own Id: OTP-17985 Aux Id: GH-5728 </p>
        </item>
        <item>
          <p>
	    <seemfa
	    marker="erts:erlang#process_info/2"><c>process_info/2</c></seemfa>
	    now also accepts <c>parent</c> as argument. When passed,
	    the process identifier of the parent process will be
	    returned.</p>
          <p>
	    Own Id: OTP-17999 Aux Id: PR-5768 </p>
        </item>
        <item>
          <p>
	    Add function attributes to <c>erl_nif</c> and
	    <c>erl_driver</c> APis to improve compiler detection of
	    interface misuse.</p>
          <p>
	    Own Id: OTP-18006 Aux Id: PR-5932 </p>
        </item>
        <item>
          <p>
	    The exported type <seetype
	    marker="erts:erlang#send_destination"><c>erlang:send_destination/0</c></seetype>
	    has been introduced.</p>
          <p>
	    Own Id: OTP-18033 Aux Id: PR-2926, GH-5376 </p>
        </item>
        <item>
          <p>
	    Building of the C/C++ make dependencies on Windows has
	    been optimized to be a lot faster.</p>
          <p>
	    Own Id: OTP-18036 Aux Id: PR-5846 </p>
        </item>
        <item>
	    <p><c>file:sync/1</c> will now use the
	    <c>F_BARRIERFSYNC</c> flag when available on Mac OS.</p>
          <p>
	    Own Id: OTP-18038</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 12.3.2.11</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix bug sometimes causing emulator crash at node shutdown
	    when there are pending connections. Only seen when
	    running duel distribution protocols, inet_drv and
	    inet_tls_dist.</p>
          <p>
	    Own Id: OTP-18243 Aux Id: GH-6247, PR-6258 </p>
        </item>
        <item>
	    <p>Fix bug in <c>binary_to_term</c> (and distributed
	    receive) when decoding a large map (&gt;32 keys) with
	    unsorted small maps (&lt;= 32) as keys of the large
	    map.</p>
	    <p>This was only a problem if the term was encoded by
	    <c>erl_interface</c>, <c>jinterface</c> or otherwise, as
	    the VM itself always encodes small maps with sorted
	    keys.</p>
	    <p>The "binary_to_term" would appear as successful but
	    the created large map was internally inconsistent. The
	    smaller key-maps could not be found with maps:get and
	    friends. Other operations such as map compare and merge
	    could probably also give incorrect results.</p>
          <p>
	    Own Id: OTP-18343 Aux Id: GH-6496 </p>
        </item>
        <item>
          <p>
	    Implementations of the <seecref
	    marker="erts:driver_entry#call"><c>call()</c></seecref>
	    driver callback that returned a faulty encoded result
	    could cause a memory leak and could cause invalid data on
	    the heap of the processes calling <seemfa
	    marker="erts:erlang#port_call/3"><c>erlang:port_call/3</c></seemfa>.</p>
          <p>
	    Own Id: OTP-18525 Aux Id: PR-7049 </p>
        </item>
        <item>
          <p>
	    Aliases created in combination with a monitor using the
	    <c>{alias, explicit_unalias}</c> option stopped working
	    from remote nodes when a <c>'DOWN'</c> signal had been
	    received due to the monitor or if the monitor was removed
	    using the <c>erlang:demonitor()</c> BIF.</p>
          <p>
	    This bug was introduced in OTP 24.3.4.10 and OTP 25.3.</p>
          <p>
	    Own Id: OTP-18557 Aux Id: PR-7131, OTP-18496 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 12.3.2.10</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Active process aliases of a process at its termination
	    leaked memory.</p>
          <p>
	    Own Id: OTP-18496 Aux Id: GH-6947, PR-6953 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 12.3.2.9</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    <c>process_info(Pid, status)</c> when <c>Pid /=
	    self()</c> could return an erroneous result.</p>
          <p>
	    Own Id: OTP-18421 Aux Id: PR-6806 </p>
        </item>
        <item>
	    <p>In rare circumstances, when a process exceeded its
	    allowed heap size set by option <c>max_heap_size</c>, it
	    would not be killed as it should be, but instead enter a
	    kind of zombie state it would never get out of.</p>
          <p>
	    Own Id: OTP-18463 Aux Id: PR-6858 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 12.3.2.8</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a bug in selective receive optimization that
	    could crash 32-bit emulators.</p>
          <p>
	    Own Id: OTP-18383 Aux Id: ERIERL-905 </p>
        </item>
        <item>
          <p>
	    A race condition which was very rarely triggered could
	    cause the signal queue of a process to become
	    inconsistent causing the runtime system to crash.</p>
          <p>
	    Own Id: OTP-18388 Aux Id: OTP-17462, PR-6662 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 12.3.2.7</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Spec for function net:if_names/0 incorrect</p>
          <p>
	    Own Id: OTP-18296 Aux Id: OTP-16464 </p>
        </item>
        <item>
          <p>
	    Fix bug in <c>binary_to_term</c> decoding a binary term
	    2Gbyte or larger.</p>
          <p>
	    Own Id: OTP-18306 Aux Id: GH-6393, PR-6401 </p>
        </item>
        <item>
          <p>
	    Fix <c>list_to_atom/1</c> for negative code points. Could
	    either return with a positive code point or fail with an
	    incorrect exception.</p>
          <p>
	    Own Id: OTP-18321</p>
        </item>
        <item>
          <p>
	    Fix bug in <c>binary_to_term</c> decoding a list of
	    length 1G or longer.</p>
          <p>
	    Own Id: OTP-18328 Aux Id: GH-6439, PR-6440 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 12.3.2.6</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    <seemfa
	    marker="erts:erlang#dist_ctrl_get_data_notification/1">Notifications
	    about available distribution data</seemfa> sent to
	    distribution controller processes could be lost.
	    Distribution controller processes can be used when
	    implementing an alternative distribution carrier. The
	    default distribution over tcp was not effected and the
	    bug was also not present on x86/x86_64 platforms.</p>
          <p>
	    Own Id: OTP-18258 Aux Id: GH-6309, PR-6324 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 12.3.2.5</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix writing and reading of more than 2 GB in a single
	    read/write operation on macOS. Before this fix attempting
	    to read/write more than 2GB would result in
	    <c>{error,einval}</c>.</p>
          <p>
	    Own Id: OTP-18222 Aux Id: PR-6248 GH-6242 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 12.3.2.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix bug causing <c>ets:info</c> (and sometimes
	    <c>ets:whereis</c>) to return 'undefined' for an existing
	    table if a concurrent process were doing
	    <c>ets:insert</c> with a long list on the same table.</p>
          <p>
	    Own Id: OTP-18218 Aux Id: ERIERL-855 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 12.3.2.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fix faulty distribution encoding of terms with
	    either</p> <list> <item>a fun with bit-string or
	    export-fun in its environment when encoded toward a not
	    yet established (pending) connection</item> <item>or a
	    fun with a binary/bitstring, in its environment,
	    referring to an off-heap binary (larger than 64
	    bytes).</item> </list> <p>The symptom could be failed
	    decoding on the receiving side leading to aborted
	    connection. Fix OTP-18093 is a workaround for theses bugs
	    that makes the VM accepts such faulty encoded funs.</p>
	    <p>The first encoding bug toward pending connection
	    exists only in OTP 23 and 24, but the second one exists
	    also on OTP 25.</p>
          <p>
	    Own Id: OTP-18104 Aux Id: OTP-18093 </p>
        </item>
        <item>
	    <p>Distributed exit signals could be lost under the
	    following conditions:</p> <list> <item><p> An exit signal
	    from a parent process to a child process was lost if:</p>
	    <list> <item><p> the parent process terminated before the
	    spawn request that created the child had completed,
	    </p></item> <item><p> the spawn request set up a link
	    between parent and child </p></item> <item><p> the spawn
	    request was distributed, and </p></item> <item><p> the
	    exit reason was larger than one machine word. </p></item>
	    </list> </item> <item><p> Loss of a connection over which
	    a not yet completed spawn request was ongoing could cause
	    loss of exit signals. Such loss of exit signals was very
	    rare. Besides the above described connection loss also
	    the following conditions had to be satisfied:</p> <list>
	    <item><p> The spawn request that was interrupted by the
	    connection loss also had to set up a link between the
	    parent process and the child process. </p></item>
	    <item><p> The parent process that issued the spawn
	    request also had to be terminating while the spawn
	    request was interrupted by the connection loss.
	    </p></item> <item><p> The same parent process also had to
	    have made other spawn requests to other nodes than to the
	    node to which the connection was lost. </p></item>
	    <item><p> These spawn requests to the other nodes also
	    had to set up links. </p></item> <item><p> These spawn
	    requests to the other nodes also had to be not yet
	    completed at the time of the connection loss. That is,
	    the spawn reply from the child process had not yet
	    reached the parent process. </p></item> </list> <p>If all
	    the conditions above were met, exit signals to the
	    children spawned due to the above described spawn
	    requests to other nodes <em>could</em> be lost.</p>
	    <p>The above bug also caused a significant memory leak
	    when it was triggered since the destruction of the parent
	    process never completed.</p> </item> </list>
          <p>
	    Own Id: OTP-18164 Aux Id: PR-6114 </p>
        </item>
        <item>
          <p>
	    A race could cause <c>process_info(Pid,
	    message_queue_len)</c> on other processes to return
	    invalid results.</p>
          <p>
	    Own Id: OTP-18169 Aux Id: PR-6134 </p>
        </item>
        <item>
          <p>
	    Fixed reduction counting for handling process system
	    tasks.</p>
          <p>
	    Own Id: OTP-18170 Aux Id: PR-6135 </p>
        </item>
        <item>
          <p>
	    Priority elevation of terminating processes did not work
	    which could cause execution of such processes to be
	    delayed.</p>
          <p>
	    Own Id: OTP-18175 Aux Id: PR-6142 </p>
        </item>
        <item>
          <p>
	    An unlink operation made by a process that terminated
	    before the unlink operation completed, i.e., before it
	    had received an unlink-ack signal from the linked
	    process, caused an exit signal to erroneously be sent
	    from the terminating process to the process being
	    unlinked. This exit signal would most often be ignored by
	    the receiver, but if the receiver of the exit signal
	    concurrently set up a new link, it could receive the exit
	    signal with the actual exit reason of the terminating
	    process instead of a <c>noproc</c> exit reason. It is
	    however very hard to detect that this has happened and
	    has no obvious negative consequences, so it should be
	    considered harmless.</p>
          <p>
	    A distributed unlink-ack signal received by a terminating
	    process was also not properly removed which could cause a
	    minor memory leak.</p>
          <p>
	    Own Id: OTP-18177 Aux Id: PR-6150 </p>
        </item>
        <item>
          <p>
	    The <seemfa
	    marker="erlang#monitor/3"><c>monitor/3</c></seemfa> BIF
	    did not apply options to the created monitor if the
	    target process or port did not exist. That is, the
	    corresponding down message would get a <c>`DOWN`</c> tag
	    even if a custom tag had been set, and the returned
	    reference was not an alias even if the <c>alias</c>
	    option had been passed.</p>
          <p>
	    Own Id: OTP-18190 Aux Id: GH-6185, PR-6209 </p>
        </item>
        <item>
          <p>
	    The <seemfa
	    marker="erts:erlang#monotonic_time/1"><c>erlang:monotonic_time/1</c></seemfa>,
	    <seemfa
	    marker="erts:erlang#system_time/1"><c>erlang:system_time/1</c></seemfa>,
	    <seemfa
	    marker="erts:erlang#time_offset/1"><c>erlang:time_offset/1</c></seemfa>,
	    and <seemfa
	    marker="kernel:os#system_time/1"><c>os:system_time/1</c></seemfa>
	    BIFs erroneously failed when passed the argument
	    <c>native</c>.</p>
          <p>
	    Own Id: OTP-18197 Aux Id: GH-6165, PR-6213 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 12.3.2.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed emulator crash that could happen during crashdump
	    generation of ETS tables with options <c>ordered_set</c>
	    and <c>{write_concurrency,true}</c>.</p>
          <p>
	    Own Id: OTP-18144 Aux Id: GH-5981 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 12.3.2.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Accept funs (NEW_FUN_EXT) with incorrectly encoded size
	    field. This is a workaround for a bug (OTP-18104)
	    existing in OTP 23 and 24 that could cause incorrect size
	    fields in certain cases. The emulator does not use the
	    decoded size field, but <c>erl_interface</c> still does
	    and is not helped by this workaround.</p>
          <p>
	    Own Id: OTP-18093 Aux Id: OTP-18104, PR-5987 </p>
        </item>
        <item>
          <p>
	    The zlib built in to the runtime system has been updated
	    to version 1.2.12. (Note that on most platforms, the
	    platform's own zlib is used.)</p>
          <p>
	    Own Id: OTP-18123 Aux Id: GH-5994 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 12.3.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Let EPMD tolerate failure when binding to IPv4/IPv6
	    loopback intefaces in addition to user-supplied addresses
	    via <c>ERL_EPMD_ADDRESS</c> or the <c>-address</c>
	    option. This can happen, for example, if the host system
	    has ipv6 disabled via the disable_ipv6 sysctl.</p>
          <p>
	    Own Id: OTP-17970 Aux Id: PR-5762 </p>
        </item>
        <item>
	    <p>Fixed a rare bug in <c>binary_to_term/1</c>,
	    <c>enif_make_map_from_arrays</c>,
	    <c>erl_drv_send_term</c>, and Erlang distribution that
	    could crash the emulator.</p>
          <p>
	    Own Id: OTP-18027</p>
        </item>
        <item>
	    <p>Fixed a rare race in <c>persistent_term:get/1,2</c>
	    that could cause it to return the value of another
	    key.</p>
          <p>
	    Own Id: OTP-18065 Aux Id: GH-5908 </p>
        </item>
        <item>
          <p>
	    Fix bug where the process message queue was left in an
	    inconsistent state when changing from on_heap to off_heap
	    message queue data causing the GC to segfault.</p>
          <p>
	    Own Id: OTP-18075 Aux Id: PR-5927 </p>
        </item>
        <item>
          <p>
	    Fix functions that convert universal to localtime (such
	    as erlang:localtime/0 and
	    erlang:universaltime_to_localtime/1) to fetch the correct
	    localtime if it is changed after the start of the VM.</p>
          <p>
	    Own Id: OTP-18076 Aux Id: ERIERL-802 PR-5905 </p>
        </item>
        <item>
          <p>
	    Fix memory leak when a process doing a distributed
	    fragmented send is sent an exit signal. Before this fix
	    the receiving node would be left with an incomplete
	    message that would remain until the nodes were
	    disconnected. The bug has existed since Erlang/OTP 21.</p>
          <p>
	    Own Id: OTP-18077 Aux Id: GH-5876 PR-5892 </p>
        </item>
        <item>
          <p>
	    Corrected the behaviour of the shutdown function when
	    using with the inet_backend = socket. It was not
	    sufficiently compatible with the "old" gen_tcp.</p>
          <p>
	    Own Id: OTP-18080 Aux Id: GH-5930 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 12.3.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p> <c>erlang:open_port({spawn, _},_)</c> has been fixed
	    on Windows to handle whitespace characters in the path
	    correctly. </p><p> This could, for example, cause
	    execution of the resolver helper program
	    <c>inet_gethost</c> to fail and instead possibly execute
	    a different program. </p>
          <p>
	    Own Id: OTP-17978 Aux Id: OTP-17958 </p>
        </item>
        <item>
          <p>
	    Fix race condition when creating crash dump that could
	    cause multiple threads to race when writing the initial
	    information in a crash dump.</p>
          <p>
	    The race condition was introduced in erts-12.2
	    (Erlang/OTP 24.2).</p>
          <p>
	    Own Id: OTP-17993 Aux Id: PR-5806 </p>
        </item>
        <item>
          <p>
	    Fix Erlang monotonic time on MacOS. Previously used OS
	    monotonic time primitive on MacOS is buggy and will not
	    be used anymore. It has been replaced with usage of
	    another OS monotonic time primitive that does not appear
	    to be buggy.</p>
          <p>
	    Own Id: OTP-17998 Aux Id: PR-5825, GH-5554 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 12.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a bug in the x86 JIT that might cause floating
	    point instructions to wrongly throw an exception.</p>
          <p>
	    Own Id: OTP-17822</p>
        </item>
        <item>
          <p>
	    Preserve correct <c>nodedown_reason</c> if supervised
	    distribution controller processes exit with <c>{shutdown,
	    Reason}</c>.</p>
          <p>
	    Own Id: OTP-17838 Aux Id: PR-5748 </p>
        </item>
        <item>
          <p>
	    Handling of <c>send_timeout</c> for <c>gen_tcp</c> has
	    been corrected so that the timeout is honored also when
	    sending 0 bytes.</p>
          <p>
	    Own Id: OTP-17840</p>
        </item>
        <item>
	    <p> By default <c>global</c> does <i>not</i> take any
	    actions to restore a fully connected network when
	    connections are lost due to network issues. This is
	    problematic for all applications expecting a fully
	    connected network to be provided, such as for example
	    <c>mnesia</c>, but also for <c>global</c> itself. A
	    network of overlapping partitions might cause the
	    internal state of <c>global</c> to become inconsistent.
	    Such an inconsistency can remain even after such
	    partitions have been brought together to form a fully
	    connected network again. The effect on other applications
	    that expects that a fully connected network is maintained
	    may vary, but they might misbehave in very subtle hard to
	    detect ways during such a partitioning. </p> <p> In order
	    to prevent such issues, we have introduced a <i>prevent
	    overlapping partitions</i> fix which can be enabled using
	    the <seeapp
	    marker="kernel:kernel_app#prevent_overlapping_partitions"><c>prevent_overlapping_partitions</c></seeapp>
	    <c>kernel(6)</c> parameter. When this fix has been
	    enabled, <c>global</c> will actively disconnect from
	    nodes that reports that they have lost connections to
	    other nodes. This will cause fully connected partitions
	    to form instead of leaving the network in a state with
	    overlapping partitions. Note that this fix <i>has</i> to
	    be enabled on <i>all</i> nodes in the network in order to
	    work properly. Since this quite substantially changes the
	    behavior, this fix is currently disabled by default.
	    Since you might get hard to detect issues without this
	    fix you are, however, <i>strongly</i> advised to enable
	    this fix in order to avoid issues such as the ones
	    described above. As of OTP 25 this fix will become
	    enabled by default. </p>
          <p>
	    Own Id: OTP-17843 Aux Id: ERIERL-732, PR-5611 </p>
        </item>
        <item>
	    <p>Corrected the type specification of
	    <c>erlang:seq_trace/2</c>.</p>
          <p>
	    Own Id: OTP-17900 Aux Id: GH-5667 </p>
        </item>
        <item>
          <p>
	    Fix memory leak when tracing on running on a process that
	    only handle system tasks or non-message signals (for
	    example process_info requests).</p>
          <p>
	    Own Id: OTP-17904 Aux Id: ERIERL-757 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Add support for using socket:sockaddr_in() and
	    socket:sockaddr_in6() when using gen_sctp, gen_tcp and
	    gen_udp. This will make it possible to use Link Local
	    IPv6 addresses.</p>
          <p>
	    Own Id: OTP-17455 Aux Id: GH-4852 </p>
        </item>
        <item>
          <p>
	    Show <c>on_load</c> failure reasons in embedded mode.</p>
          <p>
	    Own Id: OTP-17718 Aux Id: PR-5199 </p>
        </item>
        <item>
          <p>
	    Compile date saved in the Erlang VM executable has been
	    removed.</p>
          <p>
	    Own Id: OTP-17891 Aux Id: PR-5589 </p>
        </item>
        <item>
          <p>
	    Improve documentation for the dynamic node name feature.</p>
          <p>
	    Own Id: OTP-17918</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 12.2.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a memory leak in <c>file:read_file_info/2</c>
	    and <c>file:read_file/1</c> on Windows.</p>
          <p>
	    Own Id: OTP-17827 Aux Id: GH-5527 </p>
        </item>
        <item>
          <p>
	    Fix GC emulator crash when <c>spawn_request</c> was used
	    when message tracing was enabled.</p>
          <p>
	    Own Id: OTP-17871 Aux Id: PR-5612 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 12.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>When matching and constructing <c>utf16</c> segments
	    in the binary syntax, the <c>native</c> flag would be
	    ignored. That is, the endian would always be big endian
	    even on a little-endian computer (almost all modern
	    computers).</p>
          <p>
	    Own Id: OTP-17713</p>
        </item>
        <item>
          <p>
	    Fix the help printout of <c>+JPperf</c>.</p>
          <p>
	    Own Id: OTP-17749 Aux Id: PR-5378 GH-5361 </p>
        </item>
        <item>
          <p>
	    Fix bug that could cause Erlang to deadlock during
	    creation of an Erlang crash dump.</p>
          <p>
	    Own Id: OTP-17751 Aux Id: PR-5315 </p>
        </item>
        <item>
          <p>
	    Fixed C++ build errors on some aarch64 platforms.</p>
          <p>
	    Own Id: OTP-17763 Aux Id: GH-5351 </p>
        </item>
        <item>
	    <p>For macOS, the <c>Info.plist</c> file embedded in the
	    runtime system now only contains the absolute minimum
	    amount of information needed for the web view in
	    <c>wx</c> to work towards <c>localhost</c>. The other
	    fields have been removed, allowing an application
	    packaged in a bundle to specify the application name and
	    other parameter in its own <c>Info.plist</c> file.</p>
          <p>
	    Own Id: OTP-17785 Aux Id: PR-5393 </p>
        </item>
        <item>
          <p>
	    Fix bug in internal stacks (WSTACK and ESTACK) used by
	    <c>term_to_binary/2</c> to encode terms. The bug could
	    cause a segfault if a very very large map was to be
	    encoded with the <c>deterministic</c> option given.</p>
          <p>
	    Own Id: OTP-17804 Aux Id: PR-5372 </p>
        </item>
        <item>
          <p>
	    Improve the error printout when <c>open_port/2</c> fails
	    because of invalid arguments.</p>
          <p>
	    Own Id: OTP-17805 Aux Id: PR-5406 </p>
        </item>
        <item>
          <p>
	    Fix bug in crash dumps where the stackframe of a process
	    would be printed using an incorrect format.</p>
          <p>
	    Crash dump viewer has also been fixed to be able read the
	    broken stack format.</p>
          <p>
	    The bug has existed since Erlang/OTP 23.0.</p>
          <p>
	    Own Id: OTP-17814 Aux Id: PR-5462 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    An option for enabling dirty scheduler specific allocator
	    instances has been introduced. By default such allocator
	    instances are disabled. For more information see the
	    documentation of the <seecref
	    marker="erts:erts_alloc#Mdai"><c>+Mdai</c></seecref>
	    <c>erl</c> command line argument.</p>
          <p>
	    Own Id: OTP-17363 Aux Id: GH-4728, PR-5187 </p>
        </item>
        <item>
          <p>
	    Minor optimization of receive markers in message queues.</p>
          <p>
	    Own Id: OTP-17673 Aux Id: OTP-16226 </p>
        </item>
        <item>
          <p>
	    All predefined types have been added to the <c>erlang</c>
	    module together with documentation.</p>
          <p>
	    Any reference to a predefined type now links to that
	    documentation so that the user can view it.</p>
          <p>
	    Own Id: OTP-17689 Aux Id: PR-5292 </p>
        </item>
        <item>
          <p>
	    Suppress a code checker warning caused by debug builds of
	    YCF. YCF tries to get a conservative estimate of the
	    bottom of the stack by reading and returning a call stack
	    allocated variable.</p>
          <p>
	    Own Id: OTP-17719</p>
        </item>
        <item>
          <p>
	    Add file and product properties to erl.exe and werl.exe.</p>
          <p>
	    Own Id: OTP-17724 Aux Id: ERL-1224 </p>
        </item>
        <item>
          <p>
	    Micro optimization in bitstring append operations.</p>
          <p>
	    Own Id: OTP-17760 Aux Id: ERIERL-725, PR-5414 </p>
        </item>
        <item>
          <p>
	    Responsiveness of processes executing on <c>normal</c> or
	    <c>low</c> priority could suffer due to code purging or
	    literal area removal on systems with a huge amount of
	    processes. This since during these operations all
	    processes on the system were scheduled for execution at
	    once.</p>
          <p>
	    This problem has been fixed by introducing a limit on
	    outstanding purge and copy literal requests in the
	    system. By default this limit is set to twice the amount
	    of schedulers on the system. This will ensure that
	    schedulers will have enough work scheduled to perform
	    these operations as quickly as possible at the same time
	    as other work will be interleaved to a much higher
	    degree. Performance of these operations will however be
	    somewhat degraded due to the overhead of enforcing this
	    limit compared to when using a very large limit.</p>
          <p>
	    This limit can be set by passing the <c>+zosrl</c>
	    command line argument to <c>erl</c>, or by calling
	    <c>erlang:system_flag(outstanding_system_requests_limit,
	    NewLimit)</c>.</p>
          <p>
	    Own Id: OTP-17796 Aux Id: ERIERL-729, PR-5473 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 12.1.5</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The runtime system could call <c>select()</c> with a too
	    large timeout value when executing on MacOS. This could
	    in turn cause the runtime system to crash.</p>
          <p>
	    Own Id: OTP-17735 Aux Id: GH-5339 </p>
        </item>
        <item>
	    <p> The fix for Linux's behaviour when reconnecting an
	    UDP socket in PR-5120 released in OTP-24.1.2 has been
	    refined to only dissolve the socket's connection before a
	    connect if the socket is already connected, that is: only
	    for a reconnect. </p><p> This allows code to open a
	    socket with an ephemeral port, get the port number and
	    connect; without the port number changing (on Linux).
	    This turned out to have at least one valid use case
	    (besides test cases). </p><p> Should one reconnect the
	    socket then the port number may change, on Linux; it is a
	    known quirk, which can be worked around by binding to a
	    specific port number when opening the socket. If you can
	    do without an ephemeral port, that is... </p>
          <p>
	    Own Id: OTP-17736 Aux Id: GH-5279, PR-5120, OTP-17559 </p>
        </item>
        <item>
	    <p>Certain distributed signals that for various reasons
	    must to be forced into the distribution buffer even when
	    it is full would instead be lost if the distribution
	    buffer was full when sent. The effected signals:</p>
	    <list> <item><c>EXIT</c> signals with exit reasons of one
	    word size.</item> <item><c>DOWN</c> signals with exit
	    reasons of one word size.</item> <item><c>demonitor</c>
	    signals from a terminating process.</item>
	    <item><c>unlink_ack</c> signals on OTP 23 and 24.</item>
	    <item><c>spawn_reply</c> signals on OTP 23 and 24.</item>
	    </list>
          <p>
	    Own Id: OTP-17737 Aux Id: GH-5346, GH-4989 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 12.1.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix bug where a gen_tcp write error that happened during
	    a delayed_send would cause a use after free segfault.</p>
          <p>
	    Own Id: OTP-17731 Aux Id: PR-5285 </p>
        </item>
        <item>
          <p>
	    Fix x86 JIT bug where a <c>rem</c> instruction could
	    cause a segfault if given values that would cause an
	    badarith exception.</p>
          <p>
	    Own Id: OTP-17732 Aux Id: PR-5331 ERIERL-664 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 12.1.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Reduction counter was not updated before and after doing
	    <c>apply</c> operations on the runtime system with the
	    jit enabled. This caused reduction counting to get out of
	    sync if a garbage collection was made as part of the
	    <c>apply</c> operation.</p>
          <p>
	    Own Id: OTP-17675</p>
        </item>
        <item>
          <p>
	    This fixes a bug in <c>erts_factory_undo</c> that caused
	    the heap to not be reset correctly. The
	    <c>erts_factory_undo</c> function is, for example, called
	    when a <c>binary_to_term/1</c> call fails to reset the
	    heap to its state before the <c>binary_to_term/1</c>
	    call. This can cause the heap to contain invalid terms
	    which potentially can cause issues (e.g., crashes) when
	    the whole heap is scanned.</p>
          <p>
	    Own Id: OTP-17677</p>
        </item>
        <item>
	    <p>When attempting to construct a binary with an segment
	    having an illegal type for the size (e.g. an atom), there
	    could be an unnecessary memory allocation (and subsequent
	    deallocation) before the operation failed. Amended to
	    fail before allocating any memory for the binary.</p>
          <p>
	    Own Id: OTP-17686</p>
        </item>
        <item>
	    <p>Fix bug in <c>persistent_term</c> when a key-value
	    pair contains a magic reference that is referred more
	    than once. Magic references are NIF resources or returned
	    from BIFs like <c>ets:new</c>, <c>atomics:new</c>. The
	    bug could cause the memory of the referred resource to be
	    prematurely deallocated.</p> <p>The bug also apply to
	    magic references in message passing on a runtime built
	    with configure option
	    <c>--enable-sharing-preserving</c>.</p> <p>Bug exist for
	    64-bit since OTP-24.0 and for 32-bit since OTP-20.0.</p>
          <p>
	    Own Id: OTP-17700 Aux Id: GH-5271, PR-5273 </p>
        </item>
        <item>
	    <p>Fixed a crash when inspecting the stack trace of an
	    exception raised at a very high line number.</p>
	    <p>This bug was introduced in OTP 24.</p>
          <p>
	    Own Id: OTP-17712</p>
        </item>
        <item>
	    <p>The following two bugs that caused
	    <c>erlang:demonitor()</c> to behave erroneously have been
	    fixed. The bugs were only triggered if the monitor that
	    was removed by <c>demonitor()</c> had previously been
	    created simultaneously as a monitor and as an alias.</p>
	    <list> <item>A demonitor operation on a monitor created
	    using the <c>{alias, reply_demonitor}</c> option
	    erroneously behaved as if the <c>{alias,
	    explicit_unalias}</c> option had been used.</item>
	    <item>A demonitor operation did not prevent a
	    corresponding <c>'DOWN'</c> message from being delivered
	    if the monitor reference was kept as an active alias
	    after the operation. This could only occur if the
	    monitored process simultaneously terminated before the
	    demonitor signal reached it, and the exit reason was not
	    an immediate term. That is, a term larger than one
	    machine word.</item> </list>
          <p>
	    Own Id: OTP-17722 Aux Id: GH-5310, PR-5313 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 12.1.2</title>

    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    The python scripts that existed in
	    erts/lib_src/yielding_c_fun/lib/tiny_regex_c/scripts had
	    a license that was incompatible with Erlang/OTP's
	    license. This ticket removes these scripts that were not
	    used by us.</p>
          <p>
	    Own Id: OTP-17658</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 12.1.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A race between an exiting port and handling of
	    simultaneously received signals to that port could cause
	    a runtime system crash. The effected signals are
	    <c>link</c>, <c>monitor</c> and <c>demonitor</c>. On OTP
	    22 a similar race could also cause a memory leak when
	    receiving an <c>unlink</c> signal.</p>
          <p>
	    Own Id: OTP-17642 Aux Id: PR-5248 </p>
        </item>
        <item>
          <p>
	    <seemfa marker="erts:erlang#monitor/3">A user defined tag
	    on a monitor message</seemfa> could cause the runtime
	    system to crash when the monitor message had been
	    received.</p>
          <p>
	    Own Id: OTP-17646 Aux Id: GH-5221, PR-5232 </p>
        </item>
        <item>
          <p>
	    A call to <seemfa
	    marker="erts:erlang#demonitor/1"><c>erlang:demonitor(Ref)</c></seemfa>
	    where the reference <c>Ref</c> referred to an active
	    alias, but not an active monitor, caused the runtime
	    system to crash.</p>
          <p>
	    Own Id: OTP-17647 Aux Id: GH-5225, PR-5230 </p>
        </item>
        <item>
          <p>
	    The message queue of a process entered an inconsistent
	    state after a <c>receive</c> expression with an invalid
	    timeout value was executed. If the exception raised due
	    to the invalid timeout value was caught, the following
	    <c>receive</c> expression executed by the process could
	    fail to match messages already present in the message
	    queue.</p>
          <p>
	    On OTP 24 this could also cause the whole runtime system
	    to crash.</p>
          <p>
	    Own Id: OTP-17651 Aux Id: GH-5235, PR-5244 </p>
        </item>
        <item>
          <p>
	    Sending a <c>Port ! {PortOwner, close}</c> signal from a
	    process other than the port owner could erroneously
	    trigger a <c>badsig</c> exit signal being sent to the
	    port owner process even though the correct
	    <c>PortOwner</c> had been passed in the signal.</p>
          <p>
	    Own Id: OTP-17665 Aux Id: PR-5248 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 12.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Atoms with Unicode code points greater than 255 (for
	    example Greek or Cyrillic characters) would not be
	    displayed correctly by <c>crashdump_viewer</c>.</p>
          <p>
	    Own Id: OTP-17377</p>
        </item>
        <item>
          <p>
	    Fix rare minor memory leak related to jit code loading.</p>
          <p>
	    Own Id: OTP-17445 Aux Id: PR-4843 </p>
        </item>
        <item>
	    <p>The extended error information has been corrected and
	    improved for the following BIFs:
	    <c>binary_to_existing_atom/2</c>,
	    <c>list_to_existing_atom/1</c>,
	    <c>erlang:send_after/{3,4}</c>, and
	    <c>erlang:start_timer/{3,4}</c>.</p>
          <p>
	    Own Id: OTP-17449 Aux Id: GH-4900 </p>
        </item>
        <item>
          <p>
	    Fix bug provoked when building with gcc 10 and link time
	    optimization (-flto), causing Erlang compiler to crash.
	    Bug exists since OTP-24.0.</p>
          <p>
	    Own Id: OTP-17477 Aux Id: GH-4846, PR-4894 </p>
        </item>
        <item>
	    <p>Corrected bugs where builds were not reducible even
	    when the <c>deterministic</c> option was given. In
	    particular, modules with map literals with more than 32
	    elements could cause this problem.</p>
	    <p>As part of this fix, the <c>term_to_binary</c> BIF now
	    accepts the option <c>deterministic</c>.</p>
          <p>
	    Own Id: OTP-17495 Aux Id: PR-5153 </p>
        </item>
        <item>
	    <p>After an exception has been caught in a process, the
	    stack trace would be kept in the process longer than
	    necessary.</p>
          <p>
	    Own Id: OTP-17512</p>
        </item>
        <item>
          <p>
	    Fix rare race bug in memory management of distribution
	    entries. Have been seen to cause VM crash when massive
	    number of repeated concurrent failing connection
	    attempts.</p>
          <p>
	    Own Id: OTP-17513 Aux Id: GH-4964, PR-5015 </p>
        </item>
        <item>
          <p>
	    The configure test for
	    <c>--disable-esock-socket-registry</c> has been corrected
	    so disabling now works.</p>
          <p>
	    Own Id: OTP-17539</p>
        </item>
        <item>
	    <p><c>init:stop()</c> no longer unloads loaded code
	    before terminating the runtime system. On systems with
	    slow CPUs (such as Raspberry PI Zero), that can
	    significantly speed up termination of the runtime
	    system.</p>
          <p>
	    Own Id: OTP-17542 Aux Id: GH-5031, PR-5032 </p>
        </item>
        <item>
          <p>
	    Fixed match specifications that use maps in either the
	    guard or the body to work properly.</p>
          <p>
	    With this fix both keys and values in maps can be
	    expressions.</p>
          <p>
	    Various other crashes and bugs when using maps in match
	    specifications have also been fixed.</p>
          <p>
	    Own Id: OTP-17567 Aux Id: PR-4915 PR-5115 </p>
        </item>
        <item>
          <p>
	    Parsing of the result value in the native DNS resolver
	    has been made more defensive against incorrect results.</p>
          <p>
	    Own Id: OTP-17578 Aux Id: ERIERL-683 </p>
        </item>
        <item>
	    <p>When <c>binary_to_term/2</c> failed, the extended
	    error information would always blame the second argument
	    even if the actual error was in the first argument.</p>
          <p>
	    Own Id: OTP-17591 Aux Id: GH-5171 </p>
        </item>
        <item>
	    <p>On 32-bit computers, <c>binary_to_term/1,2</c> is now
	    more resilient against corrupted binaries containing maps
	    in the external format.</p>
          <p>
	    Own Id: OTP-17604</p>
        </item>
        <item>
          <p>
	    A call to <c>process_info(Pid, status)</c> could
	    erroneously report the status <c>running</c> when it
	    should have reported <c>waiting</c>. This occurred when
	    the calling process was executing on a higher priority
	    than the process being inspected. This bug has been
	    present since OTP 21.0 (erts version 10.0).</p>
          <p>
	    Own Id: OTP-17628</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Optimize memory usage of erts internal processes used
	    during code loading/purging by hibernating them after a
	    long time of inactivity.</p>
          <p>
	    Own Id: OTP-17426 Aux Id: PR-4785 </p>
        </item>
        <item>
          <p>
	    Add the type <seetype
	    marker="erlang#stacktrace"><c>erlang:stacktrace/0</c></seetype>.</p>
          <p>
	    Own Id: OTP-17453 Aux Id: PR-4764 </p>
        </item>
        <item>
          <p>
	    The arity argument of <seemfa
	    marker="erts:erlang#error/2"><c>error/2,3</c></seemfa>
	    can now be <c>none</c> to indicate that the calling
	    functions arity should be used.</p>
          <p>
	    Own Id: OTP-17456 Aux Id: PR-4764 </p>
        </item>
        <item>
          <p>
	    Optimize match spec compiler for immediate (single word)
	    constant terms.</p>
          <p>
	    Own Id: OTP-17469</p>
        </item>
        <item>
	    <p>Functions <c>erlang:set_cookie(Cookie)</c> and
	    <c>erlang:get_cookie(Node)</c> have been added for
	    completeness and to facilitate configuring distributed
	    nodes with different cookies. </p><p> The documentation
	    regarding distribution cookies has been improved to be
	    less vague. </p>
          <p>
	    Own Id: OTP-17538 Aux Id: GH-5063, PR-5111 </p>
        </item>
        <item>
	    <p>A workaround has been implemented for Linux's quirky
	    behaviour to not adjust the source IP address when
	    connecting a connected (reconnecing) UDP socket. </p><p>
	    The workaround is to, on Linux, always dissolve any
	    connection before connecting an UDP socket. </p>
          <p>
	    Own Id: OTP-17559 Aux Id: GH-5092, PR-5120 </p>
        </item>
        <item>
          <p>
	    The internal documentation for how to use Yielding C Fun
	    (YCF) has been updated to contain text about best
	    practices for using YCF for ERTS.</p>
          <p>
	    Own Id: OTP-17596</p>
        </item>
        <item>
          <p>
	    Optimize garbage collection for processes with large
	    number of binaries, funs and/or external pids/ports/refs.</p>
          <p>
	    Own Id: OTP-17602 Aux Id: PR-5149 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 12.0.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A call to the <c>process_info()</c> BIF could end up
	    hanging for ever due to a bug introduced when the new
	    selective receive optimization was introduced in OTP
	    24.0. Note that this bug only effects
	    <c>process_info()</c>.</p>
          <p>
	    Own Id: OTP-17548 Aux Id: PR-5078, OTP-10391 </p>
        </item>
        <item>
          <p>
	    Fix buffer overrun problem in the tty driver. The problem
	    happens on some platforms when using the CTRL+R
	    functionality of newshell with very long strings in the
	    history.</p>
          <p>
	    Own Id: OTP-17560 Aux Id: GH-5116 </p>
        </item>
        <item>
          <p>
	    Fix race-condition that could cause a crash when tracing
	    scheduling or garbage collections on a process that was
	    running on a dirty scheduler.</p>
          <p>
	    Own Id: OTP-17568 Aux Id: PR-4940 </p>
        </item>
        <item>
          <p>
	    Fix rare bug where re:run would crash/return invalid
	    results when given a subbinary as subject.</p>
          <p>
	    This bug has existed since Erlang/OTP 20.0.</p>
          <p>
	    Own Id: OTP-17585 Aux Id: GH-5150 </p>
        </item>
        <item>
	    <p><c>binary_to_term/1,2</c> is now more resilient
	    against corrupted binaries containing maps in the
	    external format.</p>
          <p>
	    Own Id: OTP-17594</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 12.0.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A call to <c>erlang:cancel_timer(_, [{info, false}])</c>
	    could cause the calling process to block forever in the
	    call. Note that only the synchronous version of the call
	    (that is, the <c>async</c> option is <c>false</c>) in
	    combination with the <c>info</c> option set to
	    <c>false</c> was effected by this bug.</p>
          <p>
	    Own Id: OTP-17472 Aux Id: PR-4932 </p>
        </item>
        <item>
          <p>
	    Microstate accounting (msacc) and
	    <c>os:perf_counter()</c> unintentionally used system time
	    instead of monotonic time for time measurements on a lot
	    of systems. These systems were all non x86/x86_64 systems
	    or x86/x86_64 systems without a reliable and constant
	    rdtsc instruction.</p>
          <p>
	    The lock counting (lcnt) built runtime system also
	    unintentionally used system time instead of monotonic
	    time for time measurements on all systems.</p>
          <p>
	    Own Id: OTP-17493</p>
        </item>
        <item>
          <p>
	    Simultaneous calls to
	    <c>erlang:system_flag(schedulers_online, _)</c> could
	    cause callers to end up in a suspended state forever.</p>
          <p>
	    Own Id: OTP-17500 Aux Id: GH-4809 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 12.0.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Not yet handled alias-message signals in the signal queue
	    at the time when a garbage collection was performed could
	    cause a memory corruption which in turn could result in a
	    crash of the runtime system. This bug was introduced in
	    OTP 24.0.</p>
          <p>
	    Own Id: OTP-17431 Aux Id: GH-4858, PR-4870, OTP-16718 </p>
        </item>
        <item>
          <p>
	    Fixed bug when using external pids/ports in keys of big
	    maps (> 32). Could cause runtime crash. Bug exists since
	    OTP 24.0.</p>
          <p>
	    Own Id: OTP-17436 Aux Id: PR-4875 </p>
        </item>
        <item>
	    <p> After a node restart with <c>init:restart/0,1</c>,
	    the module <c>socket</c> was not usable because
	    supporting tables had been cleared and not
	    re-initialized. This has now been fixed. </p><p> Handling
	    of the "." domain as a search domain was incorrect and
	    caused a crash in the DNS resolver <c>inet_res</c>, which
	    has now been fixed. </p>
          <p>
	    Own Id: OTP-17439 Aux Id: GH-4827, PR-4888, GH-4838 </p>
        </item>
        <item>
          <p>
	    A call to <c>port_command()</c> could cause a scheduler
	    to end up in an eternal loop if the port was busy and the
	    calling process had incoming signals at the time of the
	    call. This bug was introduced in OTP 23.3.2 (ERTS version
	    11.2.1), OTP 22.3.4.18 (ERTS version 10.7.2.10), and OTP
	    21.3.8.23 (ERTS version 10.3.5.18).</p>
          <p>
	    Own Id: OTP-17448 Aux Id: GH-4898, PR-4903, OTP-17291 </p>
        </item>
        <item>
	    <p> Bug fixes and code cleanup for the new <c>socket</c>
	    implementation, such as: </p><p> Assertions on the result
	    of demonitoring has been added in the NIF code, where
	    appropriate. </p><p> Internal state handling for socket
	    close in the NIF code has been reviewed. </p><p> Looping
	    over <c>close()</c> for <c>EINTR</c> in the NIF code has
	    been removed, since it is strongly discouraged on Linux
	    and Posix is not clear about if it is allowed. </p><p>
	    The <c>inet_backend</c> temporary socket option for
	    legacy <c>gen_tcp</c> sockets has been documented.
	    </p><p> The return value from <c>net:getaddrinfo/2</c>
	    has been corrected: the <c>protocol</c> field is now an
	    <c>atom()</c>, instead of, incorrectly,
	    <c>list(atom())</c>. The documentation has also been
	    corrected about this return type. </p><p> Deferred close
	    of a <c>socket:sendfile/*</c> file was broken and has
	    been corrected. </p><p> Some debug code, not enabled by
	    default, in the socket NIF has been corrected to not
	    accidentally core dump for debug printouts of more or
	    less innocent events. </p>
          <p>
	    Own Id: OTP-17452</p>
        </item>
        <item>
          <p>
	    Dirty execution of a process in combination with an
	    unlink signal from a port to the process could cause the
	    signal queue of the process to enter into an inconsistent
	    state. The result of the inconsistency typically caused a
	    crash of the runtime system. This bug was introduced in
	    OTP 23.3 (ERTS version 11.2).</p>
          <p>
	    Own Id: OTP-17462 Aux Id: GH-4885, PR-4914, OTP-17127 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 12.0.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Commit of generated <c>configure</c> script.</p>
          <p>
	    Own Id: OTP-17420 Aux Id: OTP-17398, GH-4821 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 12.0</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    <c>file:open/2</c> now throws an badarg error when opened
	    with both the <c>ram</c> and <c>raw</c> options.</p>
          <p>
	    Own Id: OTP-16822 Aux Id: PR-2723 </p>
        </item>
        <item>
          <p>
	    The estone benchmark has been updated to better reflect
	    changes in the compiler and run-time system.</p>
          <p>
	    Own Id: OTP-16879</p>
        </item>
        <item>
          <p>
	    Fix profile guided optimization of run-time system when
	    using GCC 7 or later.</p>
          <p>
	    Own Id: OTP-16880</p>
        </item>
        <item>
          <p>
	    Fix double close of fd when creating crash dump.</p>
          <p>
	    Own Id: OTP-16884</p>
        </item>
        <item>
          <p>
	    Improve <c>erl</c> error message when unable to open
	    included <c>args_file</c>.</p>
          <p>
	    Own Id: OTP-17014</p>
        </item>
        <item>
          <p>
	    Remove warning text about the <c>--</c> operation from
	    documentation</p>
          <p>
	    The <c>--</c> operation was optimized in Erlang/OTP 22 so
	    that its worst case complexity is O(N*log(N)), where N is
	    the total size of the input lists. Therefore, the warning
	    in the documentation saying that the time complexity is
	    proportional to length(A)*length(B) is incorrect and is
	    no longer needed. Notice that Erlang/OTP 21 will no
	    longer be supported when Erlang/OTP 24 gets released.</p>
          <p>
	    Own Id: OTP-17020</p>
        </item>
        <item>
          <p>
	    A floating point zero (0.0) can be both positive (+0.0)
	    and negative (-0.0). Multiple bugs in the compiler,
	    runtime system, and STDLIB have been fixed to ensure that
	    the minus sign on 0.0 is not lost.</p>
          <p>
	    Own Id: OTP-17077 Aux Id: ERL-1431, PR-2903, PR-2905,
	    PR-2906 </p>
        </item>
        <item>
          <p>
	    Fix compiler warnings produced by the clang compiler.</p>
          <p>
	    Own Id: OTP-17105 Aux Id: PR-2872 </p>
        </item>
        <item>
          <p>
	    Windows process <c>erl.exe</c> killed if its service
	    process <c>erlsrv.exe</c> terminates.</p>
          <p>
	    Own Id: OTP-17131 Aux Id: PR-3031, GH-4360 </p>
        </item>
        <item>
	    <p> The <c>configure</c> scripts in <c>crypto</c> and
	    <c>erts</c> now fail if a requested feature cannot be
	    enabled. </p> <p> Large parts of the <c>configure</c>
	    script of <c>crypto</c> have been rewritten with various
	    improvements and bug fixes. It is now better at finding
	    usable OpenSSL libraries, but will in the following cases
	    fail to detect OpenSSL libraries where it previously
	    sometimes detected the libraries by chance: </p> <list>
	    <item> OpenSSL installations with <c>include</c>
	    directory and <c>lib</c> directory parts installed in
	    different base directories. In order to detect such
	    installations after this change, the user must explicitly
	    specify the locations using the <seeguide
	    marker="system/installation_guide:INSTALL#Advanced-configuration-and-build-of-ErlangOTP_Configuring"><c>--with-ssl=&lt;path&gt;</c></seeguide>
	    and the <seeguide
	    marker="system/installation_guide:INSTALL#Advanced-configuration-and-build-of-ErlangOTP_Configuring"><c>--with-ssl-incl=&lt;path&gt;</c></seeguide>
	    <c>configure</c> command line arguments. </item> <item>
	    When building with old <c>gcc</c> compilers or other
	    compilers on Debian derivatives with multiarch
	    directories under the <c>lib</c> directory. In order to
	    detect such installations after this change, the user
	    must explicitly specify the multiarch directory name
	    using the <seeguide
	    marker="system/installation_guide:INSTALL#Advanced-configuration-and-build-of-ErlangOTP_Configuring"><c>--with-ssl-lib-subdir=lib/&lt;multiarch-dir&gt;</c></seeguide>
	    <c>configure</c> command line argument. </item> </list>
          <p>
	    Own Id: OTP-17254 Aux Id: ERIERL-618, GH-4230 </p>
        </item>
        <item>
          <p>
	    The <c>erl</c> command line arguments <c>+Bi</c>,
	    <c>+Bd</c>, and <c>+B</c> erroneously caused reception of
	    the <c>USR1</c> signal to terminate the runtime system
	    without creating a crash dump. Reception of the
	    <c>USR1</c> signal now always cause termination
	    <em>with</em> creation of a crash dump, regardless of
	    command line arguments passed. This bug has existed at
	    least since OTP R5B.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-17275 Aux Id: PR-4553 </p>
        </item>
        <item>
          <p>
	    Add check to make sure that when passing an option to
	    <c>erl</c> that requires an argument, but none is given,
	    we report an error. This fixes a bug introduced in
	    OTP-22.1 via OTP-15926.</p>
          <p>
	    Own Id: OTP-17314 Aux Id: OTP-15926, GH-4624, PR- </p>
        </item>
        <item>
          <p>
	    The "Last calls" section in crash dumps have been updated
	    to print newlines after each non-function
	    <c>save_calls</c> state (send, receive, timeout).</p>
          <p>
	    Own Id: OTP-17329 Aux Id: PR-4730 </p>
        </item>
        <item>
          <p>
	    Sockets created with socket:accept not counted
	    (socket:info/0).</p>
          <p>
	    Own Id: OTP-17372</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    The experimental <c>socket</c> module can now use any
	    protocol (by name) the OS supports. Suggested in PR-2641,
	    implemented in PR-2670.</p>
          <p>
	    Own Id: OTP-14601 Aux Id: PR-2641, PR-2670, OTP-16749 </p>
        </item>
        <item>
          <p>
	    New functions <c>enif_dynamic_resource_call</c> enables
	    NIFs to call native code in another NIF module. The call
	    is done via a resource callback function <c>dyncall</c>
	    supplied by the user with the new
	    <c>enif_init_resource_type</c>.</p>
          <p>
	    Own Id: OTP-14753</p>
        </item>
        <item>
          <p>
	    Runtime support for new improved selective receive
	    optimization.</p>
          <p>
	    Own Id: OTP-16226 Aux Id: OTP-10391 </p>
        </item>
        <item>
	    <p>The deprecated function <c>erlang:get_stacktrace/0</c>
	    has been removed. Use the new syntax in try/catch to
	    retrieve the stack backtrace.</p>
          <p>
	    Own Id: OTP-16653</p>
        </item>
        <item>
          <p>
	    Support for handling abstract code created before OTP R15
	    has been dropped.</p>
          <p>
	    Own Id: OTP-16678 Aux Id: PR-2627 </p>
        </item>
        <item>
          <p>
	    Extended error information for failing BIF calls as
	    proposed in <url
	    href="https://github.com/erlang/eep/blob/master/eeps/eep-0054.md">EEP
	    54</url> has been implemented.</p>
          <p>
	    When a BIF call from the Erlang shell fails, more
	    information about which argument or arguments that were
	    in error will be printed. The same extended error
	    information will by <c>proc_lib</c>, <c>common_test</c>,
	    and <c>qlc</c> when BIF calls fail.</p>
          <p>
	    For applications that wish to provide the same extended
	    error information, there are new functions
	    <c>erl_error:format_exception/3</c> and
	    <c>erl_error:format_exception/4</c>.</p>
          <p>
	    There is a new <c>error/3</c> BIF that allows
	    applications or libraries to provide extended error
	    information in the same way for their own exceptions.</p>
          <p>
	    Own Id: OTP-16686</p>
        </item>
        <item>
          <p>
	    The <seeerl marker="erlang"><c>erlang</c></seeerl> module
	    documentation has been updated to improve clarity and
	    description of edge cases.</p>
          <p>
	    Own Id: OTP-16687 Aux Id: PR-2996 PR-2762 </p>
        </item>
        <item>
          <p>
	    An example implementation of Erlang distribution over UDS
	    using distribution processes has been introduced.</p>
          <p>
	    Thanks to Jérôme de Bretagne</p>
          <p>
	    Own Id: OTP-16703 Aux Id: PR-2620 </p>
        </item>
        <item>
          <p>
	    Improve code generation when creating funs by adding a
	    new beam instruction make_fun3 that does not do GC and
	    allows for better register allocation.</p>
          <p>
	    Own Id: OTP-16712</p>
        </item>
        <item>
          <p>
	    The <seeguide
	    marker="system/reference_manual:processes#process-aliases"><i>process
	    alias</i></seeguide> feature as outlined by <url
	    href="https://github.com/erlang/eep/blob/master/eeps/eep-0053.md">EEP
	    53</url> has been introduced. It is introduced in order
	    to provide a lightweight mechanism that can prevent late
	    replies after timeout or connection loss. For more
	    information, see EEP 53 and the documentation of the new
	    <seemfa
	    marker="erts:erlang#alias/1"><c>alias/1</c></seemfa> BIF
	    and the new options to the <seemfa
	    marker="erts:erlang#monitor/3"><c>monitor/3</c></seemfa>
	    BIF.</p>
          <p>
	    The <c>call</c> operation in the framework used by
	    <c>gen_server</c>, <c>gen_statem</c>, and
	    <c>gen_event</c> has been updated to utilize alias in
	    order to prevent late responses. The <c>gen_statem</c>
	    behavior still use a proxy process in the distributed
	    case, since it has always prevented late replies and
	    aliases won't work against pre OTP 24 nodes. The proxy
	    process can be removed in OTP 26.</p>
          <p>
	    The alias feature also made it possible to introduce new
	    functions similar to the <seemfa
	    marker="kernel:erpc#receive_response/2"><c>erpc:receive_response()</c></seemfa>
	    function in the gen behaviors, so the new functions
	    <seemfa
	    marker="stdlib:gen_server#receive_response/2"><c>gen_server:receive_response()</c></seemfa>,
	    <seemfa
	    marker="stdlib:gen_statem#receive_response/2"><c>gen_statem:receive_response()</c></seemfa>,
	    <seemfa
	    marker="stdlib:gen_event#receive_response/2"><c>gen_event:receive_response()</c></seemfa>
	    have also been introduced.</p>
          <p>
	    Own Id: OTP-16718 Aux Id: PR-2735 </p>
        </item>
        <item>
          <p>
	    Accept 64-bit process identifiers from external nodes.
	    This is the first step in an upgrade path toward using
	    64-bit pids in a future OTP release.</p>
          <p>
	    Own Id: OTP-16720 Aux Id: PR-2680 </p>
        </item>
        <item>
	    <p> The experimental new socket API has been further
	    developed. Some backwards incompatible changes with
	    respect to OTP 23 have been made. </p><p> The control
	    message format has been changed so a decoded value is now
	    in the 'value' field instead of in the 'data' field. The
	    'data' field now always contains binary data. </p><p>
	    Some type names have been changed regarding message
	    headers and control message headers. </p><p>
	    <c>socket:bind/2</c> now returns plain <c>ok</c> instead
	    of <c>{ok, Port}</c> which was only relevant for the
	    <c>inet</c> and <c>inet6</c> address families and often
	    not interesting. To find out which port was chosen use
	    <c>socket:sockname/1</c>. </p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-16749 Aux Id: OTP-14601 </p>
        </item>
        <item>
          <p>
	    Remove old unused <c>+MYm</c> and <c>ERL_MALLOC_LIB</c>
	    options.</p>
          <p>
	    Own Id: OTP-16788</p>
        </item>
        <item>
          <p>
	    Increase timer resolution on windows.</p>
          <p>
	    Own Id: OTP-16814 Aux Id: PR-2704 </p>
        </item>
        <item>
          <p>
	    The code loader has been rewritten in order to be able to
	    load JIT:ed code. As a consequence of this, it is no
	    longer possible to load HiPE code.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-16878</p>
        </item>
        <item>
          <p>
	    Add support in the Erlang/OTP build system to generate a
	    compilation database that can be used by third-party
	    tools (such as irony in Emacs) to compile the erts C and
	    C++ source code. Create the database using <c>make
	    compdb</c>.</p>
          <p>
	    Own Id: OTP-16881</p>
        </item>
        <item>
          <p>
	    The BeamAsm JIT-compiler has been added to Erlang/OTP.
	    The JIT-compiler is enabled by default on most x86 64-bit
	    platforms that have a C++ compiler that can compile
	    C++17. To verify that a JIT enabled emulator is running
	    you can use <seeerl
	    marker="erlang#system_info_emu_flavor"><c>erlang:system_info(emu_flavor)</c></seeerl>.</p>
          <p>
	    For more information see the <seeguide
	    marker="BeamAsm">internal documentation of BeamAsm in
	    erts</seeguide>.</p>
          <p>
	    Own Id: OTP-16885 Aux Id: PR-2745 </p>
        </item>
        <item>
          <p>
	    By default all ERTS internal memory allocators based on
	    <c>alloc_util</c> will now use their own separate carrier
	    pool for migration of carriers instead of using a node
	    global carrier pool. This was the default behavior
	    between OTP 17 and OTP 21, but changed to use a node
	    global carrier pool as of OTP 22.0. Usage of the node
	    global carrier pool proved troublesome since it had a
	    tendency to spread long lived blocks into allocators with
	    normally short lived blocks causing increased memory
	    fragmentation. The node global carrier pool behavior as
	    well as other behaviors can be configured using the
	    <seecref
	    marker="erts_alloc#M_cp"><c>+M&lt;S&gt;cp</c></seecref>
	    command line argument.</p>
          <p>
	    Own Id: OTP-16898 Aux Id: OTP-16856 </p>
        </item>
        <item>
          <p>
	    New functions have been added to the <c>maps</c> module:
	    <c>merge_with/3</c>, <c>intersect/2</c>,
	    <c>intersect_with/3</c>, <c>filtermap/2</c>,
	    <c>from_keys/2</c>, and <c>maps:foreach/2</c>.</p>
          <p>
	    <c>maps:merge_with/3</c> is the same as <c>merge/2</c>
	    but takes an extra fun that is used to combine items with
	    the same key.</p>
          <p>
	    <c>maps:intersect/2</c> computes the intersection of two
	    maps.</p>
          <p>
	    <c>maps:intersect_with/3</c> is the same as
	    <c>intersect/2</c> but takes an extra fun that is used to
	    combine intersecting items.</p>
          <p>
	    <c>maps:filtermap/2</c> allows filtering and mapping of a
	    map in a single pass.</p>
          <p>
	    <c>maps:from_keys/2</c> constructs a map from a list of
	    keys and a single value and can be used to to optimize
	    sets operations such as from_list/1, filter/2,
	    intersection/2, and subtract/2.</p>
          <p>
	    <c>maps:foreach/2</c> allows iteration over a map without
	    returning any value.</p>
          <p>
	    Own Id: OTP-16936 Aux Id: ERL-1367 </p>
        </item>
        <item>
          <p>
	    Change <c>escript</c>s to output any errors or warnings
	    to standard error instead of standard out.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-16945</p>
        </item>
        <item>
          <p>
	    A new erl parameter for specifying a file descriptor with
	    configuration data has been added. This makes it possible
	    to pass the parameter "-configfd FD" when executing the
	    erl command. When this option is given, the system will
	    try to read and parse configuration parameters from the
	    file descriptor.</p>
          <p>
	    Own Id: OTP-16952</p>
        </item>
        <item>
	    <p>The experimental HiPE application has been removed,
	    together with all related functionality in other
	    applications.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-16963</p>
        </item>
        <item>
          <p>
	    The pretty printer for floating point number have been
	    changed to make it easier to see if the integer part of
	    the number has been rounded. After the change the digit
	    that may have been rounded always appears last or just
	    before the exponent character (e or E). This is
	    accomplished by always printing the number using
	    scientific notation if it is so large that the integer
	    part could be rounded.</p>
          <p>
	    Own Id: OTP-16980 Aux Id: ERL-1308 </p>
        </item>
        <item>
	    <p>The <c>erlang:monitor_node/2</c> BIF will now fail
	    with a <c>notalive</c> exception if distribution has not
	    been started on the current node; it used to fail with a
	    <c>badarg</c> exception.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-16987</p>
        </item>
        <item>
          <p>
	    Accept references up to a size of 160-bits from remote
	    nodes. This is the first step in an upgrade path toward
	    using references up to 160-bits in a future OTP release.</p>
          <p>
	    Own Id: OTP-17005 Aux Id: OTP-16718 </p>
        </item>
        <item>
          <p>
	    Accept 64-bit port identifiers from external nodes. This
	    is the first step in an upgrade path toward using 64-bit
	    port identifiers in a future OTP release.</p>
          <p>
	    Own Id: OTP-17007</p>
        </item>
        <item>
          <p>
	    One can now pass the ERL_ROOTDIR environment variable to
	    the erl and start scrips. This makes it easier to use
	    Erlang for Android apps. On Android, apps don't control
	    where they will be installed.</p>
          <p>
	    Own Id: OTP-17028</p>
        </item>
        <item>
          <p>
	    All long running functions in the maps API are now
	    yielding. In previous releases the functions
	    <c>maps:from_list/1</c>, <c>maps:keys/1</c> and
	    <c>maps:values/1</c> did not yield. This could cause
	    unfair scheduling of processes.</p>
          <p>
	    Own Id: OTP-17057</p>
        </item>
        <item>
          <p>
	    <c>socket:sendfile/2,3,4,5</c> has been implemented, for
	    platforms that support the underlying socket library
	    call.</p>
          <p>
	    Own Id: OTP-17154 Aux Id: OTP-16749 </p>
        </item>
        <item>
	    <p>The bit matching and construction syntax now supports
	    16-bit floats (IEEE 754-2008).</p>
          <p>
	    Own Id: OTP-17207</p>
        </item>
        <item>
          <p>
	    Add <c>process_flag(fullsweep_after, N)</c> to change
	    <c>fullsweep_after</c> value in an already spawned
	    process.</p>
          <p>
	    Own Id: OTP-17285 Aux Id: PR-4651 </p>
        </item>
        <item>
          <p>
	    The <c>max_heap_size</c> error report has been updated to
	    include the message queue size.</p>
          <p>
	    Own Id: OTP-17293 Aux Id: PR-4672 </p>
        </item>
        <item>
          <p>
	    Introduce new types <c>nonempty_binary()</c> and
	    <c>nonempty_bitstring()</c>.</p>
          <p>
	    Own Id: OTP-17301 Aux Id: GH-4636 </p>
        </item>
        <item>
	    <p>Optimize updates of large maps with identical keys and
	    values. E.g. in the example below the original <c>Map</c>
	    will be reused as the return of the second update.</p>
	    <p><c>1> Map = LargeMap#{ a => b }.</c></p> <p><c>2>
	    Map#{ a := b }.</c></p> <p>The same optimization was done
	    for small maps (&lt; 33 keys) in erts-10.4 (OTP
	    22.0).</p>
          <p>
	    Own Id: OTP-17310 Aux Id: PR-4656 </p>
        </item>
        <item>
          <p>
	    The previously undocumented internal <c>-no_epmd</c>
	    option has been made documented and public.</p>
          <p>
	    Own Id: OTP-17341 Aux Id: PR-2945 </p>
        </item>
        <item>
          <p>
	    Reduce memory carrier super alignment on 64-bit
	    architectures. In practice allows more fine grained
	    control over configuration of memory carrier sizes, from
	    increments of 256kb to 16kb.</p>
          <p>
	    Own Id: OTP-17368</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.2.2.17</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    <seemfa
	    marker="erts:erlang#dist_ctrl_get_data_notification/1">Notifications
	    about available distribution data</seemfa> sent to
	    distribution controller processes could be lost.
	    Distribution controller processes can be used when
	    implementing an alternative distribution carrier. The
	    default distribution over tcp was not effected and the
	    bug was also not present on x86/x86_64 platforms.</p>
          <p>
	    Own Id: OTP-18258 Aux Id: GH-6309, PR-6324 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.2.2.16</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Distributed exit signals could be lost under the
	    following conditions:</p> <list> <item><p> An exit signal
	    from a parent process to a child process was lost if:</p>
	    <list> <item><p> the parent process terminated before the
	    spawn request that created the child had completed,
	    </p></item> <item><p> the spawn request set up a link
	    between parent and child </p></item> <item><p> the spawn
	    request was distributed, and </p></item> <item><p> the
	    exit reason was larger than one machine word. </p></item>
	    </list> </item> <item><p> Loss of a connection over which
	    a not yet completed spawn request was ongoing could cause
	    loss of exit signals. Such loss of exit signals was very
	    rare. Besides the above described connection loss also
	    the following conditions had to be satisfied:</p> <list>
	    <item><p> The spawn request that was interrupted by the
	    connection loss also had to set up a link between the
	    parent process and the child process. </p></item>
	    <item><p> The parent process that issued the spawn
	    request also had to be terminating while the spawn
	    request was interrupted by the connection loss.
	    </p></item> <item><p> The same parent process also had to
	    have made other spawn requests to other nodes than to the
	    node to which the connection was lost. </p></item>
	    <item><p> These spawn requests to the other nodes also
	    had to set up links. </p></item> <item><p> These spawn
	    requests to the other nodes also had to be not yet
	    completed at the time of the connection loss. That is,
	    the spawn reply from the child process had not yet
	    reached the parent process. </p></item> </list> <p>If all
	    the conditions above were met, exit signals to the
	    children spawned due to the above described spawn
	    requests to other nodes <em>could</em> be lost.</p>
	    <p>The above bug also caused a significant memory leak
	    when it was triggered since the destruction of the parent
	    process never completed.</p> </item> </list>
          <p>
	    Own Id: OTP-18164 Aux Id: PR-6114 </p>
        </item>
        <item>
          <p>
	    A race could cause <c>process_info(Pid,
	    message_queue_len)</c> on other processes to return
	    invalid results.</p>
          <p>
	    Own Id: OTP-18169 Aux Id: PR-6134 </p>
        </item>
        <item>
          <p>
	    Fixed reduction counting for handling process system
	    tasks.</p>
          <p>
	    Own Id: OTP-18170 Aux Id: PR-6135 </p>
        </item>
        <item>
          <p>
	    Priority elevation of terminating processes did not work
	    which could cause execution of such processes to be
	    delayed.</p>
          <p>
	    Own Id: OTP-18175 Aux Id: PR-6142 </p>
        </item>
        <item>
          <p>
	    An unlink operation made by a process that terminated
	    before the unlink operation completed, i.e., before it
	    had received an unlink-ack signal from the linked
	    process, caused an exit signal to erroneously be sent
	    from the terminating process to the process being
	    unlinked. This exit signal would most often be ignored by
	    the receiver, but if the receiver of the exit signal
	    concurrently set up a new link, it could receive the exit
	    signal with the actual exit reason of the terminating
	    process instead of a <c>noproc</c> exit reason. It is
	    however very hard to detect that this has happened and
	    has no obvious negative consequences, so it should be
	    considered harmless.</p>
          <p>
	    A distributed unlink-ack signal received by a terminating
	    process was also not properly removed which could cause a
	    minor memory leak.</p>
          <p>
	    Own Id: OTP-18177 Aux Id: PR-6150 </p>
        </item>
        <item>
          <p>
	    The <seemfa
	    marker="erts:erlang#monotonic_time/1"><c>erlang:monotonic_time/1</c></seemfa>,
	    <seemfa
	    marker="erts:erlang#system_time/1"><c>erlang:system_time/1</c></seemfa>,
	    <seemfa
	    marker="erts:erlang#time_offset/1"><c>erlang:time_offset/1</c></seemfa>,
	    and <seemfa
	    marker="kernel:os#system_time/1"><c>os:system_time/1</c></seemfa>
	    BIFs erroneously failed when passed the argument
	    <c>native</c>.</p>
          <p>
	    Own Id: OTP-18197 Aux Id: GH-6165, PR-6213 </p>
        </item>
        <item>
          <p>
	    Fix writing and reading of more than 2 GB in a single
	    read/write operation on macOS. Before this fix attempting
	    to read/write more than 2GB would result in
	    <c>{error,einval}</c>.</p>
          <p>
	    Own Id: OTP-18222 Aux Id: PR-6248 GH-6242 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.2.2.15</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fix faulty distribution encoding of terms with
	    either</p> <list> <item>a fun with bit-string or
	    export-fun in its environment when encoded toward a not
	    yet established (pending) connection</item> <item>or a
	    fun with a binary/bitstring, in its environment,
	    referring to an off-heap binary (larger than 64
	    bytes).</item> </list> <p>The symptom could be failed
	    decoding on the receiving side leading to aborted
	    connection. Fix OTP-18093 is a workaround for theses bugs
	    that makes the VM accepts such faulty encoded funs.</p>
	    <p>The first encoding bug toward pending connection
	    exists only in OTP 23 and 24, but the second one exists
	    also on OTP 25.</p>
          <p>
	    Own Id: OTP-18104 Aux Id: OTP-18093 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.2.2.14</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Accept funs (NEW_FUN_EXT) with incorrectly encoded size
	    field. This is a workaround for a bug (OTP-18104)
	    existing in OTP 23 and 24 that could cause incorrect size
	    fields in certain cases. The emulator does not use the
	    decoded size field, but <c>erl_interface</c> still does
	    and is not helped by this workaround.</p>
          <p>
	    Own Id: OTP-18093 Aux Id: OTP-18104, PR-5987 </p>
        </item>
        <item>
          <p>
	    The zlib built in to the runtime system has been updated
	    to version 1.2.12. (Note that on most platforms, the
	    platform's own zlib is used.)</p>
          <p>
	    Own Id: OTP-18123 Aux Id: GH-5994 </p>
        </item>
        <item>
          <p>
	    Fixed emulator crash that could happen during crashdump
	    generation of ETS tables with options <c>ordered_set</c>
	    and <c>{write_concurrency,true}</c>.</p>
          <p>
	    Own Id: OTP-18144 Aux Id: GH-5981 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.2.2.13</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Let EPMD tolerate failure when binding to IPv4/IPv6
	    loopback intefaces in addition to user-supplied addresses
	    via <c>ERL_EPMD_ADDRESS</c> or the <c>-address</c>
	    option. This can happen, for example, if the host system
	    has ipv6 disabled via the disable_ipv6 sysctl.</p>
          <p>
	    Own Id: OTP-17970 Aux Id: PR-5762 </p>
        </item>
        <item>
	    <p>Fixed a rare bug in <c>binary_to_term/1</c>,
	    <c>enif_make_map_from_arrays</c>,
	    <c>erl_drv_send_term</c>, and Erlang distribution that
	    could crash the emulator.</p>
          <p>
	    Own Id: OTP-18027</p>
        </item>
        <item>
	    <p>Fixed a rare race in <c>persistent_term:get/1,2</c>
	    that could cause it to return the value of another
	    key.</p>
          <p>
	    Own Id: OTP-18065 Aux Id: GH-5908 </p>
        </item>
        <item>
          <p>
	    Fix bug where the process message queue was left in an
	    inconsistent state when changing from on_heap to off_heap
	    message queue data causing the GC to segfault.</p>
          <p>
	    Own Id: OTP-18075 Aux Id: PR-5927 </p>
        </item>
        <item>
          <p>
	    Fix functions that convert universal to localtime (such
	    as erlang:localtime/0 and
	    erlang:universaltime_to_localtime/1) to fetch the correct
	    localtime if it is changed after the start of the VM.</p>
          <p>
	    Own Id: OTP-18076 Aux Id: ERIERL-802 PR-5905 </p>
        </item>
        <item>
          <p>
	    Fix memory leak when a process doing a distributed
	    fragmented send is sent an exit signal. Before this fix
	    the receiving node would be left with an incomplete
	    message that would remain until the nodes were
	    disconnected. The bug has existed since Erlang/OTP 21.</p>
          <p>
	    Own Id: OTP-18077 Aux Id: GH-5876 PR-5892 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.2.2.12</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix Erlang monotonic time on MacOS. Previously used OS
	    monotonic time primitive on MacOS is buggy and will not
	    be used anymore. It has been replaced with usage of
	    another OS monotonic time primitive that does not appear
	    to be buggy.</p>
          <p>
	    Own Id: OTP-17998 Aux Id: PR-5825, GH-5554 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.2.2.11</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p> By default <c>global</c> does <i>not</i> take any
	    actions to restore a fully connected network when
	    connections are lost due to network issues. This is
	    problematic for all applications expecting a fully
	    connected network to be provided, such as for example
	    <c>mnesia</c>, but also for <c>global</c> itself. A
	    network of overlapping partitions might cause the
	    internal state of <c>global</c> to become inconsistent.
	    Such an inconsistency can remain even after such
	    partitions have been brought together to form a fully
	    connected network again. The effect on other applications
	    that expects that a fully connected network is maintained
	    may vary, but they might misbehave in very subtle hard to
	    detect ways during such a partitioning. </p> <p> In order
	    to prevent such issues, we have introduced a <i>prevent
	    overlapping partitions</i> fix which can be enabled using
	    the <seeapp
	    marker="kernel:kernel_app#prevent_overlapping_partitions"><c>prevent_overlapping_partitions</c></seeapp>
	    <c>kernel(6)</c> parameter. When this fix has been
	    enabled, <c>global</c> will actively disconnect from
	    nodes that reports that they have lost connections to
	    other nodes. This will cause fully connected partitions
	    to form instead of leaving the network in a state with
	    overlapping partitions. Note that this fix <i>has</i> to
	    be enabled on <i>all</i> nodes in the network in order to
	    work properly. Since this quite substantially changes the
	    behavior, this fix is currently disabled by default.
	    Since you might get hard to detect issues without this
	    fix you are, however, <i>strongly</i> advised to enable
	    this fix in order to avoid issues such as the ones
	    described above. As of OTP 25 this fix will become
	    enabled by default. </p>
          <p>
	    Own Id: OTP-17843 Aux Id: ERIERL-732, PR-5611 </p>
        </item>
        <item>
          <p>
	    Fix memory leak when tracing on running on a process that
	    only handle system tasks or non-message signals (for
	    example process_info requests).</p>
          <p>
	    Own Id: OTP-17904 Aux Id: ERIERL-757 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.2.2.10</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix GC emulator crash when <c>spawn_request</c> was used
	    when message tracing was enabled.</p>
          <p>
	    Own Id: OTP-17871 Aux Id: PR-5612 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.2.2.9</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a memory leak in <c>file:read_file_info/2</c>
	    and <c>file:read_file/1</c> on Windows.</p>
          <p>
	    Own Id: OTP-17827 Aux Id: GH-5527 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Responsiveness of processes executing on <c>normal</c> or
	    <c>low</c> priority could suffer due to code purging or
	    literal area removal on systems with a huge amount of
	    processes. This since during these operations all
	    processes on the system were scheduled for execution at
	    once.</p>
          <p>
	    This problem has been fixed by introducing a limit on
	    outstanding purge and copy literal requests in the
	    system. By default this limit is set to twice the amount
	    of schedulers on the system. This will ensure that
	    schedulers will have enough work scheduled to perform
	    these operations as quickly as possible at the same time
	    as other work will be interleaved to a much higher
	    degree. Performance of these operations will however be
	    somewhat degraded due to the overhead of enforcing this
	    limit compared to when using a very large limit.</p>
          <p>
	    This limit can be set by passing the <c>+zosrl</c>
	    command line argument to <c>erl</c>, or by calling
	    <c>erlang:system_flag(outstanding_system_requests_limit,
	    NewLimit)</c>.</p>
          <p>
	    Own Id: OTP-17796 Aux Id: ERIERL-729, PR-5473 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.2.2.8</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The runtime system could call <c>select()</c> with a too
	    large timeout value when executing on MacOS. This could
	    in turn cause the runtime system to crash.</p>
          <p>
	    Own Id: OTP-17735 Aux Id: GH-5339 </p>
        </item>
        <item>
	    <p>Certain distributed signals that for various reasons
	    must to be forced into the distribution buffer even when
	    it is full would instead be lost if the distribution
	    buffer was full when sent. The effected signals:</p>
	    <list> <item><c>EXIT</c> signals with exit reasons of one
	    word size.</item> <item><c>DOWN</c> signals with exit
	    reasons of one word size.</item> <item><c>demonitor</c>
	    signals from a terminating process.</item>
	    <item><c>unlink_ack</c> signals on OTP 23 and 24.</item>
	    <item><c>spawn_reply</c> signals on OTP 23 and 24.</item>
	    </list>
          <p>
	    Own Id: OTP-17737 Aux Id: GH-5346, GH-4989 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.2.2.7</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A call to <c>process_info(Pid, status)</c> could
	    erroneously report the status <c>running</c> when it
	    should have reported <c>waiting</c>. This occurred when
	    the calling process was executing on a higher priority
	    than the process being inspected. This bug has been
	    present since OTP 21.0 (erts version 10.0).</p>
          <p>
	    Own Id: OTP-17628</p>
        </item>
        <item>
          <p>
	    A race between an exiting port and handling of
	    simultaneously received signals to that port could cause
	    a runtime system crash. The effected signals are
	    <c>link</c>, <c>monitor</c> and <c>demonitor</c>. On OTP
	    22 a similar race could also cause a memory leak when
	    receiving an <c>unlink</c> signal.</p>
          <p>
	    Own Id: OTP-17642 Aux Id: PR-5248 </p>
        </item>
        <item>
          <p>
	    The message queue of a process entered an inconsistent
	    state after a <c>receive</c> expression with an invalid
	    timeout value was executed. If the exception raised due
	    to the invalid timeout value was caught, the following
	    <c>receive</c> expression executed by the process could
	    fail to match messages already present in the message
	    queue.</p>
          <p>
	    On OTP 24 this could also cause the whole runtime system
	    to crash.</p>
          <p>
	    Own Id: OTP-17651 Aux Id: GH-5235, PR-5244 </p>
        </item>
        <item>
          <p>
	    Sending a <c>Port ! {PortOwner, close}</c> signal from a
	    process other than the port owner could erroneously
	    trigger a <c>badsig</c> exit signal being sent to the
	    port owner process even though the correct
	    <c>PortOwner</c> had been passed in the signal.</p>
          <p>
	    Own Id: OTP-17665 Aux Id: PR-5248 </p>
        </item>
        <item>
          <p>
	    This fixes a bug in <c>erts_factory_undo</c> that caused
	    the heap to not be reset correctly. The
	    <c>erts_factory_undo</c> function is, for example, called
	    when a <c>binary_to_term/1</c> call fails to reset the
	    heap to its state before the <c>binary_to_term/1</c>
	    call. This can cause the heap to contain invalid terms
	    which potentially can cause issues (e.g., crashes) when
	    the whole heap is scanned.</p>
          <p>
	    Own Id: OTP-17677</p>
        </item>
        <item>
	    <p>Fix bug in <c>persistent_term</c> when a key-value
	    pair contains a magic reference that is referred more
	    than once. Magic references are NIF resources or returned
	    from BIFs like <c>ets:new</c>, <c>atomics:new</c>. The
	    bug could cause the memory of the referred resource to be
	    prematurely deallocated.</p> <p>The bug also apply to
	    magic references in message passing on a runtime built
	    with configure option
	    <c>--enable-sharing-preserving</c>.</p> <p>Bug exist for
	    64-bit since OTP-24.0 and for 32-bit since OTP-20.0.</p>
          <p>
	    Own Id: OTP-17700 Aux Id: GH-5271, PR-5273 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    The python scripts that existed in
	    erts/lib_src/yielding_c_fun/lib/tiny_regex_c/scripts had
	    a license that was incompatible with Erlang/OTP's
	    license. This ticket removes these scripts that were not
	    used by us.</p>
          <p>
	    Own Id: OTP-17658</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.2.2.6</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Parsing of the result value in the native DNS resolver
	    has been made more defensive against incorrect results.</p>
          <p>
	    Own Id: OTP-17578 Aux Id: ERIERL-683 </p>
        </item>
        <item>
	    <p>On 32-bit computers, <c>binary_to_term/1,2</c> is now
	    more resilient against corrupted binaries containing maps
	    in the external format.</p>
          <p>
	    Own Id: OTP-17604</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.2.2.5</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix buffer overrun problem in the tty driver. The problem
	    happens on some platforms when using the CTRL+R
	    functionality of newshell with very long strings in the
	    history.</p>
          <p>
	    Own Id: OTP-17560 Aux Id: GH-5116 </p>
        </item>
        <item>
          <p>
	    Fix race-condition that could cause a crash when tracing
	    scheduling or garbage collections on a process that was
	    running on a dirty scheduler.</p>
          <p>
	    Own Id: OTP-17568 Aux Id: PR-4940 </p>
        </item>
        <item>
          <p>
	    Fix rare bug where re:run would crash/return invalid
	    results when given a subbinary as subject.</p>
          <p>
	    This bug has existed since Erlang/OTP 20.0.</p>
          <p>
	    Own Id: OTP-17585 Aux Id: GH-5150 </p>
        </item>
        <item>
	    <p><c>binary_to_term/1,2</c> is now more resilient
	    against corrupted binaries containing maps in the
	    external format.</p>
          <p>
	    Own Id: OTP-17594</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.2.2.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Microstate accounting (msacc) and
	    <c>os:perf_counter()</c> unintentionally used system time
	    instead of monotonic time for time measurements on a lot
	    of systems. These systems were all non x86/x86_64 systems
	    or x86/x86_64 systems without a reliable and constant
	    rdtsc instruction.</p>
          <p>
	    The lock counting (lcnt) built runtime system also
	    unintentionally used system time instead of monotonic
	    time for time measurements on all systems.</p>
          <p>
	    Own Id: OTP-17493</p>
        </item>
        <item>
          <p>
	    Simultaneous calls to
	    <c>erlang:system_flag(schedulers_online, _)</c> could
	    cause callers to end up in a suspended state forever.</p>
          <p>
	    Own Id: OTP-17500 Aux Id: GH-4809 </p>
        </item>
        <item>
          <p>
	    Fix rare race bug in memory management of distribution
	    entries. Have been seen to cause VM crash when massive
	    number of repeated concurrent failing connection
	    attempts.</p>
          <p>
	    Own Id: OTP-17513 Aux Id: GH-4964, PR-5015 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.2.2.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A call to <c>erlang:cancel_timer(_, [{info, false}])</c>
	    could cause the calling process to block forever in the
	    call. Note that only the synchronous version of the call
	    (that is, the <c>async</c> option is <c>false</c>) in
	    combination with the <c>info</c> option set to
	    <c>false</c> was effected by this bug.</p>
          <p>
	    Own Id: OTP-17472 Aux Id: PR-4932 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.2.2.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A call to <c>port_command()</c> could cause a scheduler
	    to end up in an eternal loop if the port was busy and the
	    calling process had incoming signals at the time of the
	    call. This bug was introduced in OTP 23.3.2 (ERTS version
	    11.2.1), OTP 22.3.4.18 (ERTS version 10.7.2.10), and OTP
	    21.3.8.23 (ERTS version 10.3.5.18).</p>
          <p>
	    Own Id: OTP-17448 Aux Id: GH-4898, PR-4903, OTP-17291 </p>
        </item>
        <item>
          <p>
	    Dirty execution of a process in combination with an
	    unlink signal from a port to the process could cause the
	    signal queue of the process to enter into an inconsistent
	    state. The result of the inconsistency typically caused a
	    crash of the runtime system. This bug was introduced in
	    OTP 23.3 (ERTS version 11.2).</p>
          <p>
	    Own Id: OTP-17462 Aux Id: GH-4885, PR-4914, OTP-17127 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.2.2.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Commit of generated <c>configure</c> script.</p>
          <p>
	    Own Id: OTP-17420 Aux Id: OTP-17398, GH-4821 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.2.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix bug in match spec compilator seen to cause a stack
	    overflow crash on debug VM for certain match specs. Could
	    potentially cause problems for standard VM, but has not
	    been verified. Match specs are used by
	    <c>ets:match/select</c> functions and
	    <c>erlang:trace_pattern</c>.</p>
          <p>
	    Own Id: OTP-17379 Aux Id: PR-4804 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.2.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>The following signals could pass before other signals
	    from the same sender to the same receiver. That is, these
	    signals could arrive too early.</p> <list>
	    <item><c>garbage-collect</c> request. Sent from one
	    process to another using one of the
	    <c>garbage_collect()</c> BIFs.</item>
	    <item><c>check-process-code</c> request. Sent from one
	    process to another using one of the
	    <c>check_process_code()</c> BIFs.</item>
	    <item><c>is-process-alive</c> reply. Sent as a response
	    to a process calling the <c>is_process_alive()</c>
	    BIF.</item> <item><c>process-info</c> reply. Sent as a
	    response to a process calling one of the
	    <c>process_info()</c> BIFs.</item>
	    <item><c>port-command</c> reply. Sent as a response to a
	    process calling one of the <c>port_command()</c>
	    BIFs.</item> <item><c>port-connect</c> reply. Sent as a
	    response to a process calling the <c>port_connect()</c>
	    BIF.</item> <item><c>port-close</c> reply. Sent as a
	    response to a process calling the <c>port_close()</c>
	    BIF.</item> <item><c>port-control</c> reply. Sent as a
	    response to a process calling the <c>port_control()</c>
	    BIF.</item> <item><c>port-call</c> reply. Sent as a
	    response to a process calling the <c>port_call()</c>
	    BIF.</item> <item><c>port-info</c> reply. Sent as a
	    response to a process calling one of the
	    <c>port_info()</c> BIFs.</item> </list>
          <p>
	    Own Id: OTP-17291</p>
        </item>
        <item>
          <p>
	    Fix bug in <c>persistent_term:get/0</c> and <c>info/0</c>
	    that could cause VM crash in rare cases. Bug exists since
	    OTP 23.0.</p>
          <p>
	    Own Id: OTP-17298</p>
        </item>
        <item>
	    <p>Fixed a bug in <c>zlib</c> where decompression would
	    crash with <c>data_error</c> on some valid inputs.</p>
          <p>
	    Own Id: OTP-17299 Aux Id: GH-4710 </p>
        </item>
        <item>
          <p>
	    A garbage collection of a literal area missed messages
	    that entirely consisted of a term in a literal area. This
	    could in turn lead to a crash of the runtime system.</p>
          <p>
	    Own Id: OTP-17307</p>
        </item>
        <item>
          <p>
	    A call to <c>process_flag(message_queue_data,
	    off_heap)</c> could cause a crash of the runtime system
	    when sequential tracing was enabled.</p>
          <p>
	    Own Id: OTP-17349</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix memory leak of about 6 words when
	    <c>erlang:process_flag/3</c> is called with a pid of an
	    already dead process. Bug exists since OTP-21.0.</p>
          <p>
	    Own Id: OTP-17081 Aux Id: PR-2930 </p>
        </item>
        <item>
          <p>
	    Fixed small memory leak in <c>erl_drv_send_term</c> and
	    <c>erl_drv_output_term</c> when failing due to the term
	    being invalid.</p>
          <p>
	    Own Id: OTP-17089 Aux Id: PR-2934 </p>
        </item>
        <item>
          <p>
	    The DTrace/SystemTap <c>process_heap_grow</c> probe is
	    now called with valid the heap and stack pointers for the
	    process in question.</p>
          <p>
	    Own Id: OTP-17096 Aux Id: PR-2932 </p>
        </item>
        <item>
	    <p>Fixed a performance issue in memory allocation for
	    Linux kernels that didn't support <c>MADV_FREE</c>.</p>
          <p>
	    Own Id: OTP-17124</p>
        </item>
        <item>
          <p>
	    A <seeguide
	    marker="erts:erl_dist_protocol#new_link_protocol">new
	    link protocol</seeguide> has been introduced which
	    prevents links from ending up in an inconsistent state
	    where one participant considers itself linked while the
	    other doesn't. This bug has always existed in the
	    distributed case, but has since OTP 21 also existed in
	    the node local case since the distributed link protocol
	    then was adopted also for node local links. The bug
	    could, however, only trigger if both participants
	    operated on the link simultaneously.</p>
          <p>
	    Own Id: OTP-17127</p>
        </item>
        <item>
          <p>
	    Fix memory leak when receiving sigchld from port program
	    to already dead port.</p>
          <p>
	    Own Id: OTP-17163</p>
        </item>
        <item>
          <p>
	    Fix bug where complex seq_trace tokens (that is lists,
	    tuples, maps etc) could becomes corrupted by the GC. The
	    bug was introduced in OTP-21.</p>
          <p>
	    Own Id: OTP-17209 Aux Id: PR-3039 </p>
        </item>
        <item>
          <p>
	    Fixed WSLPATH environment variable addition to PATH on
	    windows, the last character was lost.</p>
          <p>
	    Own Id: OTP-17229</p>
        </item>
        <item>
          <p>
	    Fixed a bug in the timer implementation which could cause
	    timers that were set to more than 37.25 hours in the
	    future to be delayed. This could occur if there were
	    multiple timers scheduled to be triggered very close in
	    time, but still at different times, and the scheduler
	    thread handling the timers was not able to handle them
	    quickly enough. Delayed timers were in this case
	    triggered when another unrelated timer was triggered.</p>
          <p>
	    Own Id: OTP-17253</p>
        </item>
        <item>
          <p>
	    Fixed small memory leak in <c>erlang:trace/3</c> if
	    option <c>{tracer,_}</c> is included and the option list
	    is invalid or the call races with a concurrent trace or
	    code change operation.</p>
          <p>
	    Own Id: OTP-17265 Aux Id: PR-4596 </p>
        </item>
        <item>
          <p>
	    Fix configure check for <c>inet_pton</c> on 32-bit
	    windows. The failure of this check would cause epmd to be
	    built without ipv6 support.</p>
          <p>
	    Own Id: OTP-17283</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Various address sanitizer support.</p>
          <p>
	    Own Id: OTP-16959 Aux Id: PR-2965 </p>
        </item>
        <item>
	    <p>The emulator will now honor <c>cgroup2</c> CPU
	    quotas.</p>
          <p>
	    Own Id: OTP-17002</p>
        </item>
        <item>
          <p>
	    Improved memory barrier usage on ARMv8 hardware, and
	    specifically on Apple silicon.</p>
          <p>
	    Own Id: OTP-17195 Aux Id: PR-4505, PR-4538 </p>
        </item>
        <item>
          <p>
	    Improved memory barrier usage on 64-bit POWER hardware.</p>
          <p>
	    Own Id: OTP-17200 Aux Id: PR-4510 </p>
        </item>
        <item>
          <p>
	    Fix a file descriptor leak when using sendfile and the
	    remote side closes the connection. This bug has been
	    present since OTP-21.0.</p>
          <p>
	    Own Id: OTP-17244</p>
        </item>
        <item>
          <p>
	    Refinement of the documentation of the
	    <c>message_queue_data</c> process flag.</p>
          <p>
	    Own Id: OTP-17252 Aux Id: PR-4568 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.1.8</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a bug that could cause some work scheduled for
	    execution on scheduler threads to be delayed until other
	    similar work appeared. Beside delaying various cleanup of
	    internal data structures also the following could be
	    delayed:</p> <list> <item>Termination of a distribution
	    controller process</item> <item>Disabling of the
	    distribution on a node</item> <item>Gathering of memory
	    allocator information using the <c>instrument</c>
	    module</item> <item>Enabling, disabling, and gathering of
	    <c>msacc</c> information</item> <item>Delivery of
	    <c>'CHANGE'</c> messages when time offset is
	    monitored</item> <item>A call to
	    <c>erlang:cancel_timer()</c></item> <item>A call to
	    <c>erlang:read_timer()</c></item> <item>A call to
	    <c>erlang:statistics(io | garbage_collection |
	    scheduler_wall_time)</c></item> <item>A call to
	    <c>ets:all()</c></item> <item>A call to
	    <c>erlang:memory()</c></item> <item>A call to
	    <c>erlang:system_info({allocator | allocator_sizes,
	    _})</c></item> <item>A call to
	    <c>erlang:trace_delivered()</c></item> </list> <p>The bug
	    existed on runtime systems running on all types of
	    hardware except for x86/x86_64.</p>
          <p>
	    Own Id: OTP-17185</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.1.7</title>

    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Make windows installer remove write access rights for non
	    admin users when installing to a non default directory.
	    Reduces the risk for DLL sideloading, but the user should
	    always be aware of the access rights for the
	    installation.</p>
          <p>
	    Own Id: OTP-17097</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.1.6</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The <c>suspend_process()</c> and <c>resume_process()</c>
	    BIFs did not check their arguments properly which could
	    cause an emulator crash.</p>
          <p>
	    Own Id: OTP-17080</p>
        </item>
        <item>
          <p>
	    The runtime system would get into an infinite loop if the
	    runtime system was started with more than 1023 file
	    descriptors already open.</p>
          <p>
	    Own Id: OTP-17088 Aux Id: ERIERL-580 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.1.5</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix emulator crash when sending small bit-strings over
	    Erlang distribution while the connection is being setup.</p>
          <p>
	    The fault was introduced in OTP-23.0</p>
          <p>
	    Own Id: OTP-17083 Aux Id: ERIERL-572 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.1.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed bug which could cause VM crash when a NIF is loaded
	    at the same time as the Erlang implementation of the NIF
	    is called. Bug exists since OTP 23.0.</p>
          <p>
	    Own Id: OTP-16859</p>
        </item>
        <item>
          <p>
	    Fixed <c>enif_make_map_*</c> functions in debug build
	    when given environment from <c>enif_alloc_env</c>.</p>
          <p>
	    Own Id: OTP-16863 Aux Id: ERL-1352 </p>
        </item>
        <item>
          <p>
	    Fixed broken configuration option <c>--disable-pie</c>.</p>
          <p>
	    Own Id: OTP-16864</p>
        </item>
        <item>
          <p>
	    Fixed rare distribution bug in race between received
	    signal (link/monitor/spawn_request/spawn_reply) and
	    disconnection. Symptom: VM crash. Since: OTP 21.0.</p>
          <p>
	    Own Id: OTP-16869 Aux Id: ERL-1337 </p>
        </item>
        <item>
	    <p>Fixed a performance issue when extremely many items
	    were stored in the process dictionary. (Fixing this bug
	    also eliminates a compiler warning emitted by the latest
	    version of Clang.)</p>
          <p>
	    Own Id: OTP-16888</p>
        </item>
        <item>
          <p>
	    Remove <c>-ftree-copyrename</c> from flags passed to
	    compiler when building erts. The flag is not used by
	    modern gcc's and is not supported by clang.</p>
          <p>
	    Own Id: OTP-16894</p>
        </item>
        <item>
	    <p>Modules using complicated nested binary comprehensions
	    could fail to load.</p>
          <p>
	    Own Id: OTP-16899</p>
        </item>
        <item>
	    <p>Fixed a race in <c>file:read_file/1</c> were an
	    incomplete file could be returned if another OS process
	    swapped the file out while reading.</p>
          <p>
	    Own Id: OTP-16948 Aux Id: PR-2792 </p>
        </item>
        <item>
	    <p>The call <c>list_to_integer("10", true)</c> would
	    return <c>4</c> instead of raising an exception. Certain
	    other atoms would also be interpreted as a number
	    base.</p>
          <p>
	    Own Id: OTP-17030</p>
        </item>
        <item>
          <p>
	    On macOS 11 (Big Sur), erl would not start if the maximum
	    number of file descriptors were unlimited (<c>ulimit -n
	    unlimited</c>).</p>
          <p>
	    Own Id: OTP-17055 Aux Id: ERL-1417 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Add manifest to all executables and dynamic libraries.</p>
          <p>
	    Own Id: OTP-17067 Aux Id: PR-2907 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.1.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a crash when exceptions were thrown during call
	    time tracing.</p>
          <p>
	    Own Id: OTP-16994</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.1.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed bugs causing issues when enabling the ERTS internal
	    allocators on a system built with the undocumented and
	    unsupported <c>SMALL_MEMORY</c> feature.</p>
          <p>
	    Own Id: OTP-16939</p>
        </item>
        <item>
          <p>
	    The inet driver used to use 16 as maximum elements in an
	    I/O vector passed to <c>writev()</c> (and
	    <c>WSASend()</c> on Windows). When the data to send
	    contained lots of elements, this caused a performance
	    degradation since repeated calls to <c>writev()</c> had
	    to be made to a much larger extent. The inet driver now
	    looks up actual maximum amount of elements that can be
	    used on the system, instead of just assuming 16. On most
	    systems this will result in a maximum amount of I/O
	    vector elements of 1024.</p>
          <p>
	    As of OTP 23.0 the term encoding of signals to send over
	    the distribution are encoded into I/O vectors of buffers
	    instead of into a single buffer. Reference counted
	    binaries are referred to directly from the I/O vector
	    instead of being copied into the single buffer. That is,
	    Erlang signals containing huge amounts of reference
	    counted binaries was effected by this performance
	    degradation.</p>
          <p>
	    Own Id: OTP-16955 Aux Id: ERL-1343, OTP-15618 </p>
        </item>
        <item>
          <p>
	    In the distributed case, a faulty <c>reply</c> option in
	    a call to the <c>spawn_request()</c> BIF erroneously
	    caused a <c>badarg</c> exception instead of a
	    <c>badopt</c> error message reply.</p>
          <p>
	    Own Id: OTP-16991 Aux Id: OTP-15251 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.1.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    inet:setopts([{active,once}]) wakes up IO polling thread
	    unnecessarily, leading to lock contention and visibly
	    higher CPU utilization.</p>
          <p>
	    Own Id: OTP-16847 Aux Id: ERL-1301 </p>
        </item>
        <item>
          <p>
	    Two bugs in the ERTS internal thread wakeup functionality
	    have been fixed. These bugs mainly hit when all threads
	    in the system tried to go to sleep. When the bugs were
	    triggered, certain operations were delayed until a thread
	    woke up due to some other reason. Most important
	    operations effected were code loading, persistent term
	    updates, and memory deallocation.</p>
          <p>
	    Own Id: OTP-16870</p>
        </item>
        <item>
          <p>
	    Fixed bug in <c>ets:select_replace/2</c> on
	    <c>compressed</c> tables that could produce faulty
	    results or VM crash. Bug exists since OTP 20.</p>
          <p>
	    Own Id: OTP-16874 Aux Id: ERL-1356, PR-2763 </p>
        </item>
        <item>
	    <p>When compiling Erlang/OTP on macOS using Xcode 12, the
	    performance of the BEAM interpreter would be
	    degraded.</p>
          <p>
	    Own Id: OTP-16892</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    As of OTP 22, the allocator specific memory carrier pools
	    were replaced by a node global carrier pool. This
	    unfortunately caused substantial memory fragmentation in
	    some cases due to long lived data being spread into
	    carriers used by allocators mainly handling short lived
	    data.</p>
          <p>
	    A new command line argument <c>+M&lt;S&gt;cp</c> has been
	    introduced with which one can enable the old behavior as
	    well as configuring other behaviors for the carrier
	    pools. In order to configure the old behavior, with
	    allocator specific carrier pools for all allocators, pass
	    <c>+Mucp :</c> (including the colon character) as a
	    command line argument to <c>erl</c> when starting the
	    Erlang system.</p>
          <p>
	    The default configuration for carrier pools will be
	    changed to <c>+Mucp :</c> some time in the future, but
	    not in this patch.</p>
          <p>
	    Own Id: OTP-16856</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Update the documentation of the abstract format to use
	    <c>ANNO</c> instead of <c>LINE</c>.</p>
          <p>
	    Own Id: OTP-16625 Aux Id: PR-2609 </p>
        </item>
        <item>
	    <p>The emulator will no longer revert to the default
	    number of schedulers when running under a CPU quota lower
	    than 1 CPU.</p>
          <p>
	    Own Id: OTP-16710 Aux Id: ERL-1280 </p>
        </item>
        <item>
	    <p>Fixed a problem with crash dumps. When a process that
	    contained reference to literals internally created by the
	    runtime system (such as the tuple returned by
	    <c>os:type/0</c>), the literal would not be included in
	    the crash dump and the crashdump viewer would complain
	    about the heap being incomplete.</p>
          <p>
	    Own Id: OTP-16713</p>
        </item>
        <item>
          <p>
	    Fix configure detection of PGO for clang.</p>
          <p>
	    Own Id: OTP-16738</p>
        </item>
        <item>
          <p>
	    The to_erl program has been fixed to correctly interpret
	    newline as only newline and not newline+return.</p>
          <p>
	    This bug would cause the terminal to behave strangely
	    when using lines longer than the terminal size.</p>
          <p>
	    Own Id: OTP-16741</p>
        </item>
        <item>
          <p>
	    A race condition when changing process priority by
	    calling <c>process_flag(priority, Prio)</c> could cause
	    elevation of priority for a system task to be ignored.
	    This bug hit if the system task was scheduled on the
	    process calling <c>process_flag()</c> at the same time as
	    the priority was changed. The bug is quite harmless and
	    should hit very seldom if ever.</p>
          <p>
	    Own Id: OTP-16770</p>
        </item>
        <item>
          <p>
	    Adjust <c>/bin/sh</c> to <c>/system/bin/sh</c> in scripts
	    when installing on Android.</p>
          <p>
	    Own Id: OTP-16833 Aux Id: PR-2729 </p>
        </item>
        <item>
	    <p>In rare circumstances, when loading a BEAM file
	    generated by an alternative code generator (not the
	    Erlang compiler in OTP) or from handwritten or patched
	    BEAM code, the loader could do an unsafe
	    optimization.</p>
          <p>
	    Own Id: OTP-16850 Aux Id: ERL-1344 </p>
        </item>
        <item>
          <p>
	    A memory and file descriptor leak in socket has been
	    fixed. (When a newly opened socket that had not entered
	    the fd into the VM's poll set (neither received, sent,
	    accepted nor connected) was abandoned without closing
	    (process died), after assigning a different controlling
	    process, then a memory block and the file descriptor
	    could be leaked.)</p>
          <p>
	    Own Id: OTP-16857</p>
        </item>
        <item>
          <p>
	    The documentation of <c>statistics(run_queue)</c>
	    erroneously stated that it returns the total length of
	    all normal run queues when it is the total length of all
	    normal and dirty CPU run queues that is returned. The
	    documentation has been updated to reflect the actual
	    behavior.</p>
          <p>
	    Own Id: OTP-16866 Aux Id: ERL-1355 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Changes in order to build on the Haiku operating system.</p>
          <p>
	    Thanks to Calvin Buckley</p>
          <p>
	    Own Id: OTP-16707 Aux Id: PR-2638 </p>
        </item>
        <item>
          <p>
	    When building the inet driver on Windows, there where
	    many compiler warnings regarding type casting (used when
	    calling the debug macro). This has now been resolved.</p>
          <p>
	    Own Id: OTP-16715</p>
        </item>
        <item>
          <p>
	    Make (use of) the socket registry optional (still enabled
	    by default). Its now possible to build OTP with the
	    socket registry turned off, turn it off by setting an
	    environment variable and controlling in runtime (via
	    function calls and arguments when creating sockets).</p>
          <p>
	    Own Id: OTP-16763</p>
        </item>
        <item>
          <p>
	    Change default filename encoding on android to UTF-8.</p>
          <p>
	    Own Id: OTP-16821 Aux Id: PR-2733 </p>
        </item>
        <item>
          <p>
	    Clarification of the format of the atom cache header used
	    by the distribution.</p>
          <p>
	    Own Id: OTP-16848 Aux Id: PR-2737 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.0.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The ERTS internal I/O poll implementation could get into
	    an inconsistent state causing input events to be ignored.</p>
          <p>
	    Own Id: OTP-16780 Aux Id: PR-2701 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.0.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed bug in <c>erlang:load_nif/2</c> that could cause it
	    to throw <c>badarg</c> exception if a concurrent code
	    change operation was in progress. Bug existed since OTP
	    23.0.</p>
          <p>
	    Own Id: OTP-16704 Aux Id: ERL-1273, PR-16704 </p>
        </item>
        <item>
          <p>
	    Minor fix of debug compiled VM.</p>
          <p>
	    Own Id: OTP-16717</p>
        </item>
        <item>
          <p>
	    An unintentional reuse of an already used emulator
	    internal event object could cause a wakeup signal to a
	    thread to be lost. In worst case this could cause the
	    runtime system to hang. This hang was however quite rare.</p>
          <p>
	    Own Id: OTP-16766 Aux Id: ERL-1304 </p>
        </item>
        <item>
          <p>
	    NIF threads and driver threads on non-Linux systems
	    leaked internal resources when terminating. On Windows
	    these resources were one event per thread. On most other
	    systems one mutex and one condition variable per thread.
	    On these other systems that also lacked
	    <c>pthread_cond_timedwait()</c> also a pipe with its file
	    descriptors was leaked.</p>
          <p>
	    Own Id: OTP-16772 Aux Id: ERL-1304 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.0.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed bug when sending an export fun (eg
	    <c>lists:reverse/1</c>) on a not yet established
	    connection. It could cause VM crash. Bug exists since OTP
	    23.0.</p>
          <p>
	    Own Id: OTP-16693 Aux Id: ERL-1254, PR-2640 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.0.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The functionality utilized by BIFs for temporary
	    disabling of garbage collection while yielding could
	    cause system task queues to become inconsistent on a
	    process executing such a BIF. Process system tasks are
	    for example utilized when purging code, garbage
	    collecting literal data, and when issuing an ordinary
	    garbage collection from another process.</p>
          <p>
	    The bug does not trigger frequently. Multiple code purges
	    in direct sequence makes it more likely that this bug is
	    triggered. In the cases observed, this has resulted in a
	    hanging code purge operation.</p>
          <p>
	    Own Id: OTP-16639 Aux Id: ERL-1236 </p>
        </item>
        <item>
          <p>
	    SCTP and UDP recv/2,3 hangs indefinitely if socket is
	    closed while recv is called (socket in passive mode).</p>
          <p>
	    Own Id: OTP-16654 Aux Id: ERL-1242 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 11.0</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>BIFs now behave like ordinary functions with regard to
	    tracing, allowing <c>call_count</c> tracing and fixing a
	    few bugs where return trace messages were lost when BIFs
	    tail-called themselves or other functions
	    ("trapping").</p>
          <p>
	    Own Id: OTP-14734 Aux Id: ERL-496 </p>
        </item>
        <item>
          <p>
	    Fix various compiler warnings on 64-bit Windows.</p>
          <p>
	    Own Id: OTP-15800</p>
        </item>
        <item>
	    <p><c>erlang:fun_info(fun foo/1, name/1)</c> used to
	    return a function name based on the name of the function
	    that <c>fun foo/1</c> was used in. The name returned is
	    now <c>-fun.foo/1-</c>.</p>
          <p>
	    Own Id: OTP-15837</p>
        </item>
        <item>
	    <p><c>file:allocate/3</c> will now update the file size
	    on all platforms.</p>
          <p>
	    Own Id: OTP-16155 Aux Id: PR-2408 </p>
        </item>
        <item>
          <p>
	    <c>erlang:decode_packet</c> with type set to <c>httph</c>
	    no longer accepts http headers that have whitespaces in
	    between the header name and the colon. That is:</p>
          <p>
	    <c> Content-Type : text/html </c></p>
          <p>
	    is no longer allowed. This has been changed to conform
	    with RFC 7230 and thus protect against http desync
	    attacks.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-16168 Aux Id: ERL-1053 </p>
        </item>
        <item>
          <p>
	    Fix the quoting rules in <c>erl -args_file</c>,
	    <c>ERL_FLAGS</c>, <c>ERL_AFLAGS</c> and <c>ERL_ZFLAGS</c>
	    to work as unix sh quoting.</p>
          <p>
	    This bug fix can make previous configuration options to
	    <c>erl</c> passed through <c>ERL_FLAGS</c>,
	    <c>ERL_AFLAGS</c>, <c>ERL_ZFLAGS</c> or <c>-args_file</c>
	    not be interpreted in the same way as before the fix.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-16244 Aux Id: ERL-1051 </p>
        </item>
        <item>
          <p>
	    Fix the Erlang distribution to handle the scenario when a
	    node connects that can handle message fragmentation but
	    can not handle the atom cache. This bug only affects
	    users that have implemented a custom distribution
	    carrier. It has been present since OTP-21.</p>
          <p>
	    The <c>DFLAG_FRAGMENT</c> distribution flag was added to
	    the set of flags that can be rejected by a distribution
	    implementation.</p>
          <p>
	    Own Id: OTP-16284</p>
        </item>
        <item>
          <p>
	    Compiling a match specification with excessive nesting
	    caused the runtime system to crash due to scheduler stack
	    exhaustion. Instead of crashing the runtime system,
	    effected functions will now raise a <c>system_limit</c>
	    error exception in this situation.</p>
          <p>
	    Own Id: OTP-16431 Aux Id: ERL-592 </p>
        </item>
        <item>
	    <p>Fixed a bug that prevented Erlang from being started
	    on Windows if it were installed on certain paths.</p>
          <p>
	    Own Id: OTP-16478 Aux Id: ERL-1115 </p>
        </item>
        <item>
	    <p>Fix bug on Windows causing bad performance when
	    standard input is closed, especially if the VM is only
	    assigned one CPU core. Could be provoked for example by
	    starting erl or escript via function <c>os:cmd/1</c>.
	    Could be avoided with command line option
	    <c>-noinput</c>.</p> <p>The bad performance was caused by
	    an io thread spinning indefinitely.</p>
          <p>
	    Own Id: OTP-16521 Aux Id: ERL-716 </p>
        </item>
        <item>
	    <p>Fixed a bug on Unix platforms that would cause
	    <c>file:read_file_info/1</c> to return incorrect results
	    if the emulator's effective user or group id differed
	    from its actual ones.</p>
          <p>
	    Own Id: OTP-16571</p>
        </item>
        <item>
          <p>
	    socket: Compile problems on Android when PACKET_FASTROUTE
	    and PACKET_USER are both defined and has the same value.
	    Use of PACKET_FASTROUTE has been removed as it may be
	    unused and also only for none user-land.</p>
          <p>
	    Own Id: OTP-16576 Aux Id: ERL-1208 </p>
        </item>
        <item>
          <p>
	    Fixed bug in erl_crash.dump generation that could cause a
	    SEGV core dump if a recently cancelled timer was found.</p>
          <p>
	    Own Id: OTP-16596 Aux Id: ERL-1105, PR-2606 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Improved concurrency of <c>erlang:load_nif/2</c> as it
	    does no longer block other schedulers from executing
	    during initial load of a NIF library.</p>
          <p>
	    Own Id: OTP-10278</p>
        </item>
        <item>
	    <p>EEP-52 has been implemented.</p>
	    <p>In binary matching, the size of the segment to be
	    matched is now allowed to be a guard expression, and
	    similarly in map matching the keys can now be guard
	    expressions. See the Erlang Reference Manual and
	    Programming Examples for more details.</p>
	    <p>Language compilers or code generators that generate
	    Core Erlang code may need to be updated to be compatible
	    with the compiler in OTP 23. For more details, see the
	    section Backwards Compatibility in <url
	    href="http://erlang.org/eeps/eep-0052.html">EEP
	    52</url>.</p>
          <p>
	    Own Id: OTP-14708</p>
        </item>
        <item>
	    <p>Internally in BEAM, handling of continuation pointers
	    has been simplified. This change is not user-visible,
	    except when examining a process stack in the crashdump
	    viewer. The continuation pointer for a function will now
	    be stored below the y(0) for that function.</p>
          <p>
	    Own Id: OTP-15077</p>
        </item>
        <item>
	    <p><c>seq_trace</c> tokens are now propagated to spawned
	    processes.</p>
          <p>
	    Own Id: OTP-15232 Aux Id: ERL-700 </p>
        </item>
        <item>
	    <p>Improvements of distributed spawn operations. These
	    include both scalability and performance improvements as
	    well as new functionality.</p> <p>New functionality:</p>
	    <list> <item><p>A distributed <seemfa
	    marker="erts:erlang#spawn_monitor/4"><c>spawn_monitor()</c></seemfa>
	    BIF.</p></item> <item><p>Support for <c>monitor</c>
	    option in the distributed <seemfa
	    marker="erts:erlang#spawn_opt/5"><c>spawn_opt()</c></seemfa>
	    BIF.</p></item> <item><p>New <seemfa
	    marker="erts:erlang#spawn_request/5"><c>spawn_request()</c></seemfa>
	    BIFs for asynchronous spawn of processes.
	    <c>spawn_request()</c> supports all options that
	    <c>spawn_opt()</c> support plus a few more.</p></item>
	    </list>
          <p>
	    Own Id: OTP-15251</p>
        </item>
        <item>
          <p>
	    Make <c>ets:insert/2</c> and <c>ets:insert_new/2</c>
	    yield scheduler execution on long lists of records to
	    insert.</p>
          <p>
	    Own Id: OTP-15517 Aux Id: ERL-560 </p>
        </item>
        <item>
          <p>
	    Increased size of node incarnation numbers (aka
	    "creation"), from 2 bits to 32 bits. This will reduce the
	    risk of pids/ports/refs, from different node incarnation
	    with the same name, being mixed up.</p>
          <p>
	    Own Id: OTP-15603</p>
        </item>
        <item>
	    <p>The runtime system can now encode Erlang terms to the
	    Erlang external term format as I/O vectors. The main
	    benefit of this is that reference counted binaries can be
	    referred to directly instead of copied into a new
	    binary.</p> <p>The default Erlang distribution over TCP
	    will always utilize this. Alternate distribution
	    implementations utilizing a port as distribution
	    controller will utilize this if the driver implements the
	    <seecref
	    marker="erts:driver_entry#outputv"><c>outputv</c></seecref>
	    callback. Alternate Erlang distribution implementations
	    utilizing a process as distribution controller will
	    utilize this if I/O vectors are utilized by the
	    functionality that processes the data returned from
	    <seemfa
	    marker="erts:erlang#dist_ctrl_get_data/1"><c>erlang:dist_ctrl_get_data()</c></seemfa>.</p>
	    <p>The return type for data returned by <seemfa
	    marker="erts:erlang#dist_ctrl_get_data/1"><c>erlang:dist_ctrl_get_data()</c></seemfa>
	    has been changed from <c>iodata()</c> to <c>iovec()</c>.
	    Note that <c>iovec()</c> data is valid <c>iodata()</c> so
	    old implementations using
	    <c>erlang:dist_ctrl_get_data()</c> do not need to be
	    changed, but may benefit from being changed depending on
	    usage scenario.</p> <p>The new BIFs <seemfa
	    marker="erts:erlang#term_to_iovec/1"><c>term_to_iovec/1</c></seemfa>
	    and <seemfa
	    marker="erts:erlang#term_to_iovec/2"><c>term_to_iovec/2</c></seemfa>
	    have been introduced. These work exactly as
	    <c>term_to_binary()</c> with the corresponding arity
	    except the return type.</p>
          <p>
	    Own Id: OTP-15618</p>
        </item>
        <item>
	    <p>Improved ETS scalability of concurrent calls that
	    change the size of a table, like <c>ets:insert/2</c> and
	    <c>ets:delete/2</c>.</p> <p>This performance feature was
	    implemented for <c>ordered_set</c> in OTP 22.0 and does
	    now apply for all ETS table types.</p> <p>The improved
	    scalability may come at the cost of longer latency of
	    <c>ets:info(T,size)</c> and <c>ets:info(T,memory)</c>. A
	    new table option <c>decentralized_counters</c> has
	    therefore been added. It is default <c>true</c> for
	    <c>ordered_set</c> with <c>write_concurrency</c> enabled
	    and default <c>false</c> for all other table types.</p>
          <p>
	    Own Id: OTP-15744 Aux Id: OTP-15623, PR-2229 </p>
        </item>
        <item>
	    <p>Directories can now be opened by <c>file:open/2</c>
	    when passing the <c>directory</c> option.</p>
          <p>
	    Own Id: OTP-15835 Aux Id: PR-2212 </p>
        </item>
        <item>
          <p>
	    Add Hygon Dhyana as known processor to enable support for
	    atomic operations.</p>
          <p>
	    Own Id: OTP-15840</p>
        </item>
        <item>
          <p>
	    Make <c>erlang:phash2</c> functions consume reductions
	    proportional to the size of the input term and yield
	    scheduler when reductions are depleted.</p>
          <p>
	    Own Id: OTP-15842 Aux Id: PR-2182 </p>
        </item>
        <item>
          <p>
	    Fix various build issues when compiling Erlang/OTP to the
	    IBM AIX platform.</p>
          <p>
	    Own Id: OTP-15866 Aux Id: PR-2110 </p>
        </item>
        <item>
          <p>
	    Add configure options <c>--enable-pie</c> and
	    <c>--disable-pie</c> to control the build of position
	    independent executables.</p>
          <p>
	    Own Id: OTP-15868</p>
        </item>
        <item>
	    <p><c>file:read_file_info/2</c> can now be used on opened
	    files and directories.</p>
          <p>
	    Own Id: OTP-15956 Aux Id: PR-2231 </p>
        </item>
        <item>
          <p>
	    Add arity-1 versions of <c>atom_to_binary</c>,
	    <c>binary_to_atom</c> and <c>binary_to_existing_atom</c>,
	    all with <c>utf8</c> as default encoding.</p>
          <p>
	    Own Id: OTP-15995 Aux Id: PR-2358 </p>
        </item>
        <item>
          <p>
	    Optimized the erts internal hash table implementation for
	    faster lookups. The internal hash is used for things
	    like; the process registry, executing erlang:apply/2,
	    executing M:func(test), and more.</p>
          <p>
	    Own Id: OTP-16014 Aux Id: PR-2345 </p>
        </item>
        <item>
	    <p>CPU quotas are now taken into account when deciding
	    the default number of online schedulers, improving
	    performance in container environments where quotas are
	    applied, such as <c>docker</c> with the <c>--cpus</c>
	    flag.</p>
          <p>
	    Own Id: OTP-16105 Aux Id: ERL-927 </p>
        </item>
        <item>
          <p>
	    The <c>-config</c> option to <c>erl</c> now can take
	    multiple config files without repeating the
	    <c>-config</c> option. Example:</p>
          <p>
	    erl -config sys local</p>
          <p>
	    Own Id: OTP-16148 Aux Id: PR-2373 </p>
        </item>
        <item>
          <p>
	    Removed the <c>scheduler_poll</c> and <c>async I/O</c>
	    dtrace and LTTng trace probes.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-16215</p>
        </item>
        <item>
          <p>
	    Optimized <c>persistent_term:put/2</c> and <c>erase/1</c>
	    to consume less CPU in many cases.</p>
          <p>
	    Own Id: OTP-16237 Aux Id: PR-2389 </p>
        </item>
        <item>
	    <p>The possibility to run Erlang distribution without
	    relying on EPMD has been extended. To achieve this a
	    couple of new options to the inet distribution has been
	    added.</p> <taglist> <tag>-dist_listen false</tag>
	    <item>Setup the distribution channel, but do not listen
	    for incoming connection. This is useful when you want to
	    use the current node to interact with another node on the
	    same machine without it joining the entire
	    cluster.</item> <tag>-erl_epmd_port Port</tag>
	    <item>Configure a default port that the built-in EPMD
	    client should return. This allows the local node to know
	    the port to connect to for any other node in the
	    cluster.</item> </taglist> <p>The <c>erl_epmd</c>
	    callback API has also been extended to allow returning
	    <c>-1</c> as the creation which means that a random
	    creation will be created by the node.</p>
	    <p>In addition a new callback function called
	    <c>listen_port_please</c> has been added that allows the
	    callback to return which listen port the distribution
	    should use. This can be used instead of
	    <c>inet_dist_listen_min/max</c> if the listen port is to
	    be fetched from an external service.</p>
          <p>
	    Own Id: OTP-16250</p>
        </item>
        <item>
          <p>
	    On systems without <c>closefrom()</c>, such as Linux,
	    iterating over all possible file descriptors and calling
	    <c>close()</c> for each is inefficient. This is markedly
	    so when the maximum number of file descriptors has been
	    tuned to a large number.</p>
          <p>
	    Instead, in erl_child_setup, walk the open descriptors
	    under <c>/dev/fd</c> and close only those which are open.</p>
          <p>
	    This optimization affects the CPU usage of starting a new
	    Erlang instance.</p>
          <p>
	    Own Id: OTP-16270</p>
        </item>
        <item>
          <p>
	    Optimized <c>maps:merge/2</c> for trivial cases of an
	    empty map(s) or same map.</p>
          <p>
	    Own Id: OTP-16283 Aux Id: PR-2441 </p>
        </item>
        <item>
          <p>
	    The new experimental <c>socket</c> module has been moved
	    to the Kernel application.</p>
          <p>
	    Own Id: OTP-16312</p>
        </item>
        <item>
	    <p>Improved the presentation of allocations and carriers
	    in the <c>instrument</c> module.</p>
          <p>
	    Own Id: OTP-16327</p>
        </item>
        <item>
          <p>
	    As announced in OTP 22.0, the previously existing limited
	    support for VxWorks has now been removed.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-16329 Aux Id: OTP-15621 </p>
        </item>
        <item>
	    <p> The return value when using the <c>httph</c> and
	    <c>httph_bin</c> option to <c>erlang:decode_packet/3</c>
	    and <c>inet:setopts/2</c> has been changed to also
	    include the original header unmodified. See <seemfa
	    marker="erlang#decode_packet/3"><c>erlang:decode_packet/3</c></seemfa>.
	    Example: </p> <pre> >
	    erlang:decode_packet(httph_bin,&lt;&lt;"HELLO:
	    hi\r\n\r\n"&gt;&gt;,[]).
	    {ok,{http_header,0,&lt;&lt;"Hello"&gt;&gt;,&lt;&lt;"HELLO"&gt;&gt;,&lt;&lt;"hi"&gt;&gt;},&lt;&lt;"\r\n"&gt;&gt;}
	    </pre>
          <p>
	    Own Id: OTP-16347 Aux Id: PR-2466 </p>
        </item>
        <item>
          <p>
	    Ensure <c>net_kernel:monitor_nodes/1</c> sends
	    <c>nodedown</c> messages of a failed connection before
	    <c>nodeup</c> messages of a reestablished connection
	    toward the same node.</p>
          <p>
	    Own Id: OTP-16362</p>
        </item>
        <item>
          <p>
	    Update of <seeerl
	    marker="kernel:seq_trace#whatis">sequential
	    tracing</seeerl> to also support other information
	    transfers than message passing.</p>
          <p>
	    Own Id: OTP-16370 Aux Id: OTP-15251, OTP-15232 </p>
        </item>
        <item>
          <p>
	    socket: It is now possible to create a socket from an
	    already existing file descriptor.</p>
          <p>
	    Own Id: OTP-16398 Aux Id: ERL-1154 </p>
        </item>
        <item>
          <p>
	    socket: The socket:supports/1 function now also report if
	    netns is supported or not.</p>
          <p>
	    Own Id: OTP-16432</p>
        </item>
        <item>
	    <p><c>=:=</c> has been optimized to return <c>false</c>
	    immediately when comparing two maps of different
	    sizes.</p>
          <p>
	    Own Id: OTP-16454</p>
        </item>
        <item>
          <p>
	    Changed the behaviour of passing the <c>erl</c> command
	    line argument <seecom
	    marker="erts:erl#async_thread_pool_size"><c>+A
	    0</c></seecom> to silently imply <c>+A 1</c>. That is, it
	    will no longer be possible to completely disable the
	    async thread pool. Disabling of the async thread pool has
	    since OTP 21 had no benefits; only lots of drawbacks.</p>
          <p>
	    Own Id: OTP-16482</p>
        </item>
        <item>
	    <p>The deprecated <c>erlang:get_stacktrace/0</c> BIF now
	    returns an empty list instead of a stacktrace. To
	    retrieve the stacktrace, use the extended try/catch
	    syntax that was introduced in OTP 21.
	    <c>erlang:get_stacktrace/0</c> is scheduled for removal
	    in OTP 24.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-16484</p>
        </item>
        <item>
          <p>
	    <seemfa
	    marker="erts:init#restart/1"><c>init:restart/1</c></seemfa>
	    has been introduced. <c>init:restart/1</c> can be
	    utilized for changing the code loading mode during a
	    restart.</p>
          <p>
	    Own Id: OTP-16492 Aux Id: PR-2461 </p>
        </item>
        <item>
          <p>
	    Improve configure for the net nif, which should increase
	    portability.</p>
          <p>
	    Own Id: OTP-16530 Aux Id: OTP-16464 </p>
        </item>
        <item>
          <p>
	    socket: Socket counters and socket global counters are
	    now represented as maps (instead of property lists).</p>
          <p>
	    Own Id: OTP-16535</p>
        </item>
        <item>
	    <p>Reduced the resource usage of <c>erlc</c> in parallel
	    builds (e.g. <c>make -j128</c>).</p>
          <p>
	    Own Id: OTP-16543 Aux Id: ERL-1186 </p>
        </item>
        <item>
          <p>
	    The experimental socket module has gotten restrictions
	    removed so now the 'seqpacket' socket type should work
	    for any communication domain (protocol family) where the
	    OS supports it, typically the Unix Domain.</p>
          <p>
	    Own Id: OTP-16550 Aux Id: ERIERL-476 </p>
        </item>
        <item>
	    <p>Updated the internal <c>pcre</c> library to
	    <c>8.44</c>.</p>
          <p>
	    Own Id: OTP-16557</p>
        </item>
        <item>
	    <p>There is now cost in terms of reductions when copying
	    binary data using the binary syntax.</p>
          <p>
	    Own Id: OTP-16601 Aux Id: OTP-16577 </p>
        </item>
        <item>
          <p>
	    The executable <c>erl_call</c> is now part of the
	    <c>erts</c> distribution in addition to
	    <c>erl_interface</c>.</p>
          <p>
	    Own Id: OTP-16602</p>
        </item>
        <item>
          <p>
	    Fix a buffer overflow bug that caused EPMD to consume
	    100% CPU after many nodes had been connected on the same
	    time on NetBSD.</p>
          <p>
	    Own Id: OTP-16615</p>
        </item>
        <item>
          <p>
	    <c>erl -remsh</c> now uses the dynamic node names feature
	    by default. See the <seecom
	    marker="erts:erl">erl</seecom> documentation for details.</p>
          <p>
	    Own Id: OTP-16616</p>
        </item>
        <item>
          <p>
	    socket: By default the socket options rcvtimeo and
	    sndtimeo are now disabled. To enable these, OTP now has
	    to be built with the configure option
	    --enable-esock-rcvsndtimeo</p>
          <p>
	    Own Id: OTP-16620</p>
        </item>
        <item>
          <p>
	    The environment variable $HOME does no longer have to be
	    set before Erlang can be started.</p>
          <p>
	    Own Id: OTP-16635 Aux Id: ERL-476 PR-2390 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.7.2.18</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix bug where the process message queue was left in an
	    inconsistent state when changing from on_heap to off_heap
	    message queue data causing the GC to segfault.</p>
          <p>
	    Own Id: OTP-18075 Aux Id: PR-5927 </p>
        </item>
        <item>
          <p>
	    Fix functions that convert universal to localtime (such
	    as erlang:localtime/0 and
	    erlang:universaltime_to_localtime/1) to fetch the correct
	    localtime if it is changed after the start of the VM.</p>
          <p>
	    Own Id: OTP-18076 Aux Id: ERIERL-802 PR-5905 </p>
        </item>
        <item>
          <p>
	    Fix memory leak when a process doing a distributed
	    fragmented send is sent an exit signal. Before this fix
	    the receiving node would be left with an incomplete
	    message that would remain until the nodes were
	    disconnected. The bug has existed since Erlang/OTP 21.</p>
          <p>
	    Own Id: OTP-18077 Aux Id: GH-5876 PR-5892 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.7.2.17</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p> By default <c>global</c> does <i>not</i> take any
	    actions to restore a fully connected network when
	    connections are lost due to network issues. This is
	    problematic for all applications expecting a fully
	    connected network to be provided, such as for example
	    <c>mnesia</c>, but also for <c>global</c> itself. A
	    network of overlapping partitions might cause the
	    internal state of <c>global</c> to become inconsistent.
	    Such an inconsistency can remain even after such
	    partitions have been brought together to form a fully
	    connected network again. The effect on other applications
	    that expects that a fully connected network is maintained
	    may vary, but they might misbehave in very subtle hard to
	    detect ways during such a partitioning. </p> <p> In order
	    to prevent such issues, we have introduced a <i>prevent
	    overlapping partitions</i> fix which can be enabled using
	    the <c>prevent_overlapping_partitions</c>
	    <c>kernel(6)</c> parameter. When this fix has been
	    enabled, <c>global</c> will actively disconnect from
	    nodes that reports that they have lost connections to
	    other nodes. This will cause fully connected partitions
	    to form instead of leaving the network in a state with
	    overlapping partitions. Note that this fix <i>has</i> to
	    be enabled on <i>all</i> nodes in the network in order to
	    work properly. Since this quite substantially changes the
	    behavior, this fix is currently disabled by default.
	    Since you might get hard to detect issues without this
	    fix you are, however, <i>strongly</i> advised to enable
	    this fix in order to avoid issues such as the ones
	    described above. As of OTP 25 this fix will become
	    enabled by default. </p>
          <p>
	    Own Id: OTP-17843 Aux Id: ERIERL-732, PR-5611 </p>
        </item>
        <item>
          <p>
	    Fix memory leak when tracing on running on a process that
	    only handle system tasks or non-message signals (for
	    example process_info requests).</p>
          <p>
	    Own Id: OTP-17904 Aux Id: ERIERL-757 </p>
        </item>
        <item>
          <p>
	    Fix Erlang monotonic time on MacOS. Previously used OS
	    monotonic time primitive on MacOS is buggy and will not
	    be used anymore. It has been replaced with usage of
	    another OS monotonic time primitive that does not appear
	    to be buggy.</p>
          <p>
	    Own Id: OTP-17998 Aux Id: PR-5825, GH-5554 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.7.2.16</title>

    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Responsiveness of processes executing on <c>normal</c> or
	    <c>low</c> priority could suffer due to code purging or
	    literal area removal on systems with a huge amount of
	    processes. This since during these operations all
	    processes on the system were scheduled for execution at
	    once.</p>
          <p>
	    This problem has been fixed by introducing a limit on
	    outstanding purge and copy literal requests in the
	    system. By default this limit is set to twice the amount
	    of schedulers on the system. This will ensure that
	    schedulers will have enough work scheduled to perform
	    these operations as quickly as possible at the same time
	    as other work will be interleaved to a much higher
	    degree. Performance of these operations will however be
	    somewhat degraded due to the overhead of enforcing this
	    limit compared to when using a very large limit.</p>
          <p>
	    This limit can be set by passing the <c>+zosrl</c>
	    command line argument to <c>erl</c>, or by calling
	    <c>erlang:system_flag(outstanding_system_requests_limit,
	    NewLimit)</c>.</p>
          <p>
	    Own Id: OTP-17796 Aux Id: ERIERL-729, PR-5473 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.7.2.15</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The runtime system could call <c>select()</c> with a too
	    large timeout value when executing on MacOS. This could
	    in turn cause the runtime system to crash.</p>
          <p>
	    Own Id: OTP-17735 Aux Id: GH-5339 </p>
        </item>
        <item>
	    <p>Certain distributed signals that for various reasons
	    must to be forced into the distribution buffer even when
	    it is full would instead be lost if the distribution
	    buffer was full when sent. The effected signals:</p>
	    <list> <item><c>EXIT</c> signals with exit reasons of one
	    word size.</item> <item><c>DOWN</c> signals with exit
	    reasons of one word size.</item> <item><c>demonitor</c>
	    signals from a terminating process.</item>
	    <item><c>unlink_ack</c> signals on OTP 23 and 24.</item>
	    <item><c>spawn_reply</c> signals on OTP 23 and 24.</item>
	    </list>
          <p>
	    Own Id: OTP-17737 Aux Id: GH-5346, GH-4989 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.7.2.14</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>On 32-bit computers, <c>binary_to_term/1,2</c> is now
	    more resilient against corrupted binaries containing maps
	    in the external format.</p>
          <p>
	    Own Id: OTP-17604</p>
        </item>
        <item>
          <p>
	    A call to <c>process_info(Pid, status)</c> could
	    erroneously report the status <c>running</c> when it
	    should have reported <c>waiting</c>. This occurred when
	    the calling process was executing on a higher priority
	    than the process being inspected. This bug has been
	    present since OTP 21.0 (erts version 10.0).</p>
          <p>
	    Own Id: OTP-17628</p>
        </item>
        <item>
          <p>
	    A race between an exiting port and handling of
	    simultaneously received signals to that port could cause
	    a runtime system crash. The effected signals are
	    <c>link</c>, <c>monitor</c> and <c>demonitor</c>. On OTP
	    22 a similar race could also cause a memory leak when
	    receiving an <c>unlink</c> signal.</p>
          <p>
	    Own Id: OTP-17642 Aux Id: PR-5248 </p>
        </item>
        <item>
          <p>
	    The message queue of a process entered an inconsistent
	    state after a <c>receive</c> expression with an invalid
	    timeout value was executed. If the exception raised due
	    to the invalid timeout value was caught, the following
	    <c>receive</c> expression executed by the process could
	    fail to match messages already present in the message
	    queue.</p>
          <p>
	    On OTP 24 this could also cause the whole runtime system
	    to crash.</p>
          <p>
	    Own Id: OTP-17651 Aux Id: GH-5235, PR-5244 </p>
        </item>
        <item>
          <p>
	    Sending a <c>Port ! {PortOwner, close}</c> signal from a
	    process other than the port owner could erroneously
	    trigger a <c>badsig</c> exit signal being sent to the
	    port owner process even though the correct
	    <c>PortOwner</c> had been passed in the signal.</p>
          <p>
	    Own Id: OTP-17665 Aux Id: PR-5248 </p>
        </item>
        <item>
          <p>
	    This fixes a bug in <c>erts_factory_undo</c> that caused
	    the heap to not be reset correctly. The
	    <c>erts_factory_undo</c> function is, for example, called
	    when a <c>binary_to_term/1</c> call fails to reset the
	    heap to its state before the <c>binary_to_term/1</c>
	    call. This can cause the heap to contain invalid terms
	    which potentially can cause issues (e.g., crashes) when
	    the whole heap is scanned.</p>
          <p>
	    Own Id: OTP-17677</p>
        </item>
        <item>
	    <p>Fix bug in <c>persistent_term</c> when a key-value
	    pair contains a magic reference that is referred more
	    than once. Magic references are NIF resources or returned
	    from BIFs like <c>ets:new</c>, <c>atomics:new</c>. The
	    bug could cause the memory of the referred resource to be
	    prematurely deallocated.</p> <p>The bug also apply to
	    magic references in message passing on a runtime built
	    with configure option
	    <c>--enable-sharing-preserving</c>.</p> <p>Bug exist for
	    64-bit since OTP-24.0 and for 32-bit since OTP-20.0.</p>
          <p>
	    Own Id: OTP-17700 Aux Id: GH-5271, PR-5273 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.7.2.13</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a bug in <c>zlib</c> where decompression would
	    crash with <c>data_error</c> on some valid inputs. The
	    bug could also cause extraction from a zip archive using
	    <c>zip:extract()</c> to fail.</p>
          <p>
	    Own Id: OTP-17470 Aux Id: ERIERL-657 </p>
        </item>
        <item>
          <p>
	    A call to <c>erlang:cancel_timer(_, [{info, false}])</c>
	    could cause the calling process to block forever in the
	    call. Note that only the synchronous version of the call
	    (that is, the <c>async</c> option is <c>false</c>) in
	    combination with the <c>info</c> option set to
	    <c>false</c> was effected by this bug.</p>
          <p>
	    Own Id: OTP-17472 Aux Id: PR-4932 </p>
        </item>
        <item>
          <p>
	    Microstate accounting (msacc) and
	    <c>os:perf_counter()</c> unintentionally used system time
	    instead of monotonic time for time measurements on a lot
	    of systems. These systems were all non x86/x86_64 systems
	    or x86/x86_64 systems without a reliable and constant
	    rdtsc instruction.</p>
          <p>
	    The lock counting (lcnt) built runtime system also
	    unintentionally used system time instead of monotonic
	    time for time measurements on all systems.</p>
          <p>
	    Own Id: OTP-17493</p>
        </item>
        <item>
          <p>
	    Simultaneous calls to
	    <c>erlang:system_flag(schedulers_online, _)</c> could
	    cause callers to end up in a suspended state forever.</p>
          <p>
	    Own Id: OTP-17500 Aux Id: GH-4809 </p>
        </item>
        <item>
          <p>
	    Fix rare race bug in memory management of distribution
	    entries. Have been seen to cause VM crash when massive
	    number of repeated concurrent failing connection
	    attempts.</p>
          <p>
	    Own Id: OTP-17513 Aux Id: GH-4964, PR-5015 </p>
        </item>
        <item>
          <p>
	    Fix buffer overrun problem in the tty driver. The problem
	    happens on some platforms when using the CTRL+R
	    functionality of newshell with very long strings in the
	    history.</p>
          <p>
	    Own Id: OTP-17560 Aux Id: GH-5116 </p>
        </item>
        <item>
          <p>
	    Fix race-condition that could cause a crash when tracing
	    scheduling or garbage collections on a process that was
	    running on a dirty scheduler.</p>
          <p>
	    Own Id: OTP-17568 Aux Id: PR-4940 </p>
        </item>
        <item>
          <p>
	    Fix rare bug where re:run would crash/return invalid
	    results when given a subbinary as subject.</p>
          <p>
	    This bug has existed since Erlang/OTP 20.0.</p>
          <p>
	    Own Id: OTP-17585 Aux Id: GH-5150 </p>
        </item>
        <item>
	    <p><c>binary_to_term/1,2</c> is now more resilient
	    against corrupted binaries containing maps in the
	    external format.</p>
          <p>
	    Own Id: OTP-17594</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.7.2.12</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A call to <c>port_command()</c> could cause a scheduler
	    to end up in an eternal loop if the port was busy and the
	    calling process had incoming signals at the time of the
	    call. This bug was introduced in OTP 23.3.2 (ERTS version
	    11.2.1), OTP 22.3.4.18 (ERTS version 10.7.2.10), and OTP
	    21.3.8.23 (ERTS version 10.3.5.18).</p>
          <p>
	    Own Id: OTP-17448 Aux Id: GH-4898, PR-4903, OTP-17291 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.7.2.11</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix bug in match spec compilator seen to cause a stack
	    overflow crash on debug VM for certain match specs. Could
	    potentially cause problems for standard VM, but has not
	    been verified. Match specs are used by
	    <c>ets:match/select</c> functions and
	    <c>erlang:trace_pattern</c>.</p>
          <p>
	    Own Id: OTP-17379 Aux Id: PR-4804 </p>
        </item>
        <item>
          <p>
	    Commit of generated <c>configure</c> script.</p>
          <p>
	    Own Id: OTP-17420 Aux Id: OTP-17398, GH-4821 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.7.2.10</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>The following signals could pass before other signals
	    from the same sender to the same receiver. That is, these
	    signals could arrive too early.</p> <list>
	    <item><c>garbage-collect</c> request. Sent from one
	    process to another using one of the
	    <c>garbage_collect()</c> BIFs.</item>
	    <item><c>check-process-code</c> request. Sent from one
	    process to another using one of the
	    <c>check_process_code()</c> BIFs.</item>
	    <item><c>is-process-alive</c> reply. Sent as a response
	    to a process calling the <c>is_process_alive()</c>
	    BIF.</item> <item><c>process-info</c> reply. Sent as a
	    response to a process calling one of the
	    <c>process_info()</c> BIFs.</item>
	    <item><c>port-command</c> reply. Sent as a response to a
	    process calling one of the <c>port_command()</c>
	    BIFs.</item> <item><c>port-connect</c> reply. Sent as a
	    response to a process calling the <c>port_connect()</c>
	    BIF.</item> <item><c>port-close</c> reply. Sent as a
	    response to a process calling the <c>port_close()</c>
	    BIF.</item> <item><c>port-control</c> reply. Sent as a
	    response to a process calling the <c>port_control()</c>
	    BIF.</item> <item><c>port-call</c> reply. Sent as a
	    response to a process calling the <c>port_call()</c>
	    BIF.</item> <item><c>port-info</c> reply. Sent as a
	    response to a process calling one of the
	    <c>port_info()</c> BIFs.</item> </list>
          <p>
	    Own Id: OTP-17291</p>
        </item>
        <item>
          <p>
	    A garbage collection of a literal area missed messages
	    that entirely consisted of a term in a literal area. This
	    could in turn lead to a crash of the runtime system.</p>
          <p>
	    Own Id: OTP-17307</p>
        </item>
        <item>
          <p>
	    A call to <c>process_flag(message_queue_data,
	    off_heap)</c> could cause a crash of the runtime system
	    when sequential tracing was enabled.</p>
          <p>
	    Own Id: OTP-17349</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.7.2.9</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed a bug in the timer implementation which could cause
	    timers that were set to more than 37.25 hours in the
	    future to be delayed. This could occur if there were
	    multiple timers scheduled to be triggered very close in
	    time, but still at different times, and the scheduler
	    thread handling the timers was not able to handle them
	    quickly enough. Delayed timers were in this case
	    triggered when another unrelated timer was triggered.</p>
          <p>
	    Own Id: OTP-17253</p>
        </item>
        <item>
          <p>
	    Fix bug in call_time tracing (used by eprof) that could
	    cause VM crash. Bug exists since OTP-22.2 (but not in
	    OTP-23).</p>
          <p>
	    Own Id: OTP-17290 Aux Id: GH-4635 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Fix a file descriptor leak when using sendfile and the
	    remote side closes the connection. This bug has been
	    present since OTP-21.0.</p>
          <p>
	    Own Id: OTP-17244</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.7.2.8</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a bug that could cause some work scheduled for
	    execution on scheduler threads to be delayed until other
	    similar work appeared. Beside delaying various cleanup of
	    internal data structures also the following could be
	    delayed:</p> <list> <item>Termination of a distribution
	    controller process</item> <item>Disabling of the
	    distribution on a node</item> <item>Gathering of memory
	    allocator information using the <c>instrument</c>
	    module</item> <item>Enabling, disabling, and gathering of
	    <c>msacc</c> information</item> <item>Delivery of
	    <c>'CHANGE'</c> messages when time offset is
	    monitored</item> <item>A call to
	    <c>erlang:cancel_timer()</c></item> <item>A call to
	    <c>erlang:read_timer()</c></item> <item>A call to
	    <c>erlang:statistics(io | garbage_collection |
	    scheduler_wall_time)</c></item> <item>A call to
	    <c>ets:all()</c></item> <item>A call to
	    <c>erlang:memory()</c></item> <item>A call to
	    <c>erlang:system_info({allocator | allocator_sizes,
	    _})</c></item> <item>A call to
	    <c>erlang:trace_delivered()</c></item> </list> <p>The bug
	    existed on runtime systems running on all types of
	    hardware except for x86/x86_64.</p>
          <p>
	    Own Id: OTP-17185</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.7.2.7</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The <c>suspend_process()</c> and <c>resume_process()</c>
	    BIFs did not check their arguments properly which could
	    cause an emulator crash.</p>
          <p>
	    Own Id: OTP-17080</p>
        </item>
        <item>
          <p>
	    The runtime system would get into an infinite loop if the
	    runtime system was started with more than 1023 file
	    descriptors already open.</p>
          <p>
	    Own Id: OTP-17088 Aux Id: ERIERL-580 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.7.2.6</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed rare distribution bug in race between received
	    signal (link/monitor/spawn_request/spawn_reply) and
	    disconnection. Symptom: VM crash. Since: OTP 21.0.</p>
          <p>
	    Own Id: OTP-16869 Aux Id: ERL-1337 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.7.2.5</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed bugs causing issues when enabling the ERTS internal
	    allocators on a system built with the undocumented and
	    unsupported <c>SMALL_MEMORY</c> feature.</p>
          <p>
	    Own Id: OTP-16939</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.7.2.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    inet:setopts([{active,once}]) wakes up IO polling thread
	    unnecessarily, leading to lock contention and visibly
	    higher CPU utilization.</p>
          <p>
	    Own Id: OTP-16847 Aux Id: ERL-1301 </p>
        </item>
        <item>
          <p>
	    The documentation of <c>statistics(run_queue)</c>
	    erroneously stated that it returns the total length of
	    all normal run queues when it is the total length of all
	    normal and dirty CPU run queues that is returned. The
	    documentation has been updated to reflect the actual
	    behavior.</p>
          <p>
	    Own Id: OTP-16866 Aux Id: ERL-1355 </p>
        </item>
        <item>
          <p>
	    Two bugs in the ERTS internal thread wakeup functionality
	    have been fixed. These bugs mainly hit when all threads
	    in the system tried to go to sleep. When the bugs were
	    triggered, certain operations were delayed until a thread
	    woke up due to some other reason. Most important
	    operations effected were code loading, persistent term
	    updates, and memory deallocation.</p>
          <p>
	    Own Id: OTP-16870</p>
        </item>
        <item>
          <p>
	    Fixed bug in <c>ets:select_replace/2</c> on
	    <c>compressed</c> tables that could produce faulty
	    results or VM crash. Bug exists since OTP 20.</p>
          <p>
	    Own Id: OTP-16874 Aux Id: ERL-1356, PR-2763 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    As of OTP 22, the allocator specific memory carrier pools
	    were replaced by a node global carrier pool. This
	    unfortunately caused substantial memory fragmentation in
	    some cases due to long lived data being spread into
	    carriers used by allocators mainly handling short lived
	    data.</p>
          <p>
	    A new command line argument <c>+M&lt;S&gt;cp</c> has been
	    introduced with which one can enable the old behavior as
	    well as configuring other behaviors for the carrier
	    pools. In order to configure the old behavior, with
	    allocator specific carrier pools for all allocators, pass
	    <c>+Mucp :</c> (including the colon character) as a
	    command line argument to <c>erl</c> when starting the
	    Erlang system.</p>
          <p>
	    The default configuration for carrier pools will be
	    changed to <c>+Mucp :</c> some time in the future, but
	    not in this patch.</p>
          <p>
	    Own Id: OTP-16856</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.7.2.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The ERTS internal I/O poll implementation could get into
	    an inconsistent state causing input events to be ignored.</p>
          <p>
	    Own Id: OTP-16780 Aux Id: PR-2701 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.7.2.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    An unintentional reuse of an already used emulator
	    internal event object could cause a wakeup signal to a
	    thread to be lost. In worst case this could cause the
	    runtime system to hang. This hang was however quite rare.</p>
          <p>
	    Own Id: OTP-16766 Aux Id: ERL-1304 </p>
        </item>
        <item>
          <p>
	    NIF threads and driver threads on non-Linux systems
	    leaked internal resources when terminating. On Windows
	    these resources were one event per thread. On most other
	    systems one mutex and one condition variable per thread.
	    On these other systems that also lacked
	    <c>pthread_cond_timedwait()</c> also a pipe with its file
	    descriptors was leaked.</p>
          <p>
	    Own Id: OTP-16772 Aux Id: ERL-1304 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.7.2.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed bug in erl_crash.dump generation that could cause a
	    SEGV core dump if a recently cancelled timer was found.</p>
          <p>
	    Own Id: OTP-16596 Aux Id: ERL-1105, PR-2606 </p>
        </item>
        <item>
          <p>
	    The functionality utilized by BIFs for temporary
	    disabling of garbage collection while yielding could
	    cause system task queues to become inconsistent on a
	    process executing such a BIF. Process system tasks are
	    for example utilized when purging code, garbage
	    collecting literal data, and when issuing an ordinary
	    garbage collection from another process.</p>
          <p>
	    The bug does not trigger frequently. Multiple code purges
	    in direct sequence makes it more likely that this bug is
	    triggered. In the cases observed, this has resulted in a
	    hanging code purge operation.</p>
          <p>
	    Own Id: OTP-16639 Aux Id: ERL-1236 </p>
        </item>
        <item>
          <p>
	    SCTP and UDP recv/2,3 hangs indefinitely if socket is
	    closed while recv is called (socket in passive mode).</p>
          <p>
	    Own Id: OTP-16654 Aux Id: ERL-1242 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.7.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A literal area could prematurely be released before all
	    uses of it had been removed. This occurred either when a
	    terminating process had a complex exit reason referring
	    to a literal that concurrently was removed, or when a
	    terminating process continued executing a dirty NIF
	    accessing a literal (via the heap) that concurrently was
	    removed.</p>
          <p>
	    Own Id: OTP-16640 Aux Id: OTP-16193 </p>
        </item>
        <item>
          <p>
	    The VM could potentially crash when checking process code
	    of a process that terminated while executing a dirty NIF.
	    The checking of process code is part of a code purge
	    operation.</p>
          <p>
	    Own Id: OTP-16641</p>
        </item>
        <item>
          <p>
	    System tasks of <c>low</c> priority were not interleaved
	    with <c>normal</c> priority system tasks as they should.
	    This could potentially delay garbage collection of
	    another process longer than intended if the garbage
	    collection was requested from a <c>low</c> priority
	    process.</p>
          <p>
	    Own Id: OTP-16642</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.7.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    <seemfa marker="stdlib:re#run/3">re:run(Subject, RE,
	    [unicode])</seemfa> returned <c>nomatch</c> instead of
	    failing with a <c>badarg</c> error exception when
	    <c>Subject</c> contained illegal utf8 and <c>RE</c> was
	    passed as a binary. This has been corrected along with
	    corrections of reduction counting in <c>re:run()</c>
	    error cases.</p>
          <p>
	    Own Id: OTP-16553</p>
        </item>
        <item>
	    <p>Fixed a bug that could cause the emulator to crash
	    when purging modules or persistent terms.</p>
          <p>
	    Own Id: OTP-16555 Aux Id: ERL-1188 </p>
        </item>
        <item>
          <p>
	    Fixed a bug in a receive optimization. This could cause a
	    <c>receive</c> not to match even though a matching
	    message was present in the message queue. This bug was
	    introduced in ERTS version 10.6 (OTP 22.2).</p>
          <p>
	    Own Id: OTP-16572 Aux Id: ERL-1199, OTP-16269 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.7</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p><c>gen_udp:recv(S, N, 0)</c> corrupted the internal
	    state for the socket so after receive with <c>{active,
	    once}</c> it always returned <c>{error, timeout}</c>, and
	    wasted the received UDP packets. This bug has now been
	    fixed.</p> <p>Reported and pinpointed by Alexander
	    Petrovsky.</p>
          <p>
	    Own Id: OTP-16059</p>
        </item>
        <item>
          <p>
	    The atom esock_atom_user and esock_atom_kernel was never
	    actually created. This has now been corrected.</p>
          <p>
	    Own Id: OTP-16381</p>
        </item>
        <item>
          <p>
	    Fixed bug in <c>socket</c> module that could potentially
	    lead to scheduler deadlocks.</p>
          <p>
	    Own Id: OTP-16384</p>
        </item>
        <item>
          <p>
	    Fix bug causing VM crash if <c>down</c> or <c>stop</c>
	    callback of a NIF resource is called after the NIF module
	    has been purged. The fix will postpone unloading until
	    all such resource objects have been garbage collected.</p>
          <p>
	    Own Id: OTP-16399</p>
        </item>
        <item>
          <p>
	    Fixed bug in <c>ets:update_counter/4</c>, when called
	    with an invalid <c>UpdateOp</c> and a <c>Key</c> that
	    does not exist, causing <c>ets:info(T,size)</c> to return
	    incorrect values. Bug exists since OTP-19.0.2.</p>
          <p>
	    Own Id: OTP-16404 Aux Id: ERL-1127 </p>
        </item>
        <item>
          <p>
	    Fix potential heap corrupting bugs when a process calls a
	    BIF that blocks other normal schedulers and then writes
	    to its own heap without the main process lock. A NIF
	    running on a dirty scheduler trying to interact with such
	    a process could corrupt its heap. The fixed BIFs were
	    related to code loading and tracing.</p>
          <p>
	    Own Id: OTP-16417</p>
        </item>
        <item>
          <p>
	    Fixed bug in <c>erlang:list_to_ref/1</c> when called with
	    a reference created by a remote note. Function
	    <c>list_to_ref/1</c> is intended for debugging and not to
	    be used in application programs. Bug exist since OTP
	    20.0.</p>
          <p>
	    Own Id: OTP-16438</p>
        </item>
        <item>
          <p>
	    The prim_net nif (net/kernel) made use of an undefined
	    atom, notsup. This has now been corrected.</p>
          <p>
	    Own Id: OTP-16440</p>
        </item>
        <item>
          <p>
	    Corrected the valid range of the <c>erl</c> command line
	    argument <seecom marker="erts:erl#+SDio"><c>+SDio
	    &lt;NumberOfDirtyIoSchedulers&gt;</c></seecom> from
	    <c>0..1024</c> to <c>1..1024</c>. <c>+SDio 0</c> was
	    erroneously allowed which just caused the VM to crash on
	    the first dirty I/O job scheduled.</p>
          <p>
	    Own Id: OTP-16481</p>
        </item>
        <item>
          <p>
	    Fix a crash when attempting to log faults when loading
	    files during early boot.</p>
          <p>
	    Own Id: OTP-16491</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    For <seeerl marker="kernel:socket#">socket</seeerl>, not all
	    send and receive flags are supported on all platforms. In
	    order to (at least) simplify testing, the
	    socket:supports/0,1,2,3 functions has been extended with
	    send_flags and recv_flags items, which indicates what the
	    current platform can manage.</p>
          <p>
	    Own Id: OTP-16153</p>
        </item>
        <item>
          <p>
	    Add a "full featured" version of getifaddrs in the net
	    module.</p>
          <p>
	    Own Id: OTP-16212 Aux Id: ERL-1070 </p>
        </item>
        <item>
          <p>
	    The options <c>busy_limits_port</c> and
	    <c>busy_limits_msgq</c> have been added to the BIF
	    <seemfa
	    marker="erts:erlang#open_port/2"><c>erlang:open_port/2</c></seemfa>.
	    The <c>busy_limits_port</c> option can be used for
	    controlling the busy state of a port executing the
	    <c>spawn_driver</c> or the <c>fd_driver</c>. The
	    <c>busy_limits_msgq</c> option can be used for
	    controlling the busy state of the port message queue.</p>
          <p>
	    Own Id: OTP-16306 Aux Id: ERIERL-439 </p>
        </item>
        <item>
          <p>
	    A socket "registry" has been added making it possible to
	    list current open sockets.</p>
          <p>
	    Own Id: OTP-16309</p>
        </item>
        <item>
          <p>
	    The counters managed by the socket nif has been extended.
	    Their "size" has been increased from 32 bit to 64. Two
	    max package size (for read and write) has been added. And
	    four accept counters has been added.</p>
          <p>
	    Own Id: OTP-16387</p>
        </item>
        <item>
          <p>
	    Add gcc option <c>-fno-common</c> to detect accidental
	    name clashes of global variables.</p>
          <p>
	    Own Id: OTP-16420 Aux Id: PR-2513 </p>
        </item>
        <item>
          <p>
	    New dynamic lock checker that verifies locking orders and
	    detects potential deadlock bugs in drivers and NIFs.
	    Enabled together with the old static lock checker (for
	    ERTS internal locks) in emulator started with
	    <c>-emu_type debug</c> or built with configuration option
	    <c>--enable-lock-checking</c>.</p>
          <p>
	    Own Id: OTP-16427</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.6.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A process could get into an inconsistent state where it
	    was runnable, but never scheduled for execution. This
	    could occur when a mix of <c>normal</c> and <c>low</c>
	    priority processes where scheduled on the same type of
	    dirty scheduler simultaneously.</p>
          <p>
	    Own Id: OTP-16446 Aux Id: ERL-1157 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.6.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A process could end up in a state where it got endlessly
	    rescheduled without making any progress. This occurred
	    when a system task, such as check of process code (part
	    of a code purge), was scheduled on a high priority
	    process trying to execute on a dirty scheduler.</p>
          <p>
	    Own Id: OTP-16436 Aux Id: ERL-1152 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Improved signal handling for processes executing dirty.
	    For example, avoid busy wait in dirty signal handler
	    process when process is doing garbage collection on dirty
	    scheduler.</p>
          <p>
	    Own Id: OTP-16358</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.6.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Taking a scheduler offline could cause timers set while
	    executing on that scheduler to be delayed until the
	    scheduler was put online again. This bug was introduced
	    in ERTS version 10.0 (OTP 21.0).</p>
          <p>
	    Own Id: OTP-16371</p>
        </item>
        <item>
          <p>
	    The <c>ets:update_counter/4</c> core dumped when given an
	    ordered_set with write_concurrency enabled and an invalid
	    position. This bug has been fixed.</p>
          <p>
	    Own Id: OTP-16378 Aux Id: ERL-1125 </p>
        </item>
        <item>
          <p>
	    A process calling <seeerl
	    marker="erts:erlang#system_flag_multi_scheduling"><c>erlang:system_flag(multi_scheduling,
	    block)</c></seeerl> could end up blocked waiting for the
	    operation to complete indefinitely.</p>
          <p>
	    Own Id: OTP-16379</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Duplicate entries for [socket:]getopt and [socket:]setopt
	    in man page.</p>
          <p>
	    Own Id: OTP-16333 Aux Id: ERL-1104 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.6.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Corrected an issue with the new socket api which could
	    cause a core dump. A race during socket close could cause
	    a core dump (an invalid nif environment free).</p>
          <p>
	    Own Id: OTP-16314 Aux Id: ERL-1098 </p>
        </item>
        <item>
          <p>
	    Corrected an issue with the new socket api which could
	    cause a core dump. When multiple accept processes waiting
	    for a connect a connect could cause a core dump.</p>
          <p>
	    Own Id: OTP-16359</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.6</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The functions <seemfa
	    marker="stdlib:unicode#characters_to_list/2"><c>unicode:characters_to_list()</c></seemfa>
	    and <seemfa
	    marker="stdlib:unicode#characters_to_binary/3"><c>unicode:characters_to_binary()</c></seemfa>
	    raised a <c>badarg</c> exception instead of returning an
	    error tuple when passed very large invalid code points as
	    input.</p>
          <p>
	    Own Id: OTP-16052</p>
        </item>
        <item>
	    <p><c>file:allocate/3</c> will now work properly on Mac
	    OS.</p>
          <p>
	    Own Id: OTP-16074 Aux Id: ERL-1042, PR-2386 </p>
        </item>
        <item>
          <p>
	    For <seeerl marker="kernel:socket#">socket</seeerl>, invalid
	    encoding of send and receive flags caused badarg and send
	    failure.</p>
          <p>
	    Own Id: OTP-16149</p>
        </item>
        <item>
          <p>
	    Fix a bug in <c>re</c> on platforms where the native
	    stack grows upwards, for instance on HP PA-RISC.</p>
          <p>
	    Own Id: OTP-16150 Aux Id: ERL-1043 </p>
        </item>
        <item>
          <p>
	    For <seeerl marker="kernel:socket#">socket</seeerl>, unable to
	    properly decode the timestamp control message header on
	    FreeBSD. We incorrectly used the SO_TIMESTAMP flag for
	    the timestamp control message header type. It should have
	    been SCM_TIMESTAMP. This caused the timestamp control
	    message header to not be fully decoded.</p>
          <p>
	    Own Id: OTP-16151 Aux Id: #2400 </p>
        </item>
        <item>
          <p>
	    For <seeerl marker="kernel:socket#">socket</seeerl>, when
	    setting the ip option 'recvtos' to true, thereby
	    indicating that we want to receive the TOS control
	    message header, we don't actually get TOS but RECVTOS on
	    FreeBSD (and maybe others)! This was previously not
	    handled.</p>
          <p>
	    Own Id: OTP-16152 Aux Id: OTP-16114 </p>
        </item>
        <item>
	    <p>Fixed a bug where the emulator would print out error
	    messages forever if it crashed during startup.</p>
          <p>
	    Own Id: OTP-16159 Aux Id: ERL-1060 </p>
        </item>
        <item>
          <p>
	    For <seeerl marker="kernel:socket#">socket</seeerl>, wrong
	    type for protocol caused segmentation fault if protocol
	    was provided as {raw, integer()}.</p>
          <p>
	    Own Id: OTP-16163 Aux Id: ERL-1061 </p>
        </item>
        <item>
          <p>
	    For <seeerl marker="kernel:socket#">socket</seeerl>, when
	    setting the ip option 'recvttl' to true, thereby
	    indicating that we want to receive the TTL control
	    message header, we don't actually get TTL but RECVTTL on
	    Solaris (and maybe others)! This was previously not
	    handled.</p>
          <p>
	    Own Id: OTP-16172 Aux Id: OTP-16114 </p>
        </item>
        <item>
          <p>
	    For <seeerl marker="kernel:socket#">socket</seeerl>, IPv6
	    control message headers was incorrectly decoded with
	    level ip instead of ipv6.</p>
          <p>
	    Own Id: OTP-16173</p>
        </item>
        <item>
          <p>
	    Fix configure bug where <c>clock_getres</c> would not
	    correctly be detected causing
	    <c>erlang:system_info(os_system_time_source)</c> to
	    return an incorrect resolution.</p>
          <p>
	    This bug effects all OSs that use <c>clock_gettime</c> to
	    get time (basically all OSs except windows) and has been
	    present since OTP-19.2.</p>
          <p>
	    Own Id: OTP-16191 Aux Id: ERL-1067 </p>
        </item>
        <item>
          <p>
	    Fix bugs when using <c>ERLC_USE_SERVER=true</c> on
	    Windows when building Erlang/OTP.</p>
          <p>
	    Change the cookie used by the compile server to be hard
	    coded instead of using the users cookie.</p>
          <p>
	    Own Id: OTP-16192</p>
        </item>
        <item>
          <p>
	    Fix so that <c>persistent_term</c> is listed in the erts
	    application file.</p>
          <p>
	    Own Id: OTP-16194</p>
        </item>
        <item>
          <p>
	    Fix bug in call_time tracing which could sometimes cause
	    call time measurements being attributed to the wrong
	    function.</p>
          <p>
	    Own Id: OTP-16195 Aux Id: ERL-1027 </p>
        </item>
        <item>
          <p>
	    The <seeerl marker="kernel:socket#">socket</seeerl> socket
	    option 'peek_off' has been disabled. If peek_off was set
	    and then socket:recv/3 was called with the peek flag, the
	    call could hang.</p>
          <p>
	    Own Id: OTP-16196</p>
        </item>
        <item>
          <p>
	    Handle possibly uninitiated (control message header)
	    data.</p>
          <p>
	    Own Id: OTP-16197</p>
        </item>
        <item>
          <p>
	    For <seeerl marker="kernel:net#">net</seeerl>, a couple
	    of NI macros was deprecated in new versions of glibc, so
	    these are no longer used (IDN_ALLOW_UNASSIGNED and
	    IDN_USE_STD3_ASCII_RULES).</p>
          <p>
	    Own Id: OTP-16203</p>
        </item>
        <item>
          <p>
	    The string value from a get operation needed to be
	    truncated.</p>
          <p>
	    Own Id: OTP-16204</p>
        </item>
        <item>
          <p>
	    Fix misleading seq_trace message for remote send
	    operation toward named process. Changed receiver to be
	    <c>{Name,Node}</c> instead of just <c>Name</c>.</p>
          <p>
	    Own Id: OTP-16206 Aux Id: PR-2423 </p>
        </item>
        <item>
          <p>
	    Fixed a bug causing actual nodedown reason reported by
	    <seemfa
	    marker="kernel:net_kernel#monitor_nodes/2"><c>net_kernel:monitor_nodes(true,
	    [nodedown_reason])</c></seemfa> to be lost and replaced
	    by the reason <c>killed</c>.</p>
          <p>
	    Own Id: OTP-16216</p>
        </item>
        <item>
          <p>
	    For <seeerl marker="kernel:socket#">socket</seeerl>, the
	    timestamp creation used when printing warning messages
	    and debug printouts did not work. The used buffer was too
	    small.</p>
          <p>
	    Own Id: OTP-16223</p>
        </item>
        <item>
          <p>
	    Fix compiler warnings generated by GCC 8</p>
          <p>
	    Own Id: OTP-16235</p>
        </item>
        <item>
          <p>
	    Fix <c>erl -emu_type</c> to accept the option <c>opt</c>
	    which means the normal optimized emulator. This can be
	    used to override the <c>-emu_type</c> option from
	    environment variables.</p>
          <p>
	    Own Id: OTP-16297</p>
        </item>
        <item>
          <p>
	    Corrected the function spec to reflect the actual code of
	    the function socket:bind.</p>
          <p>
	    Own Id: OTP-16310 Aux Id: ERL-1082 </p>
        </item>
        <item>
          <p>
	    Fixed a performance issue in ETS lookup when using the
	    <c>compressed</c> option and the term contained atoms.
	    Before this fix the decompress algorithm for atoms would
	    unnecessarily take a global lock to validate the atom.</p>
          <p>
	    Own Id: OTP-16316</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    For <seeerl marker="kernel:socket#">socket</seeerl>, not all
	    send and receive flags are supported on all platforms. In
	    order to (at least) simplify testing, the
	    socket:supports/0,1,2,3 functions has been extended with
	    send_flags and recv_flags items, which indicates what the
	    current platform can manage.</p>
          <p>
	    Own Id: OTP-16153</p>
        </item>
        <item>
          <p>
	    For <seeerl marker="kernel:socket#">socket</seeerl>, add
	    support for IPv6 socket options tclass and recvtclass.
	    Both has been added, but the use of them are platform
	    dependent. Call socket:supports(options, ipv6, Opt) to be
	    sure what option to use in order to request a TCLASS
	    control message header.</p>
          <p>
	    Own Id: OTP-16180</p>
        </item>
        <item>
          <p>
	    For <seeerl marker="kernel:socket#">socket</seeerl>, the TCP
	    socket option cork was not supported even though the
	    supports function reported it as such.</p>
          <p>
	    Own Id: OTP-16205</p>
        </item>
        <item>
          <p>
	    The Kernel application's User's Guide now contain a
	    Logger Cookbook with with common usage patterns.</p>
          <p>
	    Own Id: OTP-16208</p>
        </item>
        <item>
          <p>
	    Add a "full featured" version of getifaddrs in the net
	    module.</p>
          <p>
	    Own Id: OTP-16212 Aux Id: ERL-1070 </p>
        </item>
        <item>
          <p>
	    Fix an inefficiency introduced by the bug fix in
	    OTP-16241 which fixed a problem with the receive
	    optimization. That bug fix introduced an inefficiency
	    when using the receive optimization and a burst of
	    messages arrive at once when the receiving process'
	    mailbox was empty.</p>
          <p>
	    Own Id: OTP-16269 Aux Id: OTP-16241 </p>
        </item>
        <item>
          <p>
	    For <seeerl marker="kernel:socket#">socket</seeerl>, added
	    support for the socket option extended_err. Andreas
	    Schultz.</p>
          <p>
	    Own Id: OTP-16302 Aux Id: #2449 </p>
        </item>
        <item>
          <p>
	    ETS tables have been optimized to not use any locks when
	    running in a system with only one scheduler enabled. This
	    can provide significant performance gains for
	    applications that use ETS tables heavily.</p>
          <p>
	    Own Id: OTP-16315</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.5.6</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Large amounts of quickly executed dirty work could cause
	    heavy contention on an internal spin lock. The spin lock
	    was replaced by a mutex which behaves much better under
	    these conditions.</p>
          <p>
	    Own Id: OTP-16301 Aux Id: ERL-1079 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.5.5</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A literal area could prematurely be released before all
	    uses of it had been removed. This occurred either when a
	    terminating process had a complex exit reason referring
	    to a literal that concurrently was removed, or when a
	    terminating process continued executing a dirty NIF
	    accessing a literal (via the heap) that concurrently was
	    removed.</p>
          <p>
	    Own Id: OTP-16193</p>
        </item>
        <item>
          <p>
	    Fix bug causing VM crash due to memory corruption of
	    distribution entry. Probability of crash increases if
	    Erlang distribution is frequently disconnected and
	    reestablished towards same node names. Bug exists since
	    OTP-21.0.</p>
          <p>
	    Own Id: OTP-16224 Aux Id: ERL-1044 </p>
        </item>
        <item>
          <p>
	    Fixed bug causing crash of VM built with configuration
	    <c>--enable--sharing-preserving</c>. Provoked when a sent
	    message contains both a bit string and the heap binary
	    (&lt; 65 bytes) which the bit string was matched from.
	    Bug exists since OTP-19.0 but has seen to be easier to
	    provoke since OTP-22.1.</p>
          <p>
	    Own Id: OTP-16265 Aux Id: ERL-1064 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.5.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>The compiler could do an unsafe optimization of
	    receives, which would cause a receive to only scan part
	    of the message queue.</p>
	    <p>This bug fix in the compiler fixes a bug in the socket
	    module.</p>
          <p>
	    Own Id: OTP-16219 Aux Id: ERL-1076 </p>
        </item>
        <item>
          <p>
	    Fix bug where the receive marker used by the runtime to
	    do the receive queue optimization could be incorrectly
	    set. The symptom of this would be that a message that
	    should match in a receive never matches.</p>
          <p>
	    The bug requires the OTP-22 compiler and multiple
	    selective receives to trigger. See OTP-16219 for details
	    about the bug fix in the compiler.</p>
          <p>
	    Own Id: OTP-16241 Aux Id: ERL-1076 OTP-16219 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.5.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Erlang/OTP can now be built on macOS Catalina (10.15).</p>
          <p>
	    Own Id: OTP-16177 Aux Id: ERL-1063 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.5.2</title>

    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>Added the environment variable <c>ERLC_SERVER_ID</c>,
	    which allows multiple compile servers to run separately
	    under the same user.</p>
          <p>
	    Own Id: OTP-16125 Aux Id: ERIERL-412 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.5.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A terminating process sending distributed <c>'EXIT'</c>
	    or <c>'DOWN'</c> signals while terminating could end up
	    in a state where no progress at all was made. This was
	    triggered by a distribution channel that the terminating
	    process was sending on got busy. This bug has existed
	    since ERTS version 10.4 (OTP 22.0).</p>
          <p>
	    Own Id: OTP-16069</p>
        </item>
        <item>
          <p>
	    When communicating with a simultaneously exiting port via
	    the <c>erlang:port_*()</c> BIFs one could sometimes get
	    stray <c>{Ref, What}</c> messages. Where <c>Ref</c> was a
	    reference and <c>What</c> usually were the atom
	    <c>badarg</c>.</p>
          <p>
	    Own Id: OTP-16107 Aux Id: ERL-1049 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.5</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    If you set <c>{linger,{true,0}}</c> on a <c>gen_tcp</c>
	    listen socket, accept a connection on that socket, and
	    then close the accepted socket, now the linger zero
	    setting is transferred to the accepted socket. Before
	    this correction that information was lost and the close
	    behaviour on the accepted socket incorrect.</p>
          <p>
	    Own Id: OTP-15370 Aux Id: ERIERL-353 </p>
        </item>
        <item>
          <p>
	    Sending ancillary data implemented in OTP-15747
	    accidentally left behind test code that caused all UDP
	    sends to fail on Windows. This has now been fixed.</p>
          <p>
	    Own Id: OTP-15422 Aux Id: OTP-15747 </p>
        </item>
        <item>
          <p>
	    In the socket nif, used invalid flags when if-def'ing for
	    supported TCP flags: TCP_MAXSEG and TCP_NODELAY (the
	    support function).</p>
          <p>
	    Own Id: OTP-15827</p>
        </item>
        <item>
          <p>
	    Fixed memory leaks in experimental socket module.</p>
          <p>
	    Own Id: OTP-15830</p>
        </item>
        <item>
          <p>
	    <c>re:run()</c> now yields when validating utf8 in a
	    large subject.</p>
          <p>
	    Own Id: OTP-15836 Aux Id: ERL-876 </p>
        </item>
        <item>
          <p>
	    Fixed bug in <c>seq_trace:set_token(label,Term)</c> which
	    could cause VM crash if <c>Term</c> was heap allocated
	    (not an atom, small integer, local pid or port). Bug
	    exists since OTP 21.0 when terms other than small
	    integers were first allowed as labels.</p>
          <p>
	    Own Id: OTP-15849 Aux Id: ERL-700 </p>
        </item>
        <item>
          <p>
	    Extra <c>-mode</c> flags given to <c>erl</c> are ignored
	    with a warning.</p>
          <p>
	    Own Id: OTP-15852</p>
        </item>
        <item>
          <p>
	    Don't loop indefinitely when <c>--enable-pgo</c> is given
	    to configure, but compiler does not support pgo.</p>
          <p>
	    Own Id: OTP-15853 Aux Id: PR-2254 </p>
        </item>
        <item>
          <p>
	    Fix <c>seq_trace:print/2</c> not to raise <c>badarg</c>
	    exception if label is not a small integer. Bug exists
	    since OTP 21.0.</p>
          <p>
	    Own Id: OTP-15859 Aux Id: ERL-700 </p>
        </item>
        <item>
          <p>
	    Fixed hipe_flush_icache_range for non-Linux OS on ARM.</p>
          <p>
	    Own Id: OTP-15874 Aux Id: ERL-958, PR-2266 </p>
        </item>
        <item>
	    <p>The fix in OTP-15871 was too conservative and disabled
	    the offending load-time optimization in some cases where
	    it was safe.</p>
          <p>
	    Own Id: OTP-15881</p>
        </item>
        <item>
          <p>
	    Upgraded the ERTS internal PCRE library from version 8.42
	    to version 8.43. See <url
	    href="http://pcre.org/original/changelog.txt">http://pcre.org/original/changelog.txt</url>
	    for information about changes made to PCRE. This library
	    implements major parts of the <seeerl
	    marker="stdlib:re"><c>re</c></seeerl> regular
	    expressions module.</p>
          <p>
	    Own Id: OTP-15889</p>
        </item>
        <item>
          <p>
	    Fix race condition when closing a socket while using
	    <c>{active,N}</c> on Windows.</p>
          <p>
	    Own Id: OTP-15901 Aux Id: ERL-960 PR-2272 </p>
        </item>
        <item>
          <p>
	    Allow more than one <c>-config</c> command line option to
	    <c>erl</c> on Windows to conform with other OS.</p>
          <p>
	    Own Id: OTP-15918 Aux Id: ERL-912 </p>
        </item>
        <item>
          <p>
	    Fix so that ERL_FLAGS environment variable does not
	    interfere with command line arguments. Before this fix
	    you could write:</p>
          <p>
	    <c>ERL_FLAGS="10" erl +S</c></p>
          <p>
	    and erlang would start as if <c>+S</c> had been given the
	    argument <c>10</c>.</p>
          <p>
	    Own Id: OTP-15931</p>
        </item>
        <item>
          <p>
	    The bug with ID ERL-717 has been fixed. The functions
	    <c>io:columns()</c> and <c>io:rows()</c> only worked
	    correctly inside interactive erlang shells before this
	    fix. These functions returned <c>{error,enotsup}</c>
	    before this fix even if stdout and stdin were connected
	    to a terminal when they were invoked from an escript or a
	    program started with e.g., <c>erl -noshell</c>.</p>
          <p>
	    Own Id: OTP-15959 Aux Id: ERL-717 </p>
        </item>
        <item>
          <p>
	    Do not use named label in <c>ethread.c</c> inline
	    assemble. This allows erts to be compiled using gcc 9.1.0
	    with LTO enabled.</p>
          <p>
	    Own Id: OTP-15971 Aux Id: PR-2333 </p>
        </item>
        <item>
	    <p><c>erlang:fun_to_list/1</c> will now escape the module
	    and function name when necessary.</p>
          <p>
	    Own Id: OTP-15975 Aux Id: ERL-1009 </p>
        </item>
        <item>
	    <p><c>process_info(P,binary)</c> would neglect to look
	    through heap fragments, potentially missing a few
	    binaries associated with the process.</p>
          <p>
	    Own Id: OTP-15978 Aux Id: ERIERL-366 </p>
        </item>
        <item>
          <p>
	    HiPE is now automatically disabled on systems with
	    non-glibc implementation (for instance musl). This is
	    because musl does not provide the API's for guaranteeing
	    that signals are delivered on the correct native stack.</p>
          <p>
	    Own Id: OTP-16037</p>
        </item>
        <item>
          <p>
	    Fixed bug triggered if a process is killed during call to
	    <c>persistent_term:put</c> or
	    <c>persistent_term:erase</c>.</p>
          <p>
	    Own Id: OTP-16041</p>
        </item>
        <item>
          <p>
	    Add units to all memory slogans in the crash dump
	    documentation.</p>
          <p>
	    Own Id: OTP-16042</p>
        </item>
        <item>
          <p>
	    Fix a bug in <c>binary_to_term</c> that would crash the
	    emulator if a term larger than 16GB was to be decoded.</p>
          <p>
	    Own Id: OTP-16058 Aux Id: PR-2382 </p>
        </item>
        <item>
          <p>
	    Fixed bug related to an exiting process sending EXIT and
	    DOWN signals to remote linked/monitored processes. Bugs
	    exists since OTP 22.0.</p>
          <p>
	    Own Id: OTP-16060</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p><c>erlc</c> can now automatically use a compile server
	    to avoid starting an Erlang system for each file to be
	    compiled in a multi-file project. See the documentation
	    for how to enable it.</p>
          <p>
	    Own Id: OTP-15738 Aux Id: PR-2361 </p>
        </item>
        <item>
          <p>
	    The possibility to send ancillary data, in particular the
	    TOS field, has been added to <c>gen_udp:send/4,5</c>.</p>
          <p>
	    Own Id: OTP-15747 Aux Id: ERIERL-294 </p>
        </item>
        <item>
          <p>
	    The net module has been split into 'net' (kernel) and
	    prim_net (preloaded).</p>
          <p>
	    Own Id: OTP-15765</p>
        </item>
        <item>
          <p>
	    Socket counters now works as expected and can also be
	    extracted with the (new) info function.</p>
          <p>
	    Own Id: OTP-15818</p>
        </item>
        <item>
          <p>
	    <c>re:run()</c> now avoids validating utf8 in the subject
	    more than once in the same call. This validation could
	    previously be performed multiple times when the
	    <c>global</c> option was passed.</p>
          <p>
	    Own Id: OTP-15831 Aux Id: ERL-876 </p>
        </item>
        <item>
          <p>
	    The un-documented function <c>erlang:dist_get_stat/1</c>
	    now returns the real value of what the distribution queue
	    contains instead of a boolean.</p>
          <p>
	    Own Id: OTP-15905 Aux Id: PR-2270 </p>
        </item>
        <item>
          <p>
	    ETS <c>ordered_set</c> tables with
	    <c>write_concurrency</c> enabled has got a performance
	    issue fixed. There were no limits for the values of
	    internal statistics counters before this fix. This could
	    result in that the data structure sometimes reacted
	    slowly to a change in how many parallel processes were
	    using it.</p>
          <p>
	    Own Id: OTP-15906</p>
        </item>
        <item>
          <p>
	    Optimize the reception of large distribution messages.</p>
          <p>
	    Own Id: OTP-15926 Aux Id: PR-2291 </p>
        </item>
        <item>
	    <p>Binary matching and functions like
	    <c>split_binary/2</c> will now create heap binaries when
	    the results are small enough, reducing the chances of
	    small sub-binaries keeping large binaries alive.</p>
          <p>
	    Own Id: OTP-15977 Aux Id: ERIERL-366 </p>
        </item>
        <item>
	    <p>Fixed rare emulator crash in
	    <c>instrument:allocations/0-1</c>.</p>
          <p>
	    Own Id: OTP-15983</p>
        </item>
        <item>
          <p>
	    Ports could pass very small binaries as reference counted
	    off heap binaries to processes. This could cause an
	    unnecessary large memory usage and an unnecessary load on
	    the binary allocator. Small binaries are now always
	    passed as heap binaries to processes.</p>
          <p>
	    Own Id: OTP-16001 Aux Id: ERIERL-366 </p>
        </item>
        <item>
          <p>
	    <c>unicode:characters_to_binary()</c> could return very
	    small binaries as reference counted off heap binaries.
	    This could cause an unnecessary large memory usage and an
	    unnecessary load on the binary allocator. Small binaries
	    are now always returned as heap binaries.</p>
          <p>
	    Own Id: OTP-16002 Aux Id: ERIERL-366 </p>
        </item>
        <item>
          <p>
	    Improved <c>erl_nif</c> documentation regarding
	    <c>on_load</c> and Erlang stub/fallback functions.</p>
          <p>
	    Own Id: OTP-16028 Aux Id: PR-2362 </p>
        </item>
        <item>
          <p>
	    New feature <c>ets:info(_, binary)</c> to get information
	    about all reference counted binaries kept by a table.
	    This is the same kind of debug information that
	    <c>process_info(_, binary)</c> returns for a process.</p>
          <p>
	    Own Id: OTP-16035 Aux Id: ERIERL-366 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.4.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    An invalid value test caused the socket:setopt(Socket,
	    ip, add_membership, ip_mreq()) to fail with badarg. The
	    same for drop_membership.</p>
          <p>
	    Own Id: OTP-15908 Aux Id: ERL-980 </p>
        </item>
        <item>
          <p>
	    Fixed bug causing VM crash when doing textual dump of a
	    process containing an unhandled monitor down signal.
	    Textual process dumps can be done with
	    <c>erlang:system_info(procs)</c>, trace feature
	    <c>process_dump</c>, Erlang shell break menu and a
	    crashdump. Bug exist since OTP 21.0.</p>
          <p>
	    Own Id: OTP-15909 Aux Id: ERL-979 </p>
        </item>
        <item>
	    <p><c>lists:subtract/2</c> would produce incorrect
	    results for some inputs on 64-bit platforms.</p>
          <p>
	    Own Id: OTP-15938 Aux Id: ERL-986 </p>
        </item>
        <item>
	    <p>Fixed a bug in the loader that was similar to
	    <c>OTP-15938</c>, yielding incorrect code for some inputs
	    on 64-bit platforms.</p>
          <p>
	    Own Id: OTP-15939</p>
        </item>
        <item>
          <p>
	    Fixed bug causing scheduler threads in rare cases to
	    block spinnning indefinitely. Bug exists since OTP 21.0.</p>
          <p>
	    Own Id: OTP-15941 Aux Id: PR-2313 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.4.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a buffer overflow when
	    <c>binary_to_existing_atom/2</c> and
	    <c>list_to_existing_atom/2</c> was used with the
	    <c>latin1</c> encoding.</p>
          <p>
	    Own Id: OTP-15819 Aux Id: ERL-944 </p>
        </item>
        <item>
          <p>
	    The runtime system disconnected a connection if it
	    received an <c>exit/2</c> signal where the recipient was
	    a process on an old incarnation of the current node. That
	    is, the receiving node had the same node name, but
	    another "creation" number. The signal will now just be
	    dropped since the receiving process no longer exists.</p>
          <p>
	    Own Id: OTP-15867 Aux Id: ERIERL-373 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.4.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed <c>process_info(Pid,reductions)</c> to not
	    categorically increase reduction count of the measured
	    process <c>Pid</c>. Repeated reduction measure of an idle
	    process will most often (but not guaranteed) return the
	    same value, like it behaved before OTP 21.3.8.</p>
          <p>
	    Own Id: OTP-15865 Aux Id: ERL-964 </p>
        </item>
        <item>
	    <p>Fixed an incorrect load-time optimization that could
	    cause a crash when extracting deeply nested tuple
	    elements.</p>
          <p>
	    Own Id: OTP-15871 Aux Id: ERIERL-374 </p>
        </item>
        <item>
          <p>
	    Fix bug causing VM crash when pressing P for "proc info"
	    in Erlang shell break menu. Bug exists since OTP 22.0.</p>
          <p>
	    Own Id: OTP-15873 Aux Id: ERL-965 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.4.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>In nested use of <c>try</c>/<c>catch</c>, rethrowing
	    an exception using <c>erlang:raise/3</c> with a different
	    class would not always be able to change the class of the
	    exception.</p>
          <p>
	    Own Id: OTP-15834 Aux Id: ERIERL-367 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Do not allocate new bitstring/binary when an empty binary
	    is appended.</p>
          <p>
	    Own Id: OTP-15535 Aux Id: PR-2055 </p>
        </item>
        <item>
          <p>
	    Document that <c>process_info(_, current_function)</c>
	    can return <c>{current_function, undefined}</c> in case
	    of execution of native code.</p>
          <p>
	    Own Id: OTP-15543 Aux Id: PR-2089 </p>
        </item>
        <item>
          <p>
	    Fixed bug in <c>ets:select</c>, <c>ets:match</c> and
	    friends which could cause the table to remain fixated (as
	    if <c>ets:safe_fixtable</c> had been called) after the
	    call returned. This could happen for <c>protected</c>
	    tables if another concurrent running process transferred
	    table ownership to the process during its
	    ets:select/match call. Ownership can be transferred using
	    either <c>ets:give_away</c> or the <c>heir</c> table
	    option.</p>
          <p>
	    Own Id: OTP-15672</p>
        </item>
        <item>
	    <p>Fixed a Windows-specific bug in <c>file:list_dir/1</c>
	    that caused it to misbehave on network shares.</p>
          <p>
	    Own Id: OTP-15693</p>
        </item>
        <item>
          <p>
	    Fixed bug when calling <c>enif_whereis_*</c> from NIF
	    resource destructor. Symptoms could be emulator crash or
	    hanging scheduler threads.</p>
          <p>
	    Own Id: OTP-15694 Aux Id: ERL-863 </p>
        </item>
        <item>
	    <p>Fixed a bug in the error case of <c>apply/3</c>, where
	    the exception would erroneously have an empty argument
	    list in some cases.</p>
          <p>
	    Own Id: OTP-15698</p>
        </item>
        <item>
	    <p>A bug has been fixed in the <c>maps</c> implementation
	    that could cause a crash or memory usage to grow until
	    the machine ran out of memory. This could happen when
	    inserting a new key-value pair with a key <c>K1</c>
	    containing a binary <c>B1</c> into a map <c>M</c> having
	    a key <c>K2</c> with a binary <c>B2</c> if the following
	    conditions were met:</p> <list> <item><c>B1 =/=
	    B2</c></item> <item><c>size(B1) >= 4294967296</c></item>
	    <item><c>size(B2) >= 4294967296</c></item>
	    <item><c>size(M) >= 32</c></item> <item><c>(size(B1) rem
	    4294967296) == (size(B2) rem 4294967296)</c></item>
	    <item>the first <c>(size(B1) rem 4294967296)</c> bytes
	    are the same both in <c>B1</c> and <c>B2</c></item>
	    <item>substituting <c>B1</c> in <c>K1</c> with <c>B2</c>
	    would create a term with the same value as
	    <c>K2</c></item> </list> <p>The root cause of the problem
	    is that the <c>maps</c> implementation only hashed the
	    first <c>(X rem 4294967296)</c> bytes of binaries so that
	    different binaries could get the same hash value
	    independently of the hash seed.</p>
          <p>
	    Own Id: OTP-15707</p>
        </item>
        <item>
          <p>
	    <c>term_to_binary()</c> and distributed sends will now
	    throw a <c>system_limit</c> exception instead of
	    producing erroneous results when trying to encode a
	    binary larger than 4 GB.</p>
          <p>
	    Own Id: OTP-15708</p>
        </item>
        <item>
          <p>
	    The vxworks configure has been updated to respect the
	    environment CFLAGS.</p>
          <p>
	    Own Id: OTP-15773</p>
        </item>
        <item>
          <p>
	    Fix configure to not enable PGO (profile guided
	    optimizations) when linking of the PGO binary fails. For
	    instance this happens when there is no gcov lib
	    installed.</p>
          <p>
	    Own Id: OTP-15788</p>
        </item>
        <item>
          <p>
	    Fix bug on OpenBSD where sockets using <c>active,
	    true</c> or <c>active, N</c> could cause the system to
	    live lock. The bug was introduced in erts-10.2
	    (OTP-21.2).</p>
          <p>
	    Own Id: OTP-15791</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Add support for Erlang Distribution protocol to split the
	    payload of large signals into several fragments. This
	    allows other processes to communicate uninterrupted
	    during the transmission of these signals.</p>
          <p>
	    Own Id: OTP-13397</p>
        </item>
        <item>
          <p>
	    A simple socket API is provided through the socket
	    module. This is a low level API that does *not* replace
	    gen_[tcp|udp|sctp]. It is intended to *eventually*
	    replace the inet driver, but not the high level
	    gen-modules (gen_tcp, gen_udp and gen_sctp). It also
	    provides a basic API that facilitates the implementation
	    of other protocols, that is TCP, UDP and SCTP. </p>
          <p>
	    Known issues are; No support for the Windows OS
	    (currently).</p>
          <p>
	    Own Id: OTP-14831</p>
        </item>
        <item>
	    <p>Added NIF functions <seecref
	    marker="erl_nif#enif_set_pid_undefined"><c>enif_set_pid_undefined</c></seecref>,
	    <seecref
	    marker="erl_nif#enif_is_pid_undefined"><c>enif_is_pid_undefined</c></seecref>
	    and <seecref
	    marker="erl_nif#enif_compare_pids"><c>enif_compare_pids</c></seecref>.</p>
          <p>
	    Own Id: OTP-15011 Aux Id: PR-2147 </p>
        </item>
        <item>
	    <p>Underutilized memory segments (carriers) can now move
	    between all allocator instances, rather than just between
	    instances of the same type, which greatly reduces memory
	    usage in some scenarios. </p>
          <p>
	    Own Id: OTP-15063</p>
        </item>
        <item>
	    <p>The emulator will now mark free blocks in pooled
	    carriers with <c>madvise(2) + MADV_FREE</c> (or similar),
	    letting the OS reclaim the associated physical memory if
	    necessary.</p>
          <p>
	    Own Id: OTP-15075</p>
        </item>
        <item>
          <p>
	    New <c>ERL_NIF_SELECT_CANCEL</c> feature added to
	    <c>enif_select</c> in order to cancel (or "deselect") a
	    read or write event on a previously selected file
	    descriptor.</p>
          <p>
	    Own Id: OTP-15095</p>
        </item>
        <item>
          <p>
	    ETS option <c>write_concurrency</c> now also affects and
	    improves the scalability of <c>ordered_set</c> tables.
	    The implementation is based on a data structure called
	    contention adapting search tree, where the lock
	    granularity adapts to the actual amount of concurrency
	    exploited by the applications in runtime.</p>
          <p>
	    Own Id: OTP-15128</p>
        </item>
        <item>
          <p>
	    Build configuration of the <c>crypto</c> application has
	    been moved from the <c>erts</c> application into the
	    <c>crypto</c> application.</p>
          <p>
	    Own Id: OTP-15129</p>
        </item>
        <item>
	    <p>Anonymous functions that don't capture environment are
	    now created at load-time instead of in run-time.</p>
          <p>
	    Own Id: OTP-15195 Aux Id: PR-1812 </p>
        </item>
        <item>
          <p>
	    Optimize updates of maps with identical keys and values.
	    E.g. in the example below the original Map will be reused
	    as the return of the update.</p>
          <p>
	    1> Map = #{ a => b }. #{ a => b } 2> Map#{ a := b }.</p>
          <p>
	    Own Id: OTP-15211 Aux Id: PR-1889 </p>
        </item>
        <item>
          <p>
	    Optimize <c>binary:match/2</c> and
	    <c>binary:matches/2</c> to use memchr internally.</p>
          <p>
	    Own Id: OTP-15238 Aux Id: PR-1803 </p>
        </item>
        <item>
          <p>
	    The runtime system used to terminate when a message
	    larger than 2 Gb was passed over the distribution. The
	    send operation will now instead throw a
	    <c>system_limit</c> exception.</p>
          <p>
	    Own Id: OTP-15261</p>
        </item>
        <item>
          <p>
	    Change the first module called by erts to be named
	    erl_init instead of otp_ring0. systools in sasl have been
	    updated to reflect this change.</p>
          <p>
	    Own Id: OTP-15336 Aux Id: PR-1825 </p>
        </item>
        <item>
          <p>
	    Minor adjustments made to build system for parallel
	    configure.</p>
          <p>
	    Own Id: OTP-15340 Aux Id: OTP-14625 </p>
        </item>
        <item>
          <p>
	    Two new NIF interface functions <c>enif_select_read</c>
	    and <c>enif_select_write</c>. They are similar to
	    existing <c>enif_select</c> but allow a custom event
	    message as an argument.</p>
          <p>
	    Own Id: OTP-15349 Aux Id: PR-2084 </p>
        </item>
        <item>
	    <p>The embedded copy of <c>zlib</c> has been updated from
	    <c>1.2.8</c> to <c>1.2.11</c>.</p>
	    <p>Note that this copy is only used as a fallback when
	    the target platform doesn't provide any <c>zlib</c>
	    development libraries. If your system provides
	    <c>zlib</c> then it will be used even if it is older than
	    <c>1.2.11</c>.</p>
          <p>
	    Own Id: OTP-15351 Aux Id: ERL-749 </p>
        </item>
        <item>
          <p>
	    New NIF function <c>enif_make_monitor_term</c>.</p>
          <p>
	    Own Id: OTP-15362 Aux Id: PR-2127 </p>
        </item>
        <item>
	    <p>Appending lists (The ++ operator) will now yield
	    properly on large inputs.</p>
          <p>
	    Own Id: OTP-15427</p>
        </item>
        <item>
	    <p>The <c>length/1</c> BIF used to calculate the length
	    of the list in one go without yielding, even if the list
	    was very long. In OTP 22, <c>length/1</c> will yield when
	    called with long lists.</p>
          <p>
	    Own Id: OTP-15439</p>
        </item>
        <item>
          <p>
	    Processes sending messages are now punished with a
	    reduction cost based on message size. That is, a process
	    sending a large message will yield earlier than before.</p>
          <p>
	    Own Id: OTP-15513 Aux Id: ERL-773 </p>
        </item>
        <item>
	    <p>The transitory emulator option <c>+ztma true</c>
	    (introduced in OTP 21.3) has been removed.</p>
          <p>
	    Own Id: OTP-15581 Aux Id: OTP-15580 </p>
        </item>
        <item>
	    <p>In OTP 22, HiPE (the native code compiler) is not
	    fully functional. The reasons for this are:</p>
	    <p>There are new BEAM instructions for binary matching
	    that the HiPE native code compiler does not support.</p>
	    <p>The new optimizations in the Erlang compiler create
	    new combination of instructions that HiPE currently does
	    not handle correctly.</p>
	    <p>If erlc is invoked with the <c>+native</c> option, and
	    if any of the new binary matching instructions are used,
	    the compiler will issue a warning and produce a BEAM file
	    without native code.</p>
          <p>
	    Own Id: OTP-15596</p>
        </item>
        <item>
          <p>
	    The termination behaviour of processes has changed to
	    allow processes to yield while sending link exit/monitor
	    down signals.</p>
          <p>
	    The erl crash dump has been expanded to now also include
	    processes that are termeinating but have not yet
	    terminated.</p>
          <p>
	    Own Id: OTP-15610</p>
        </item>
        <item>
          <p>
	    The dist messages EXIT, EXIT2 and MONITOR_DOWN have been
	    updated with new versions that send the reason term as
	    part of the payload of the message instead of as part of
	    the control message.</p>
          <p>
	    The old versions are still present and can be used when
	    communicating with nodes that don't support the new
	    versions.</p>
          <p>
	    Own Id: OTP-15611</p>
        </item>
        <item>
          <p>
	    When sending messages, exit, exit2 and monitor down
	    distributed signals, the process sending will now yield
	    appropriately.</p>
          <p>
	    This means that a terminating process will yield and
	    possibly be suspended on busy distribution entries while
	    they are terminating. This means that any memory held by
	    such processes will not be released until after all
	    exit/monitor down signals have been sent.</p>
          <p>
	    Own Id: OTP-15612</p>
        </item>
        <item>
          <p>
	    All external pids/ports/refs created by
	    erlang:list_to_pid/port/ref debug functions now compare
	    equal to any other pid/port/ref with the same number from
	    that node.</p>
          <p>
	    Before this change they compared differently because the
	    node creation of the pid/port/ref did not compare equal
	    to any real pid/port/ref creation.</p>
          <p>
	    This will mostly effect pids/ports/refs typed in the
	    shell.</p>
          <p>
	    Own Id: OTP-15613</p>
        </item>
        <item>
          <p>
	    The <c>persistent_term</c> functions <c>put/2</c> and
	    <c>erase/1</c> are now yielding.</p>
          <p>
	    Own Id: OTP-15615</p>
        </item>
        <item>
          <p>
	    A new <seemfa
	    marker="erlang#dist_ctrl_set_opt/3"><c>erlang:dist_ctrl_set_opt(DHandle,
	    get_size, Value)</c></seemfa> option has been added.
	    This option makes it possible to configure the
	    distribution channel identified by <c>DHandle</c> so that
	    <seemfa
	    marker="erlang#dist_ctrl_get_data/1"><c>erlang:dist_ctrl_get_data(DHandle)</c></seemfa>
	    also returns the size of the data to pass over the
	    channel.</p>
          <p>
	    Own Id: OTP-15617</p>
        </item>
        <item>
	    <p>Previously, all ETS tables used centralized counter
	    variables to keep track of the number of items stored and
	    the amount of memory consumed. These counters can cause
	    scalability problems (especially on big NUMA systems).
	    This change adds an implementation of a decentralized
	    counter and modifies the implementation of ETS so that
	    ETS tables of type <c>ordered_set</c> with
	    <c>write_concurrency</c> enabled use the decentralized
	    counter. Experiments indicate that this change
	    substantially improves the scalability of ETS
	    <c>ordered_set</c> tables with <c>write_concurrency</c>
	    enabled in scenarios with frequent <c>ets:insert/2</c>
	    and <c>ets:delete/2</c> calls.</p>
          <p>
	    Own Id: OTP-15623 Aux Id: PR-2190 </p>
        </item>
        <item>
	    <p>The <c>iolist_size/1</c> function is now yielding
	    which means that an Erlang/OTP system will be responsive
	    even if the applications running on the system frequently
	    call <c>iolist_size/1</c> with large iolists.</p>
          <p>
	    Own Id: OTP-15631</p>
        </item>
        <item>
          <p>
	    A simple test suite for the net module has been added.</p>
          <p>
	    Own Id: OTP-15635</p>
        </item>
        <item>
	    <p>Added the NIF function <c>enif_term_type</c>, which
	    helps avoid long sequences of <c>enif_is_xyz</c> by
	    returning the type of the given term. This is especially
	    helpful for NIFs that serialize terms, such as JSON
	    encoders, where it can improve both performance and
	    readability.</p>
          <p>
	    Own Id: OTP-15640</p>
        </item>
        <item>
	    <p>The last call optimization is now applied to BIFs.
	    When calling a BIF in the tail position of a function,
	    the return address and stack frame will now be discarded
	    before calling the BIF. As a consequence of this change,
	    the immediate caller of a tail-called BIF will no longer
	    be available in stack backtraces.</p>
          <p>
	    Own Id: OTP-15674 Aux Id: PR-2177 </p>
        </item>
        <item>
          <p>
	    Fix GC bug where distributed messages in a processes
	    mailbox would cause extra GCs. This can be very expensive
	    if there many messages in the mailbox.</p>
          <p>
	    Own Id: OTP-15703</p>
        </item>
        <item>
	    <p>Internal documentation has now been added to the
	    <em>Erts</em> and <em>Compiler</em> applications.</p>
	    <p>The internal documents for <em>Erts</em> describe
	    miscellaneous interesting implementation details. Those
	    details can change at any time.</p>
	    <p>The internal documentation for <em>Compiler</em>
	    documents the API for the Core Erlang modules. While we
	    will not change those APIs without good reason, we don't
	    give the same guarantees about backward compatibility as
	    for the rest of the APIs in OTP.</p>
          <p>
	    Own Id: OTP-15715</p>
        </item>
        <item>
	    <p>The performance of non-bignum integer arithmetic has
	    been improved.</p>
          <p>
	    Own Id: OTP-15740</p>
        </item>
        <item>
          <p>
	    The <c>-remsh</c> option to <c>erl</c> now automatically
	    adds the local systems hostname to the target node if no
	    nodename is given. e.g.</p>
          <p>
	    <c> erl -name foo -remsh bar </c><br/> <c> erl -sname foo
	    -remsh bar </c></p>
          <p>
	    Own Id: OTP-15794 Aux Id: PR-2219 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.3.5.19</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix bug in match spec compilator seen to cause a stack
	    overflow crash on debug VM for certain match specs. Could
	    potentially cause problems for standard VM, but has not
	    been verified. Match specs are used by
	    <c>ets:match/select</c> functions and
	    <c>erlang:trace_pattern</c>.</p>
          <p>
	    Own Id: OTP-17379 Aux Id: PR-4804 </p>
        </item>
        <item>
          <p>
	    A call to <c>port_command()</c> could cause a scheduler
	    to end up in an eternal loop if the port was busy and the
	    calling process had incoming signals at the time of the
	    call. This bug was introduced in OTP 23.3.2 (ERTS version
	    11.2.1), OTP 22.3.4.18 (ERTS version 10.7.2.10), and OTP
	    21.3.8.23 (ERTS version 10.3.5.18).</p>
          <p>
	    Own Id: OTP-17448 Aux Id: GH-4898, PR-4903, OTP-17291 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.3.5.18</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>The following signals could pass before other signals
	    from the same sender to the same receiver. That is, these
	    signals could arrive too early.</p> <list>
	    <item><c>garbage-collect</c> request. Sent from one
	    process to another using one of the
	    <c>garbage_collect()</c> BIFs.</item>
	    <item><c>check-process-code</c> request. Sent from one
	    process to another using one of the
	    <c>check_process_code()</c> BIFs.</item>
	    <item><c>is-process-alive</c> reply. Sent as a response
	    to a process calling the <c>is_process_alive()</c>
	    BIF.</item> <item><c>process-info</c> reply. Sent as a
	    response to a process calling one of the
	    <c>process_info()</c> BIFs.</item>
	    <item><c>port-command</c> reply. Sent as a response to a
	    process calling one of the <c>port_command()</c>
	    BIFs.</item> <item><c>port-connect</c> reply. Sent as a
	    response to a process calling the <c>port_connect()</c>
	    BIF.</item> <item><c>port-close</c> reply. Sent as a
	    response to a process calling the <c>port_close()</c>
	    BIF.</item> <item><c>port-control</c> reply. Sent as a
	    response to a process calling the <c>port_control()</c>
	    BIF.</item> <item><c>port-call</c> reply. Sent as a
	    response to a process calling the <c>port_call()</c>
	    BIF.</item> <item><c>port-info</c> reply. Sent as a
	    response to a process calling one of the
	    <c>port_info()</c> BIFs.</item> </list>
          <p>
	    Own Id: OTP-17291</p>
        </item>
        <item>
          <p>
	    A garbage collection of a literal area missed messages
	    that entirely consisted of a term in a literal area. This
	    could in turn lead to a crash of the runtime system.</p>
          <p>
	    Own Id: OTP-17307</p>
        </item>
        <item>
          <p>
	    A call to <c>process_flag(message_queue_data,
	    off_heap)</c> could cause a crash of the runtime system
	    when sequential tracing was enabled.</p>
          <p>
	    Own Id: OTP-17349</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.3.5.17</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed a bug in the timer implementation which could cause
	    timers that were set to more than 37.25 hours in the
	    future to be delayed. This could occur if there were
	    multiple timers scheduled to be triggered very close in
	    time, but still at different times, and the scheduler
	    thread handling the timers was not able to handle them
	    quickly enough. Delayed timers were in this case
	    triggered when another unrelated timer was triggered.</p>
          <p>
	    Own Id: OTP-17253</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Fix a file descriptor leak when using sendfile and the
	    remote side closes the connection. This bug has been
	    present since OTP-21.0.</p>
          <p>
	    Own Id: OTP-17244</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.3.5.16</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a bug that could cause some work scheduled for
	    execution on scheduler threads to be delayed until other
	    similar work appeared. Beside delaying various cleanup of
	    internal data structures also the following could be
	    delayed:</p> <list> <item>Termination of a distribution
	    controller process</item> <item>Disabling of the
	    distribution on a node</item> <item>Gathering of memory
	    allocator information using the <c>instrument</c>
	    module</item> <item>Enabling, disabling, and gathering of
	    <c>msacc</c> information</item> <item>Delivery of
	    <c>'CHANGE'</c> messages when time offset is
	    monitored</item> <item>A call to
	    <c>erlang:cancel_timer()</c></item> <item>A call to
	    <c>erlang:read_timer()</c></item> <item>A call to
	    <c>erlang:statistics(io | garbage_collection |
	    scheduler_wall_time)</c></item> <item>A call to
	    <c>ets:all()</c></item> <item>A call to
	    <c>erlang:memory()</c></item> <item>A call to
	    <c>erlang:system_info({allocator | allocator_sizes,
	    _})</c></item> <item>A call to
	    <c>erlang:trace_delivered()</c></item> </list> <p>The bug
	    existed on runtime systems running on all types of
	    hardware except for x86/x86_64.</p>
          <p>
	    Own Id: OTP-17185</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.3.5.15</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed rare distribution bug in race between received
	    signal (link/monitor/spawn_request/spawn_reply) and
	    disconnection. Symptom: VM crash. Since: OTP 21.0.</p>
          <p>
	    Own Id: OTP-16869 Aux Id: ERL-1337 </p>
        </item>
        <item>
          <p>
	    The <c>suspend_process()</c> and <c>resume_process()</c>
	    BIFs did not check their arguments properly which could
	    cause an emulator crash.</p>
          <p>
	    Own Id: OTP-17080</p>
        </item>
        <item>
          <p>
	    The runtime system would get into an infinite loop if the
	    runtime system was started with more than 1023 file
	    descriptors already open.</p>
          <p>
	    Own Id: OTP-17088 Aux Id: ERIERL-580 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.3.5.14</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The ERTS internal I/O poll implementation could get into
	    an inconsistent state causing input events to be ignored.</p>
          <p>
	    Own Id: OTP-16780 Aux Id: PR-2701 </p>
        </item>
        <item>
          <p>
	    The documentation of <c>statistics(run_queue)</c>
	    erroneously stated that it returns the total length of
	    all normal run queues when it is the total length of all
	    normal and dirty CPU run queues that is returned. The
	    documentation has been updated to reflect the actual
	    behavior.</p>
          <p>
	    Own Id: OTP-16866 Aux Id: ERL-1355 </p>
        </item>
        <item>
          <p>
	    Two bugs in the ERTS internal thread wakeup functionality
	    have been fixed. These bugs mainly hit when all threads
	    in the system tried to go to sleep. When the bugs were
	    triggered, certain operations were delayed until a thread
	    woke up due to some other reason. Most important
	    operations effected were code loading, persistent term
	    updates, and memory deallocation.</p>
          <p>
	    Own Id: OTP-16870</p>
        </item>
        <item>
          <p>
	    Fixed bug in <c>ets:select_replace/2</c> on
	    <c>compressed</c> tables that could produce faulty
	    results or VM crash. Bug exists since OTP 20.</p>
          <p>
	    Own Id: OTP-16874 Aux Id: ERL-1356, PR-2763 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.3.5.13</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    An unintentional reuse of an already used emulator
	    internal event object could cause a wakeup signal to a
	    thread to be lost. In worst case this could cause the
	    runtime system to hang. This hang was however quite rare.</p>
          <p>
	    Own Id: OTP-16766 Aux Id: ERL-1304 </p>
        </item>
        <item>
          <p>
	    NIF threads and driver threads on non-Linux systems
	    leaked internal resources when terminating. On Windows
	    these resources were one event per thread. On most other
	    systems one mutex and one condition variable per thread.
	    On these other systems that also lacked
	    <c>pthread_cond_timedwait()</c> also a pipe with its file
	    descriptors was leaked.</p>
          <p>
	    Own Id: OTP-16772 Aux Id: ERL-1304 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.3.5.12</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The functionality utilized by BIFs for temporary
	    disabling of garbage collection while yielding could
	    cause system task queues to become inconsistent on a
	    process executing such a BIF. Process system tasks are
	    for example utilized when purging code, garbage
	    collecting literal data, and when issuing an ordinary
	    garbage collection from another process.</p>
          <p>
	    The bug does not trigger frequently. Multiple code purges
	    in direct sequence makes it more likely that this bug is
	    triggered. In the cases observed, this has resulted in a
	    hanging code purge operation.</p>
          <p>
	    Own Id: OTP-16639 Aux Id: ERL-1236 </p>
        </item>
        <item>
          <p>
	    A literal area could prematurely be released before all
	    uses of it had been removed. This occurred either when a
	    terminating process had a complex exit reason referring
	    to a literal that concurrently was removed, or when a
	    terminating process continued executing a dirty NIF
	    accessing a literal (via the heap) that concurrently was
	    removed.</p>
          <p>
	    Own Id: OTP-16640 Aux Id: OTP-16193 </p>
        </item>
        <item>
          <p>
	    The VM could potentially crash when checking process code
	    of a process that terminated while executing a dirty NIF.
	    The checking of process code is part of a code purge
	    operation.</p>
          <p>
	    Own Id: OTP-16641</p>
        </item>
        <item>
          <p>
	    System tasks of <c>low</c> priority were not interleaved
	    with <c>normal</c> priority system tasks as they should.
	    This could potentially delay garbage collection of
	    another process longer than intended if the garbage
	    collection was requested from a <c>low</c> priority
	    process.</p>
          <p>
	    Own Id: OTP-16642</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.3.5.11</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    <seemfa marker="stdlib:re#run/3">re:run(Subject, RE,
	    [unicode])</seemfa> returned <c>nomatch</c> instead of
	    failing with a <c>badarg</c> error exception when
	    <c>Subject</c> contained illegal utf8 and <c>RE</c> was
	    passed as a binary. This has been corrected along with
	    corrections of reduction counting in <c>re:run()</c>
	    error cases.</p>
          <p>
	    Own Id: OTP-16553</p>
        </item>
        <item>
	    <p>Fixed a bug that could cause the emulator to crash
	    when purging modules or persistent terms.</p>
          <p>
	    Own Id: OTP-16555 Aux Id: ERL-1188 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.3.5.10</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed bug in <c>ets:update_counter/4</c>, when called
	    with an invalid <c>UpdateOp</c> and a <c>Key</c> that
	    does not exist, causing <c>ets:info(T,size)</c> to return
	    incorrect values. Bug exists since OTP-19.0.2.</p>
          <p>
	    Own Id: OTP-16404 Aux Id: ERL-1127 </p>
        </item>
        <item>
          <p>
	    A process could get into an inconsistent state where it
	    was runnable, but never scheduled for execution. This
	    could occur when a mix of <c>normal</c> and <c>low</c>
	    priority processes where scheduled on the same type of
	    dirty scheduler simultaneously.</p>
          <p>
	    Own Id: OTP-16446 Aux Id: ERL-1157 </p>
        </item>
        <item>
          <p>
	    Corrected the valid range of the <c>erl</c> command line
	    argument <seecom marker="erts:erl#+SDio"><c>+SDio
	    &lt;NumberOfDirtyIoSchedulers&gt;</c></seecom> from
	    <c>0..1024</c> to <c>1..1024</c>. <c>+SDio 0</c> was
	    erroneously allowed which just caused the VM to crash on
	    the first dirty I/O job scheduled.</p>
          <p>
	    Own Id: OTP-16481</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.3.5.9</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A process could end up in a state where it got endlessly
	    rescheduled without making any progress. This occurred
	    when a system task, such as check of process code (part
	    of a code purge), was scheduled on a high priority
	    process trying to execute on a dirty scheduler.</p>
          <p>
	    Own Id: OTP-16436 Aux Id: ERL-1152 </p>
        </item>
        <item>
          <p>
	    Fixed bug in <c>erlang:list_to_ref/1</c> when called with
	    a reference created by a remote note. Function
	    <c>list_to_ref/1</c> is intended for debugging and not to
	    be used in application programs. Bug exist since OTP
	    20.0.</p>
          <p>
	    Own Id: OTP-16438</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.3.5.8</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Taking a scheduler offline could cause timers set while
	    executing on that scheduler to be delayed until the
	    scheduler was put online again. This bug was introduced
	    in ERTS version 10.0 (OTP 21.0).</p>
          <p>
	    Own Id: OTP-16371</p>
        </item>
        <item>
          <p>
	    A process calling <seeerl
	    marker="erts:erlang#system_flag_multi_scheduling"><c>erlang:system_flag(multi_scheduling,
	    block)</c></seeerl> could end up blocked waiting for the
	    operation to complete indefinitely.</p>
          <p>
	    Own Id: OTP-16379</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.3.5.7</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A literal area could prematurely be released before all
	    uses of it had been removed. This occurred either when a
	    terminating process had a complex exit reason referring
	    to a literal that concurrently was removed, or when a
	    terminating process continued executing a dirty NIF
	    accessing a literal (via the heap) that concurrently was
	    removed.</p>
          <p>
	    Own Id: OTP-16193</p>
        </item>
        <item>
          <p>
	    Fix bug causing VM crash due to memory corruption of
	    distribution entry. Probability of crash increases if
	    Erlang distribution is frequently disconnected and
	    reestablished towards same node names. Bug exists since
	    OTP-21.0.</p>
          <p>
	    Own Id: OTP-16224 Aux Id: ERL-1044 </p>
        </item>
        <item>
          <p>
	    Fix bug where the receive marker used by the runtime to
	    do the receive queue optimization could be incorrectly
	    set. The symptom of this would be that a message that
	    should match in a receive never matches.</p>
          <p>
	    The bug requires the OTP-22 compiler and multiple
	    selective receives to trigger. See OTP-16219 for details
	    about the bug fix in the compiler.</p>
          <p>
	    Own Id: OTP-16241 Aux Id: ERL-1076 OTP-16219 </p>
        </item>
        <item>
          <p>
	    Fixed bug causing crash of VM built with configuration
	    <c>--enable--sharing-preserving</c>. Provoked when a sent
	    message contains both a bit string and the heap binary
	    (&lt; 65 bytes) which the bit string was matched from.
	    Bug exists since OTP-19.0 but has seen to be easier to
	    provoke since OTP-22.1.</p>
          <p>
	    Own Id: OTP-16265 Aux Id: ERL-1064 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.3.5.6</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix a bug in <c>binary_to_term</c> that would crash the
	    emulator if a term larger than 16GB was to be decoded.</p>
          <p>
	    Own Id: OTP-16058 Aux Id: PR-2382 </p>
        </item>
        <item>
          <p>
	    When communicating with a simultaneously exiting port via
	    the <c>erlang:port_*()</c> BIFs one could sometimes get
	    stray <c>{Ref, What}</c> messages. Where <c>Ref</c> was a
	    reference and <c>What</c> usually were the atom
	    <c>badarg</c>.</p>
          <p>
	    Own Id: OTP-16107 Aux Id: ERL-1049 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.3.5.5</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p><c>process_info(P,binary)</c> would neglect to look
	    through heap fragments, potentially missing a few
	    binaries associated with the process.</p>
          <p>
	    Own Id: OTP-15978 Aux Id: ERIERL-366 </p>
        </item>
        <item>
          <p>
	    Fixed bug triggered if a process is killed during call to
	    <c>persistent_term:put</c> or
	    <c>persistent_term:erase</c>.</p>
          <p>
	    Own Id: OTP-16041</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>Fixed rare emulator crash in
	    <c>instrument:allocations/0-1</c>.</p>
          <p>
	    Own Id: OTP-15983</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.3.5.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed bug causing VM crash when doing textual dump of a
	    process containing an unhandled monitor down signal.
	    Textual process dumps can be done with
	    <c>erlang:system_info(procs)</c>, trace feature
	    <c>process_dump</c>, Erlang shell break menu and a
	    crashdump. Bug exist since OTP 21.0.</p>
          <p>
	    Own Id: OTP-15909 Aux Id: ERL-979 </p>
        </item>
        <item>
	    <p><c>lists:subtract/2</c> would produce incorrect
	    results for some inputs on 64-bit platforms.</p>
          <p>
	    Own Id: OTP-15938 Aux Id: ERL-986 </p>
        </item>
        <item>
	    <p>Fixed a bug in the loader that was similar to
	    <c>OTP-15938</c>, yielding incorrect code for some inputs
	    on 64-bit platforms.</p>
          <p>
	    Own Id: OTP-15939</p>
        </item>
        <item>
          <p>
	    Fixed bug causing scheduler threads in rare cases to
	    block spinnning indefinitely. Bug exists since OTP 21.0.</p>
          <p>
	    Own Id: OTP-15941 Aux Id: PR-2313 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.3.5.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    If you set <c>{linger,{true,0}}</c> on a <c>gen_tcp</c>
	    listen socket, accept a connection on that socket, and
	    then close the accepted socket, now the linger zero
	    setting is transferred to the accepted socket. Before
	    this correction that information was lost and the close
	    behaviour on the accepted socket incorrect.</p>
          <p>
	    Own Id: OTP-15370 Aux Id: ERIERL-353 </p>
        </item>
        <item>
          <p>
	    Fixed <c>process_info(Pid,reductions)</c> to not
	    categorically increase reduction count of the measured
	    process <c>Pid</c>. Repeated reduction measure of an idle
	    process will most often (but not guaranteed) return the
	    same value, like it behaved before OTP 21.3.8.</p>
          <p>
	    Own Id: OTP-15865 Aux Id: ERL-964 </p>
        </item>
        <item>
          <p>
	    The runtime system disconnected a connection if it
	    received an <c>exit/2</c> signal where the recipient was
	    a process on an old incarnation of the current node. That
	    is, the receiving node had the same node name, but
	    another "creation" number. The signal will now just be
	    dropped since the receiving process no longer exists.</p>
          <p>
	    Own Id: OTP-15867 Aux Id: ERIERL-373 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    The possibility to send ancillary data, in particular the
	    TOS field, has been added to <c>gen_udp:send/4,5</c>.</p>
          <p>
	    Own Id: OTP-15747 Aux Id: ERIERL-294 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.3.5.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>In nested use of <c>try</c>/<c>catch</c>, rethrowing
	    an exception using <c>erlang:raise/3</c> with a different
	    class would not always be able to change the class of the
	    exception.</p>
          <p>
	    Own Id: OTP-15834 Aux Id: ERIERL-367 </p>
        </item>
        <item>
          <p>
	    Fixed bug in <c>seq_trace:set_token(label,Term)</c> which
	    could cause VM crash if <c>Term</c> was heap allocated
	    (not an atom, small integer, local pid or port). Bug
	    exists since OTP 21.0 when terms other than small
	    integers were first allowed as labels.</p>
          <p>
	    Own Id: OTP-15849 Aux Id: ERL-700 </p>
        </item>
        <item>
          <p>
	    Fix <c>seq_trace:print/2</c> not to raise <c>badarg</c>
	    exception if label is not a small integer. Bug exists
	    since OTP 21.0.</p>
          <p>
	    Own Id: OTP-15859 Aux Id: ERL-700 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.3.5.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a buffer overflow when
	    <c>binary_to_existing_atom/2</c> and
	    <c>list_to_existing_atom/2</c> was used with the
	    <c>latin1</c> encoding.</p>
          <p>
	    Own Id: OTP-15819 Aux Id: ERL-944 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.3.5</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed more bugs in <c>process_info(reductions)</c>
	    causing it to sometimes behave non-monotonic. That is, a
	    subsequent call toward the same process could return a
	    lower reduction value.</p>
          <p>
	    Own Id: OTP-15793 Aux Id: ERIERL-337, OTP-15709 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.3.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Add missing documentation of new external tags
	    <c>NEW_PID</c>, <c>NEW_PORT</c> and
	    <c>NEWER_REFERENCE</c> introduced in OTP 19.</p> <p>These
	    new tags are planned to be "activated" in OTP 23 when
	    distribution capability flag <c>DFLAG_BIG_CREATION</c>
	    becomes mandatory. Older nodes (>= 19) are able to decode
	    these new tags and send them back to the new node. Nodes
	    older than OTP 23 will however never encode their own
	    local pids, ports and references using the new tags.</p>
          <p>
	    Own Id: OTP-15766</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.3.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix <c>erlang:open_port/2</c> with the <c>fd</c> option
	    to correctly cleanup the pollset when the port is closed.
	    Before this fix there would be error printouts sent to
	    logger when the same fd was reused in a new port.</p>
          <p>
	    Own Id: OTP-15753 Aux Id: ERL-900 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.3.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a bug in <c>seq_trace:reset_trace/0</c> that
	    could crash the emulator.</p>
          <p>
	    Own Id: OTP-15704</p>
        </item>
        <item>
          <p>
	    Fixed bug in <c>process_info(reductions)</c> causing it
	    to sometimes return invalid results.</p>
          <p>
	    Own Id: OTP-15709 Aux Id: ERIERL-337 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.3.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>If a suspend/resume signal pair was sent to a process
	    while it was executing dirty, the receiving process could
	    later end up in a suspended state indefinitely. This bug
	    was introduced in ERTS version 10.0 (OTP 21.0).</p>
	    <p>Suspend/resume signals are sent from <seemfa
	    marker="erts:erlang#suspend_process/1"><c>erlang:suspend_process()</c></seemfa>/<seemfa
	    marker="erts:erlang#resume_process/1"><c>erlang:resume_process()</c></seemfa>.
	    The <seeerl
	    marker="runtime_tools:dbg"><c>dbg</c></seeerl> trace
	    tool utilize this functionality and could thus trigger
	    this bug.</p>
          <p>
	    Own Id: OTP-15688</p>
        </item>
        <item>
          <p>
	    Fix a possible deadlock when terminating the ERTS caused
	    by a dirty scheduler not releasing it's run-queue lock
	    when terminating.</p>
          <p>
	    Own Id: OTP-15690 Aux Id: PR-2172 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>When multiplying a number by itself, a word beyond the
	    number on the heap could be read (and ignored). This bug
	    was extremely unlikely to actually cause a real
	    problem.</p>
          <p>
	    Own Id: OTP-15484</p>
        </item>
        <item>
          <p>
	    Fix bug where doing <c>seq_trace:reset_trace()</c> while
	    another process was doing a garbage collection could
	    cause the run-time system to segfault.</p>
          <p>
	    Own Id: OTP-15490</p>
        </item>
        <item>
          <p>
	    Fix reading of ancillary data from packet oriented
	    sockets on old Linux kernel versions. Without this fix,
	    getting the data would cause the port to enter an
	    infinite loop.</p>
          <p>
	    Own Id: OTP-15494</p>
        </item>
        <item>
          <p>
	    Fix bug where crash dumping or doing
	    <c>erlang:system_info(procs)</c> while another process
	    was doing a garbage collection could cause the run-time
	    system to segfault.</p>
          <p>
	    Own Id: OTP-15527</p>
        </item>
        <item>
          <p>
	    Fix <c>erlang:system_info(kernel_poll)</c> to return
	    correct value. Before this fix, the call always returned
	    <c>false</c>.</p>
          <p>
	    Own Id: OTP-15556</p>
        </item>
        <item>
          <p>
	    Fix bug in <c>enif_make_map_from_arrays</c> that would
	    produce broken maps when number of keys were 32. Bug
	    exists since OTP 21.0.</p>
          <p>
	    Own Id: OTP-15567</p>
        </item>
        <item>
          <p>
	    Fix a bug in <c>binary:encode_unsigned</c> that may cause
	    a read of uninitialized memory.</p>
          <p>
	    The bug existed since the function was added (OTP
	    R16B02).</p>
          <p>
	    Own Id: OTP-15583 Aux Id: PR-2118 </p>
        </item>
        <item>
          <p>
	    Fixed a bug that could cause <c>heart</c> to kill an
	    exiting node before it had time to flush all buffered
	    writes. If environment variable
	    <c>HEART_KILL_SIGNAL=SIGABRT</c> was set a superfluous
	    core dump could also be generated.</p>
          <p>
	    Own Id: OTP-15599 Aux Id: ERIERL-298 </p>
        </item>
        <item>
          <p>
	    Fix <c>enif_consume_timeslice</c> to be a no-op on dirty
	    scheduler and not crash debug compiled emulator.</p>
          <p>
	    Own Id: OTP-15604</p>
        </item>
        <item>
          <p>
	    Fixed macro redefinition warnings.</p>
          <p>
	    Own Id: OTP-15629</p>
        </item>
        <item>
          <p>
	    <c>to_erl</c> fixed to not garble terminal input beyond
	    7-bit ASCII.</p>
          <p>
	    Own Id: OTP-15650 Aux Id: ERL-854, PR-2161 </p>
        </item>
        <item>
          <p>
	    Minor fixes for <c>make clean</c>.</p>
          <p>
	    Own Id: OTP-15657</p>
        </item>
        <item>
          <p>
	    Fixed a bug in all <c>ets:select*</c> and
	    <c>ets:match*</c> functions that could in some rare cases
	    lead to very poor performance.</p>
          <p>
	    Own Id: OTP-15660 Aux Id: ERL-869 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Add <c>erlang:system_flag(system_logger, Pid)</c> and
	    <c>erlang:system_info(system_logger)</c>. This
	    system_flag can be used to set the process that will
	    receive the logging messages generated by ERTS.</p>
          <p>
	    Own Id: OTP-15375</p>
        </item>
        <item>
	    <p><c>integer_to_list/2</c> and
	    <c>integer_to_binary/2</c> are now implemented in C,
	    improving their performance.</p>
          <p>
	    Own Id: OTP-15503 Aux Id: PR-2052 </p>
        </item>
        <item>
          <p>
	    Improved <c>term_to_binary</c> to do more fair reduction
	    count and yielding when encoding large byte lists
	    (strings).</p>
          <p>
	    Own Id: OTP-15514 Aux Id: ERL-774 </p>
        </item>
        <item>
          <p>
	    Made internal port drivers more robust against
	    <c>erlang:port_control</c> with invalid arguments and
	    added documentation warnings about such abuse.</p>
          <p>
	    Own Id: OTP-15555 Aux Id: ERIERL-231 </p>
        </item>
        <item>
          <p>
	    Fix bug on NetBSD where the <c>exit_status</c> from a
	    port program would never be sent.</p>
          <p>
	    Own Id: OTP-15558 Aux Id: ERL-725 </p>
        </item>
        <item>
	    <p>There is a new function <c>persistent:term(Key,
	    Default)</c> to allow specifying a default when looking
	    up a persistent term.</p>
          <p>
	    Own Id: OTP-15576 Aux Id: ERL-843 </p>
        </item>
        <item>
	    <p>A transitory emulator option '<c>+ztma true</c>' has
	    been added to allow running existing BEAM code that
	    relies on "tuple calls" (dispatch on parameterized
	    modules) which has been compiled under OTP 20 or earlier.
	    This option will be removed in OTP 22, so such modules
	    should eventually be recompiled with the
	    <c>+tuple_calls</c> option.</p>
          <p>
	    Own Id: OTP-15580 Aux Id: PR-2113 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.2.5</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixes of install/release phase in build system.</p>
	    <list> <item>The source tree was modified when
	    installing/releasing and/or applying a patch.</item>
	    <item>Some files were installed with wrong access
	    rights.</item> <item>If applying a patch (using
	    <c>otp_patch_apply</c>) as another user (except root)
	    than the user that built the source, the documentation
	    was not properly updated.</item> </list>
          <p>
	    Own Id: OTP-15551</p>
        </item>
        <item>
          <p>
	    Setting the <c>recbuf</c> size of an inet socket the
	    <c>buffer</c> is also automatically increased. Fix a bug
	    where the auto adjustment of inet buffer size would be
	    triggered even if an explicit inet buffer size had
	    already been set.</p>
          <p>
	    Own Id: OTP-15651 Aux Id: ERIERL-304 </p>
        </item>
        <item>
          <p>
	    Reading from UDP using active <c>true</c> or active
	    <c>N</c> mode has been optimized when more packets than
	    specified by <c>read_packets</c> are available on the
	    socket.</p>
          <p>
	    Own Id: OTP-15652 Aux Id: ERIERL-304 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.2.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    When using the <c>{linger,{true,T}}</c> option;
	    <c>gen_tcp:listen/2</c> used the full linger time before
	    returning for example <c>eaddrinuse</c>. This bug has now
	    been corrected.</p>
          <p>
	    Own Id: OTP-14728 Aux Id: ERIERL-303 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.2.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix bug where doing a <c>gen_tcp:send</c> on a socket
	    with <c>delay_send</c> set to true could cause a segfault
	    if the other side closes the connection.</p>
          <p>
	    Bug was introduced in erts-10.2 (OTP-21.2).</p>
          <p>
	    Own Id: OTP-15536 Aux Id: ERL-827 </p>
        </item>
        <item>
          <p>
	    Fix a race condition when a port program closes that
	    could result in the next started port to hang during
	    startup.</p>
          <p>
	    When this fault happens the following error is normally
	    (but not always) logged:</p>
          <p>
	    <c> =ERROR REPORT==== 14-Jan-2019::10:45:52.868246
	    ===</c><br/><c> Bad input fd in erts_poll()! fd=11,
	    port=#Port&lt;0.505>, driver=spawn, name=/bin/sh -s
	    unix:cmd </c></p>
          <p>
	    Bug was introduced in erts-10.0 (OTP-21.0).</p>
          <p>
	    Own Id: OTP-15537</p>
        </item>
        <item>
          <p>
	    Fix a bug where polling for external events could be
	    delayed for a very long time if all active schedulers
	    were 100% loaded.</p>
          <p>
	    Bug was introduced in erts-10.2 (OTP-21.2).</p>
          <p>
	    Own Id: OTP-15538 Aux Id: ERIERL-229 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.2.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a crash when dangling files were closed after
	    <c>init:restart/0</c>.</p>
          <p>
	    Own Id: OTP-15495 Aux Id: ERL-821 </p>
        </item>
        <item>
          <p>
	    A bug that could cause dirty schedulers to become
	    unresponsive has been fixed.</p>
          <p>
	    Own Id: OTP-15509 Aux Id: PR-2027, PR-2093 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.2.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed bug on big endian architectures when changing file
	    permissions or ownership with <c>file:change_mode</c>,
	    <c>change_owner</c>, <c>change_group</c> or
	    <c>write_file_info</c>. Bug exists since OTP-21.0.</p>
          <p>
	    Own Id: OTP-15485</p>
        </item>
        <item>
          <p>
	    Fixed bug in <c>atomics</c> with option
	    <c>{signed,false}</c> when returned values are <c>(1 bsl
	    63)</c> or larger. Could cause heap corruption leading to
	    VM crash or other unpleasant symptoms. Bug exists since
	    OTP-21.2 when module <c>atomics</c> was introduced.</p>
          <p>
	    Own Id: OTP-15486 Aux Id: PR-2061 </p>
        </item>
        <item>
          <p>
	    Fixed bug in operator <c>band</c> of two negative
	    operands causing erroneous result if the absolute value
	    of one of the operands have the lowest <c>N*W</c> bits as
	    zero and the other absolute value is not larger than
	    <c>N*W</c> bits. <c>N</c> is an integer of 1 or larger
	    and <c>W</c> is 32 or 64 depending on word size.</p>
          <p>
	    Own Id: OTP-15487 Aux Id: ERL-804 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    When a process was waiting for a TCP socket send
	    operation to complete, and another process closed the
	    socket during that send, the sending process could hang.
	    This bug has now been corrected.</p>
          <p>
	    Own Id: OTP-12242 Aux Id: ERL-561 </p>
        </item>
        <item>
          <p>
	    Document <c>bit_size</c> in match specifications and
	    allow it in <c>ets:fun2ms</c>.</p>
          <p>
	    Own Id: OTP-15343 Aux Id: PR-1962 </p>
        </item>
        <item>
          <p>
	    Fixed bug in <c>ets:select_replace</c> when called with a
	    fully bound key could cause a following call to
	    <c>ets:next</c> or <c>ets:prev</c> to crash the emulator
	    or return invalid result.</p>
          <p>
	    Own Id: OTP-15346</p>
        </item>
        <item>
	    <p>When a module has been purged from memory, any
	    literals belonging to that module will be copied to all
	    processes that hold references to them. The max heap size
	    limit would be ignored in the garbage collection
	    initiated when copying literals to a process. If the max
	    heap size was exceeded, the process would typically be
	    terminated in the following garbage collection. Corrected
	    to terminate the process directly if copying a literal
	    would exceed the max heap size.</p>
          <p>
	    Own Id: OTP-15360</p>
        </item>
        <item>
          <p>
	    Fix compilation of run_erl on Solaris 11.4 and later.</p>
          <p>
	    Own Id: OTP-15389</p>
        </item>
        <item>
	    <p>Fixed a bug where <c>lists:reverse/1-2</c> could use
	    far too many reductions. This bug was introduced in
	    <c>OTP 21.1</c>.</p>
          <p>
	    Own Id: OTP-15436</p>
        </item>
        <item>
	    <p>Fixed a bug where a dirty scheduler could stay awake
	    forever if a distribution entry was removed as part of a
	    dirty GC.</p>
          <p>
	    Own Id: OTP-15446 Aux Id: PR-2024 </p>
        </item>
        <item>
          <p>
	    Fix microstate accounting handing in various places. Most
	    importantly the GC states when the GC is run on a dirty
	    scheduler are now managed correctly.</p>
          <p>
	    Own Id: OTP-15450 Aux Id: ERIERL-229 </p>
        </item>
        <item>
          <p>
	    Fixed bug in <c>file:sendfile</c> when the send operation
	    failed. For sockets in <c>active</c> modes it could cause
	    emulator crash or a hanging call. For sockets with
	    <c>{active,false}</c> an unexpected <c>{inet_reply, _,
	    _}</c> message could be sent to the calling process. The
	    bug exists since OTP-21.0.</p>
          <p>
	    Own Id: OTP-15461 Aux Id: ERL-784 </p>
        </item>
        <item>
          <p>
	    The erts configure script has been updated to reject any
	    CFLAGS that does not have <c>-O</c>. This in order to
	    prevent the common mistake of forgetting to add
	    <c>-O2</c> to custom CFLAGS.</p>
          <p>
	    Own Id: OTP-15465</p>
        </item>
        <item>
          <p>
	    Fix reduction count in lists:member/2</p>
          <p>
	    Own Id: OTP-15474 Aux Id: ERIERL-229 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    New <c>counters</c> and <c>atomics</c> modules supplies
	    access to highly efficient operations on mutable fixed
	    word sized variables.</p>
          <p>
	    Own Id: OTP-13468</p>
        </item>
        <item>
	    <p>There is a new module <c>persistent_term</c> that
	    implements a term storage suitable for terms that are
	    frequently used but never or infrequently updated.
	    Lookups are done in constant time without copying the
	    terms.</p>
          <p>
	    Own Id: OTP-14669 Aux Id: PR-1989 </p>
        </item>
        <item>
          <p>
	    A function <c>inet:getifaddrs/1</c> that takes a list
	    with a namespace option has been added, for platforms
	    that support that feature, for example Linux (only?).</p>
          <p>
	    Own Id: OTP-15121 Aux Id: ERIERL-189, PR-1974 </p>
        </item>
        <item>
	    <p>Added the <c>nopush</c> option for TCP sockets, which
	    corresponds to <c>TCP_NOPUSH</c> on *BSD and
	    <c>TCP_CORK</c> on Linux.</p>
	    <p>This is also used internally in <c>file:sendfile</c>
	    to reduce latency on subsequent send operations.</p>
          <p>
	    Own Id: OTP-15357 Aux Id: ERL-698 </p>
        </item>
        <item>
	    <p>List subtraction (The <c>--</c> operator) will now
	    yield properly on large inputs.</p>
          <p>
	    Own Id: OTP-15371</p>
        </item>
        <item>
          <p>
	    Optimize handling of send_delay for tcp sockes to better
	    work with the new pollthread implementation introduced in
	    OTP-21.</p>
          <p>
	    Own Id: OTP-15471 Aux Id: ERIERL-229 </p>
        </item>
        <item>
          <p>
	    Optimize driver_set_timer with a zero timeout to
	    short-circuit and not create any timer structure, but
	    instead schedule the timer immediately.</p>
          <p>
	    Own Id: OTP-15472 Aux Id: ERIERL-229 </p>
        </item>
        <item>
          <p>
	    Add <c>erl_xcomp_code_model_small</c> as a cross
	    configure variable in order to let the emulator be build
	    with the assumption that a small code model will be used
	    on the target machine.</p>
          <p>
	    Own Id: OTP-15473 Aux Id: ERIERL-229 </p>
        </item>
        <item>
          <p>
	    Add a new pollset that is made to handle sockets that use
	    <c>{active, true}</c> or <c>{active, N}</c>. The new
	    pollset will not be polled by a pollthread, but instead
	    polled by a normal scheduler.</p>
          <p>
	    This change was made because of the overhead associated
	    with constantly having to re-apply the ONESHOT mechanism
	    on fds that all input events were interesting.</p>
          <p>
	    The new pollset is only active on platforms that support
	    concurrent kernel poll updates, i.e. Linux and BSD.</p>
          <p>
	    Own Id: OTP-15475 Aux Id: ERIERL-229 </p>
        </item>
        <item>
          <p>
	    Fix bug where emulator would segfault if a literal
	    message was sent when sequence tracing was enabled.</p>
          <p>
	    Own Id: OTP-15478 Aux Id: ERL-741 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.1.3</title>

    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>Added an optional <c>./configure</c> flag to compile
	    the emulator with spectre mitigation:
	    <c>--with-spectre-mitigation</c></p>
	    <p>Note that this requires a recent version of GCC with
	    support for spectre mitigation and the
	    <c>--mindirect-branch=thunk</c> flag, such as
	    <c>8.1</c>.</p>
          <p>
	    Own Id: OTP-15430 Aux Id: ERIERL-237 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.1.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a rare bug where files could be closed on a
	    normal instead of an IO scheduler, resulting in system
	    instability if the operation blocked.</p>
          <p>
	    Own Id: OTP-15421</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.1.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A bug where the socket option 'pktoptions' caused a read
	    of uninitialized memory has been fixed. Would cause
	    malfunction on FreeBSD.</p>
          <p>
	    Own Id: OTP-14297 Aux Id: OTP-15141 </p>
        </item>
        <item>
	    <p>Fixed a memory leak on errors when reading files.</p>
          <p>
	    Own Id: OTP-15318</p>
        </item>
        <item>
	    <p>File access through UNC paths works again on Windows.
	    This regression was introduced in OTP 21.</p>
          <p>
	    Own Id: OTP-15333 Aux Id: ERL-737 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix the seq_trace token to not be cleared when a process
	    receives messages sent by erts. Some examples of when
	    this could happen is all port BIFs, i.e.
	    <c>open_port</c>, <c>port_command</c> etc etc.</p>
          <p>
	    Fix so that messages sent by nifs can be traced using
	    normal and <c>seq_trace</c> tracing.</p>
          <p>
	    Own Id: OTP-15038 Aux Id: ERL-602 </p>
        </item>
        <item>
          <p>
	    Fixed specs and documentation for <c>process_info</c>
	    item <c>monitored_by</c> to include port identifiers and
	    nif resources as possible types.</p>
          <p>
	    Own Id: OTP-15180 Aux Id: ERL-648 </p>
        </item>
        <item>
          <p>
	    Fix bug in generation of erl_crash.dump, which could
	    cause VM to crash.</p>
          <p>
	    Bug exist since erts-9.2 (OTP-20.2).</p>
          <p>
	    Own Id: OTP-15181</p>
        </item>
        <item>
          <p>
	    Fix bug where ctrl-break or ctrl-c would not trigger the
	    break mode properly on Windows. This bug was introduced
	    in erts-10.0 (OTP-21).</p>
          <p>
	    Own Id: OTP-15205</p>
        </item>
        <item>
          <p>
	    Fix a performance bug for reception of UDP packages,
	    where a memory buffer would be reallocated when it should
	    not have been.</p>
          <p>
	    Introduce a limit on the maximum automatic increase of
	    the UDP user-space buffer to the theoretical max of the
	    network PATH, i.e. 65535.</p>
          <p>
	    Own Id: OTP-15206</p>
        </item>
        <item>
          <p>
	    Fix alignment of erts allocator state internally in erts.
	    With the improper alignment the emulator would refuse to
	    start when compiled with clang on 32-bit systems.</p>
          <p>
	    Own Id: OTP-15208 Aux Id: PR-1897 ERL-677 </p>
        </item>
        <item>
          <p>
	    Fix bug where too many concurrent calls to
	    <c>erlang:open_port({spawn,"cmd"},...)</c> would result
	    in the emulator terminating with the reason "Failed to
	    write to erl_child_setup: ". After this fix the
	    <c>open_port</c> call will throw an <c>emfile</c>
	    exception instead.</p>
          <p>
	    Own Id: OTP-15210</p>
        </item>
        <item>
          <p>
	    Upgraded the ERTS internal PCRE library from version 8.41
	    to version 8.42. See <url
	    href="http://pcre.org/original/changelog.txt">http://pcre.org/original/changelog.txt</url>
	    for information about changes made to PCRE. This library
	    implements major parts of the <seeerl
	    marker="stdlib:re"><c>re</c></seeerl> regular
	    expressions module.</p>
          <p>
	    Own Id: OTP-15217</p>
        </item>
        <item>
          <p>
	    Fix <c>open_port({fd,X,Y}, ...)</c> to release the file
	    descriptors from the pollset when closing the port.
	    Without this fix the same file descriptor number could
	    not be reused when doing multiple open_port and
	    port_close sequences.</p>
          <p>
	    Own Id: OTP-15236 Aux Id: ERL-692 </p>
        </item>
        <item>
          <p>
	    Fixed bug in <c>float_to_list/2</c> and
	    <c>float_to_binary/2</c> with options
	    <c>[{decimals,0},compact]</c> causing totally wrong
	    results. Bug exists since OTP-21.0.</p>
          <p>
	    Own Id: OTP-15276 Aux Id: PR-1920 </p>
        </item>
        <item>
          <p>
	    Fixed bug in <c>erlang:memory</c> causing <c>ets</c> to
	    report too much. This small false memory leak (16 bytes
	    each time) can only happen when a specific race condition
	    occurs between scheduler threads on a table with option
	    <c>write_concurrency</c>.</p>
          <p>
	    Own Id: OTP-15278</p>
        </item>
        <item>
          <p>
	    Minor <c>configure</c> test fixes</p>
          <p>
	    Own Id: OTP-15282</p>
        </item>
        <item>
          <p>
	    Improved robustness of distribution connection setup. In
	    OTP-21.0 a truly asynchronous connection setup was
	    introduced. This is further improvement on that work to
	    make the emulator more robust and also be able to recover
	    in cases when involved Erlang processes misbehave.</p>
          <p>
	    Own Id: OTP-15297 Aux Id: OTP-15279, OTP-15280 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    The socket options <c>recvtos</c>, <c>recvttl</c>,
	    <c>recvtclass</c> and <c>pktoptions</c> have been
	    implemented in the socket modules. See the documentation
	    for the <c>gen_tcp</c>, <c>gen_udp</c> and <c>inet</c>
	    modules. Note that support for these in the runtime
	    system is platform dependent. Especially for
	    <c>pktoptions</c> which is very Linux specific and
	    obsoleted by the RFCs that defined it.</p>
          <p>
	    Own Id: OTP-15145 Aux Id: ERIERL-187 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.0.8</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    As of ERTS version 10.0 (OTP 21.0) the
	    <c>erl_child_setup</c> program, which creates port
	    programs, ignores <c>TERM</c> signals. This setting was
	    unintentionally inherited by port programs. Handling of
	    <c>TERM</c> signals in port programs has now been
	    restored to the default behavior. That is, terminate the
	    process.</p>
          <p>
	    Own Id: OTP-15289 Aux Id: ERIERL-235, OTP-14943, ERL-576 </p>
        </item>
        <item>
          <p>
	    The fix made for OTP-15279 in erts-10.07 (OTP-21.0.8) was
	    not complete. It could cause a new connection attempt to
	    be incorrectly aborted in certain cases. This fix will
	    amend that flaw.</p>
          <p>
	    Own Id: OTP-15296 Aux Id: OTP-15279, ERIERL-226 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.0.7</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A process could get stuck in an infinite rescheduling
	    loop between normal and dirty schedulers. This bug was
	    introduced in ERTS version 10.0.</p>
          <p>
	    Thanks to Maxim Fedorov for finding and fixing this
	    issue.</p>
          <p>
	    Own Id: OTP-15275 Aux Id: PR-1943 </p>
        </item>
        <item>
          <p>
	    Garbage collection of a distribution entry could cause an
	    emulator crash if <c>net_kernel</c> had not brought
	    previous connection attempts on it down properly.</p>
          <p>
	    Own Id: OTP-15279 Aux Id: ERIERL-226 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.0.6</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A race between termination of a process and resume of the
	    same process via <c>erlang:resume_process/1</c> could
	    cause the VM to crash. This bug was introduced in erts
	    version 10.0 (OTP 21.0).</p>
          <p>
	    Own Id: OTP-15237</p>
        </item>
        <item>
          <p>
	    When tracing on <c>running</c>, <c>in</c> trace events
	    could be lost when a process was rescheduled between a
	    dirty and a normal scheduler.</p>
          <p>
	    Own Id: OTP-15269 Aux Id: ERL-713 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.0.5</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed a bug which caused an emulator crash when
	    <c>enif_send()</c> was called by a NIF that executed on a
	    dirty scheduler. The bug was either triggered when the
	    NIF called <c>enif_send()</c> without a message
	    environment, or when the process executing the NIF was
	    <c>send</c> traced.</p>
          <p>
	    Own Id: OTP-15223</p>
        </item>
        <item>
          <p>
	    Fixed a bug causing some Erlang references to be
	    inconsistently ordered. This could for example cause
	    failure to look up certain elements with references as
	    keys in search data structures. This bug was introduced
	    in R13B02.</p>
          <p>
	    Thanks to Simon Cornish for finding the bug and supplying
	    a fix.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-15225</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.0.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a bug that prevented the <c>noshell</c> option
	    from working correctly on Mac OS X and BSD.</p>
          <p>
	    Own Id: OTP-15169</p>
        </item>
        <item>
	    <p>Fixed a crash when matching directly against a literal
	    map using a single key that had been saved on the
	    stack.</p>
          <p>
	    Own Id: OTP-15184</p>
        </item>
        <item>
	    <p>Fix node crash when passing a bad time option to
	    <c>file:read_file_info/2</c>.</p>
          <p>
	    Own Id: OTP-15196</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.0.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a scheduler bug that caused normal schedulers to
	    run dirty code.</p>
          <p>
	    Own Id: OTP-15154</p>
        </item>
        <item>
          <p>
	    Fixed a bug in <c>erlang:trace_info/2</c> which caused
	    the emulator to crash when a bad argument was passed. The
	    bug was introduced in ERTS version 10.0.</p>
          <p>
	    Own Id: OTP-15183 Aux Id: ERL-670 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.0.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a rare bug that could cause processes to be
	    scheduled after they had been freed.</p>
          <p>
	    Own Id: OTP-15067 Aux Id: ERL-573 </p>
        </item>
        <item>
	    <p>Fixed a race condition in the inet driver that could
	    cause receive to hang when the emulator was compiled with
	    gcc 8.</p>
          <p>
	    Own Id: OTP-15158 Aux Id: ERL-654 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.0.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>The keys used in <c>os:getenv</c> and <c>os:putenv</c>
	    are case-insensitive again on Windows.</p>
          <p>
	    Own Id: OTP-15147 Aux Id: ERL-644 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 10.0</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The type specifications for <c>file:posix/0</c> and
	    <c>inet:posix/0</c> have been updated according to which
	    errors file and socket operations should be able to
	    return.</p>
          <p>
	    Own Id: OTP-14019 Aux Id: ERL-550 </p>
        </item>
        <item>
          <p>
	    Fix error printout from run_erl and a bug that could
	    cause unintended fds to be leaked into the started
	    program.</p>
          <p>
	    Own Id: OTP-14537 Aux Id: PR1529 </p>
        </item>
        <item>
	    <p> File operations used to accept <seetype
	    marker="kernel:file#name_all">filenames</seetype>
	    containing null characters (integer value zero). This
	    caused the name to be truncated and in some cases
	    arguments to primitive operations to be mixed up.
	    Filenames containing null characters inside the filename
	    are now <em>rejected</em> and will cause primitive file
	    operations to fail. </p> <p> Also environment variable
	    operations used to accept <seetype
	    marker="kernel:os#env_var_name">names</seetype> and
	    <seetype
	    marker="kernel:os#env_var_value">values</seetype> of
	    environment variables containing null characters (integer
	    value zero). This caused operations to silently produce
	    erroneous results. Environment variable names and values
	    containing null characters inside the name or value are
	    now <em>rejected</em> and will cause environment variable
	    operations to fail. </p> <p>Primitive environment
	    variable operations also used to accept the <c>$=</c>
	    character in environment variable names causing various
	    problems. <c>$=</c> characters in environment variable
	    names are now also <em>rejected</em>. </p> <p>Also
	    <seemfa
	    marker="kernel:os#cmd/1"><c>os:cmd/1</c></seemfa> now
	    reject null characters inside its <seetype
	    marker="kernel:os#os_command">command</seetype>.
	    </p> <p><seemfa
	    marker="erts:erlang#open_port/2"><c>erlang:open_port/2</c></seemfa>
	    will also reject null characters inside the port name
	    from now on.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-14543 Aux Id: ERL-370 </p>
        </item>
        <item>
          <p>
	    Fix bugs related to the bookkeeping of microstate
	    accounting states.</p>
          <p>
	    Own Id: OTP-14652</p>
        </item>
        <item>
	    <p><c>os:putenv</c> and <c>os:getenv</c> no longer access
	    the process environment directly and instead work on a
	    thread-safe emulation. The only observable difference is
	    that it's <em>not</em> kept in sync with libc
	    <c>getenv(3)</c> / <c>putenv(3)</c>, so those who relied
	    on that behavior in drivers or NIFs will need to add
	    manual synchronization.</p> <p>On Windows this means that
	    you can no longer resolve DLL dependencies by modifying
	    the <c>PATH</c> just before loading the driver/NIF. To
	    make this less of a problem, the emulator now adds the
	    target DLL's folder to the DLL search path.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-14666</p>
        </item>
        <item>
	    <p>Corrected <c>erlang:is_builtin(erlang, M, F)</c> to
	    return <c>true</c> for <c>apply/2</c> and
	    <c>yield/0</c>.</p>
          <p>
	    Own Id: OTP-14713 Aux Id: ERL-500 </p>
        </item>
        <item>
	    <p>Fixed a bug where the PATH environment variable wasn't
	    updated correctly on a release downgrade, effectively
	    keeping the PATH of the new release.</p>
          <p>
	    Own Id: OTP-14719</p>
        </item>
        <item>
	    <p>A receive optimization that avoids scanning the entire
	    message queue when receiving a message containing a
	    freshly created reference could in rare circumstances
	    (involving recursive calls to the functions that does the
	    receive) cause the receive to hang. This has been
	    corrected.</p>
          <p>
	    Own Id: OTP-14782 Aux Id: ERL-511 </p>
        </item>
        <item>
          <p>
	    Fix building of Erlang/OTP on platforms which have small
	    data area with short addressing. For example the
	    PowerPC/RTEMS platform.</p>
          <p>
	    Own Id: OTP-14909 Aux Id: PR-1692 </p>
        </item>
        <item>
	    <p>Fixed a crash when <c>enif_make_binary</c> is called
	    with a binary produced by <c>enif_inspect_binary</c> in a
	    different environment.</p>
          <p>
	    Own Id: OTP-14931</p>
        </item>
        <item>
	    <p>Fixed a crash when <c>enif_make_binary</c> is called
	    more than once with a binary that had previously been
	    added to an <c>enif_ioq</c>.</p>
          <p>
	    Own Id: OTP-14932</p>
        </item>
        <item>
          <p>
	    The erl_child_setup program now ignores SIGTERM signals.</p>
          <p>
	    Own Id: OTP-14943 Aux Id: ERL-576 </p>
        </item>
        <item>
          <p>
	    Force 64-bit alignment on pre-allocators on architectures
	    which needs it.</p>
          <p>
	    Own Id: OTP-14977</p>
        </item>
        <item>
          <p>
	    Fixed a bug where dirty scheduler picked up non-dirty
	    work.</p>
          <p>
	    Own Id: OTP-14978</p>
        </item>
        <item>
          <p>
	    Calls to <c>gen_tcp:send/2</c> on closed sockets now
	    returns <c>{error, closed}</c> instead of
	    <c>{error,enotconn}</c>.</p>
          <p>
	    Own Id: OTP-15001</p>
        </item>
        <item>
          <p>
	    <c>erlang:monotonic_time/1</c> failed with <c>badarg</c>
	    when passing the <c>perf_counter</c> time unit as
	    argument.</p>
          <p>
	    Own Id: OTP-15008</p>
        </item>
        <item>
          <p>
	    Fix bug where rapid <c>init:restart()</c> calls would
	    sometimes crash because a code load request leaked in
	    between the restarts.</p>
          <p>
	    Own Id: OTP-15013</p>
        </item>
        <item>
          <p>
	    Improve <c>float_to_list(F, [{decimals,D}])</c> to closer
	    conform with <c>io_lib:format("~.*f", [D,F])</c>.</p>
          <p>
	    There are however, still cases when <c>float_to_list</c>
	    does not produce the exact same result as
	    <c>io_lib:format</c>, especially for large values
	    <c>F</c> and/or many decimals <c>D</c>.</p>
          <p>
	    Own Id: OTP-15015 Aux Id: OTP-14890 </p>
        </item>
        <item>
	    <p>Fixed a deadlock that would occur on certain
	    allocators when a reallocation failed with <c>+ramv</c>
	    enabled.</p>
          <p>
	    Own Id: OTP-15024</p>
        </item>
        <item>
          <p>
	    Fix bug that made it impossible to use an erl_tracer as
	    the seq_trace trace receiver.</p>
          <p>
	    Own Id: OTP-15029</p>
        </item>
        <item>
          <p>
	    Fix bug where a large (> 1 GB) emulator generated error
	    logger message would cause the emulator to crash.</p>
          <p>
	    Own Id: OTP-15032</p>
        </item>
        <item>
	    <p>The emulator will no longer crash when reading the
	    file information of an ordinary file that has an NTFS
	    reparse point, such as files stored in a OneDrive-mapped
	    folder.</p>
          <p>
	    Own Id: OTP-15062 Aux Id: ERL-615 </p>
        </item>
        <item>
          <p>
	    Fixed bug in <c>enif_binary_to_term</c> which could cause
	    memory corruption for immediate terms (atoms, small
	    integers, pids, ports, empty lists).</p>
          <p>
	    Own Id: OTP-15080</p>
        </item>
        <item>
          <p>
	    Fixed bug in <c>erlang:system_profile/2</c> that could
	    cause superfluous <c>{profile,_,active,_,_}</c> messages
	    for terminating processes.</p>
          <p>
	    Own Id: OTP-15085</p>
        </item>
        <item>
          <p>
	    On OSs with per thread CPU time support, change
	    <c>cpu_timestamp</c> in <seemfa
	    marker="erlang#trace/3">erlang:trace/3</seemfa> to use
	    it instead of per process CPU time. This makes this
	    option usable on such OSs when running multiple
	    schedulers.</p>
          <p>
	    Own Id: OTP-15090</p>
        </item>
        <item>
          <p>
	    Fix segfault in abort_signal_task which could happen if a
	    port terminated while there were outstanding port tasks
	    that were not signals, for example a
	    ready_input/ready_output event.</p>
          <p>
	    Own Id: OTP-15108 Aux Id: ERL-621 </p>
        </item>
        <item>
          <p>
	    Fixed bug in <c>ets</c> that could cause VM crash if
	    process A terminates after fixating a table and process B
	    deletes the table at "the same time". The table fixation
	    could be done with <c>ets:safe_fixtable</c> or if process
	    A terminates in the middle of a long running
	    <c>select</c> or <c>match</c> call.</p>
          <p>
	    Own Id: OTP-15109</p>
        </item>
        <item>
	    <p>Owner and group changes through
	    <c>file:write_file_info</c>, <c>file:change_owner</c>,
	    and <c>file:change_group</c> will no longer report
	    success on permission errors.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-15118</p>
        </item>
        <item>
          <p>
	    Fix a bug error reporting from escripts on windows where
	    the error message would get garbled.</p>
          <p>
	    Own Id: OTP-15119 Aux Id: PR-1826 </p>
        </item>
        <item>
          <p>
	    Fix segfault when a process is internally re-scheduled
	    while being traced for in out events. This bug was
	    introduced in erts-8.0 (OTP-19.0).</p>
          <p>
	    Own Id: OTP-15125</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>It is now possible to open device files and FIFOs with
	    <c>file:open/2</c>.</p>
          <p>
	    Own Id: OTP-11462</p>
        </item>
        <item>
          <p>
	    The <c>erlang:system_flag(scheduler_wall_time,Bool)</c>
	    call is now reference counted and will be turned off if
	    the (last) process that started the performance
	    statistics dies. Thus it is no longer possible to start
	    the statistics with <c>rpc:call(Node, erlang,
	    system_flag, [scheduler_wall_time, true])</c> since it
	    will be turned off directly afterwards when the rpc
	    process dies.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-11694</p>
        </item>
        <item>
	    <p>A new logging API is added to Erlang/OTP, see the
	    <seeerl
	    marker="kernel:logger"><c>logger(3)</c></seeerl> manual
	    page, and section <seeguide
	    marker="kernel:logger_chapter">Logging</seeguide> in the
	    Kernel User's Guide.</p>
	    <p>Calls to <c>error_logger</c> are automatically
	    redirected to the new API, and legacy error logger event
	    handlers can still be used. It is, however, recommended
	    to use the Logger API directly when writing new code.</p>
	    <p>Notice the following potential incompatibilities:</p>
	    <list> <item><p>Kernel configuration parameters
	    <c>error_logger</c> still works, but is overruled if the
	    default handler's output destination is configured with
	    Kernel configuration parameter <c>logger</c>.</p> <p>In
	    general, parameters for configuring error logger are
	    overwritten by new parameters for configuring
	    Logger.</p></item> <item><p>The concept of SASL error
	    logging is deprecated, meaning that by default the SASL
	    application does not affect which log events are
	    logged.</p> <p>By default, supervisor reports and crash
	    reports are logged by the default Logger handler started
	    by Kernel, and end up at the same destination (terminal
	    or file) as other standard log event from Erlang/OTP.</p>
	    <p>Progress reports are not logged by default, but can be
	    enabled by setting the primary log level to info, for
	    example with the Kernel configuration parameter
	    <c>logger_level</c>.</p> <p>To obtain backwards
	    compatibility with the SASL error logging functionality
	    from earlier releases, set Kernel configuration parameter
	    <c>logger_sasl_compatible</c> to <c>true</c>. This
	    prevents the default Logger handler from logging any
	    supervisor-, crash-, or progress reports. Instead, SASL
	    adds a separate Logger handler during application start,
	    which takes care of these log events. The SASL
	    configuration parameters <c>sasl_error_logger</c> and
	    <c>sasl_errlog_type</c> specify the destination (terminal
	    or file) and severity level to log for these
	    events.</p></item></list>
          <p>
	    Since Logger is new in Erlang/OTP 21.0, we do reserve the
	    right to introduce changes to the Logger API and
	    functionality in patches following this release. These
	    changes might or might not be backwards compatible with
	    the initial version.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-13295</p>
        </item>
        <item>
          <p>
	    <c>gen_sctp:connect_init/4</c> or rather connect in
	    <c>inet_drv.c</c> for SCTP has been fixed to not check
	    the write file descriptor for writeability after a
	    connect, since for SCTP (SOCK_SEQPACKET) that property
	    does not seem to be any kind of indicator for when a
	    connect has finished. This fixes connects that the OS
	    returned as "in progress" that was misinterpreted by
	    <c>gen_sctp:connect_init</c> as failed.</p>
          <p>
	    Own Id: OTP-13760 Aux Id: PR-1592 </p>
        </item>
        <item>
	    <p>The file driver has been rewritten as a NIF,
	    decreasing the latency of file operations. Notable
	    incompatibilities are:</p> <list> <item><p>The
	    <c>use_threads</c> option for <c>file:sendfile/5</c> no
	    longer has any effect; we either use non-blocking
	    <c>sendfile(2)</c> or fall back to <c>file:read</c> +
	    <c>gen_tcp:send</c>. </p></item> <item><p>The
	    file-specific DTrace probes have been removed. The same
	    effect can be achieved with normal tracing together with
	    the <c>nif__entry</c>/<c>nif__return</c> probes to track
	    scheduling.</p></item> </list>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-14256</p>
        </item>
        <item>
	    <p>The I/O polling functionality of erts has been
	    re-written to better make use of the OSs polling
	    mechanisms. This change means that erts will now always
	    prefer to use a kernel-polling mechanism if possible.
	    Also all of the I/O polling has been moved to dedicated
	    threads instead of being placed in the scheduler
	    loops.</p> <p>As a result of this, the <c>erl</c> options
	    <c>+K</c> and <c>+secio</c> have been removed. It is
	    still possible to disable kernel-poll, but it has to be
	    done at compile time through the configure option
	    <c>--disable-kernel-poll</c>.</p> <p>The new <c>erl</c>
	    options <seecom marker="erl#+IOt"><c>+IOt</c></seecom>
	    and <seecom marker="erl#+IOp"><c>+IOp</c></seecom> can
	    be used to change how many IO poll threads and poll sets
	    that erts should use. See their respective documentation
	    for more details.</p>
          <p>
	    Own Id: OTP-14346</p>
        </item>
        <item>
	    <p>Truly asynchronous auto-connect. Earlier, when
	    <c>erlang:send</c> was aimed toward an unconnected node,
	    the function would not return until the connection setup
	    had completed (or failed). Now the function returns
	    directly after the message has been enqueued and the
	    connection setup started.</p>
	    <p>The same applies to all distributed operations that
	    may trigger auto-connect, i.e. <c>'!'</c>, <c>send</c>,
	    <c>link</c>, <c>monitor</c>, <c>monitor_node</c>,
	    <c>exit/2</c> and <c>group_leader</c>.</p>
	    <p>The interface for all these functions are unchanged as
	    they do not return connection failures. The only
	    exception is <c>erlang:monitor</c> where a <em>possible
	    incompatibility</em> is introduced: An attempt to monitor
	    a process on a primitive node (such as erl_interface or
	    jinterface), where remote process monitoring is not
	    implemented, will no longer fail with <c>badarg</c>
	    exception. Instead a monitor will be created, but it will
	    only supervise the connection to the node.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-14370</p>
        </item>
        <item>
	    <p>Changed the default behaviour of <c>.erlang</c>
	    loading: <c>.erlang</c> is no longer loaded from the
	    current directory. <c>c:erlangrc(PathList)</c> can be
	    used to search and load an <c>.erlang</c> file from user
	    specified directories.</p> <p><c>escript</c>,
	    <c>erlc</c>, <c>dialyzer</c> and <c>typer</c> no longer
	    load an <c>.erlang</c> at all.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-14439</p>
        </item>
        <item>
          <p>
	    New functionality for implementation of alternative
	    carriers for the Erlang distribution has been introduced.
	    This mainly consists of support for usage of distribution
	    controller processes (previously only ports could be used
	    as distribution controllers). For more information see
	    <seeguide marker="erts:alt_dist#distribution_module">ERTS
	    User's Guide ➜ How to implement an Alternative Carrier
	    for the Erlang Distribution ➜ Distribution
	    Module</seeguide>.</p>
          <p>
	    Own Id: OTP-14459</p>
        </item>
        <item>
          <p>
	    Add support for the lcc compiler and in extension the
	    Elbrus 2000 platform.</p>
          <p>
	    Own Id: OTP-14492</p>
        </item>
        <item>
	    <p>Support for "tuple calls" have been removed from the
	    run-time system. Tuple calls was an undocumented and
	    unsupported feature which allowed the module argument for
	    an apply operation to be a tuple: <c>Var = dict:new(),
	    Var:size()</c>. This "feature" frequently caused
	    confusion, especially when such call failed. The
	    stacktrace would point out functions that don't exist in
	    the source code.</p>
	    <p>For legacy code that need to use parameterized modules
	    or tuple calls for some other reason, there is a new
	    compiler option called <c>tuple_calls</c>. When this
	    option is given, the compiler will generate extra code
	    that emulates the old behavior for calls where the module
	    is a variable.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-14497</p>
        </item>
        <item>
	    <p>Creation of small maps with literal keys has been
	    optimized to be faster and potentially use less memory.
	    The keys are combined into a literal key tuple which is
	    put into the literal pool. The key tuple can be shared
	    between many instances of maps having the same keys.</p>
          <p>
	    Own Id: OTP-14502</p>
        </item>
        <item>
          <p>
	    When an exception is thrown, include the arguments of the
	    call in the stacktrace for BIFs <c>band</c>, <c>bor</c>,
	    <c>bsl</c>, <c>bsr</c>, <c>bxor</c>, <c>div</c>,
	    <c>rem</c> and the operators <c>+</c>, <c>-</c>, <c>*</c>
	    and <c>/</c>.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-14508</p>
        </item>
        <item>
          <p>
	    The non-smp emulators have been removed. This means that
	    the configure options <c>--disable-threads</c> and
	    <c>--enable-plain-emulator</c> have been removed and
	    configure will now refuse to build Erlang/OTP on
	    platforms without thread support.</p>
          <p>
	    In order to achieve a similar setup as the non-smp
	    emulator, it is possible to start Erlang/OTP with the
	    <c>+S 1</c> option.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-14518</p>
        </item>
        <item>
	    <p>Modules that use floating point constants compiled
	    with R15 or earlier will need to be re-compiled before
	    they can be loaded.</p>
          <p>
	    Own Id: OTP-14575</p>
        </item>
        <item>
          <p>
	    Implementation of true asynchronous signaling between
	    processes in order to improve scalability. Signals
	    affected include exit, monitor, demonitor, monitor
	    triggered, link, unlink, and group leader.</p>
          <p>
	    Own Id: OTP-14589</p>
        </item>
        <item>
          <p>
	    Added a PGO (profile guided optimization) pass to the
	    build step of erts. This can be disabled by passing
	    --disable-pgo to configure.</p>
          <p>
	    Own Id: OTP-14604</p>
        </item>
        <item>
          <p>
	    Improved the performance of <c>binary:split</c> and
	    <c>binary:match</c>.</p>
          <p>
	    Own Id: OTP-14610 Aux Id: PR-1480 </p>
        </item>
        <item>
          <p>
	    It is not longer possible to disable dirty schedulers
	    when building erlang.</p>
          <p>
	    Own Id: OTP-14613</p>
        </item>
        <item>
	    <p>Loaded BEAM code in a 64-bit system requires less
	    memory because of better packing of operands for
	    instructions.</p>
	    <p>These memory savings were achieved by major
	    improvements to the <c>beam_makeops</c> scripts used when
	    building the run time system and BEAM compiler. There is
	    also new for documentation for <c>beam_makeops</c> that
	    describes how new BEAM instructions and loader
	    transformations can be implemented. The documentation is
	    found in here in a source directory or git repository:
	    erts/emulator/internal_doc/beam_makeops.md. An online
	    version can be found here:
	    https://github.com/erlang/otp/blob/master/erts/emulator/internal_doc/beam_makeops.md</p>
          <p>
	    Own Id: OTP-14626</p>
        </item>
        <item>
	    <p><c>file:read_file</c> has been changed to read the
	    content of files that report a size of 0 even when data
	    can be read from them. An example of such a file is
	    <c>/proc/cpuinfo</c> on Linux.</p>
          <p>
	    Own Id: OTP-14637 Aux Id: ERL-327 PR-1524 </p>
        </item>
        <item>
          <p>
	    It is no longer possible to disable the <c>temp_alloc</c>
	    allocator. Disabling it caused serious performance
	    degradations and was never what was wanted.</p>
          <p>
	    Own Id: OTP-14651</p>
        </item>
        <item>
	    <p>The reduction cost of sending messages is now
	    constant. It will no longer scale according to the length
	    of the receiving process' message queue.</p>
          <p>
	    Own Id: OTP-14667</p>
        </item>
        <item>
          <p>
	    Improved loading of modules with <c>-on_load</c>
	    directive, to no longer block all schedulers when the
	    load operation is completed.</p>
          <p>
	    Own Id: OTP-14680</p>
        </item>
        <item>
          <p>
	    On platforms with real-time signals available, SIGRTMIN+1
	    is now used as the internal scheduler suspend signal
	    instead of SIGUSR2.</p>
          <p>
	    Own Id: OTP-14682</p>
        </item>
        <item>
	    <p>When the value returned from a '<c>catch</c>'
	    expression is ignored, no stacktrace will be built if an
	    exception is caught. That will save time and produce less
	    garbage. There are also some minor optimizations of
	    '<c>try</c>/<c>catch</c>' both in the compiler and
	    run-time system.</p>
          <p>
	    Own Id: OTP-14683</p>
        </item>
        <item>
	    <p>The guarantees and non-guarantees of
	    <c>erlang:get_stacktrace/0</c> are now documented.</p>
          <p>
	    Own Id: OTP-14687</p>
        </item>
        <item>
	    <p>There is a new syntax in '<c>try/catch</c>' for
	    retrieving the stacktrace without calling
	    '<c>erlang:get_stacktrace/0</c>'. See the reference
	    manual for a description of the new syntax. The
	    '<c>erlang:get_stacktrace/0</c>' BIF is now
	    deprecated.</p>
          <p>
	    Own Id: OTP-14692</p>
        </item>
        <item>
          <p>
	    New 'used' option for <c>binary_to_term/2</c> that will
	    also return number of bytes actually read from the
	    binary. This enables easy access to any extra data in the
	    binary located directly after the returned term.</p>
          <p>
	    Own Id: OTP-14780</p>
        </item>
        <item>
          <p>
	    Added more statistics for
	    <c>erlang:system_info({allocator,A})</c> in the
	    <c>mbcs_pool</c> section.</p>
          <p>
	    Own Id: OTP-14795 Aux Id: ERL-88 </p>
        </item>
        <item>
	    <p>Added <c>enif_ioq_peek_head</c> to retrieve Erlang
	    terms from NIF IO queues without having to resort to
	    copying.</p>
          <p>
	    Own Id: OTP-14797</p>
        </item>
        <item>
	    <p>There is a new option '<c>makedep_side_effect</c>' for
	    the compiler and <c>-MMD</c> for '<c>erlc</c>' that
	    generates dependencies and continues to compile as
	    normal.</p>
          <p>
	    Own Id: OTP-14830</p>
        </item>
        <item>
	    <p>Added <c>ets:whereis/1</c> for retrieving the table
	    identifier of a named table.</p>
          <p>
	    Own Id: OTP-14884</p>
        </item>
        <item>
	    <p><c>seq_trace</c> labels may now be any erlang
	    term.</p>
          <p>
	    Own Id: OTP-14899</p>
        </item>
        <item>
          <p>
	    Optimized the common case of <c>monitor</c> followed by
	    <c>send</c> to the same local process. The monitor signal
	    is now delayed in order to be piggybacked with the sent
	    message and thereby only get one lock operation on the
	    message queue of the receiver. A delayed monitor signal
	    is flushed if no <c>send</c> has been done at the latest
	    when the process is scheduled out.</p>
          <p>
	    Own Id: OTP-14901</p>
        </item>
        <item>
          <p>
	    Make hipe compiled code work on x86_64 (amd64) with OS
	    security feature PIE, where executable code can be loaded
	    into a random location. Old behavior, if hipe was
	    enabled, was to disable PIE build options for the VM.</p>
          <p>
	    Own Id: OTP-14903</p>
        </item>
        <item>
	    <p>The number of driver async threads will now default to
	    1 as the standard drivers do not use them anymore. Users
	    that changed this value to tweak the file driver should
	    replace <c>+A</c> with <c>+SDio</c> since it now uses
	    dirty IO schedulers instead of async threads.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-14928</p>
        </item>
        <item>
          <p>
	    Optimize <c>==</c> and <c>/=</c> for binaries with
	    different sizes to be constant in time instead of
	    proportional to the size of their common prefix.</p>
          <p>
	    Own Id: OTP-14934 Aux Id: PR-1708 </p>
        </item>
        <item>
          <p>
	    Refactorings making some internal process flags available
	    for other usage.</p>
          <p>
	    Own Id: OTP-14948</p>
        </item>
        <item>
          <p>
	    Removed need for HiPE to allocate native executable
	    memory in low 2GB address space on x86_64. Command line
	    option <c>+MXscs</c> is thereby obsolete and ignored.</p>
          <p>
	    Own Id: OTP-14951</p>
        </item>
        <item>
	    <p>Added <c>enif_make_map_from_arrays</c> for creating a
	    populated map, analogous to
	    <c>enif_make_list_from_array</c>.</p>
          <p>
	    Own Id: OTP-14954</p>
        </item>
        <item>
	    <p>Added configuration switches for busy-wait and wake up
	    thresholds for dirty schedulers, and changing these
	    settings for normal schedulers will no longer affect
	    dirty schedulers. </p> <p>Refer to the documentation for
	    details. The new switches are <seecom
	    marker="erl#+sbwtdcpu">+sbwtdcpu</seecom>, <seecom
	    marker="erl#+sbwtdio">+sbwtdio</seecom>, <seecom
	    marker="erl#+swtdcpu">+swtdcpu</seecom>, and <seecom
	    marker="erl#+swtdio">+swtdio</seecom>.</p> <p>The
	    default busy wait threshold for dirty scheduler threads
	    has also been lowered to <c>short</c>.</p>
          <p>
	    Own Id: OTP-14959</p>
        </item>
        <item>
          <p>
	    The list of "taints" now also includes dynamic loaded
	    drivers in addition to NIF libraries. Statically linked
	    drivers and NIF libraries that are part of erts are not
	    included. The "taints" are returned by
	    <c>system_info(taints)</c> and printed in the header of
	    <c>erl_crash.dump</c> files.</p>
          <p>
	    Own Id: OTP-14960</p>
        </item>
        <item>
	    <p>Added <c>instrument:allocations</c> and
	    <c>instrument:carriers</c> for retrieving information
	    about memory utilization and fragmentation.</p>
	    <p>The old <c>instrument</c> interface has been removed,
	    as have the related options <c>+Mim</c> and
	    <c>+Mis</c>.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-14961</p>
        </item>
        <item>
	    <p>The process suspend functionality used by the <seemfa
	    marker="erlang#suspend_process/2">erlang:suspend_process/2</seemfa>
	    BIF has been reimplemented using the newly introduced
	    true asynchronous signaling between processes. This
	    mainly to reduce memory usage in the process control
	    block of all processes, but also in order to simplify the
	    implementation.</p> <warning> <p>You can easily create
	    deadlocks if processes suspends each other (directly or
	    in circles). In ERTS versions prior to ERTS version 10.0,
	    the runtime system prevented such deadlocks, but this
	    prevention has now been removed due to performance
	    reasons.</p> </warning> <p>Other ERTS internal
	    functionality that used the previous process suspend
	    functionality have also been reimplemented to use
	    asynchronous signaling instead.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-14964 Aux Id: OTP-14589 </p>
        </item>
        <item>
	    <p>Added the <c>nifs</c> option to
	    <c>?MODULE:module_info/1</c> for listing a module's
	    installed NIF functions.</p>
          <p>
	    Own Id: OTP-14965</p>
        </item>
        <item>
          <p>
	    New implementation of <c>erlang:process_info/[1,2]</c>.</p>
          <p>
	    In the general case when inspecting another process, the
	    new implementation sends an asynchronous process-info
	    request signal to the other process and waits for the
	    result instead of locking the other process and reading
	    the result directly. In some special cases where no
	    conflicts occur, signal order won't be violated, and the
	    amount of data requested is guaranteed to be small, the
	    inspected process may be inspected directly.</p>
          <p>
	    Appropriate amount of reductions are now also bumped when
	    inspecting a process.</p>
          <p>
	    Own Id: OTP-14966</p>
        </item>
        <item>
          <p>
	    Removed process start time from crash dump in order to
	    save memory in process control block.</p>
          <p>
	    Own Id: OTP-14975 Aux Id: PR-1597 </p>
        </item>
        <item>
          <p>
	    Optimize <c>erlang:put/2</c> when updating existing key
	    with a new immediate value (atom, small integer, pid,
	    port).</p>
          <p>
	    Own Id: OTP-14976</p>
        </item>
        <item>
          <p>
	    <c>erlang:process_info/1</c> has been changed to no
	    longer include <c>messages</c> by default. Instead
	    <c>erlang:process_info/2</c> should be used.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-14986 Aux Id: PR-1745 </p>
        </item>
        <item>
          <p>
	    New <c>erlang:system_info(ets_count)</c> to get total
	    number of ets tables existing at the local node.</p>
          <p>
	    Own Id: OTP-14987</p>
        </item>
        <item>
          <p>
	    New NIF functions: <c>enif_mutex_name</c>,
	    <c>enif_cond_name</c>, <c>enif_rwlock_name</c>,
	    <c>enif_thread_name</c>, <c>enif_vfprintf</c>,
	    <c>enif_vsnprintf</c>.</p>
          <p>
	    Own Id: OTP-14994</p>
        </item>
        <item>
	    <p>When <c>erlang:system_flag(backtrace_depth, 0)</c> has
	    been called, all exceptions will now contain the entry
	    for <em>one</em> function (despite the zero). It used to
	    be that a hand-made stack backtrace passed to
	    <c>erlang:raise/3</c> would be be truncated to an empty
	    list.</p>
          <p>
	    Own Id: OTP-15026</p>
        </item>
        <item>
          <p>
	    Fixed bug for named <c>ets</c> tables which could cause
	    unexpected results from matchspec iteration functions
	    (<c>ets:select*</c> and <c>ets:match*</c>) if the table
	    was deleted and recreated with the same name during the
	    iteration. The iteration could incorrectly continue
	    through the recreated table. The expected correct
	    behavior is now for the iteration call to fail with a
	    <c>badarg</c> exception if the table is deleted before
	    the iteration has completed.</p>
          <p>
	    Own Id: OTP-15031</p>
        </item>
        <item>
	    <p>Two new guards BIFs operating on maps have been added:
	    <c>map_get/2</c> and <c>is_map_key/2</c>. They do the
	    same as <c>maps:get/2</c> and <c>maps:is_key/2</c>,
	    respectively, except that they are allowed to be used in
	    guards.</p>
          <p>
	    Own Id: OTP-15037 Aux Id: PR-1784, PR-1802 </p>
        </item>
        <item>
          <p>
	    Release run-queue lock while cleaning up terminated dirty
	    process.</p>
          <p>
	    Own Id: OTP-15081</p>
        </item>
        <item>
	    <p>The callback module passed as <c>-epmd_module</c> to
	    erl has been expanded to be able to do name and port
	    resolving.</p> <p>Documentation has also been added in
	    the <seeerl
	    marker="kernel:erl_epmd"><c>erl_epmd</c></seeerl>
	    reference manual and ERTS User's Guide <seeguide
	    marker="erts:alt_disco">How to Implement an Alternative
	    Node Discovery for Erlang Distribution</seeguide>.</p>
          <p>
	    Own Id: OTP-15086 Aux Id: PR-1694 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.3.3.15</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A process could end up in a state where it got endlessly
	    rescheduled without making any progress. This occurred
	    when a system task, such as check of process code (part
	    of a code purge), was scheduled on a high priority
	    process trying to execute on a dirty scheduler.</p>
          <p>
	    Own Id: OTP-16436 Aux Id: ERL-1152 </p>
        </item>
        <item>
          <p>
	    Fixed bug in <c>erlang:list_to_ref/1</c> when called with
	    a reference created by a remote note. Function
	    <c>list_to_ref/1</c> is intended for debugging and not to
	    be used in application programs. Bug exist since OTP
	    20.0.</p>
          <p>
	    Own Id: OTP-16438</p>
        </item>
        <item>
          <p>
	    A process could get into an inconsistent state where it
	    was runnable, but never scheduled for execution. This
	    could occur when a mix of <c>normal</c> and <c>low</c>
	    priority processes where scheduled on the same type of
	    dirty scheduler simultaneously.</p>
          <p>
	    Own Id: OTP-16446 Aux Id: ERL-1157 </p>
        </item>
        <item>
          <p>
	    Fixed erroneous mapping of exit reason from <c>kill</c>
	    to <c>killed</c> on reception of some exit signals due to
	    a broken link. This bug has existed since ERTS version
	    5.5.2 (OTP R11).</p>
          <p>
	    This bug was also unknowingly fixed in ERTS version 10.0
	    (OTP 21.0) due to a new ERTS internal implementation of
	    signaling between processes.</p>
          <p>
	    Own Id: OTP-16465 Aux Id: ERL-1165, OTP-6160, OTP-14589 </p>
        </item>
        <item>
          <p>
	    Corrected the valid range of the <c>erl</c> command line
	    argument <seecom marker="erts:erl#+SDio"><c>+SDio
	    &lt;NumberOfDirtyIoSchedulers&gt;</c></seecom> from
	    <c>0..1024</c> to <c>1..1024</c>. <c>+SDio 0</c> was
	    erroneously allowed which just caused the VM to crash on
	    the first dirty I/O job scheduled.</p>
          <p>
	    Own Id: OTP-16481</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.3.3.14</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A process calling <seeerl
	    marker="erts:erlang#system_flag_multi_scheduling"><c>erlang:system_flag(multi_scheduling,
	    block)</c></seeerl> could end up blocked waiting for the
	    operation to complete indefinitely.</p>
          <p>
	    Own Id: OTP-16379</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.3.3.13</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A literal area could prematurely be released before all
	    uses of it had been removed. This occurred either when a
	    terminating process had a complex exit reason referring
	    to a literal that concurrently was removed, or when a
	    terminating process continued executing a dirty NIF
	    accessing a literal (via the heap) that concurrently was
	    removed.</p>
          <p>
	    Own Id: OTP-16193</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.3.3.12</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The runtime system disconnected a connection if it
	    received an <c>exit/2</c> signal where the recipient was
	    a process on an old incarnation of the current node. That
	    is, the receiving node had the same node name, but
	    another "creation" number. The signal will now just be
	    dropped since the receiving process no longer exists.</p>
          <p>
	    Own Id: OTP-15867 Aux Id: ERIERL-373 </p>
        </item>
        <item>
          <p>
	    Fix a bug in <c>binary_to_term</c> that would crash the
	    emulator if a term larger than 16GB was to be decoded.</p>
          <p>
	    Own Id: OTP-16058 Aux Id: PR-2382 </p>
        </item>
        <item>
          <p>
	    When communicating with a simultaneously exiting port via
	    the <c>erlang:port_*()</c> BIFs one could sometimes get
	    stray <c>{Ref, What}</c> messages. Where <c>Ref</c> was a
	    reference and <c>What</c> usually were the atom
	    <c>badarg</c>.</p>
          <p>
	    Own Id: OTP-16107 Aux Id: ERL-1049 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.3.3.11</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a buffer overflow when
	    <c>binary_to_existing_atom/2</c> and
	    <c>list_to_existing_atom/2</c> was used with the
	    <c>latin1</c> encoding.</p>
          <p>
	    Own Id: OTP-15819 Aux Id: ERL-944 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.3.3.10</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixes of install/release phase in build system.</p>
	    <list> <item>The source tree was modified when
	    installing/releasing and/or applying a patch.</item>
	    <item>Some files were installed with wrong access
	    rights.</item> <item>If applying a patch (using
	    <c>otp_patch_apply</c>) as another user (except root)
	    than the user that built the source, the documentation
	    was not properly updated.</item> </list>
          <p>
	    Own Id: OTP-15551</p>
        </item>
        <item>
          <p>
	    Minor fixes for <c>make clean</c>.</p>
          <p>
	    Own Id: OTP-15657</p>
        </item>
        <item>
          <p>
	    Fixed a bug in all <c>ets:select*</c> and
	    <c>ets:match*</c> functions that could in some rare cases
	    lead to very poor performance.</p>
          <p>
	    Own Id: OTP-15660 Aux Id: ERL-869 </p>
        </item>
        <item>
          <p>
	    Fix a possible deadlock when terminating the ERTS caused
	    by a dirty scheduler not releasing it's run-queue lock
	    when terminating.</p>
          <p>
	    Own Id: OTP-15690 Aux Id: PR-2172 </p>
        </item>
        <item>
	    <p>Add missing documentation of new external tags
	    <c>NEW_PID</c>, <c>NEW_PORT</c> and
	    <c>NEWER_REFERENCE</c> introduced in OTP 19.</p> <p>These
	    new tags are planned to be "activated" in OTP 23 when
	    distribution capability flag <c>DFLAG_BIG_CREATION</c>
	    becomes mandatory. Older nodes (>= 19) are able to decode
	    these new tags and send them back to the new node. Nodes
	    older than OTP 23 will however never encode their own
	    local pids, ports and references using the new tags.</p>
          <p>
	    Own Id: OTP-15766</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.3.3.9</title>

    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>Added an optional <c>./configure</c> flag to compile
	    the emulator with spectre mitigation:
	    <c>--with-spectre-mitigation</c></p>
	    <p>Note that this requires a recent version of GCC with
	    support for spectre mitigation and the
	    <c>--mindirect-branch=thunk</c> flag, such as
	    <c>8.1</c>.</p>
          <p>
	    Own Id: OTP-15430 Aux Id: ERIERL-237 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.3.3.8</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A bug that could cause dirty schedulers to become
	    unresponsive has been fixed.</p>
          <p>
	    Own Id: OTP-15509 Aux Id: PR-2027, PR-2093 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.3.3.7</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed bug in operator <c>band</c> of two negative
	    operands causing erroneous result if the absolute value
	    of one of the operands have the lowest <c>N*W</c> bits as
	    zero and the other absolute value is not larger than
	    <c>N*W</c> bits. <c>N</c> is an integer of 1 or larger
	    and <c>W</c> is 32 or 64 depending on word size.</p>
          <p>
	    Own Id: OTP-15487 Aux Id: ERL-804 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.3.3.6</title>

    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>List subtraction (The <c>--</c> operator) will now
	    yield properly on large inputs.</p>
          <p>
	    Own Id: OTP-15371</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.3.3.5</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    ERTS internal trees of monitor structures could get into
	    an inconsistent state. This could cause <c>'DOWN'</c>
	    messages not to be delivered when they should, as well as
	    delivery of <c>'DOWN'</c> messages that should not be
	    delivered.</p>
          <p>
	    This bug was introduced in ERTS version 9.0 (OTP 20.0)
	    and was fixed in ERTS version 10.0 (OTP 21.0) due to a
	    rewrite of the monitor code. That is, this bug only exist
	    in the OTP 20 release.</p>
          <p>
	    Own Id: OTP-15399 Aux Id: ERL-751, ERIERL-262, OTP-14205 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.3.3.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed bug in <c>ets:select_replace</c> when called with a
	    fully bound key could cause a following call to
	    <c>ets:next</c> or <c>ets:prev</c> to crash the emulator
	    or return invalid result.</p>
          <p>
	    Own Id: OTP-15346</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.3.3.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed a bug which caused an emulator crash when
	    <c>enif_send()</c> was called by a NIF that executed on a
	    dirty scheduler. The bug was either triggered when the
	    NIF called <c>enif_send()</c> without a message
	    environment, or when the process executing the NIF was
	    <c>send</c> traced.</p>
          <p>
	    Own Id: OTP-15223</p>
        </item>
        <item>
          <p>
	    Fixed a bug causing some Erlang references to be
	    inconsistently ordered. This could for example cause
	    failure to look up certain elements with references as
	    keys in search data structures. This bug was introduced
	    in R13B02.</p>
          <p>
	    Thanks to Simon Cornish for finding the bug and supplying
	    a fix.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-15225</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.3.3.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a race condition in the inet driver that could
	    cause receive to hang when the emulator was compiled with
	    gcc 8.</p>
          <p>
	    Own Id: OTP-15158 Aux Id: ERL-654 </p>
        </item>
        <item>
          <p>
	    Fix bug in generation of erl_crash.dump, which could
	    cause VM to crash.</p>
          <p>
	    Bug exist since erts-9.2 (OTP-20.2).</p>
          <p>
	    Own Id: OTP-15181</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.3.3.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a rare bug that could cause processes to be
	    scheduled after they had been freed.</p>
          <p>
	    Own Id: OTP-15067 Aux Id: ERL-573 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.3.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed bug in <c>ets</c> that could cause VM crash if
	    process A terminates after fixating a table and process B
	    deletes the table at "the same time". The table fixation
	    could be done with <c>ets:safe_fixtable</c> or if process
	    A terminates in the middle of a long running
	    <c>select</c> or <c>match</c> call.</p>
          <p>
	    Own Id: OTP-15109</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.3.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed bug in <c>enif_binary_to_term</c> which could cause
	    memory corruption for immediate terms (atoms, small
	    integers, pids, ports, empty lists).</p>
          <p>
	    Own Id: OTP-15080</p>
        </item>
        <item>
          <p>
	    Fixed bug in <c>erlang:system_profile/2</c> that could
	    cause superfluous <c>{profile,_,active,_,_}</c> messages
	    for terminating processes.</p>
          <p>
	    Own Id: OTP-15085</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.3.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a crash in <c>heart:get_cmd/0</c> when the
	    stored command was too long.</p>
          <p>
	    Own Id: OTP-15034</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed a <c>configure</c> test for <c>libz</c> internals
	    that unintentionally caused various native code in OTP to
	    link against <c>libz</c>. Under certain circumstances
	    this caused the build of OTP to fail.</p>
          <p>
	    Own Id: OTP-14840 Aux Id: ERL-529 </p>
        </item>
        <item>
          <p>
	    File names containing unicode codepoints larger than 255
	    were not correctly encoded in stack traces.</p>
          <p>
	    Own Id: OTP-14847 Aux Id: ERL-544 </p>
        </item>
        <item>
          <p>
	    Fix HiPE bug for binary constructs like
	    <c>&lt;&lt;X/utf8&gt;&gt;</c> which could in rare cases
	    cause faulty results or VM crash.</p>
          <p>
	    This fix affects both the <c>hipe</c> compiler and
	    <c>erts</c> runtime in an <em>incompatible</em> way. Old
	    hipe compiled files need to be recompiled to load and run
	    properly as native.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-14850 Aux Id: PR-1664 </p>
        </item>
        <item>
          <p>
	    Fix <c>term_to_binary/2</c> spec for
	    <c>minor_version</c>.</p>
          <p>
	    Own Id: OTP-14876 Aux Id: ERL-548 </p>
        </item>
        <item>
          <p>
	    Fix bug in erlang:binary_to_integer/2 where invalid
	    characters were not detected for bases larger then 10.
	    e.g. <c>binary_to_integer(&lt;&lt;":"&gt;&gt;, 16)</c>
	    would return 3 and not badarg as it should.</p>
          <p>
	    Own Id: OTP-14879</p>
        </item>
        <item>
	    <p>Fixed bug in <c>float_to_list/2</c> and
	    <c>float_to_binary/2</c> with option <c>decimals</c> that
	    caused a faulty rounding up of the last decimal digit for
	    about 6% of floats with a fraction part.</p>
	    <p>For example, <c>float_to_list(0.145,
	    [{decimals,1}])</c> returned <c>"0.2"</c> instead of
	    <c>"0.1"</c>.</p>
          <p>
	    Own Id: OTP-14890</p>
        </item>
        <item>
          <p>
	    Fix bug causing slow hipe execution in modules loaded
	    early during boot or loaded by <c>code:atomic_load</c> or
	    <c>code:finish_loading</c>.</p>
          <p>
	    Own Id: OTP-14891</p>
        </item>
        <item>
	    <p>Fixed a buffer overflow in an internal string
	    formatting function that could be hit if specifying a
	    long floating-point format specifier to
	    <c>erts_sprintf</c> or similar.</p>
          <p>
	    Own Id: OTP-14920</p>
        </item>
        <item>
	    <p><c>erlang:iolist_to_iovec/1</c> and
	    <c>enif_inspect_iovec</c> will no longer fail when
	    provided with binaries that have been matched-out on a
	    non-byte boundary.</p>
          <p>
	    Own Id: OTP-14921</p>
        </item>
        <item>
	    <p><c>iolist_to_binary/1</c> and
	    <c>erlang:iolist_to_iovec/1</c> will now badarg if
	    supplied with a bitstring (without a list).</p>
          <p>
	    Own Id: OTP-14926</p>
        </item>
        <item>
          <p>
	    Reject loading modules with names containing directory
	    separators ('/' or '\' on Windows).</p>
          <p>
	    Own Id: OTP-14933 Aux Id: ERL-564, PR-1716 </p>
        </item>
        <item>
          <p>
	    Fix potential dead-lock when the tracer process dies
	    while a the traced process is running on a dirty
	    scheduler.</p>
          <p>
	    Own Id: OTP-14938</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    More crash dump info such as: process binary virtual heap
	    stats, full info for process causing out-of-mem during
	    GC, more port related info, and dirty scheduler info.</p>
          <p>
	    Own Id: OTP-14820</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.2.1</title>

    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Improve search algorithm of abandoned memory carriers.
	    Instead of limited linear search, each allocator instance
	    maintain a balanced search tree of all its abandoned
	    carriers for faster and more exhaustive search.</p>
          <p>
	    Own Id: OTP-14915 Aux Id: ERIERL-88 </p>
        </item>
        <item>
          <p>
	    New erts_alloc command line options <c>+M_acnl</c> and
	    <c>+M_acfml</c> to limit carrier abandonment.</p>
          <p>
	    Own Id: OTP-14916 Aux Id: ERIERL-88 </p>
        </item>
        <item>
          <p>
	    New family of <c>erts_alloc</c> strategies: Age Order
	    First Fit. Similar to "address order", but instead the
	    oldest possible carrier is always chosen for allocation.</p>
          <p>
	    Own Id: OTP-14917 Aux Id: ERIERL-88 </p>
        </item>
        <item>
          <p>
	    Add possibility to change allocator options at runtime
	    with <c>system_info(erts_alloc, ...)</c>. Only option
	    <c>sbct</c> (single block carrier threshold) is currently
	    supported via this interface.</p>
          <p>
	    Own Id: OTP-14918 Aux Id: ERIERL-88 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.2.0.1</title>

  <section><title>Improvements and New Features</title>
  <list>
    <item>
      <p>
	Extra internal consistency checks wrt communication with
      erl_child_setup process.</p>
      <p>
      Own Id: OTP-15488 Aux Id: ERIERL-231 </p>
    </item>
  </list>
  </section>

</section>
  
<section><title>Erts 9.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix a bug in tracing where the {caller} match spec
	    function would be set to undefined incorrectly when used
	    in conjunction with return_to or return_trace on some
	    functions.</p>
          <p>
	    The functions effected are: erlang:put/2, erlang:erase/1,
	    erlang:process_info/1,2, erlang:nif_load/2,
	    erts_internal:garbage_collection/1 and
	    erts_internal:check_process_code/1.</p>
          <p>
	    Because of this bug, the analysis done by fprof could
	    become incorrect when the functions above are the
	    tail-call in a function.</p>
          <p>
	    Own Id: OTP-14677</p>
        </item>
        <item>
          <p>
	    Fix emulator deadlock that would happen if
	    <c>trap_exit</c> was set to true and a process sends an
	    exit signal to itself using <c>exit(self(), Reason)</c>
	    while receive tracing was enabled for that process.</p>
          <p>
	    Own Id: OTP-14678 Aux Id: ERL-495 </p>
        </item>
        <item>
	    <p>Writing of crash dumps is significantly faster.</p>
	    <p>Maps are now included in crash dumps.</p>
	    <p>Constants terms would only be shown in one process,
	    while other processes referencing the same constant term
	    would show a marker for incomplete heap. </p>
          <p>
	    Own Id: OTP-14685 Aux Id: OTP-14611, OTP-14603, OTP-14595 </p>
        </item>
        <item>
          <p>
	    The fallback home directory for windows has been changed
	    to be the PROFILE directory instead of the WINDOWS
	    directory. The fallback is used when the environment
	    variables HOMEDRIVE and HOMEPATH have not been set.</p>
          <p>
	    Own Id: OTP-14691</p>
        </item>
        <item>
          <p>
	    Fix bug for hipe compiled code using
	    <c>&lt;&lt;X/utf32&gt;&gt;</c> binary construction that
	    could cause faulty result or even VM crash.</p>
          <p>
	    On architectures other than x86_64, code need to be
	    recompiled to benefit from this fix.</p>
          <p>
	    Own Id: OTP-14740</p>
        </item>
        <item>
          <p>
	    Fixed bug in <c>erlang:garbage_collect/2</c> and
	    <c>erlang:check_process_code/3</c>, when called with
	    option <c>{async,ReqestId}</c>. Could cause VM crash or
	    heap corruption if <c>RequestId</c> was an immediate term
	    (like a pid, atom or small integer). Bug exists since
	    OTP-17.0.</p>
          <p>
	    Own Id: OTP-14752</p>
        </item>
        <item>
	    <p>ERL_NIF_MINOR_VERSION wasn't bumped with the addition
	    of <c>enif_ioq_*</c>.</p>
          <p>
	    Own Id: OTP-14779</p>
        </item>
        <item>
	    <p>Purging of loaded code that contained "fake literals"
	    (for example the magic reference obtained from
	    '<c>ets:new/2</c>') would crash the runtime system.
	    Corrected.</p>
          <p>
	    Own Id: OTP-14791</p>
        </item>
        <item>
	    <p>Setting the size of the atom table to a number near
	    2147483647 (using the '<c>+t</c>' option) would cause the
	    emulator to exit with a failure to allocate a huge amount
	    of memory. This has been corrected. Also the usage
	    message for the '<c>+t</c>' option has been corrected to
	    show the correct upper limit 2147483647 instead of 0.</p>
          <p>
	    Own Id: OTP-14796</p>
        </item>
        <item>
	    <p>Fixed a bug that prevented registered process names
	    from being resolved in lcnt results.</p>
          <p>
	    Own Id: OTP-14803</p>
        </item>
        <item>
	    <p>Formatting bugs were fixed in several HiPE debug
	    BIFs.</p>
          <p>
	    Own Id: OTP-14804</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>Binaries and some other data in crash dumps are now
	    encoded in base64 (instead of in hex), which will reduce
	    the size of crash dumps.</p>
	    <p>A few bugs in the handling of sub binaries in
	    <c>crashdump_viewer</c> have been fixed.</p>
          <p>
	    Own Id: OTP-14686</p>
        </item>
        <item>
          <p>
	    Micro optimization for send operations of messages to
	    other nodes. The local ack-message, which is otherwise
	    sent back from TPC/IP port driver to sending client
	    process, is now ignored earlier for distributed send
	    operations.</p>
          <p>
	    Own Id: OTP-14689</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.1.5</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a bug in file closure on Unix; close(2) was
	    retried on EINTR which could cause a different (recently
	    opened) file to be closed as well.</p>
          <p>
	    Own Id: OTP-14775</p>
        </item>
        <item>
          <p>
	    A race-condition when tearing down a connection with
	    active node monitors could cause the runtime system to
	    crash.</p>
          <p>
	    This bug was introduced in ERTS version 8.0 (OTP 19.0).</p>
          <p>
	    Own Id: OTP-14781 Aux Id: OTP-13047 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.1.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Microstate accounting sometimes produced incorrect
	    results for dirty schedulers.</p>
          <p>
	    Own Id: OTP-14707</p>
        </item>
        <item>
	    <p>Fixed a regression in <c>zlib:gunzip/1</c> that
	    prevented it from working when the decompressed size was
	    a perfect multiple of 16384. This regression was
	    introduced in 20.1.1</p>
          <p>
	    Own Id: OTP-14730 Aux Id: ERL-507 </p>
        </item>
        <item>
	    <p>Fixed a memory corruption bug in
	    <c>enif_inspect_iovec</c>; writable binaries stayed
	    writable after entering the iovec.</p>
          <p>
	    Own Id: OTP-14745</p>
        </item>
        <item>
	    <p>Fixed a crash in <c>enif_inspect_iovec</c> on
	    encountering empty binaries.</p>
          <p>
	    Own Id: OTP-14750</p>
        </item>
        <item>
	    <p><c>zlib:deflateParams/3</c> will no longer return
	    <c>buf_error</c> when called after <c>zlib:deflate/2</c>
	    with zlib <c>1.2.11</c>.</p>
          <p>
	    Own Id: OTP-14751</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.1.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Added zlib:set_controlling_process/2 to move a
	    zstream() between processes.</p>
          <p>
	    Own Id: OTP-14672 Aux Id: ERL-494 </p>
        </item>
        <item>
          <p>
	    Fix so that schedulers are bound correctly when the first
	    available cpu is not the first detected cpu. e.g. when
	    using "taskset -c X..Y" when X is not equal to 0.</p>
          <p>
	    Own Id: OTP-14694</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.1.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed bug that could cause a VM crash when a corrupt
	    message is received on distribution channel from other
	    node.</p>
          <p>
	    Own Id: OTP-14661 Aux Id: ERIERL-80 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.1.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>The new zlib module returned a data_error when
	    inflating concatenated streams, which was incompatible
	    with the old module's behavior of returning the
	    uncompressed data up to the end of the first stream.</p>
          <p>
	    Own Id: OTP-14648</p>
        </item>
        <item>
	    <p>zlib:gunzip/1 will no longer stop at the end of the
	    first stream when decompressing concatenated gzip
	    files.</p>
          <p>
	    Own Id: OTP-14649</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Changed <c>erlang:apply/2</c> to raise a <c>badarg</c>
	    exception if the second argument is not a proper list.
	    Previous behavior was a misleading <c>undef</c>
	    exception.</p>
          <p>
	    Own Id: OTP-14490 Aux Id: ERL-432 </p>
        </item>
        <item>
	    <p>On macOS, <c>crypto</c> would crash if <c>observer</c>
	    had been started before <c>crypto</c>. On the beta for
	    macOS 10.13 (High Sierra), <c>crypto</c> would crash.
	    Both of those bugs have been fixed.</p>
          <p>
	    Own Id: OTP-14499 Aux Id: ERL-251 ERL-439 </p>
        </item>
        <item>
          <p>
	    Fixed bug in enif_whereis_pid/port that could cause heap
	    corruption in rare cases.</p>
          <p>
	    Own Id: OTP-14523</p>
        </item>
        <item>
          <p>
	    Fix so that trace messages generated when in a dirty nif
	    are flushed correctly when the dirty nif is done
	    executing.</p>
          <p>
	    Own Id: OTP-14538</p>
        </item>
        <item>
          <p>
	    Fix escape code handling when using ANSI color codes in
	    the shell.</p>
          <p>
	    Own Id: OTP-14549 Aux Id: PR1536 </p>
        </item>
        <item>
          <p>
	    Upgraded the ERTS internal PCRE library from version 8.40
	    to version 8.41. See <url
	    href="http://pcre.org/original/changelog.txt">http://pcre.org/original/changelog.txt</url>
	    for information about changes made to PCRE. This library
	    implements major parts of the <seeerl
	    marker="stdlib:re"><c>re</c></seeerl> regular
	    expressions module.</p>
          <p>
	    Own Id: OTP-14574</p>
        </item>
        <item>
          <p>
	    Fixed a bug causing <c>statistics(runtime)</c> to produce
	    negative values and a bug in
	    <c>statistics(wall_clock)</c> causing it to produce
	    values one second too long.</p>
          <p>
	    <c>statistics(runtime)</c> now also use
	    <c>getrusage()</c> as source when available preventing
	    the returned value from wrapping as frequent as before.</p>
          <p>
	    Own Id: OTP-14597 Aux Id: ERL-465 </p>
        </item>
        <item>
          <p>
	    Fixed small memory leak that could occur when sending to
	    a terminating port.</p>
          <p>
	    Own Id: OTP-14609</p>
        </item>
        <item>
          <p>
	    Fix bug causing VM crash when a module with
	    <c>-on_load</c> directive is loaded while
	    <c>erlang:trace(on_load, ...)</c> is enabled.</p>
          <p>
	    Own Id: OTP-14612</p>
        </item>
        <item>
	    <p>A warning that the compiler may optimize away atoms
	    have been added to the documentation of
	    <c>list_to_existing_atom/1</c> and
	    <c>binary_to_existing_atom/2</c>.</p>
          <p>
	    Own Id: OTP-14614 Aux Id: ERL-453 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>Lock counting can now be fully toggled at runtime in
	    the lock counting emulator (<c>-emu_type lcnt</c>).
	    Everything is enabled by default to match the old
	    behavior, but specific categories can be toggled at will
	    with minimal runtime overhead when disabled. Refer to the
	    documentation on <c>lcnt:rt_mask/1</c> for details.</p>
          <p>
	    Own Id: OTP-13170</p>
        </item>
        <item>
	    <p>The <c>zlib</c> module has been refactored and all its
	    operations will now yield appropriately, allowing them to
	    be used freely in concurrent applications.</p> <p>The
	    following functions have been deprecated, but will not
	    produce compiler warnings until OTP 21:
	    <c>zlib:adler32</c>, <c>zlib:crc32</c>,
	    <c>zlib:inflateChunk</c>, <c>zlib:getBufSize</c>,
	    <c>zlib:setBufSize</c>.</p> <p>The behavior of throwing
	    an error when a dictionary is required for decompression
	    has also been deprecated. Refer to the documentation on
	    <c>inflateSetDictionary/2</c> for details.</p>
          <p>
	    Own Id: OTP-14185</p>
        </item>
        <item>
	    <p><c>lcnt:collect</c> and <c>lcnt:clear</c> will no
	    longer block all other threads in the runtime system.</p>
          <p>
	    Own Id: OTP-14412</p>
        </item>
        <item>
	    <p>Add <c>erlang:iolist_to_iovec/1</c>, which converts an
	    iolist() to an erlang:iovec(), which suitable for use
	    with <c>enif_inspect_iovec</c>.</p>
          <p>
	    Own Id: OTP-14520</p>
        </item>
        <item>
	    <p>When provided with bad arguments, the <c>zlib</c>
	    module will now raise named exceptions instead of just
	    <c>badarg</c>. For example, <c>not_initialized</c> when
	    using <c>zlib:inflate/2</c> with an uninitialized
	    stream.</p>
          <p>
	    Own Id: OTP-14527</p>
        </item>
        <item>
          <p>
	    <c>erlang:halt/2</c> allows any Unicode string as slogan
	    for the crash dump.</p>
          <p>
	    Own Id: OTP-14553</p>
        </item>
        <item>
	    <p>Add new nif API functions for managing an I/O Queue.
	    The added functions are:</p> <list type="bulleted">
	    <item><seecref marker="erl_nif#enif_ioq_create">
	    <c>enif_ioq_create()</c></seecref></item> <item><seecref
	    marker="erl_nif#enif_ioq_destroy">
	    <c>enif_ioq_destroy()</c></seecref></item> <item><seecref
	    marker="erl_nif#enif_ioq_enq_binary">
	    <c>enif_ioq_enq_binary()</c></seecref></item>
	    <item><seecref marker="erl_nif#enif_ioq_enqv">
	    <c>enif_ioq_enqv()</c></seecref></item> <item><seecref
	    marker="erl_nif#enif_ioq_deq">
	    <c>enif_ioq_deq()</c></seecref></item> <item><seecref
	    marker="erl_nif#enif_ioq_peek">
	    <c>enif_ioq_peek()</c></seecref></item> <item><seecref
	    marker="erl_nif#enif_inspect_iovec">
	    <c>enif_inspect_iovec()</c></seecref></item>
	    <item><seecref marker="erl_nif#enif_free_iovec">
	    <c>enif_free_iovec()</c></seecref></item> </list>
          <p>
	    Own Id: OTP-14598</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.0.5</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed bug in <c>binary_to_term</c> and
	    <c>binary_to_atom</c> that could cause VM crash.
	    Typically happens when the last character of an UTF8
	    string is in the range 128 to 255, but truncated to only
	    one byte. Bug exists in <c>binary_to_term</c> since ERTS
	    version 5.10.2 (OTP_R16B01) and <c>binary_to_atom</c>
	    since ERTS version 9.0 (OTP-20.0).</p>
          <p>
	    Own Id: OTP-14590 Aux Id: ERL-474 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.0.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A timer internal bit-field used for storing scheduler id
	    was too small. As a result, VM internal timer data
	    structures could become inconsistent when using 1024
	    schedulers on the system. Note that systems with less
	    than 1024 schedulers are not effected by this bug.</p>
          <p>
	    This bug was introduced in ERTS version 7.0 (OTP 18.0).</p>
          <p>
	    Own Id: OTP-14548 Aux Id: OTP-11997, ERL-468 </p>
        </item>
        <item>
          <p>
	    Automatic cleanup of a BIF timer, when the owner process
	    terminated, could race with the timeout of the timer.
	    This could cause the VM internal data structures to
	    become inconsistent which very likely caused a VM crash.</p>
          <p>
	    This bug was introduced in ERTS version 9.0 (OTP 20.0).</p>
          <p>
	    Own Id: OTP-14554 Aux Id: OTP-14356, ERL-468 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.0.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Binary append operations did not check for overflow,
	    resulting in nonsensical results when huge binaries were
	    appended.</p>
          <p>
	    Own Id: OTP-14524</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.0.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Added missing release notes for OTP-14491 ("performance
	    bug in pre-allocators") which was included in erts-9.0.1
	    (OTP-20.0.1).</p>
          <p>
	    Own Id: OTP-14494</p>
        </item>
        <item>
	    <p>Fixed a bug that prevented TCP sockets from being
	    closed properly on send timeouts.</p>
          <p>
	    Own Id: OTP-14509</p>
        </item>
        <item>
          <p>
	    Fixed bug in operator <c>bxor</c> causing erroneuos
	    result when one operand is a big <em>negative</em>
	    integer with the lowest <c>N*W</c> bits as zero and the
	    other operand not larger than <c>N*W</c> bits. <c>N</c>
	    is an integer of 1 or larger and <c>W</c> is 32 or 64
	    depending on word size.</p>
          <p>
	    Own Id: OTP-14514</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 9.0.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed a bug in gen_tcp:send where it never returned when
	    repeatedly called on a remotely closed TCP socket.</p>
          <p>
	    Own Id: OTP-13939 Aux Id: ERL-193 </p>
        </item>
        <item>
          <p>
	    Fixed segfault that could happen during cleanup of
	    aborted erlang:port_command/3 calls. A port_command is
	    aborted if the port is closed at the same time as the
	    port_command was issued. This bug was introduced in
	    erts-8.0.</p>
          <p>
	    Own Id: OTP-14481</p>
        </item>
        <item>
          <p>
	    Fixed implementation of <c>statistics(wall_clock)</c> and
	    <c>statistics(runtime)</c> so that values do not
	    unnecessarily wrap due to the emulator. Note that the
	    values returned by <c>statistics(runtime)</c> may still
	    wrap due to limitations in the underlying functionality
	    provided by the operating system.</p>
          <p>
	    Own Id: OTP-14484</p>
        </item>
        <item>
	  <p>
	    Fix performance bug in pre-allocators that could cause
	    them to permanently fall back on normal more expensive memory
	    allocation. Pre-allocators are used for quick allocation
	    of short lived meta data used by messages and other
	    scheduled tasks. Bug exists since OTP_R15B02.
	    [this release note was missing in erts-9.0.1]</p>
	  <p>
	    Own Id: OTP-14491</p>
	</item>
      </list>
    </section>

</section>

<section><title>Erts 9.0</title>
    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fix various bugs regarding loading, upgrade and purge
	    of HiPE compiled code:</p> <list> <item>The native code
	    memory for a purged module was never deallocated.</item>
	    <item>Wrong functions could in some cases be called after
	    a module upgrade.</item>
	    <item><c>erlang:check_process_code</c> did not check for
	    recursive calls made from native code.</item> </list>
          <p>
	    Own Id: OTP-13968</p>
        </item>
        <item>
          <p>
	    Hipe optional LLVM backend does require LLVM version 3.9
	    or later as older versions forced strong dependencies on
	    erts internals structures.</p>
          <p>
	    Own Id: OTP-14238</p>
        </item>
        <item>
	    <p>When an exception such as '<c>throw(HugeTerm)</c>' was
	    caught, <c>HugeTerm</c> term would be kept in the process
	    until the next exception occurred, potentially increasing
	    the heap size for the process. That has been
	    corrected.</p>
          <p>
	    Own Id: OTP-14255 Aux Id: OTP-14400, OTP-14401 </p>
        </item>
        <item>
          <p>
	    Slogans in crash dumps have been extended to print more
	    complex terms.</p>
          <p>
	    Own Id: OTP-14303</p>
        </item>
        <item>
          <p>
	    Fixed bug when using <c>enif_inspect_binary</c> in
	    combination with <c>enif_copy</c>. In some circumstances
	    the inspected binary could be reallocated by the
	    <c>enif_copy</c> call when it shouldn't have been.</p>
          <p>
	    Own Id: OTP-14304</p>
        </item>
        <item>
          <p>
	    The address family <c>local</c> (AF_UNIX / AF_LOCAL) now
	    does not ensure zero termination of Linux Abstract
	    Addresses so they can use all bytes.</p>
          <p>
	    Own Id: OTP-14305</p>
        </item>
        <item>
          <p>
	    Use <c>-fno-PIE</c> for Gentoo Hardened and others that
	    don't accept linker flag <c>-no-pie</c>.</p>
          <p>
	    Own Id: OTP-14307 Aux Id: PR-1379 </p>
        </item>
        <item>
          <p>
	    Disable hipe for <c>ppc64le</c> architecture (little
	    endian) as it is not, and has never been, supported. It
	    was earlier equated with <c>ppc64</c> (big endian) which
	    lead to broken build without <c>--disable-hipe</c>.</p>
          <p>
	    Own Id: OTP-14314 Aux Id: ERL-369, PR-1394 </p>
        </item>
        <item>
          <p>
	    Fix 'epmd -kill' to return a failure exit status code if
	    epmd was not killed because of some error.</p>
          <p>
	    Own Id: OTP-14324</p>
        </item>
        <item>
	    <p>Fixed the following dirty scheduler related bugs:</p>
	    <list> <item><p>the <c>+SDPcpu</c> command line argument
	    could cause the amount of dirty CPU schedulers to be set
	    to zero</p></item>
	    <item><p><c>erlang:system_flag(multi_scheduling, _)</c>
	    failed when only one normal scheduler was used together
	    with dirty scheduler support</p></item> </list>
          <p>
	    Own Id: OTP-14335</p>
        </item>
        <item>
          <p>
	    Fix erlexec to handle mismatch in sysconf and proc fs
	    when figuring out the cpu topology. This behaviour has
	    been seen when using docker together with
	    <c>--cpuset-cpus</c>.</p>
          <p>
	    Own Id: OTP-14352</p>
        </item>
        <item>
          <p>
	    Fixed memory segment cache used for multiblock carriers.
	    Huge (> 2GB) memory segments could cause a VM crash.
	    Creation of such huge memory segments used for multiblock
	    carriers is however very uncommon.</p>
          <p>
	    Own Id: OTP-14360 Aux Id: ERL-401, PR-1417 </p>
        </item>
        <item>
          <p>
	    Fix bug causing <c>code:is_module_native</c> to falsely
	    return true when <c>local</c> call trace is enabled for
	    the module.</p>
          <p>
	    Own Id: OTP-14390</p>
        </item>
        <item>
          <p>
	    Fix emulator crash when receive tracing on a
	    <c>trace_delivered</c> message.</p>
          <p>
	    Own Id: OTP-14411</p>
        </item>
        <item>
          <p>
	    Fix file:sendfile error handling on SunOS when a
	    connection is closed during transmission.</p>
          <p>
	    Own Id: OTP-14424</p>
        </item>
        <item>
          <p>
	    <c>escript</c> did not handle paths with spaces correct.</p>
          <p>
	    Own Id: OTP-14433</p>
        </item>
        <item>
          <p>
	    Fix erroneous lock check assertion when <c>wx</c> is run
	    on MacOS X.</p>
          <p>
	    Own Id: OTP-14437 Aux Id: ERL-360 </p>
        </item>
        <item>
	    <p>Active-mode TCP sockets are now cleaned up properly on
	    send/shutdown errors.</p>
          <p>
	    Own Id: OTP-14441 Aux Id: ERL-430 </p>
        </item>
        <item>
          <p>
	    Fix compilation of hipe_mkliterals when the LIBS
	    configure variable had to be set.</p>
          <p>
	    Own Id: OTP-14447</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Added <c>erlang:garbage_collect/2</c> that takes an
	    option list as the last argument that can be used to
	    control whether a minor or a major garbage collection is
	    to be done. Doing a minor collection only collects terms
	    that have recently died, but is cheaper than a major
	    collection.</p>
          <p>
	    Own Id: OTP-11695</p>
        </item>
        <item>
          <p>
	    Optimized test for tuples with an atom as first element.</p>
          <p>
	    Own Id: OTP-12148</p>
        </item>
        <item>
          <p>
	    Erlang literals are no longer copied during process to
	    process messaging.</p>
          <p>
	    Own Id: OTP-13529</p>
        </item>
        <item>
	    <p>Add support in the <c>erl_nif</c> API for asynchronous
	    message notifications when sockets or other file
	    descriptors are ready to accept read or write operations.
	    The following functions have been added:</p> <list>
	    <item><p>enif_select</p></item>
	    <item><p>enif_monitor_process</p></item>
	    <item><p>enif_demonitor_process</p></item>
	    <item><p>enif_compare_monitors</p></item>
	    <item><p>enif_open_resource_type_x</p></item> </list>
          <p>
	    Own Id: OTP-13684</p>
        </item>
        <item>
	    <p>There are two new guard BIFs '<c>floor/1</c>' and
	    '<c>ceil/1</c>'. They both return integers. In the
	    '<c>math</c>' module, there are two new BIFs with the
	    same names that return floating point values.</p>
          <p>
	    Own Id: OTP-13692</p>
        </item>
        <item>
          <p>
	    Remove deprecated <c>erlang:hash/2</c>.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-13827</p>
        </item>
        <item>
	    <p>Replaced usage of deprecated symbolic <seetype
	    marker="erts:erlang#time_unit"><c>time
	    unit</c></seetype> representations.</p>
          <p>
	    Own Id: OTP-13831 Aux Id: OTP-13735 </p>
        </item>
        <item>
          <p>
	    Added support in zlib for extraction of the inflation
	    dictionary.</p>
          <p>
	    Own Id: OTP-13842</p>
        </item>
        <item>
          <p>
	    The previously used purge strategy has been removed. The
	    optional purge strategy introduced in ERTS version 8.1 is
	    now the only strategy available.</p>
          <p>
	    The new purge strategy is slightly incompatible with the
	    old strategy. Previously processes holding <c>fun</c>s
	    that referred to the module being purged either failed a
	    soft purge, or was killed during a hard purge. The new
	    strategy completely ignores <c>fun</c>s. If <c>fun</c>s
	    referring to the code being purged exist, and are used
	    after a purge, an exception will be raised upon usage.
	    That is, the behavior will be exactly the same as the
	    case when a <c>fun</c> is received by a process after the
	    purge.</p>
          <p>
	    For more information see the documentation of <seemfa
	    marker="erts:erlang#check_process_code/3"><c>erlang:check_process_code/3</c></seemfa>.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-13844 Aux Id: OTP-13833 </p>
        </item>
        <item>
          <p>
	    Dirty schedulers are now enabled by default when the
	    runtime system is built with SMP support.</p>
          <p>
	    Own Id: OTP-13860</p>
        </item>
        <item>
          <p>
	    Improved ETS lookup/insert/delete speed for large
	    <c>set</c>, <c>bag</c> and <c>duplicate_bag</c> by a
	    significant reduction of the hash load factor. This speed
	    improvement comes at the expense of less than one word
	    per table entry. Tables with less than 256 entries are
	    not affected at all.</p>
          <p>
	    Own Id: OTP-13903</p>
        </item>
        <item>
          <p>
	    The NIF library <c>reload</c> feature is not supported
	    anymore. It has been marked as deprecated since OTP R15B.
	    This means that you are only allowed to do one successful
	    call to <c>erlang:load_nif/2</c> for each module
	    instance. A second call to <c>erlang:load_nif/2</c> will
	    return <c>{error, {reload, _}}</c> even if the NIF
	    library implements the <c>reload</c> callback.</p>
          <p>
	    Runtime upgrade of a NIF library is still supported by
	    using the Erlang module upgrade mechanics with a current
	    and an old module instance existing at the same time with
	    their corresponding NIF libraries.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-13908</p>
        </item>
        <item>
          <p>
	    Add <c>erlang:system_info(atom_count)</c> and
	    <c>erlang:system_info(atom_limit)</c> to provide a way to
	    retrieve the current and maximum number of atoms.</p>
          <p>
	    Own Id: OTP-13976</p>
        </item>
        <item>
	    <p>The function <c>fmod/2</c> has been added to the
	    <c>math</c> module.</p>
          <p>
	    Own Id: OTP-14000</p>
        </item>
        <item>
          <p>
	    <c>erlang:load_nif/2</c> returns new error type
	    <c>notsup</c> when called for a HiPE compiled module,
	    which is not supported.</p>
          <p>
	    Own Id: OTP-14002</p>
        </item>
        <item>
          <p>
	    Add driver and nif lock instrumentation to lcnt</p>
          <p>
	    Own Id: OTP-14069</p>
        </item>
        <item>
          <p>
	    Reduce memory pressure by converting sub-binaries to
	    heap-binaries when possible. This is done during garbage
	    collection.</p>
          <p>
	    Own Id: OTP-14149</p>
        </item>
        <item>
          <p>
	    Dirty schedulers are now enabled and supported on Erlang
	    runtime systems with SMP support.</p>
          <p>
	    Besides support for dirty NIFs also support for dirty
	    BIFs and dirty garbage collection have been introduced.
	    All garbage collections that potentially will take a long
	    time to complete are now performed on dirty schedulers if
	    enabled.</p>
          <p>
	    <seemfa
	    marker="erts:erlang#statistics/1"><c>erlang:statistics/1</c></seemfa>
	    with arguments inspecting scheduler and run queue states
	    have been changed due to the dirty scheduler support.
	    Code using this functionality may have to be rewritten
	    taking these incompatibilities into consideration.
	    Examples of such uses are calls to <seeerl
	    marker="erts:erlang#statistics_scheduler_wall_time"><c>erlang:statistics(scheduler_wall_time)</c></seeerl>,
	    <seeerl
	    marker="erts:erlang#statistics_total_run_queue_lengths"><c>statistics(total_run_queue_lengths)</c></seeerl>,
	    <seeerl
	    marker="erts:erlang#statistics_total_active_tasks"><c>statistics(total_active_tasks)</c></seeerl>,
	    etc.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-14152</p>
        </item>
        <item>
	    <p>Atoms may now contain arbitrary Unicode
	    characters.</p>
          <p>
	    Own Id: OTP-14178</p>
        </item>
        <item>
          <p>
	    Introduce an event manager in Erlang to handle OS
	    signals. A subset of OS signals may be subscribed to and
	    those are described in the Kernel application.</p>
          <p>
	    Own Id: OTP-14186</p>
        </item>
        <item>
          <p>
	    The <c>escript</c> program now handles symbolic links to
	    escripts.</p>
          <p>
	    This is useful for standalone systems with
	    <c>escript</c>s residing on a bin directory not included
	    in the execution path (as it may cause their <c>erl</c>
	    program(s) to override the desired one). Instead the
	    <c>escript</c>s can be referred to via symbolic links
	    from a bin directory in the path.</p>
          <p>
	    Own Id: OTP-14201 Aux Id: PR-1293 </p>
        </item>
        <item>
          <p>
	    All uses of the magic binary kludge has been replaced by
	    uses of erlang references.</p>
          <p>
	    A magic binary was presented as an empty binary, but
	    actually referred other data internally in the Erlang VM.
	    Since they were presented as empty binaries, different
	    magic binaries compared as equal, and also lost their
	    internal data when passed out of an erlang node.</p>
          <p>
	    The new usage of references has not got any of these
	    strange semantic issues, and the usage of these
	    references has been optimized to give the same
	    performance benefits as well as memory usage benefits as
	    magic binaries had.</p>
          <p>
	    A couple of examples of previous uses of magic binaries
	    are match specifications and NIF resources.</p>
          <p>
	    Own Id: OTP-14205</p>
        </item>
        <item>
          <p>
	    The non-smp emulators have been deprecated and are
	    scheduled for removal in OTP-21.</p>
          <p>
	    In preparation for this, the threaded non-smp emulator is
	    no longer built by default and has to be enabled using
	    the --enable-plain-emulator to configure.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-14272</p>
        </item>
        <item>
          <p>
	    Allow HiPE to run on VM built with
	    <c>--enable-m32-build</c>.</p>
          <p>
	    Own Id: OTP-14330 Aux Id: PR-1397 </p>
        </item>
        <item>
          <p>
	    Upgraded the OTP internal PCRE library from version 8.33
	    to version 8.40. This library is used for implementation
	    of the <seeerl marker="stdlib:re"><c>re</c></seeerl>
	    regular expressions module.</p>
          <p>
	    Besides various bug fixes, the new version allows for
	    better stack protection. In order to utilize this
	    feature, the stack size of normal scheduler threads is
	    now by default set to 128 kilo words on all platforms.
	    The stack size of normal scheduler threads can be set
	    upon system start by passing the <seecom
	    marker="erts:erl#sched_thread_stack_size"><c>+sss</c></seecom>
	    command line argument to the <seecom
	    marker="erts:erl"><c>erl</c></seecom> command.</p>
          <p>
	    See <url
	    href="http://pcre.org/original/changelog.txt">http://pcre.org/original/changelog.txt</url>
	    for information about changes made to PCRE between the
	    versions 8.33 and 8.40.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-14331 Aux Id: ERL-208 </p>
        </item>
        <item>
          <p>
	    Remove generation of atoms in old latin1 external format
	    in the distribution between erlang nodes,
	    <c>erl_interface</c>, and <c>jinterface</c>. The new utf8
	    format for atoms was introduced in OTP R16. An OTP 20
	    node can therefore not connect to nodes older than R16.</p>
          <p>
	    Atoms that can be encoded using latin1 are still encoded
	    by <c>term_to_binary()</c> using latin1 encoding. Note
	    that all atoms will by default be encoded using utf8 in a
	    future Erlang/OTP release. For more information see the
	    documentation of <seemfa
	    marker="erts:erlang#term_to_binary/2"><c>erlang:term_to_binary/2</c></seemfa>.</p>
          <p>
	    Own Id: OTP-14337</p>
        </item>
        <item>
          <p>
	    Added function <c>re:version/0</c> which returns
	    information about the OTP internal PCRE version used for
	    implementation of the <c>re</c> module.</p>
          <p>
	    Own Id: OTP-14347 Aux Id: PR-1412 </p>
        </item>
        <item>
          <p>
	    Added new debug bif <c>erlang:list_to_port/1</c>.</p>
          <p>
	    Own Id: OTP-14348</p>
        </item>
        <item>
          <p>
	    Various improvements of timer management internally in
	    the VM. These improvements both reduced memory
	    consumption of timer wheels as well as reduce the amount
	    of work that has to be performed in order to handle
	    timers.</p>
          <p>
	    Own Id: OTP-14356</p>
        </item>
        <item>
	    <p> Sockets can now be bound to device (SO_BINDTODEVICE)
	    on platforms where it is supported. </p> <p> This has
	    been implemented e.g to support VRF-Lite under Linux; see
	    <url
	    href="https://www.kernel.org/doc/Documentation/networking/vrf.txt">
	    VRF </url>, and GitHub pull request <url
	    href="https://github.com/erlang/otp/pull/1326">#1326</url>.
	    </p>
          <p>
	    Own Id: OTP-14357 Aux Id: PR-1326 </p>
        </item>
        <item>
	    <p>Added the following <seecom
	    marker="erl"><c>erl</c></seecom> command line arguments
	    with which you can set suggested stack for dirty
	    schedulers:</p> <taglist> <tag><seecom
	    marker="erl#dcpu_sched_thread_stack_size"><c>+sssdcpu</c></seecom></tag>
	    <item><p>for dirty CPU schedulers</p></item>
	    <tag><seecom
	    marker="erl#dio_sched_thread_stack_size"><c>+sssdio</c></seecom></tag>
	    <item><p>for dirty IO schedulers</p></item> </taglist>
	    <p>The default suggested stack size for dirty schedulers
	    is 40 kilo words.</p>
          <p>
	    Own Id: OTP-14380</p>
        </item>
        <item>
          <p>
	    Changed erts startup program name, argv 0, to use the
	    environment variable <c>ESCRIPT_NAME</c> so that
	    <c>erlc</c>, <c>dialyzer</c>, <c>typer</c>,
	    <c>ct_run</c>, or the escript name can be seen with
	    external programs, such as ps and htop (depending on
	    options), on unix.</p>
          <p>
	    Own Id: OTP-14381</p>
        </item>
        <item>
          <p>
	    Improvements of <c>escript</c> documentation.</p>
          <p>
	    Own Id: OTP-14384 Aux Id: OTP-14201 </p>
        </item>
        <item>
          <p>
	    Add function <c>enif_hash</c> for NIFs to calculate hash
	    values of arbitrary terms.</p>
          <p>
	    Own Id: OTP-14385 Aux Id: PR-1413 </p>
        </item>
        <item>
	    <p>'<c>./configure --enable-lock-counter</c>' will
	    enabling building of an additional emulator that has
	    support for lock counting. (The option previously
	    existed, but would turn on lock counting in the default
	    emulator being built.) To start the lock-counting
	    emulator, use '<c>erl -emu_type lcnt</c>'.</p>
	    <p>On Windows, <c>erl</c> recognized the undocumented
	    option <c>-debug</c> for starting a debug-compiled
	    emulator. That option has been removed. Use '<c>erl
	    -emu_type debug</c>' instead.</p>
          <p>
	    Own Id: OTP-14407</p>
        </item>
        <item>
          <p>
	    Warnings have been added to the relevant documentation
	    about not using un-secure distributed nodes in exposed
	    environments.</p>
          <p>
	    Own Id: OTP-14425</p>
        </item>
        <item>
          <p>
	    Improvement of the documentation of the environment
	    variable <c>ERL_CRASH_DUMP_SECONDS</c> as well as the
	    default behavior when it is not set.</p>
          <p>
	    Own Id: OTP-14434</p>
        </item>
        <item>
          <p>
	    Enabled off-heap message queue for some system processes
	    that might receive large amounts of messages.</p>
          <p>
	    Own Id: OTP-14438</p>
        </item>
        <item>
	    <p>ETS lock indexes have been replaced with the table
	    name in LCNT results.</p>
          <p>
	    Own Id: OTP-14442 Aux Id: ERIERL-22 </p>
        </item>
        <item>
          <p>
	    Introduced the new functions <seecref
	    marker="erl_nif#enif_whereis_pid"><c>enif_whereis_pid()</c></seecref>
	    and <seecref
	    marker="erl_nif#enif_whereis_port"><c>enif_whereis_port()</c></seecref>.</p>
          <p>
	    Own Id: OTP-14453 Aux Id: PR-1400 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 8.3.5.7</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed bug in operator <c>band</c> of two negative
	    operands causing erroneous result if the absolute value
	    of one of the operands have the lowest <c>N*W</c> bits as
	    zero and the other absolute value is not larger than
	    <c>N*W</c> bits. <c>N</c> is an integer of 1 or larger
	    and <c>W</c> is 32 or 64 depending on word size.</p>
          <p>
	    Own Id: OTP-15487 Aux Id: ERL-804 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>Added an optional <c>./configure</c> flag to compile
	    the emulator with spectre mitigation:
	    <c>--with-spectre-mitigation</c></p>
	    <p>Note that this requires a recent version of GCC with
	    support for spectre mitigation and the
	    <c>--mindirect-branch=thunk</c> flag, such as
	    <c>8.1</c>.</p>
          <p>
	    Own Id: OTP-15430 Aux Id: ERIERL-237 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 8.3.5.6</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed small memory leak that could occur when sending to
	    a terminating port.</p>
          <p>
	    Own Id: OTP-14609 Aux Id: ERIERL-238 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 8.3.5.5</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a race condition in the inet driver that could
	    cause receive to hang when the emulator was compiled with
	    gcc 8.</p>
          <p>
	    Own Id: OTP-15158 Aux Id: ERL-654 </p>
        </item>
        <item>
          <p>
	    Fixed a bug causing some Erlang references to be
	    inconsistently ordered. This could for example cause
	    failure to look up certain elements with references as
	    keys in search data structures. This bug was introduced
	    in R13B02.</p>
          <p>
	    Thanks to Simon Cornish for finding the bug and supplying
	    a fix.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-15225</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 8.3.5.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a bug in file closure on Unix; close(2) was
	    retried on EINTR which could cause a different (recently
	    opened) file to be closed as well.</p>
          <p>
	    Own Id: OTP-14775</p>
        </item>
        <item>
          <p>
	    A race-condition when tearing down a connection with
	    active node monitors could cause the runtime system to
	    crash.</p>
          <p>
	    This bug was introduced in ERTS version 8.0 (OTP 19.0).</p>
          <p>
	    Own Id: OTP-14781 Aux Id: OTP-13047 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 8.3.5.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A timer internal bit-field used for storing scheduler id
	    was too small. As a result, VM internal timer data
	    structures could become inconsistent when using 1024
	    schedulers on the system. Note that systems with less
	    than 1024 schedulers are not effected by this bug.</p>
          <p>
	    This bug was introduced in ERTS version 7.0 (OTP 18.0).</p>
          <p>
	    Own Id: OTP-14548 Aux Id: OTP-11997, ERL-468 </p>
        </item>
        <item>
          <p>
	    Fixed bug in <c>binary_to_term</c> and
	    <c>binary_to_atom</c> that could cause VM crash.
	    Typically happens when the last character of an UTF8
	    string is in the range 128 to 255, but truncated to only
	    one byte. Bug exists in <c>binary_to_term</c> since ERTS
	    version 5.10.2 (OTP_R16B01) and <c>binary_to_atom</c>
	    since ERTS version 9.0 (OTP-20.0).</p>
          <p>
	    Own Id: OTP-14590 Aux Id: ERL-474 </p>
        </item>
        <item>
          <p>
	    Fix bug causing VM crash when a module with
	    <c>-on_load</c> directive is loaded while
	    <c>erlang:trace(on_load, ...)</c> is enabled.</p>
          <p>
	    Own Id: OTP-14612</p>
        </item>
        <item>
          <p>
	    Fixed bug that could cause a VM crash when a corrupt
	    message is received on distribution channel from other
	    node.</p>
          <p>
	    Own Id: OTP-14661 Aux Id: ERIERL-80 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 8.3.5.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix performance bug in pre-allocators that could cause
	    them to permanently fall back on normal more expensive
	    memory allocation. Pre-allocators are used for quick
	    allocation of short lived meta data used by messages and
	    other scheduled tasks. Bug exists since OTP_R15B02.</p>
          <p>
	    Own Id: OTP-14491</p>
        </item>
        <item>
	    <p>Fixed a bug that prevented TCP sockets from being
	    closed properly on send timeouts.</p>
          <p>
	    Own Id: OTP-14509</p>
        </item>
        <item>
          <p>
	    Fixed bug in operator <c>bxor</c> causing erroneuos
	    result when one operand is a big <em>negative</em>
	    integer with the lowest <c>N*W</c> bits as zero and the
	    other operand not larger than <c>N*W</c> bits. <c>N</c>
	    is an integer of 1 or larger and <c>W</c> is 32 or 64
	    depending on word size.</p>
          <p>
	    Own Id: OTP-14514</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 8.3.5.1</title>
    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed a bug in gen_tcp:send where it never returned when
	    repeatedly called on a remotely closed TCP socket.</p>
          <p>
	    Own Id: OTP-13939 Aux Id: ERL-193 </p>
        </item>
        <item>
          <p>
	    Fixed segfault that could happen during cleanup of
	    aborted erlang:port_command/3 calls. A port_command is
	    aborted if the port is closed at the same time as the
	    port_command was issued. This bug was introduced in
	    erts-8.0.</p>
          <p>
	    Own Id: OTP-14481</p>
        </item>
        <item>
          <p>
	    Fixed implementation of <c>statistics(wall_clock)</c> and
	    <c>statistics(runtime)</c> so that values do not
	    unnecessarily wrap due to the emulator. Note that the
	    values returned by <c>statistics(runtime)</c> may still
	    wrap due to limitations in the underlying functionality
	    provided by the operating system.</p>
          <p>
	    Own Id: OTP-14484</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 8.3.5</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Active-mode TCP sockets are now cleaned up properly on
	    send/shutdown errors.</p>
          <p>
	    Own Id: OTP-14441 Aux Id: ERL-430 </p>
        </item>
        <item>
          <p>
	    A code purge operation could under certain circumstances
	    expand the size of hibernated processes.</p>
          <p>
	    Own Id: OTP-14444 Aux Id: ERIERL-24 </p>
        </item>
        <item>
          <p>
	    Fix so that the ERL_ZZ_SIGTERM_KILL introduced in
	    erts-8.3.4 works.</p>
          <p>
	    Own Id: OTP-14451</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 8.3.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Add option to make SIGTERM trigger the OS default
	    behaviour instead of doing a graceful shutdown. To
	    activate this bahviour the environment variable
	    ERL_ZZ_SIGTERM_KILL should be set to "true". This option
	    only works in OTP 19 as OTP 20 will have a different way
	    to deal with SIGTERM.</p>
          <p>
	    Own Id: OTP-14418 Aux Id: ERIERL-15 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 8.3.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed memory segment cache used for multiblock carriers.
	    Huge (> 2GB) memory segments could cause a VM crash.
	    Creation of such huge memory segments used for multiblock
	    carriers is however very uncommon.</p>
          <p>
	    Own Id: OTP-14360 Aux Id: ERL-401, PR-1417 </p>
        </item>
        <item>
          <p>
	    Fix release note for OTP-14290 in ERTS version 8.3.1. It
	    was erroneously placed under "Known Bugs and Problems".</p>
          <p>
	    Own Id: OTP-14363 Aux Id: OTP-14290 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 8.3.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The <c>+Bi</c> command line argument of <c>erl</c>
	    erroneously caused <c>SIGTERM</c> to be ignored by the VM
	    as well as of all its child processes. This bug was
	    introduced in erts version 8.3.</p>
          <p>
	    Own Id: OTP-14358 Aux Id: OTP-14085 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 8.3.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Invoking <c>init:stop/0</c> via the SIGTERM signal, in a
	    non-SMP BEAM, could cause BEAM to terminate with fatal
	    error. This has now been fixed and the BEAM will
	    terminate normally when SIGTERM is received.</p>
          <p>
	    Own Id: OTP-14290</p>
        </item>
        <item>
          <p>
	    Trying to open a directory with file:read_file/1 on Unix
	    leaked a file descriptor. This bug has now been fixed.</p>
          <p>
	    Own Id: OTP-14308 Aux Id: ERL-383 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 8.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fixed a number of bugs that caused faulty stack-traces
	    to be generated. The faulty stack traces were generated
	    either when applying the following functions or tracing
	    the following functions:</p> <list>
	    <item><c>erlang:error/1</c></item>
	    <item><c>erlang:error/2</c></item>
	    <item><c>erlang:exit/1</c></item>
	    <item><c>erlang:throw/1</c></item> </list>
          <p>
	    Own Id: OTP-14055</p>
        </item>
        <item>
          <p>
	    Corrected documentation about memory footprint for maps.</p>
          <p>
	    Own Id: OTP-14118</p>
        </item>
        <item>
          <p>
	    Fix <c>process_info(Pid, current_stacktrace)</c> to use
	    stack depth limit set by
	    <c>system_flag(backtrace_depth)</c>. The old behavior was
	    a hard coded depth limit of 8.</p>
          <p>
	    Own Id: OTP-14119 Aux Id: PR-1263 </p>
        </item>
        <item>
          <p>
	    A process calling <seeerl
	    marker="erlang#system_flag_multi_scheduling"><c>erlang:system_flag(multi_scheduling,
	    block)</c></seeerl> could end up hanging forever in the
	    call.</p>
          <p>
	    Own Id: OTP-14121</p>
        </item>
        <item>
	    <p>Dirty scheduler bug fixes:</p> <list> <item><p>Fixed
	    call time tracing of process being scheduled on dirty
	    scheduler.</p></item> <item><p>GC info from dirty
	    schedulers.</p></item> <item><p>Multi scheduling block
	    with dirty schedulers could crash the runtime
	    system.</p></item> <item><p>Process structures could be
	    removed prematurely.</p></item> <item><p>GC on dirty
	    scheduler could crash the runtime system.</p></item>
	    <item><p>Termination of a process executing on a dirty
	    scheduler could cause a runtime system crash.</p></item>
	    </list>
          <p>
	    Own Id: OTP-14122</p>
        </item>
        <item>
          <p>
	    Fixed crash that occurred when writing timer data to a
	    crash dump.</p>
          <p>
	    Own Id: OTP-14133</p>
        </item>
        <item>
          <p>
	    A literal area could be removed while still referred from
	    processes.</p>
          <p>
	    Own Id: OTP-14134</p>
        </item>
        <item>
          <p>
	    Fixed a bug in the garbage collector that could crash the
	    runtime system.</p>
          <p>
	    Own Id: OTP-14135</p>
        </item>
        <item>
          <p>
	    Fixed a bug in call-time trace for NIFs which caused
	    tracing to erroneously be started multiple times for one
	    call.</p>
          <p>
	    Own Id: OTP-14136</p>
        </item>
        <item>
          <p>
	    Remove a debug printout and an unnecessary garbage
	    collection when handling exceptions in hipe compiled
	    code.</p>
          <p>
	    Own Id: OTP-14153</p>
        </item>
        <item>
          <p>
	    Fix bug in tracing of garbage collection that could cause
	    VM crash. Bug exists since OTP 19.0.</p>
          <p>
	    Own Id: OTP-14154</p>
        </item>
        <item>
          <p>
	    Fix bug in <c>binary_to_term</c> for binaries created by
	    <c>term_to_binary </c> with option <c>compressed</c>. The
	    bug can cause <c>badarg</c> exception for a valid binary
	    when Erlang VM is linked against a <c>zlib</c> library of
	    version 1.2.9 or newer. Bug exists since OTP 17.0.</p>
          <p>
	    Own Id: OTP-14159 Aux Id: ERL-340 </p>
        </item>
        <item>
          <p>
	    Fix suspension of schedulers when generating a crashdump.</p>
          <p>
	    Own Id: OTP-14164</p>
        </item>
        <item>
	    <p>NIF resources was not handled in a thread-safe manner
	    in the runtime system without SMP support.</p>
	    <p>As a consequence of this fix, the following driver
	    functions are now thread-safe also in the runtime system
	    without SMP support:</p> <list>
	    <item><p><c>driver_free_binary()</c></p></item>
	    <item><p><c>driver_realloc_binary()</c></p></item>
	    <item><p><c>driver_binary_get_refc()</c></p></item>
	    <item><p><c>driver_binary_inc_refc()</c></p></item>
	    <item><p><c>driver_binary_dec_refc()</c></p></item>
	    </list>
          <p>
	    Own Id: OTP-14202</p>
        </item>
        <item>
          <p>
	    Fix <c>erlang:round/1</c> for large floating point
	    numbers with an odd absolute value between <c>(1 bsl
	    52)</c> and <c>(1 bsl 53)</c>. The result was falsely
	    calculated as the next higher even number even though all
	    integer values up to <c>(1 bsl 53)</c> can be represented
	    as floats with full precision.</p>
          <p>
	    Own Id: OTP-14227</p>
        </item>
        <item>
          <p>
	    Add size of literals to module code size in crash dump
	    and <c>(l)oaded</c> command in break menu like it used to
	    be before OTP-19.0.</p>
          <p>
	    Own Id: OTP-14228</p>
        </item>
        <item>
          <p>
	    Fix potential bug in <c>enif_send</c> when called without
	    a process context and with argument <c>msg_env</c> as
	    <c>NULL</c>.</p>
          <p>
	    Own Id: OTP-14229</p>
        </item>
        <item>
          <p>
	    Fix bug where passing an appendable binary to
	    <c>erlang:port_control()</c> could crash the emulator.</p>
          <p>
	    Own Id: OTP-14231</p>
        </item>
        <item>
          <p>
	    Receive expressions with timeout in the Erlang shell
	    could cause a VM crash.</p>
          <p>
	    Own Id: OTP-14241 Aux Id: ERL-365 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    A received SIGTERM signal to beam will generate a
	    <c>'stop'</c> message to the <c>init</c> process and
	    terminate the Erlang VM nicely. This is equivalent to
	    calling <c>init:stop/0</c>.</p>
          <p>
	    Own Id: OTP-14085</p>
        </item>
        <item>
          <p>
	    Workaround for buggy Android implementation of
	    <c>PTHREAD_STACK_MIN</c> causing build of runtime system
	    to crash on undeclared <c>PAGE_SIZE</c>.</p>
          <p>
	    Own Id: OTP-14165 Aux Id: ERL-319 </p>
        </item>
        <item>
          <p>
	    Add configure option --without-thread-names that removes
	    the naming of individual emulator threads.</p>
          <p>
	    Own Id: OTP-14234</p>
        </item>
        <item>
          <p>
	    Add warning in documentation of <c>zlib:deflateInit/6</c>
	    about option <c>WindowsBits</c> values 8 and -8.</p>
          <p>
	    Own Id: OTP-14254 Aux Id: ERL-362 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 8.2.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix bug in <c>binary_to_term</c> for binaries created by
	    <c>term_to_binary </c> with option <c>compressed</c>. The
	    bug can cause <c>badarg</c> exception for a valid binary
	    when Erlang VM is linked against a <c>zlib</c> library of
	    version 1.2.9 or newer. Bug exists since OTP 17.0.</p>
          <p>
	    Own Id: OTP-14159 Aux Id: ERL-340 </p>
        </item>
        <item>
          <p>
	    The driver efile_drv when opening a file now use fstat()
	    on the open file instead of stat() before opening, if
	    fstat() exists. This avoids a race when the file happens
	    to change between stat() and open().</p>
          <p>
	    Own Id: OTP-14184 Aux Id: seq-13266 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 8.2.1</title>
    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix a quite rare bug causing VM crash during code loading
	    and the use of export funs (fun M:F/A) of not yet loaded
	    modules. Requires a very specific timing of concurrent
	    scheduler threads. Has been seen on ARM but can probably
	    also occurred on other architectures. Bug has existed since
	    OTP R16.</p>
          <p>
	    Own Id: OTP-14144 Aux Id: seq13242 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 8.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed <c>configure</c> failures on MacOSX. Most important
	    <c>clock_gettime()</c> was detected when building for
	    MacOSX - El Capitan using XCode 8 despite it is not
	    available until MacOSX - Sierra.</p>
          <p>
	    Own Id: OTP-13904 Aux Id: ERL-256 </p>
        </item>
        <item>
          <p>
	    <c>code:add_pathsa/1</c> and command line option
	    <c>-pa</c> both revert the given list of directories when
	    adding it at the beginning of the code path. This is now
	    documented.</p>
          <p>
	    Own Id: OTP-13920 Aux Id: ERL-267 </p>
        </item>
        <item>
          <p>
	    Fix a compilation error of erts in OpenBSD related to the
	    usage of the __errno variable.</p>
          <p>
	    Own Id: OTP-13927</p>
        </item>
        <item>
          <p>
	    Fixed so that when enabling tracing on a process that had
	    an invalid tracer associated with it, the new tracer
	    overwrites the old tracer. Before this fix, calling
	    erlang:trace/3 would behave as if the tracer was still
	    alive and not apply the new trace.</p>
          <p>
	    This fault was introduced in ERTS 8.0.</p>
          <p>
	    Own Id: OTP-13928</p>
        </item>
        <item>
          <p>
	    Fix parsing of <c>-profile_boot 'true' | 'false'</c></p>
          <p>
	    Own Id: OTP-13955 Aux Id: ERL-280 </p>
        </item>
        <item>
          <p>
	    A slight improvement of <c>erlang:get_stacktrace/0</c>
	    for exceptions raised in hipe compiled code. Beam
	    compiled functions in such stack trace was earlier
	    replaced by some unrelated function. They are now instead
	    omitted. This is an attempt to reduce the confusion in
	    the absence of a complete and correct stack trace for
	    mixed beam and hipe functions.</p>
          <p>
	    Own Id: OTP-13992</p>
        </item>
        <item>
	    <p> Correct type declaration of match specification head.
	    </p>
          <p>
	    Own Id: OTP-13996</p>
        </item>
        <item>
          <p>
	    HiPE code loading failed for x86_64 if gcc was configured
	    with <c>--enable-default-pie</c>. Fixed by disabling PIE,
	    if needed for HiPE, when building the VM.</p>
          <p>
	    Own Id: OTP-14031 Aux Id: ERL-294, PR-1239 </p>
        </item>
        <item>
          <p>
	    Faulty arguments could be presented on exception from a
	    NIF that had rescheduled itself using
	    <c>enif_schedule_nif()</c>.</p>
          <p>
	    Own Id: OTP-14048</p>
        </item>
        <item>
          <p>
	    The runtime system could crash if a garbage collection on
	    a process was performed immediately after a NIF had been
	    rescheduled using <c>enif_schedule_nif()</c>.</p>
          <p>
	    Own Id: OTP-14049</p>
        </item>
        <item>
          <p>
	    A reference to purged code could be left undetected by
	    the purge operation if a process just had rescheduled a
	    NIF call using <c>enif_schedule_nif()</c> when the
	    process was checked. This could cause a runtime system
	    crash.</p>
          <p>
	    Own Id: OTP-14050</p>
        </item>
        <item>
	    <p>Fixed a number of dirty scheduler related bugs:</p>
	    <list> <item><p>Process priority was not handled correct
	    when scheduling on a dirty scheduler.</p></item>
	    <item><p>The runtime system could crash when an exit
	    signal with a compound exit reason was sent to a process
	    executing on a dirty scheduler.</p></item> <item><p>The
	    runtime system crashed when call tracing a process
	    executing on a dirty scheduler.</p></item> <item><p>A
	    code purge operation could end up hanging forever when a
	    process executed on a dirty scheduler</p></item> </list>
          <p>
	    Own Id: OTP-14051</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Fix minor soft purge race bug that could incorrectly
	    trigger code_server to load new code for the module if
	    the soft purge failed and no current version of the
	    module existed.</p>
          <p>
	    Own Id: OTP-13925</p>
        </item>
        <item>
          <p>
	    To ease troubleshooting, <c>erlang:load_nif/2</c> now
	    includes the return value from a failed call to
	    load/reload/upgrade in the text part of the error tuple.
	    The <c>crypto</c> NIF makes use of this feature by
	    returning the source line where/if the initialization
	    fails.</p>
          <p>
	    Own Id: OTP-13951</p>
        </item>
        <item>
          <p>
	    New environment variable <c>ERL_CRASH_DUMP_BYTES</c> can
	    be used to limit the size of crash dumps. If the limit is
	    reached, crash dump generation is aborted and the
	    generated file will be truncated.</p>
          <p>
	    Own Id: OTP-14046</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 8.1.1.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A code purge operation could under certain circumstances
	    expand the size of hibernated processes.</p>
          <p>
	    Own Id: OTP-14444 Aux Id: ERIERL-24 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 8.1.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The emulator got a dynamic library dependency towards
	    libsctp, which on Linux was not intended since the
	    emulator there loads and resolves the needed sctp
	    functions in runtime. This has been fixed and a configure
	    switch --enable-sctp=lib has been added for those who
	    want such a library dependency.</p>
          <p>
	    Own Id: OTP-13956 Aux Id: ERL-262, ERL-133 </p>
        </item>
        <item>
          <p>
	    Fix SIGUSR1 crashdump generation</p>
          <p>
	    Do not generate a core when a crashdump is asked for.</p>
          <p>
	    Own Id: OTP-13997</p>
        </item>
        <item>
	    <p>The new functions in <c>code</c> that allows loading
	    of many modules at once had a performance problem. While
	    executing a helper function in the <c>erl_prim_loader</c>
	    process, garbage messages were produced. The garbages
	    messages were ignored and ultimately discarded, but there
	    would be a negative impact on performance and memory
	    usage. The number of garbage message depended on both the
	    number of modules to be loaded and the length of the code
	    path.</p>
	    <p>The functions affected of this problem were:
	    <c>atomic_load/1</c>, <c>ensure_modules_loaded/1</c>, and
	    <c>prepare_loading/1</c>.</p>
          <p>
	    Own Id: OTP-14009</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 8.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix bug for calls from hipe code to BIFs that disable GC
	    while yielding. Has been causing Dialyzer crashes on ARM
	    (and presumably all other non-intel platforms).</p>
          <p>
	    Own Id: OTP-13724 Aux Id: PR-1116 </p>
        </item>
        <item>
          <p>
	    Fix a bug where changing the current working directory of
	    the VM would not change the current working directory of
	    programs spawned using <c>erlang:open_port({spawn,""},
	    ...)</c>.</p>
          <p>
	    Own Id: OTP-13733 Aux Id: ERL-175 </p>
        </item>
        <item>
          <p>
	    Fix a bug where disabling tracing from a process that had
	    return_to tracing enabled and was tracing on
	    <c>erlang:trace/3</c> would cause a segmentation fault.</p>
          <p>
	    Own Id: OTP-13734</p>
        </item>
        <item>
          <p>
	    Update all erts documentation to use simpler English, use
	    consistent terminology and be easier to navigate.</p>
          <p>
	    Own Id: OTP-13740</p>
        </item>
        <item>
          <p>
	    Add dirty schedulers to the microstate accounting
	    statistics.</p>
          <p>
	    Own Id: OTP-13744</p>
        </item>
        <item>
          <p>
	    Fixed dirty scheduler build support on 32-bit windows.</p>
          <p>
	    Own Id: OTP-13759</p>
        </item>
        <item>
          <p>
	    inet:getstat(Socket) on an SCTP socket returned 0 for
	    send stats. This bug has now been corrected. Reported by
	    systra as issue ERL-102 on bugs.erlang.org.</p>
          <p>
	    Own Id: OTP-13773 Aux Id: ERL-102 </p>
        </item>
        <item>
          <p>
	    AF_UNSPEC and unknown address families were misread by
	    UDP receive in prim_inet resulting in an exception. This
	    bug has now been corrected.</p>
          <p>
	    Own Id: OTP-13775</p>
        </item>
        <item>
          <p>
	    Sweep HiPE stack for literals during code purge.</p>
          <p>
	    Own Id: OTP-13777 Aux Id: PR-1122 </p>
        </item>
        <item>
          <p>
	    Fix bug in run_erl for OpenBSD that could cause it on
	    rare occations to exit without starting the program (erl)
	    at all.</p>
          <p>
	    Own Id: OTP-13795</p>
        </item>
        <item>
          <p>
	    Update build scripts to not make assumptions about where
	    env, cp and perl are located.</p>
          <p>
	    Own Id: OTP-13800</p>
        </item>
        <item>
          <p>
	    Fixed a bug where init:stop could deadlock if a process
	    with infinite shutdown timeout (e.g. a supervisor)
	    attempted to load code while terminating.</p>
          <p>
	    Own Id: OTP-13802</p>
        </item>
        <item>
          <p>
	    Fixed a segmentation fault on sparc CPUs when free'ing a
	    tracer module's state.</p>
          <p>
	    Own Id: OTP-13803</p>
        </item>
        <item>
          <p>
	    <c>fun</c>s was not properly handled during purge of a
	    module. This could cause a crash of the VM after a purge
	    of a module.</p>
          <p>
	    Own Id: OTP-13809</p>
        </item>
        <item>
          <p>
	    Fixed a memory leak when the process monitoring a port
	    crashed.</p>
          <p>
	    Own Id: OTP-13818</p>
        </item>
        <item>
          <p>
	    Fixed multiple dirty scheduler related tracing bugs.</p>
          <p>
	    Own Id: OTP-13822</p>
        </item>
        <item>
          <p>
	    Fix error handling in beam code runtime loader for a
	    number of cases when index and size fields got corrupted
	    (negative) values.</p>
          <p>
	    Own Id: OTP-13848 Aux Id: ERL-216 </p>
        </item>
        <item>
          <p>
	    Minor fix of dirty scheduler implementation.</p>
          <p>
	    Own Id: OTP-13852</p>
        </item>
        <item>
          <p>
	    Calls to <c>erl_drv_send_term()</c> or
	    <c>erl_drv_output_term()</c> from a non-scheduler thread
	    while the corresponding port was invalid caused the
	    emulator to enter an inconsistent state which eventually
	    caused an emulator crash.</p>
          <p>
	    Own Id: OTP-13866</p>
        </item>
        <item>
          <p>
	    Fix a rare race condition in <c>erlang:open_port({spawn,
	    ""}, ...)</c> that would result in the erl_child_setup
	    program aborting and cause the emulator to exit.</p>
          <p>
	    Own Id: OTP-13868</p>
        </item>
        <item>
	    <p>Driver and NIF operations accessing processes or ports
	    could cause an emulator crash when used from
	    non-scheduler threads. Those operations are:</p> <list>
	    <item><c>erl_drv_send_term()</c></item>
	    <item><c>driver_send_term()</c></item>
	    <item><c>erl_drv_output_term()</c></item>
	    <item><c>driver_output_term()</c></item>
	    <item><c>enif_send()</c></item>
	    <item><c>enif_port_command()</c></item> </list>
          <p>
	    Own Id: OTP-13869</p>
        </item>
        <item>
          <p>
	    Fix start scripts generation dependency in Makefile</p>
          <p>
	    Own Id: OTP-13871 Aux Id: ERL-241 </p>
        </item>
        <item>
          <p>
	    The VM could crash if <c>erlang:get_stacktrace()</c> was
	    called after a rescheduled NIF had thrown an exception.</p>
          <p>
	    Own Id: OTP-13877</p>
        </item>
        <item>
	    <p>Calling <c>code:delete/1</c> before a loading a module
	    with an on_load function, the old code would be
	    overwritten, causing a memory or a crash if NIFs were
	    involved. (Thanks to vans163 for reporting this bug.)</p>
          <p>
	    Own Id: OTP-13893 Aux Id: ERL-240 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Improved accuracy of timeouts on MacOS X. This by setting
	    premature timeouts followed by a short actual timeout
	    during scheduler wait.</p>
          <p>
	    Own Id: OTP-13698</p>
        </item>
        <item>
	    <p>Added the following symbolic time unit representations
	    to the <seetype
	    marker="erlang#time_unit"><c>erlang:time_unit()</c></seetype>
	    type:</p> <list> <item><c>second</c></item>
	    <item><c>millisecond</c></item>
	    <item><c>microsecond</c></item>
	    <item><c>nanosecond</c></item> </list> <p>The following
	    symbolic time unit representations are now
	    <em>deprecated</em>, but still part of the
	    <c>erlang:time_unit()</c> type:</p> <list>
	    <item><c>seconds</c></item>
	    <item><c>milli_seconds</c></item>
	    <item><c>micro_seconds</c></item>
	    <item><c>nano_seconds</c></item> </list>
          <p>
	    Own Id: OTP-13735</p>
        </item>
        <item>
          <p>
	    Fix maps hashing entropy of maps with maps keys.</p>
          <p>
	    Own Id: OTP-13763 Aux Id: ERL-199 </p>
        </item>
        <item>
          <p>
	    Improved dirty scheduler support. A purge of a module can
	    now be performed without having to wait for completion of
	    all ongoing dirty NIF calls.</p>
          <p>
	    Note that when enabling support for dirty schedulers, a
	    new purge strategy will as of ERTS version 8.1 be
	    enabled. This new strategy is not fully backwards
	    compatible with the strategy used by default. For more
	    information see the documentation of <seemfa
	    marker="erts:erlang#check_process_code/3"><c>erlang:check_process_code/3</c></seemfa>.</p>
          <p>
	    Own Id: OTP-13808 Aux Id: OTP-13833 </p>
        </item>
        <item>
          <p>
	    A new purge strategy has been introduced. The new
	    strategy will by default be disabled during the OTP 19
	    release, but will be the only strategy available as of
	    the OTP 20 release.</p>
          <p>
	    The new strategy is slightly incompatible with the
	    strategy being used by default in OTP 19. Using the
	    default strategy, processes holding <c>fun</c>s that
	    refer to the module being purged either fail a soft
	    purge, or will be killed during a hard purge. The new
	    strategy completely ignores <c>fun</c>s. If <c>fun</c>s
	    referring to the code being purged exist, and are used
	    after a purge, an exception will be raised upon usage.
	    That is, the behavior will be exactly the same as the
	    case when a <c>fun</c> is received by a process after the
	    purge.</p>
          <p>
	    The new strategy can optionally be enabled when building
	    OTP during OTP 19, and will automatically be enabled if
	    the runtime system is built with support for dirty
	    schedulers.</p>
          <p>
	    For more information see the documentation of <seemfa
	    marker="erts:erlang#check_process_code/3"><c>erlang:check_process_code/3</c></seemfa>.</p>
          <p>
	    Own Id: OTP-13833</p>
        </item>
        <item>
          <p>
	    Fixed unnecessary overestimation of heap size need during
	    garbage collection.</p>
          <p>
	    Own Id: OTP-13851</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 8.0.5</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed a VM crash that occurred in a garbage collection of
	    a process when it had received binaries. This bug was
	    introduced in ERTS version 8.0 (OTP 19.0).</p>
          <p>
	    Own Id: OTP-13890</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 8.0.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed a VM crash that occurred in garbage collection of a
	    process when it had received maps over the distribution.
	    This bug was introduced in ERTS version 8.0 (OTP 19.0).</p>
          <p>
	    Own Id: OTP-13889</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 8.0.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed a race that could cause a lost wakeup of a process
	    that timed out in a <c>receive ... after</c>. This bug
	    was introduced in ERTS version 7.0.</p>
          <p>
	    Own Id: OTP-13798 Aux Id: OTP-11997 </p>
        </item>
        <item>
          <p>
	    Fixed segfault after writing an erl crash dump.</p>
          <p>
	    Own Id: OTP-13799</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 8.0.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix scheduler deadlock bug in <c>ets:update_counter/4</c>
	    when key is not found and inserting the default object
	    causes the table to grow.</p>
          <p>
	    Own Id: OTP-13731 Aux Id: ERL-188 </p>
        </item>
        <item>
          <p>
	    Fix VM abort "Overrun stack and heap" in garbage
	    collection triggered by a <c>bsl</c> operation and some
	    very specific heap conditions.</p>
          <p>
	    Own Id: OTP-13732 Aux Id: seq13142 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 8.0.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A memory allocation bug in <c>group_leader/2</c> could
	    cause an emulator crash when garbage collecting a process
	    that had been assigned a remote group leader. This bug
	    was introduced in ERTS version 8.0.</p>
          <p>
	    Own Id: OTP-13716</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 8.0</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>The handling of <c>on_load</c> functions has been
	    improved. The major improvement is that if a code upgrade
	    fails because the <c>on_load</c> function fails, the
	    previous version of the module will now be retained.</p>
          <p>
	    Own Id: OTP-12593</p>
        </item>
        <item>
	    <p><c>is_builtin(erlang, apply, 3)</c> will now return
	    <c>true</c>.</p>
          <p>
	    Own Id: OTP-13034</p>
        </item>
        <item>
          <p>
	    Fix <c>enif_get_list_length</c> to return false if list
	    is improper or have length larger than <c>UINT_MAX</c>
	    (did return true and an incorrect length value).</p>
          <p>
	    Own Id: OTP-13288 Aux Id: PR913 </p>
        </item>
        <item>
          <p>
	    Cleanup hipe signal handling code for x86 and make it
	    more portable.</p>
          <p>
	    Own Id: OTP-13341 Aux Id: PR951 </p>
        </item>
        <item>
          <p>
	    Make file:datasync use fsync instead of fdatasync on Mac
	    OSX.</p>
          <p>
	    Own Id: OTP-13411</p>
        </item>
        <item>
          <p>
	    Make sure to create a crash dump when running out of
	    memory. This was accidentally removed in the erts-7.3
	    release.</p>
          <p>
	    Own Id: OTP-13419</p>
        </item>
        <item>
          <p>
	    A bug has been fixed where if erlang was started +B on a
	    unix platform it would be killed by a SIGUSR2 signal when
	    creating a crash dump.</p>
          <p>
	    Own Id: OTP-13425</p>
        </item>
        <item>
          <p>
	    Fix race between <c>process_flag(trap_exit,true)</c> and
	    a received exit signal.</p>
          <p>
	    A process could terminate due to exit signal even though
	    <c>process_flag(trap_exit,true)</c> had returned. A very
	    specific timing between call to <c>process_flag/2</c> and
	    exit signal from another scheduler was required for this
	    to happen.</p>
          <p>
	    Own Id: OTP-13452</p>
        </item>
        <item>
	    <p>Don't search for non-existing Map keys twice</p>
	    <p>For <c>maps:get/2,3</c> and <c>maps:find/2</c>,
	    searching for an immediate key, e.g. an atom, in a small
	    map, the search was performed twice if the key did not
	    exist.</p>
          <p>
	    Own Id: OTP-13459</p>
        </item>
        <item>
          <p>
	    When an abnormally large distribution message is about to
	    be sent, the VM has been changed to create a crash dump
	    instead of a core dump.</p>
          <p>
	    Own Id: OTP-13474</p>
        </item>
        <item>
          <p>
	    Fix <c>erlang:process_info/2</c> type specification</p>
          <p>
	    Own Id: OTP-13485 Aux Id: ERL-123 </p>
        </item>
        <item>
          <p>
	    Fix bug in <c>open_port/2</c> with option <c>{args,
	    List}</c>. A vm crash could be caused by an improper
	    <c>List</c>.</p>
          <p>
	    Own Id: OTP-13489 Aux Id: ERL-127 </p>
        </item>
        <item>
          <p>
	    Fixed a race-condition bug where the emulator could crash
	    when <c>erlang:system_profile/1,2</c> was enabled and a
	    process had to be re-scheduled during termination.</p>
          <p>
	    Own Id: OTP-13494 Aux Id: ERL-126 </p>
        </item>
        <item>
          <p>
	    Fixed bugs where the reduction counter was not handled
	    correct.</p>
          <p>
	    Own Id: OTP-13512</p>
        </item>
        <item>
          <p>
	    Fixed typo in description of the <c>EPMD_DUMP_REQ</c>
	    response.</p>
          <p>
	    Own Id: OTP-13517</p>
        </item>
        <item>
          <p>
	    Fixed a bug where a process flagged as sensitive would
	    sometimes record its save_calls when it shouldn't.</p>
          <p>
	    Own Id: OTP-13540</p>
        </item>
        <item>
          <p>
	    Update configure scripts to not use hard-coded path for
	    /bin/pwd and /bin/rm.</p>
          <p>
	    Own Id: OTP-13562</p>
        </item>
        <item>
          <p>
	    When passing a larger binary than the outputv callback of
	    a linked-in driver can handle in one io vector slot, the
	    binary is now split into multiple slots in the io vector.
	    This change only effects system where the max size of an
	    io vector slot is smaller then the word size of the
	    system (e.g. Windows).</p>
          <p>
	    This change means that it is now possible on Windows to
	    send binaries that are larger than 4GB to port_command,
	    which is what is used for file:write, gen_tcp:send etc.</p>
          <p>
	    Own Id: OTP-13628</p>
        </item>
        <item>
          <p>
	    Workaround of Maps output in crashdumps. Currently the
	    atom 'undefined' is generated instead of Map data if a
	    Map type is encountered during crash.</p>
          <p>
	    Own Id: OTP-13657</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    The tracing support has been extended to allow a <seeerl
	    marker="erl_tracer">tracer module</seeerl> to be the
	    trace event handler instead of a process or port. The
	    <seeerl marker="erl_tracer">tracer module</seeerl>
	    makes it possible for trace tools to filter or manipulate
	    trace event data without the trace event first having to
	    be copied from the traced process or port.</p>
          <p>
	    With the introduction of this feature,
	    <c>erlang:trace(all|existing, _, _)</c> now also returns
	    the tracer process as part of the number of processes on
	    which tracing is enabled. The is incompatible with the
	    previous releases.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-10267</p>
        </item>
        <item>
          <p>
	    Introduce LTTng tracing of Erlang Runtime System</p>
          <p>
	    For LTTng to be enabled OTP needs to be built with
	    configure option <c>--with-dynamic-trace=lttng</c>.</p>
          <p>
	    This feature introduces tracepoints for schedulers,
	    drivers, memory carriers, memory and async thread pool.</p>
	    <p> For a list of all tracepoints, see <seeguide
	    marker="runtime_tools:LTTng">Runtime Tools User's
	    Guide</seeguide> .</p>
          <p>
	    Own Id: OTP-10282</p>
        </item>
        <item>
          <p>
	    Make it possible to monitor/demonitor ports using the
	    <seemfa
	    marker="erlang#monitor/2">erlang:monitor/2</seemfa> API.
	    The process and port information functions have also been
	    updated to include information about monitors from
	    processes to ports.</p>
          <p>
	    Own Id: OTP-11384</p>
        </item>
        <item>
          <p>
	    Add microstate accounting</p>
          <p>
	    Microstate accounting is a way to track which state the
	    different threads within ERTS are in. The main usage area
	    is to pin point performance bottlenecks by checking which
	    states the threads are in and then from there figuring
	    out why and where to optimize.</p>
          <p>
	    Since checking whether microstate accounting is on or off
	    is relatively expensive only a few of the states are
	    enabled by default and more states can be enabled through
	    configure.</p>
          <p>
	    There is a convenience module called msacc that has been
	    added to runtime_tools that can assist in gathering and
	    interpreting the data from Microstate accounting.</p>
          <p>
	    For more information see <seeerl
	    marker="erts:erlang#statistics_microstate_accounting">erlang:statistics(microstate_accounting,
	    _)</seeerl> and the <seeerl
	    marker="runtime_tools:msacc">msacc</seeerl> module in
	    runtime_tools.</p>
          <p>
	    Own Id: OTP-12345</p>
        </item>
        <item>
          <p>
	    The port of Erlang/OTP to the real-time operating system
	    OSE has been removed.</p>
          <p>
	    Own Id: OTP-12573</p>
        </item>
        <item>
          <p>
	    Sharing preserved copy for messages and exit signals</p>
          <p>
	    Enable sharing preserved copy with configure option
	    <c>--enable-sharing-preserving</c>. This will preserve
	    sharing, within the process, when communication with
	    other processes in the Erlang node. There is a trade-off,
	    the copy is more costly but this cost can be reclaimed if
	    there is a lot of sharing in the message. In addition
	    literals will not be copied in a send except during a
	    purge phase of the module where the literals are located.
	    This feature is considered experimental in 19.0.</p>
          <p>
	    Own Id: OTP-12590 Aux Id: OTP-10251 </p>
        </item>
        <item>
          <p>
	    Halfword BEAM has been removed.</p>
          <p>
	    Own Id: OTP-12883</p>
        </item>
        <item>
          <p>
	    Added <seemfa
	    marker="kernel:os#perf_counter/1">os:perf_counter/1</seemfa>.</p>
          <p>
	    The perf_counter is a very very cheap and high resolution
	    timer that can be used to timestamp system events. It
	    does not have monoticity guarantees, but should on most
	    OS's expose a monotonous time.</p>
          <p>
	    Own Id: OTP-12908</p>
        </item>
        <item>
          <p>
	    Support for a fragmented young heap generation. That is,
	    the young heap generation can consist of multiple non
	    continuous memory areas. The main reason for this change
	    is to avoid extra copying of messages that could not be
	    allocated directly on the receivers heap.</p>
          <p>
	    Own Id: OTP-13047</p>
        </item>
        <item>
          <p>
	    Erlang linked-in driver can now force the call to
	    open_port to block until a call to erl_drv_init_ack is
	    made inside the driver. This is useful when you want to
	    do some asynchronous initialization, for example getting
	    configuration from a pipe, and you want the initial
	    open_port call to fail if the configuration is incomplete
	    or wrong. See the erl_driver documentation for more
	    details on the API.</p>
          <p>
	    Own Id: OTP-13086</p>
        </item>
        <item>
          <p>
	    Erlang linked-in drivers can now set their own pids as
	    seen in <c>erlang:port_info/1</c> by using the
	    <c>erl_drv_set_pid</c> function. For more details see the
	    erl_driver documentation.</p>
          <p>
	    Own Id: OTP-13087</p>
        </item>
        <item>
          <p>
	    The functionality behind <c>erlang:open_port/2</c> when
	    called with spawn or spawn_executable has been redone so
	    that the forking of the new program is done in a separate
	    process called erl_child_setup. This allows for a much
	    more robust implementation that uses less memory and does
	    not block the entire emulator if the program to be
	    started is on an un-accessible NFS. Benchmarks have shown
	    this approach to be about 3-5 times as fast as the old
	    approach where the fork/vfork was done by erts. This is a
	    pure stability and performance fix, however some error
	    messages may have changed, which is why it is marked as a
	    backwards incompatible change.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-13088</p>
        </item>
        <item>
	    <p>Improved yielding strategy in the implementation of
	    the following native functions:</p> <list>
	    <item><c>erlang:binary_to_list/1</c></item>
	    <item><c>erlang:binary_to_list/3</c></item>
	    <item><c>erlang:bitstring_to_list/1</c></item>
	    <item><c>erlang:list_to_binary/1</c></item>
	    <item><c>erlang:iolist_to_binary/1</c></item>
	    <item><c>erlang:list_to_bitstring/1</c></item>
	    <item><c>binary:list_to_bin/1</c></item> </list> <p>This
	    in order to improve performance of these functions.</p>
          <p>
	    Own Id: OTP-13096</p>
        </item>
        <item>
          <p>
	    All garbage collections of processes now bump reductions.
	    Also the amount of reductions bumped when garbage
	    collecting has been adjusted. It now better corresponds
	    to the amount of work performed. This in order to improve
	    the real time characteristics of the system.</p>
          <p>
	    Own Id: OTP-13097</p>
        </item>
        <item>
	    <p>New functions that can load multiple modules at once
	    have been added to the '<c>code</c>' module. The
	    functions are <c>code:atomic_load/1</c>,
	    <c>code:prepare_loading/1</c>,
	    <c>code:finish_loading/1</c>, and
	    <c>code:ensure_modules_loaded/1</c>.</p>
          <p>
	    Own Id: OTP-13111</p>
        </item>
        <item>
	    <p>The <c>-boot_var</c> option for <c>erl</c> now only
	    supports a single key and single value (as documented).
	    The option used to allow multiple key/value pairs, but
	    that behavior was undocumented.</p>
	    <p>The function <c>erl_prim_loader:start/3</c> has been
	    removed. Its documentation has also been removed.</p>
	    <p>The undocumented and unsupported function
	    <c>erl_prim_loader:get_files/2</c> has been removed.</p>
          <p>
	    Own Id: OTP-13112</p>
        </item>
        <item>
          <p>
	    Low level BIF <c>erlang:purge_module/1</c> is made more
	    robust against incorrect use. Lingering processes that
	    still refer the old code are now killed before the module
	    is purged to prevent fatal VM behavior.</p>
          <p>
	    Own Id: OTP-13122</p>
        </item>
        <item>
	    <p>Improved dirty scheduler implementation. For more
	    information see the <seecref
	    marker="erl_nif#dirty_nifs">NIF
	    documentation</seecref>.</p> <note><list> <item><p>The
	    dirty scheduler support is still
	    <em>experimental</em>.</p></item> <item><p>The support
	    for determining whether dirty NIF support exist or not at
	    compile time using the C preprocessor macro
	    <c>ERL_NIF_DIRTY_SCHEDULER_SUPPORT</c> has been
	    removed.</p></item> <item><p>The
	    <c>enif_is_on_dirty_scheduler()</c> function has been
	    removed. Use <seecref
	    marker="erl_nif#enif_thread_type"><c>enif_thread_type()</c></seecref>
	    instead.</p></item> </list></note>
          <p>
	    Own Id: OTP-13123</p>
        </item>
        <item>
          <p>
	    Various optimizations done to process dictionary access.</p>
          <p>
	    Own Id: OTP-13167</p>
        </item>
        <item>
          <p>
	    Added max_heap_size process flag. max_heap_size allows
	    the user to limit the maximum heap used by a process. See
	    <seemfa
	    marker="erlang#process_flag/2">erlang:process_flag</seemfa>
	    for more details.</p>
          <p>
	    Own Id: OTP-13174</p>
        </item>
        <item>
          <p>
	    Allow dynamic drivers and NIF libraries to be built with
	    gcc option <c>-fvisibility=hidden</c> for faster loading
	    and more optimized code.</p>
          <p>
	    Own Id: OTP-13227</p>
        </item>
        <item>
          <p>
	    Add <c>erlang:process_info(Pid,
	    garbage_collection_info)</c> which returns extended
	    garbage_collection information. For more details see the
	    documentation.</p>
          <p>
	    Own Id: OTP-13265</p>
        </item>
        <item>
          <p>
	    The functions <c>erlang:list_to_integer/1</c> and
	    <c>string:to_integer/1</c> have been optimized for large
	    inputs.</p>
          <p>
	    Own Id: OTP-13293</p>
        </item>
        <item>
          <p>
	    Improved memory allocation strategy for hipe native code
	    on x86_64 (amd64) architectures by reserving enough low
	    virtual address space needed for the HiPE/AMD64 small
	    code model. The default virtual address area for hipe
	    code is set to 512Mb, but can be changed with emulator
	    flag <c>+MXscs</c>.</p>
          <p>
	    Own Id: OTP-13359</p>
        </item>
        <item>
          <p>
	    Introduction of configurable management of data referred
	    to by the message queue of a process. Each process can be
	    configured individually.</p>
          <p>
	    It is now possible to configure the message queue of a
	    process, so that all data referred by it will be kept
	    outside of the heap, and by this prevent this data from
	    being part of garbage collections.</p>
          <p>
	    For more information see the documentation of <seeerl
	    marker="erlang#process_flag_message_queue_data"><c>process_flag(message_queue_data,
	    MQD)</c></seeerl>.</p>
          <p>
	    Own Id: OTP-13366 Aux Id: OTP-13047 </p>
        </item>
        <item>
          <p>
	    Processes now yield when scanning large message queues
	    and not finding a matching message. This in order to
	    improve real time characteristics.</p>
          <p>
	    Own Id: OTP-13401</p>
        </item>
        <item>
          <p>
	    Optimized an erts internal function that is used to
	    traverse erlang terms. The internal function was mainly
	    used by term_to_binary and comparison of terms.
	    Benchmarks have shown up to a 10% performance increase in
	    those functions after the optimization.</p>
          <p>
	    Own Id: OTP-13440</p>
        </item>
        <item>
          <p>Add the following NIF API functions:</p>
	    <list> <item><seecref
	    marker="erl_nif#enif_cpu_time"><c>enif_cpu_time</c></seecref></item>
	    <item><seecref
	    marker="erl_nif#enif_now_time"><c>enif_now_time</c></seecref></item>
	    <item><seecref
	    marker="erl_nif#enif_make_unique_integer"><c>enif_make_unique_integer</c></seecref></item>
	    <item><seecref
	    marker="erl_nif#enif_is_process_alive"><c>enif_is_process_alive</c></seecref></item>
	    <item><seecref
	    marker="erl_nif#enif_is_port_alive"><c>enif_is_port_alive</c></seecref></item>
	    <item><seecref
	    marker="erl_nif#enif_term_to_binary"><c>enif_term_to_binary</c></seecref></item>
	    <item><seecref
	    marker="erl_nif#enif_binary_to_term"><c>enif_binary_to_term</c></seecref></item>
	    <item><seecref
	    marker="erl_nif#enif_port_command"><c>enif_port_command</c></seecref></item>
	    </list>
          <p>
	    For details of what each function does, see the erl_nif
	    documentation.</p>
          <p>
	    Own Id: OTP-13442</p>
        </item>
        <item>
          <p>
	    Optimize <c>'++'</c> operator and <c>lists:append/2</c>
	    by using a single pass to build a new list while checking
	    for properness.</p>
          <p>
	    Own Id: OTP-13487</p>
        </item>
        <item>
          <p>
	    Handle terms (pids,ports and refs) from nodes with a
	    'creation' value larger than 3. This is a preparation of
	    the distribution protocol to allow OTP 19 nodes to
	    correctly communicate with future nodes (20 or higher).
	    The 'creation' value differentiates different
	    incarnations of the same node (name).</p>
          <p>
	    Own Id: OTP-13488</p>
        </item>
        <item>
          <p>
	    Don't send unasked for systemd notifications in epmd</p>
          <p>
	    Own Id: OTP-13493 Aux Id: PR-999 </p>
        </item>
        <item>
          <p>
	    The enif_send API has been extended to allow NULL to be
	    used as the message environment. When used this way, a
	    message environment is implicitly created and the given
	    term is copied into that environment before sending. This
	    can be an optimization if many small messages are being
	    sent by the nif.</p>
          <p>
	    Own Id: OTP-13495</p>
        </item>
        <item>
          <p>
	    The tracing support has been extended to allow tracing on
	    ports. Ports can be traced on using the 'ports', 'send'
	    and 'receive' trace flags.</p>
          <p>
	    The first argument of <seemfa
	    marker="erts:erlang#trace/3">erlang:trace/3</seemfa> has
	    been extended so that <c>'all'</c>, <c>'existing'</c> and
	    <c>'new'</c> now include both processes and ports. New
	    <c>Tracee</c> variants, <c>'all_processes'</c>,
	    <c>'all_ports'</c>, <c>'existing_processes'</c> etc have
	    been added to specify only processes or ports.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-13496</p>
        </item>
        <item>
          <p>
	    When the <c>'procs'</c> trace flag is enabled, a
	    <c>'spawned'</c> trace event is now also generated by a
	    newly created process. The previous event <c>'spawn'</c>
	    remains, but as it is generated by the process that did
	    the spawn, it is not guaranteed that it is ordered with
	    other trace events from the newly spawned process. So
	    when tracking the lifetime of a process this new event
	    should be used as the creation event.</p>
          <p>
	    This new trace event is marked as an incompatibility
	    because tools that expect certain trace events when
	    enabling 'procs' will have to updated.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-13497</p>
        </item>
        <item>
          <p>
	    Add the <seemfa
	    marker="erts:erlang#match_spec_test/3">erlang:match_spec_test/3</seemfa>
	    function. The functions allows the testing of match
	    specifications for both tracing and ets tables. It can be
	    used to test that a match specification does the expected
	    filtering on specific data. It also returns more verbose
	    error reasons for incorrectly constructed match
	    specifications.</p>
          <p>
	    Own Id: OTP-13501</p>
        </item>
        <item>
          <p>
	    The erts internal tracing support has been changed to
	    have much less overhead and be more scalable.</p>
          <p>
	    This rewrite does not break any backwards
	    incompatibilities, but it does change the ordering of
	    some trace messages when compared to previous releases.
	    It should be noted that this only applies to trace
	    messages sent to processes or ports, it does not apply to
	    the new tracer module. However in future releases they
	    may also be effected by this.</p>
          <p>
	    Trace messages are only guaranteed to be ordered from one
	    traced process or port. In previous releases this was not
	    visible as a <c>'send'</c> trace message would always
	    arrive before the corresponding <c>'receive'</c> trace
	    message that is no longer always the case. This also
	    means that timestamped trace messages may seem to arrive
	    out of order as the timestamp is taken when the event is
	    triggered and not when it is put in the queue of the
	    tracer.</p>
          <p>
	    Own Id: OTP-13503</p>
        </item>
        <item>
          <p>
	    Add possibility to filter <c>send</c> and <c>receive</c>
	    trace with match specifications.</p>
          <p>
	    Own Id: OTP-13507</p>
        </item>
        <item>
          <p>
	    Add <c>maps:update_with/3,4</c> and <c>maps:take/2</c></p>
          <p>
	    Own Id: OTP-13522 Aux Id: PR-1025 </p>
        </item>
        <item>
          <p>
	    Introduce LTTng tracing via Erlang tracing.</p>
          <p>
	    For LTTng to be enabled OTP needs to be built with
	    configure option <c>--with-dynamic-trace=lttng</c>.</p>
	    <p>The dynamic trace module <c>dyntrace</c> is now
	    capable to be used as a LTTng sink for Erlang tracing.
	    For a list of all tracepoints, see <seeguide
	    marker="runtime_tools:LTTng">Runtime Tools User's
	    Guide</seeguide> .</p>
	    <p>This feature also introduces an incompatible change in
	    trace tags. The trace tags <c>gc_start</c> and
	    <c>gc_end</c> has been split into <c>gc_minor_start</c>,
	    <c>gc_minor_end</c> and <c>gc_major_start</c>,
	    <c>gc_major_end</c>.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-13532</p>
        </item>
        <item>
          <p>
	    Print heap pointers for garbing processes during
	    crashdump</p>
          <p>
	    Own Id: OTP-13541 Aux Id: PR-1026 </p>
        </item>
        <item>
          <p>
	    Changed and improved low level memory statistics returned
	    by <c>erlang:system_info/1</c>. The info for
	    <c>erts_mmap</c> has been moved from <c>mseg_alloc</c> to
	    its own section returned by <c>{allocator,
	    erts_mmap}</c>.</p>
          <p>
	    Own Id: OTP-13560</p>
        </item>
        <item>
          <p>
	    Add enif_snprintf to the NIF API</p>
          <p>
	    The function <c>enif_snprintf</c> is similar to
	    <c>snprintf</c> call but can handle formatting of Erlang
	    terms via <c>%T</c> format specifier.</p>
          <p>
	    Own Id: OTP-13580</p>
        </item>
        <item>
	    <p>The warning in the documentation for
	    <c>erlang:raise/3</c> has been removed. It is now
	    officially perfectly fine to use raise/3 in production
	    code.</p>
          <p>
	    Own Id: OTP-13599</p>
        </item>
        <item>
          <p>
	    Fix bugs caused by the VM sometimes truncating object
	    sizes or offsets to 32 bits on 64-bit hosts. These bugs
	    were mainly found when working with large unicode strings
	    and nifs environments.</p>
          <p>
	    Own Id: OTP-13606</p>
        </item>
        <item>
          <p>
	    Add <c>-start_epmd</c> command line option, this lets you
	    disable automatic starting of epmd when starting a
	    distributed node.</p>
          <p>
	    Add <c>-epmd_module</c> command line option, this lets
	    you specify a module to register and look-up node names
	    in. The default module is <c>erl_epmd</c>.</p>
          <p>
	    Own Id: OTP-13627</p>
        </item>
        <item>
          <p>
	    <c>erlang:halt</c> now truncates strings longer than 200
	    characters instead of failing with <c>badarg</c>.</p>
          <p>
	    Own Id: OTP-13630</p>
        </item>
        <item>
          <p>
	    Fix possible race in poller wake up on windows</p>
          <p>
	    Own Id: OTP-13634</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 7.3.1.6</title>

    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>List subtraction (The <c>--</c> operator) will now
	    yield properly on large inputs.</p>
          <p>
	    Own Id: OTP-15371</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 7.3.1.5</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed small memory leak that could occur when sending to
	    a terminating port.</p>
          <p>
	    Own Id: OTP-14609 Aux Id: ERIERL-238 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 7.3.1.4</title>
    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix performance bug in pre-allocators that could cause
	    them to permanently fall back on normal more expensive
	    memory allocation. Pre-allocators are used for quick
	    allocation of short lived meta data used by messages and
	    other scheduled tasks. Bug exists since OTP_R15B02.</p>
          <p>
	    Own Id: OTP-14491</p>
        </item>
        <item>
          <p>
	    Fixed bug in operator <c>bxor</c> causing erroneuos
	    result when one operand is a big <em>negative</em>
	    integer with the lowest <c>N*W</c> bits as zero and the
	    other operand not larger than <c>N*W</c> bits. <c>N</c>
	    is an integer of 1 or larger and <c>W</c> is 32 or 64
	    depending on word size.</p>
          <p>
	    Own Id: OTP-14514</p>
        </item>
        <item>
          <p>
	    A timer internal bit-field used for storing scheduler id
	    was too small. As a result, VM internal timer data
	    structures could become inconsistent when using 1024
	    schedulers on the system. Note that systems with less
	    than 1024 schedulers are not effected by this bug.</p>
          <p>
	    This bug was introduced in ERTS version 7.0 (OTP 18.0).</p>
          <p>
	    Own Id: OTP-14548 Aux Id: OTP-11997, ERL-468 </p>
        </item>
        <item>
          <p>
	    Fixed bug in <c>binary_to_term</c> and
	    <c>binary_to_atom</c> that could cause VM crash.
	    Typically happens when the last character of an UTF8
	    string is in the range 128 to 255, but truncated to only
	    one byte. Bug exists in <c>binary_to_term</c> since ERTS
	    version 5.10.2 (OTP_R16B01) and <c>binary_to_atom</c>
	    since ERTS version 9.0 (OTP-20.0).</p>
          <p>
	    Own Id: OTP-14590 Aux Id: ERL-474 </p>
        </item>
      </list>
    </section>
</section>

<section><title>Erts 7.3.1.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A bug has been fixed where if erlang was started +B on a
	    unix platform it would be killed by a SIGUSR2 signal when
	    creating a crash dump.</p>
          <p>
	    Own Id: OTP-13425 Aux Id: ERL-94 </p>
        </item>
        <item>
          <p>
	    Calls to <c>erl_drv_send_term()</c> or
	    <c>erl_drv_output_term()</c> from a non-scheduler thread
	    while the corresponding port was invalid caused the
	    emulator to enter an inconsistent state which eventually
	    caused an emulator crash.</p>
          <p>
	    Own Id: OTP-13866</p>
        </item>
        <item>
	    <p>Driver and NIF operations accessing processes or ports
	    could cause an emulator crash when used from
	    non-scheduler threads. Those operations are:</p> <list>
	    <item><c>erl_drv_send_term()</c></item>
	    <item><c>driver_send_term()</c></item>
	    <item><c>erl_drv_output_term()</c></item>
	    <item><c>driver_output_term()</c></item>
	    <item><c>enif_send()</c></item>
	    <item><c>enif_port_command()</c></item> </list>
          <p>
	    Own Id: OTP-13869</p>
        </item>
        <item>
          <p>
	    Fix bug in <c>binary_to_term</c> for binaries created by
	    <c>term_to_binary </c> with option <c>compressed</c>. The
	    bug can cause <c>badarg</c> exception for a valid binary
	    when Erlang VM is linked against a <c>zlib</c> library of
	    version 1.2.9 or newer. Bug exists since OTP 17.0.</p>
          <p>
	    Own Id: OTP-14159 Aux Id: ERL-340 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 7.3.1.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed a race that could cause a lost wakeup of a process
	    that timed out in a <c>receive ... after</c>. This bug
	    was introduced in ERTS version 7.0.</p>
          <p>
	    Own Id: OTP-13798 Aux Id: OTP-11997 </p>
        </item>
        <item>
          <p>
	    Fixed segfault after writing an erl crash dump.</p>
          <p>
	    Own Id: OTP-13799</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 7.3.1.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix scheduler deadlock bug in <c>ets:update_counter/4</c>
	    when key is not found and inserting the default object
	    causes the table to grow.</p>
          <p>
	    Own Id: OTP-13731 Aux Id: ERL-188 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 7.3.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    <c>process_info(Pid, last_calls)</c> did not work for
	    <c>Pid /= self()</c>.</p>
          <p>
	    Own Id: OTP-13418</p>
        </item>
        <item>
          <p>
	    Make sure to create a crash dump when running out of
	    memory. This was accidentally removed in the erts-7.3
	    release.</p>
          <p>
	    Own Id: OTP-13419</p>
        </item>
        <item>
          <p>
	    Schedulers could be woken by a premature timeout on
	    Linux. This premature wakeup was however harmless.</p>
          <p>
	    Own Id: OTP-13420</p>
        </item>
        <item>
          <p>
	    A process communicating with a port via one of the
	    <c>erlang:port_*</c> BIFs could potentially end up in an
	    inconsistent state if the port terminated during the
	    communication. When this occurred the process could later
	    block in a <c>receive</c> even though it had messages
	    matching in its message queue.</p>
          <p>
	    This bug was introduced in erts version 5.10 (OTP R16A).</p>
          <p>
	    Own Id: OTP-13424 Aux Id: OTP-10336 </p>
        </item>
        <item>
          <p>
	    The reference count of a process structure could under
	    rare circumstances be erroneously managed. When this
	    happened invalid memory accesses occurred.</p>
          <p>
	    Own Id: OTP-13446</p>
        </item>
        <item>
          <p>
	    Fix race between <c>process_flag(trap_exit,true)</c> and
	    a received exit signal.</p>
          <p>
	    A process could terminate due to exit signal even though
	    <c>process_flag(trap_exit,true)</c> had returned. A very
	    specific timing between call to <c>process_flag/2</c> and
	    exit signal from another scheduler was required for this
	    to happen.</p>
          <p>
	    Own Id: OTP-13452</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 7.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The '-path' flag to 'erl' has been documented. This flag
	    replaces the path specified in the boot script. It has
	    always existed, but was earlier only documented in SASL
	    (script).</p>
          <p>
	    Own Id: OTP-13060</p>
        </item>
        <item>
          <p>
	    The <c>call_time</c> tracing functionality internally
	    used a time based on OS system time in order to measure
	    call time which could cause erroneous results if OS
	    system time was changed during tracing.</p>
          <p>
	    This functionality now use Erlang monotonic time in order
	    to measure time. Besides fixing the erroneous results due
	    to OS system time being used, the results are often also
	    better since Erlang monotonic time often has better
	    accuracy and precision.</p>
          <p>
	    Own Id: OTP-13216</p>
        </item>
        <item>
          <p>
	    Fix behaviour of -delay_write command line switch of
	    epmd, which is used for debugging - in some cases epmd
	    was sleeping twice the requested amount of time.</p>
          <p>
	    Own Id: OTP-13220</p>
        </item>
        <item>
          <p>
	    Fix race between timeout and exit signal that could cause
	    a process to ignore the exit signal and continue
	    execution. Bug exist since OTP 18.0.</p>
          <p>
	    Own Id: OTP-13245</p>
        </item>
        <item>
          <p>
	    Fix bug in <c>erlang:halt/1,2</c> for large exit status
	    values, causing either <c>badarg</c> (on 32-bit) or exit
	    with a crash dump and/or core dump (on 64-bit). Make
	    <c>erlang:halt/1,2</c> tolerate any non negative integer
	    as exit status and truncate high order bits if the OS
	    does not support it.</p>
          <p>
	    Own Id: OTP-13251 Aux Id: ERL-49 </p>
        </item>
        <item>
          <p>
	    <seemfa
	    marker="kernel:gen_tcp#accept/2"><c>gen_tcp:accept/2</c></seemfa>
	    was not <seeguide
	    marker="erts:time_correction#Time_Warp_Safe_Code">time
	    warp safe</seeguide>. This since it used the same time as
	    returned by <seemfa
	    marker="erts:erlang#now/0"><c>erlang:now/0</c></seemfa>
	    when calculating timeout. This has now been fixed.</p>
          <p>
	    Own Id: OTP-13254 Aux Id: OTP-11997, OTP-13222 </p>
        </item>
        <item>
          <p>
	    Fix faulty error handling when writing to a compressed
	    file.</p>
          <p>
	    Own Id: OTP-13270</p>
        </item>
        <item>
          <p>
	    Fix sendfile usage for large files on FreeBSD</p>
          <p>
	    Own Id: OTP-13271</p>
        </item>
        <item>
          <p>
	    Fix bug that could cause
	    <c>process_info(P,current_location)</c> to crash emulator
	    for hipe compiled modules.</p>
          <p>
	    Own Id: OTP-13282 Aux Id: ERL-79 </p>
        </item>
        <item>
          <p>
	    Out of memory errors have been changed to cause an exit
	    instead of abort.</p>
          <p>
	    Own Id: OTP-13292</p>
        </item>
        <item>
          <p>
	    When calling <c>garbage_collect/[1,2]</c> or
	    <c>check_process_code/[2,3]</c> from a process with a
	    higher priority than the priority of the process operated
	    on, the run queues could end up in an inconsistent state.
	    This bug has now been fixed.</p>
          <p>
	    Own Id: OTP-13298 Aux Id: OTP-11388 </p>
        </item>
        <item>
          <p>
	    A workaround for an issue with older gcc versions (less
	    than 5) and inline assembly on 32-bit x86 caused an
	    emulator crash when it had been compiled with a newer gcc
	    version. An improved <c>configure</c> test, run when
	    building OTP, now detects whether the workaround should
	    be used or not.</p>
          <p>
	    Own Id: OTP-13326 Aux Id: ERL-80 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>Introduced new statistics functionality in order to
	    more efficiently retrieve information about run able and
	    active processes and ports. For more information see:</p>
	    <list> <item><seeerl
	    marker="erlang#statistics_total_run_queue_lengths"><c>statistics(total_run_queue_lengths)</c></seeerl></item>
	    <item><seeerl
	    marker="erlang#statistics_run_queue_lengths"><c>statistics(run_queue_lengths)</c></seeerl></item>
	    <item><seeerl
	    marker="erlang#statistics_total_active_tasks"><c>statistics(total_active_tasks)</c></seeerl></item>
	    <item><seeerl
	    marker="erlang#statistics_active_tasks"><c>statistics(active_tasks)</c></seeerl></item>
	    </list>
          <p>
	    Own Id: OTP-13201</p>
        </item>
        <item>
          <p>
	    Time warp safety improvements.</p>
          <p>
	    Introduced the options <c>monotonic_timestamp</c>, and
	    <c>strict_monotonic_timestamp</c> to the trace,
	    sequential trace, and system profile functionality. This
	    since the already existing <c>timestamp</c> option is not
	    time warp safe.</p>
          <p>
	    Introduced the option <c>safe_fixed_monotonic_time</c> to
	    <c>ets:info/2</c> and <c>dets:info/2</c>. This since the
	    already existing <c>safe_fixed</c> option is not time
	    warp safe.</p>
          <p>
	    Own Id: OTP-13222 Aux Id: OTP-11997 </p>
        </item>
        <item>
          <p>
	    Fix a register race where down nodes goes undetected in
	    epmd</p>
          <p>
	    Own Id: OTP-13301</p>
        </item>
        <item>
          <p>
	    Improved the gcc inline assembly implementing double word
	    atomic compare and exchange on x86/x86_64 so that it also
	    can be used when compiling with clang.</p>
          <p>
	    Own Id: OTP-13336</p>
        </item>
        <item>
          <p>
	    An optimization preventing a long wait for a scheduler
	    thread looking up information about a process executing
	    on another scheduler thread had unintentionally been lost
	    in erts-5.10 (OTP R16A). This optimization has now been
	    reintroduced.</p>
          <p>
	    Own Id: OTP-13365 Aux Id: OTP-9892 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 7.2.1.1</title>

    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>Introduced new statistics functionality in order to
	    more efficiently retrieve information about run able and
	    active processes and ports. For more information see:</p>
	    <list> <item><seeerl
	    marker="erlang#statistics_total_run_queue_lengths"><c>statistics(total_run_queue_lengths)</c></seeerl></item>
	    <item><seeerl
	    marker="erlang#statistics_run_queue_lengths"><c>statistics(run_queue_lengths)</c></seeerl></item>
	    <item><seeerl
	    marker="erlang#statistics_total_active_tasks"><c>statistics(total_active_tasks)</c></seeerl></item>
	    <item><seeerl
	    marker="erlang#statistics_active_tasks"><c>statistics(active_tasks)</c></seeerl></item>
	    </list>
          <p>
	    Own Id: OTP-13201</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 7.2.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Revert "Fix erroneous splitting of emulator path"</p>
          <p>
	    Own Id: OTP-13202</p>
        </item>
        <item>
          <p>
	    Fix HiPE enabled emulator for FreeBSD.</p>
          <p>
	    Own Id: OTP-13204 Aux Id: pr926 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 7.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Small documentation fixes</p>
          <p>
	    Own Id: OTP-13017</p>
        </item>
        <item>
          <p>
	    Fix memory corruption bug caused by disabling
	    distribution and then re-enable distribution with a node
	    name that has previously been used by a remote node.</p>
          <p>
	    Own Id: OTP-13076 Aux Id: seq12959 </p>
        </item>
        <item>
          <p>
	    Renamed variables with name bool as Visual Studio 2015
	    now treats this is a keyword.</p>
          <p>
	    Own Id: OTP-13079</p>
        </item>
        <item>
	    <p><c>erl_prim_loader</c> has not supported custom
	    loaders for several releases. In the documentation for
	    <c>erl_prim_loader</c>, all references to custom loaders
	    have now been removed.</p>
          <p>
	    Own Id: OTP-13102</p>
        </item>
        <item>
          <p>
	    Fixed compilation of erts together with libc versions
	    that do not define __uint32_t.</p>
          <p>
	    Own Id: OTP-13105</p>
        </item>
        <item>
          <p>
	    erl -make now returns non-zero exit codes on failure</p>
          <p>
	    Own Id: OTP-13107</p>
        </item>
        <item>
          <p>
	    Fix crash on init:restart in embedded mode caused by
	    on_load handler process not being relaunched leading to
	    load failure for modules such as crypto and asn1rt_nif
	    that need it to be present for correct NIF loading.</p>
          <p>
	    Own Id: OTP-13115</p>
        </item>
        <item>
          <p>
	    Fix maps decode in erlang:binary_to_term/1</p>
	    <p>Decoding a term with a large (HAMT) map in an small
	    (FLAT) map could cause a critical error if the external
	    format was not produced by beam.</p>
          <p>
	    Own Id: OTP-13125</p>
        </item>
        <item>
          <p>
	    Fix very rare bug in GC when big maps with a lot of hash
	    collisions from a remote node are waiting in inner
	    message queue.</p>
          <p>
	    Own Id: OTP-13146</p>
        </item>
        <item>
          <p>
	    Fixed a bug that could cause a crash dump to become
	    almost empty.</p>
          <p>
	    Own Id: OTP-13150</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p> Updated the xmllint target to just check the xml
	    files with real documentation content.<br/> Corrected
	    some errors and added some missing target in the DTD's.
	    </p>
          <p>
	    Own Id: OTP-13026</p>
        </item>
        <item>
          <p>
	    Add function enif_getenv to read OS environment variables
	    in a portable way from NIFs.</p>
          <p>
	    Own Id: OTP-13147</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 7.1</title>
    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix bug in ETS that could cause stray objects marked for
	    deletion to occasionally be missed by the cleanup done by
	    <c>safe_fixtable(_,false)</c>.</p>
          <p>
	    Own Id: OTP-12870</p>
        </item>
        <item>
          <p>
	    Fixed VM crash that could occur if a trace port was
	    linked to a process, and the trace port terminated
	    abnormally while handling a trace message. This bug has
	    always existed in the runtime system with SMP support.</p>
          <p>
	    Own Id: OTP-12901</p>
        </item>
        <item>
          <p>
	    Instead of aborting, the vm now creates a crash dump when
	    a system process is terminated.</p>
          <p>
	    Own Id: OTP-12934</p>
        </item>
        <item>
          <p>
	    Fixed a rare emulator dead lock that occurred when
	    erlang:process_flag(priority,...) was called by a process
	    that was also scheduled for an internal system activity.</p>
          <p>
	    Own Id: OTP-12943</p>
        </item>
        <item>
          <p>
	    The runtime system on various posix platforms (except for
	    Linux and Solaris) could crash when large amounts of
	    file-descriptors were in use.</p>
          <p>
	    Own Id: OTP-12954</p>
        </item>
        <item>
          <p>
	    A beam file compiled by hipe for an incompatible runtime
	    system was sometimes not rejected by the loader, which
	    could lead to vm crash. This fix will also allow the same
	    hipe compiler to be used by both normal and debug-built
	    vm.</p>
          <p>
	    Own Id: OTP-12962</p>
        </item>
        <item>
          <p>
	    Fix bug in <c>maps:merge/2</c> when called by hipe
	    compiled code that could cause vm crash. Bug exists since
	    erts-7.0 (OTP 18.0).</p>
          <p>
	    Own Id: OTP-12965</p>
        </item>
        <item>
          <p>
	    When tracing with <c>process_dump</c> option, the VM
	    could abort if there was an ongoing binary match
	    somewhere in the call stack of the traced process.</p>
          <p>
	    Own Id: OTP-12968</p>
        </item>
        <item>
          <p>
	    Fixed possible output deadlock in tty driver when hitting
	    "CTRL-C" in a non-smp emulator shell on unix.</p>
          <p>
	    Own Id: OTP-12987 Aux Id: Seq12947 </p>
        </item>
        <item>
          <p>
	    Fix <c>binary_to_integer</c> to throw badarg for "+" and
	    "-" similar to <c>list_to_integer</c>.</p>
          <p>
	    Own Id: OTP-12988</p>
        </item>
        <item>
          <p>
	    Suppress warning of unused argument when using macro
	    enif_make_pid.</p>
          <p>
	    Own Id: OTP-12989</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Changed default clock source used for OS system time on
	    MacOS X to <c>gettimeofday()</c> in order to improve
	    performance. The system can be configured during build to
	    use the previously used higher resolution clock source by
	    passing the switch <seeguide
	    marker="system/installation_guide:INSTALL#Advanced-configuration-and-build-of-ErlangOTP_Configuring"><c>--with-clock-resolution=high</c></seeguide>
	    when configuring the build.</p>
          <p>
	    Own Id: OTP-12945 Aux Id: OTP-12892 </p>
        </item>
        <item>
          <p>
	    Added the <c>configure</c> option <seeguide
	    marker="system/installation_guide:INSTALL#Advanced-configuration-and-build-of-ErlangOTP_Configuring"><c>--disable-saved-compile-time</c></seeguide>
	    which disables saving of compile date and time in the
	    emulator binary.</p>
          <p>
	    Own Id: OTP-12971</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 7.0.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed a binary memory leak when printing to shell using
	    the tty driver (i.e. not -oldshell).</p>
          <p>
	    Own Id: OTP-12941</p>
        </item>
        <item>
          <p>
	    Fix a bug where the standard error port sometimes crashes
	    with eagain as the reason.</p>
          <p>
	    Own Id: OTP-12942</p>
        </item>
        <item>
           <p>
	    When tracing with <c>process_dump</c> option, the VM
	    could abort if there was an ongoing binary match
	    somewhere in the call stack of the traced process./</p>
          <p>
	    Own Id: OTP-12968</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 7.0.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A process could end up in an inconsistent half exited
	    state in the runtime system without SMP support. This
	    could occur if the processes was traced by a port that it
	    also was linked to, and the port terminated abnormally
	    while handling a trace message for the process.</p>
          <p>
	    This bug has always existed in the runtime system without
	    SMP support, but never in the runtime system with SMP
	    support.</p>
          <p>
	    Own Id: OTP-12889 Aux Id: seq12885 </p>
        </item>
        <item>
          <p>
	    Removed unnecessary copying of data when retrieving
	    corrected Erlang monotonic time.</p>
          <p>
	    Own Id: OTP-12894</p>
        </item>
        <item>
          <p>
	    Changed default OS monotonic clock source chosen at build
	    time. This in order to improve performance. The behavior
	    will now on most systems be that (both OS and Erlang)
	    monotonic time stops when the system is suspended.</p>
          <p>
	    If you prefer that monotonic time elapse during suspend
	    of the machine, you can pass the command line argument
	    <c>--enable-prefer-elapsed-monotonic-time-during-suspend</c>
	    to <c>configure</c> when building Erlang/OTP. The
	    configuration stage will try to find such a clock source,
	    but might not be able to find it. Note that there might
	    be a performance penalty associated with such a clock
	    source.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-12895</p>
        </item>
        <item>
          <p>
	    <c>erlang:system_info(end_time)</c> returned a faulty
	    value on 32-bit architectures.</p>
          <p>
	    Own Id: OTP-12896</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    The <c>configure</c> command line argument
	    <c>--enable-gettimeofday-as-os-system-time</c> has been
	    added which force usage of <c>gettimeofday()</c> for OS
	    system time. This will improve performance of
	    <c>os:system_time()</c> and <c>os:timestamp()</c> on
	    MacOS X, at the expense of worse accuracy, resolution and
	    precision of Erlang monotonic time, Erlang system time,
	    and OS system time.</p>
          <p>
	    Own Id: OTP-12892</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 7.0.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix a rare hanging of the VM seen to happen just after
	    emulator start. Bug exists since R14.</p>
          <p>
	    Own Id: OTP-12859 Aux Id: seq12882 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 7.0</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix issuing with spaces and quoting in the arguments when
	    using erlang:open_port spawn_executable on windows. The
	    behavior now mimics how unix works. This change implies a
	    backwards incompatibility for how spawn_executable works
	    on windows.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-11905</p>
        </item>
        <item>
          <p>
	    Fix global call trace when hipe compiled code call beam
	    compiled functions. Tracing of beam functions should now
	    always work regardless who the caller is.</p>
          <p>
	    Own Id: OTP-11939</p>
        </item>
        <item>
          <p>
	    Correct cache alignment for ETS <c>write_concurrency</c>
	    locks to improve performance by reduced false sharing.
	    May increase memory footprint for tables with
	    <c>write_concurrency</c>.</p>
          <p>
	    Own Id: OTP-11974</p>
        </item>
        <item>
          <p>
	    All possibly blocking operations in the fd/spawn and
	    terminal driver have been converted to non-blocking
	    operations. Before this fix it was possible for the VM to
	    be blocked for a long time if the entity consuming
	    stdout/stderr did not consume it fast enough.</p>
          <p>
	    Own Id: OTP-12239</p>
        </item>
        <item>
          <p>
	    Add missing overhead for offheap binaries created from
	    external format. This fix can improve the garbage
	    collection of large binaries originating from
	    <c>binary_to_term</c> or messages from remote nodes.</p>
          <p>
	    Own Id: OTP-12554</p>
        </item>
        <item>
          <p>
	    Ensure hashing of zero is consistent</p>
	    <p> Erlang treats positive and negative zero as
	    equal:</p> 
          <p>
	    <c>true = 0.0 =:= 0.0/-1</c></p>
	    <p>However, Erlangs hash functions: hash, phash and
	    phash2 did not reflect this behaviour. The hash values
	    produced by the different hash functions would not be
	    identical for positive and negative zero.</p> <p>This
	    change ensures that hash value of positive zero is always
	    produced regardless of the signedness of the zero float,
	    i.e.,</p>
          <p>
	    <c>true = erlang:phash2(0.0) =:=
	    erlang:phash2(0.0/-1)</c></p>
          <p>
	    Own Id: OTP-12641</p>
        </item>
        <item>
          <p>
	    Ensure NIF term creation disallows illegal floating point
	    values and too long atoms. Such values will cause a NIF
	    to throw badarg exception when it returns.</p>
          <p>
	    Own Id: OTP-12655</p>
        </item>
        <item>
          <p>
	    Fixed building of Map results from match_specs</p>
          <p>
	    A faulty "box-value" entered into the heap which could
	    cause a segmentation fault in the garbage collector if it
	    was written on a heap fragment.</p>
          <p>
	    Own Id: OTP-12656</p>
        </item>
        <item>
          <p>
	    Fix hipe bug when matching a "writable" binary. The bug
	    has been seen to sometimes cause a failed binary matching
	    of a correct utf8 character, but other symptoms are also
	    possible.</p>
          <p>
	    Own Id: OTP-12667</p>
        </item>
        <item>
          <p>
	    Keep dirty schedulers from waking other schedulers.</p>
          <p>
	    Own Id: OTP-12685</p>
        </item>
        <item>
          <p>
	    Disable floating point exceptions if the VM is compiled
	    by clang/llvm. This is a known long-standing problem in
	    clang/llvm.</p>
          <p>
	    Own Id: OTP-12717</p>
        </item>
        <item>
          <p>
	    Fix bug in <c>file:sendfile</c> for FreeBSD causing not
	    the entire file to be sent.</p>
          <p>
	    Own Id: OTP-12720</p>
        </item>
        <item>
          <p>
	    Fix the broken Android support in erl_child_setup.c</p>
          <p>
	    Own Id: OTP-12751</p>
        </item>
        <item>
          <p>
	    Faulty statistics reported by the <c>fix_alloc</c>
	    allocator.</p>
          <p>
	    Own Id: OTP-12766</p>
        </item>
        <item>
          <p>
	    Fix two erts_snprintf() calls to correct sizes.</p>
          <p>
	    - run_erl.c (ose): Use the size of the signal type, not
	    its pointer. - erl_node_tables.c: Use the size of the
	    _BUFFER in erts_snprintf() to make sure we can use the
	    full space.</p>
          <p>
	    Own Id: OTP-12771</p>
        </item>
        <item>
          <p>
	    Delayed memory allocations could be delayed an
	    unnecessarily long time.</p>
          <p>
	    Own Id: OTP-12812</p>
        </item>
        <item>
          <p>
	    Make sure that timeouts on a pool of acceptors are
	    released in the correct order.</p>
          <p>
	    Own Id: OTP-12817</p>
        </item>
        <item>
          <p>
	    Fix segmentation fault in module_info for deleted modules</p>
          <p>
	    Own Id: OTP-12820</p>
        </item>
        <item>
	    <p>Fix garbage collection of literals in code purge</p>
	    <p>During code purging and check_process_code, the
	    checking of the binary reference embedded in the match
	    binary state was omitted for the tracing tests. This
	    would cause the binary match state to reference
	    deallocated memory.</p>
          <p>
	    Own Id: OTP-12821</p>
        </item>
        <item>
          <p>
	    A bug has been corrected for gen_tcp:close so when
	    {linger,{true,0}} is in effect it does not wait for data
	    in the driver queue to transfer out before closing the
	    port. Bug fix by Rory Byrne.</p>
          <p>
	    Own Id: OTP-12840</p>
        </item>
        <item>
          <p>
	    The documentation of the driver callback <seecref
	    marker="driver_entry#start"><c>start()</c></seecref>
	    erroneously stated that a return value of
	    <c>ERL_DRV_ERROR_ERRNO</c> caused the error value to be
	    passed via <c>erl_errno</c> when it should have been
	    <c>errno</c>.</p>
          <p>
	    Own Id: OTP-12855</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Add <c>md5</c> and <c>module</c> entries to
	    <c>?MODULE:module_info/0/1</c> and remove obsolete entry
	    'import'.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-11940</p>
        </item>
        <item>
          <p>
	    Debug function <c>erlang:display/1</c> shows content of
	    binaries and bitstrings, not only the length.</p>
          <p>
	    Own Id: OTP-11941</p>
        </item>
        <item>
	    <p>The time functionality of Erlang has been extended.
	    This both includes a <seeguide
	    marker="time_correction#The_New_Time_API">new
	    API</seeguide> for time, as well as <seeguide
	    marker="time_correction#Time_Warp_Modes">time warp
	    modes</seeguide> which alters the behavior of the system
	    when system time changes. <em>You are strongly encouraged
	    to use the new API</em> instead of the old API based on
	    <seemfa
	    marker="erlang#now/0"><c>erlang:now/0</c></seemfa>.
	    <c>erlang:now/0</c> has been deprecated since it is and
	    forever will be a scalability bottleneck. For more
	    information see the <seeguide
	    marker="time_correction">Time and Time
	    Correction</seeguide> chapter of the ERTS User's
	    Guide.</p>
	    <p>Besides the API changes and time warp modes a lot of
	    scalability and performance improvements regarding time
	    management has been made internally in the runtime
	    system. Examples of such improvements are scheduler
	    specific timer wheels, scheduler specific BIF timer
	    management, parallel retrieval of monotonic time and
	    system time on systems with primitives that are not
	    buggy.</p>
          <p>
	    Own Id: OTP-11997</p>
        </item>
        <item>
	    <p><c>erlang:function_exported(M, F, A)</c> will now
	    return <c>true</c> if <c>M:F/A</c> refers to a BIF.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-12099</p>
        </item>
        <item>
          <p>
	    New BIF: <c>erlang:get_keys/0</c>, lists all keys
	    associated with the process dictionary. Note:
	    <c>erlang:get_keys/0</c> is auto-imported.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-12151 Aux Id: seq12521 </p>
        </item>
        <item>
          <p>
	    Make distributed send of large messages yield to improve
	    real-time characteristics.</p>
          <p>
	    Own Id: OTP-12232</p>
        </item>
        <item>
          <p>
	    Use high accuracy poll timeouts</p>
          <p>
	    Where available, use poll/select API's that can handle
	    time resolutions less than 1ms. In the cases where such
	    API's are not available the timeout is rounded up to the
	    nearest ms.</p>
          <p>
	    Own Id: OTP-12236</p>
        </item>
        <item>
          <p>
	    The internal group to user_drv protocol has been changed
	    to be synchronous in order to guarantee that output sent
	    to a process implementing the user_drv protocol is
	    printed before replying. This protocol is used by the
	    standard_output device and the ssh application when
	    acting as a client. </p>
          <p>
	    This change changes the previous unlimited buffer when
	    printing to standard_io and other devices that end up in
	    user_drv to 1KB.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-12240</p>
        </item>
        <item>
	    <p>The previously introduced "eager check I/O" feature is
	    now enabled by default.</p>
	    <p>Eager check I/O can be disabled using the <c>erl</c>
	    command line argument: <c>+secio false</c></p>
	    <p>Characteristics impact compared to previous
	    default:</p> <list> <item>Lower latency and smoother
	    management of externally triggered I/O operations.</item>
	    <item>A slightly reduced priority of externally triggered
	    I/O operations.</item> </list>
          <p>
	    Own Id: OTP-12254 Aux Id: OTP-12117 </p>
        </item>
        <item>
          <p>
	    Properly support maps in match_specs</p>
          <p>
	    Own Id: OTP-12270</p>
        </item>
        <item>
          <p>
	    The notice that a crashdump has been written has been
	    moved to be printed before the crashdump is generated
	    instead of afterwords. The wording of the notice has also
	    been changed.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-12292</p>
        </item>
        <item>
          <p>
	    New function <c>ets:take/2</c>. Works the same as
	    <c>ets:delete/2</c> but also returns the deleted
	    object(s).</p>
          <p>
	    Own Id: OTP-12309</p>
        </item>
        <item>
          <p>
	    Tracing with cpu_timestamp option has been enabled on
	    Linux.</p>
          <p>
	    Own Id: OTP-12366</p>
        </item>
        <item>
          <p>
	    ets:info/1,2 now contains information about whether
	    write_concurrency or read_concurrency is enabled.</p>
          <p>
	    Own Id: OTP-12376</p>
        </item>
        <item>
          <p>
	    Improved usage of <c>gcc</c>'s builtins for atomic memory
	    access. These are used when no other implementation of
	    atomic memory operations is available. For example, when
	    compiling for ARM when <c>libatomic_ops</c> is not
	    available.</p>
          <p>
	    The largest improvement will be seen when compiling with
	    a <c>gcc</c> with support for the <c>__atomic_*</c>
	    builtins (using a <c>gcc</c> of at least version 4.7),
	    but also when only the legacy <c>__sync_*</c> builtins
	    are available (using a <c>gcc</c> of at least version
	    4.1) an improvement can be seen.</p>
          <p>
	    For more information see the "<seeguide
	    marker="system/installation_guide:INSTALL#Advanced-configuration-and-build-of-ErlangOTP_Configuring_Atomic-Memory-Operations-and-the-VM">Atomic
	    Memory Operations and the VM</seeguide>" section of
	    <c>$ERL_TOP/HOWTO/INSTALL.md</c>.</p>
          <p>
	    Own Id: OTP-12383</p>
        </item>
        <item>
          <p>
	    Introduce <c>math:log2/1</c> function to math module.</p>
          <p>
	    Own Id: OTP-12411</p>
        </item>
        <item>
	    <p>The documentation of the Abstract Format (in the ERTS
	    User's Guide) has been updated with types and
	    specification. (Thanks to Anthony Ramine.) </p> <p> The
	    explicit representation of parentheses used in types of
	    the abstract format has been removed. Instead the new
	    functions <c>erl_parse:type_inop_prec()</c> and
	    <c>erl_parse:type_preop_prec()</c> can be used for
	    inserting parentheses where needed. </p>
          <p>
	    Own Id: OTP-12492</p>
        </item>
        <item>
          <p>
	    Remove perfctr support</p>
          <p>
	    Development of perfctr in the linux kernel ceased in
	    2010. The perfctr support code in the Erlang VM is thus
	    effectively dead code and therefore removed.</p>
          <p>
	    Own Id: OTP-12508</p>
        </item>
        <item>
	    <p><c>zlib:inflateChunk/2</c> has been added. It works
	    like <c>zlib:inflate/2</c>, but decompresses no more data
	    than will fit in the buffer configured by
	    <c>zlib:setBufSize/2</c>.</p>
          <p>
	    Own Id: OTP-12548</p>
        </item>
        <item>
          <p>
	    Use linear search for small select_val arrays</p>
          <p>
	    Own Id: OTP-12555</p>
        </item>
        <item>
          <p>
	    New BIF ets:update_counter/4 with a default object as
	    argument, which will be inserted in the table if the key
	    was not found.</p>
          <p>
	    Own Id: OTP-12563</p>
        </item>
        <item>
          <p>
	    Export missing types from zlib module</p>
          <p>
	    Own Id: OTP-12584</p>
        </item>
        <item>
          <p>
	    Use persistent hashmaps for large Maps</p>
          <p>Maps will use a
	    persistent hashmap implementation when the number of
	    pairs in a Map becomes sufficiently large. The change
	    will occur when a Map reaches 33 pairs in size but this
	    limit might change in the future.</p>
          <p>The most significant impact for the user by this
	    change is speed, and to a lesser degree memory
	    consumption and introspection of Maps. Memory consumption
	    size is probalistic but lesser than <c>gb_trees</c> or
	    <c>dict</c> for instance. Any other impacts will be
	    transparent for the user except for the following
	    changes.</p>
          <p>Semantics of Maps have changed in two incompatible
	    ways compared to the experimental implementation in OTP
	    17:</p> <list> <item>Hashing of maps is done different by
	    <c>erlang:phash2/1,2</c>, <c>erlang:phash/1</c> and
	    <c>erlang:hash/2</c>.</item> <item>Comparing two maps
	    with ==, /=, =&lt;, &lt;, &gt;= and &gt;, is done
	    different if the keys contain floating point
	    numbers.</item> </list>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-12585</p>
        </item>
        <item>
          <p>
	    Scalability improvement for <seemfa
	    marker="erlang#make_ref/0">erlang:make_ref/0</seemfa>,
	    and other functionality that create references. Each
	    scheduler now manage its own set of references. By this
	    no communication at all is needed when creating
	    references.</p>
          <p>
	    Previous implementation generated a strictly
	    monotonically increasing sequence of references
	    corresponding to creation time on the runtime system
	    instance. This is <em>not</em> the case with current
	    implementation. You can only expect reference to be
	    unique. The Erlang/OTP documentation has never mentioned
	    anything else but the uniqueness property, so this change
	    <em>is</em> fully compatible. The only reason we've
	    marked this as a potential incompatibility is since an
	    early draft for an Erlang specification mentions strict
	    monotonicity as a property.</p>
          <p>
	    If you need to create data with a strict monotonicity
	    property use <seemfa
	    marker="erlang#unique_integer/1">erlang:unique_integer([monotonic])</seemfa>.
	    Do <em>not</em> use the deprecated <seemfa
	    marker="erlang#now/0">erlang:now()</seemfa>.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-12610</p>
        </item>
        <item>
          <p>
	    Enable different abort signal from heart</p>
	    <p>By using environment variable HEART_KILL_SIGNAL, heart
	    can now use a different signal to kill the old running
	    Erlang.</p>
	    <p>By default the signal is SIGKILL but SIGABRT may also
	    be used by setting environment variable:
	    HEART_KILL_SIGNAL=SIGABRT</p>
          <p>
	    Own Id: OTP-12613 Aux Id: seq12826 </p>
        </item>
        <item>
          <p>
	    Update autconf to latest version 2015-03-04</p>
          <p>
	    Own Id: OTP-12646</p>
        </item>
        <item>
          <p>
	    Optimization of timers internally in the VM. This include
	    process timers (<c>receive ... after</c>), port timers
	    (<c>driver_set_timer()</c>) as well as BIF timers
	    (<c>erlang:send_after()</c>/<c>erlang:start_timer()</c>).</p>
          <p>
	    Each scheduler thread now has its own lock-free timer
	    service instead of one locked central service. This
	    dramatically improves performance of timer management on
	    systems with a large amount of schedulers and timers.</p>
          <p>
	    The timer service internal data structure has also been
	    optimized to be able to handle more timers than before.
	    That is, each timer service is by its self able to handle
	    more timers without dramatic performance loss than the
	    old centralized timer service.</p>
          <p>
	    The API of BIF timers has also been extended. Timeout
	    values are for example no longer limited to 32-bit
	    integers. For more information see the documentation of
	    <seemfa
	    marker="erlang#start_timer/4"><c>erlang:start_timer/4</c></seemfa>,
	    <seemfa
	    marker="erlang#send_after/4"><c>erlang:send_after/4</c></seemfa>,
	    <seemfa
	    marker="erlang#cancel_timer/2"><c>erlang:cancel_timer/2</c></seemfa>,
	    and <seemfa
	    marker="erlang#read_timer/2"><c>erlang:read_timer/2</c></seemfa>.</p>
          <p>
	    Characteristics impact: Calls to the synchronous versions
	    of <c>erlang:cancel_timer()</c>, and
	    <c>erlang:read_timer()</c> may take substantially longer
	    time to complete than before. This occur when the timer
	    that is accessed is managed by a remote scheduler. You
	    typically want to use the new asynchronous option in
	    order to avoid blocking the calling process.</p>
          <p>
	    Own Id: OTP-12650 Aux Id: OTP-11997 </p>
        </item>
        <item>
          <p>
	    Specialize instructions from common assembler patterns</p>
	    <p>Specialize common instructions of <c>rem</c>,
	    <c>band</c>, <c>minus</c> and <c>plus</c> in the beam
	    loader. This will reduce the number of fetches and thus
	    lessen the instruction dispatch pressure during runtime
	    and speed up those operations in some common cases.</p>
	    <p>Specialize move patterns from x-registers to the stack
	    with a new <c>move_window</c> instruction. This change
	    will reduce instruction dispatch pressure.</p>
          <p>
	    Own Id: OTP-12690</p>
        </item>
        <item>
          <p>
	    Fix cross compilation for Android.</p>
          <p>
	    Own Id: OTP-12693</p>
        </item>
        <item>
          <p>
	    Fix incorrect use of autoconf macro AC_EGREP_CPP, which
	    could cause faulty configuration if run from a path
	    containing the string 'yes'.</p>
          <p>
	    Own Id: OTP-12706</p>
        </item>
        <item>
          <p>
	    Minimal Java version is now 1.6</p>
          <p>
	    Own Id: OTP-12715</p>
        </item>
        <item>
          <p>
	    Send format and args on process exit to error_logger</p>
          <p>
	    Previously, the emulator would generate a whole string
	    with values and call the error_logger passing
	    <c>"~s~n"</c>. This changes it to a format string
	    containing <c>~p</c> with the respective values as
	    arguments.</p>
          <p>
	    Own Id: OTP-12735</p>
        </item>
        <item>
          <p>
	    Map error logger warnings to warning messages by default.</p>
          <p>
	    Own Id: OTP-12755</p>
        </item>
        <item>
          <p>
	    Configure architecture ppc64le architecture as a ppc64</p>
          <p>
	    Own Id: OTP-12761</p>
        </item>
        <item>
          <p>
	    Add function <c>enif_raise_exception</c> to allow a NIF
	    to raise an error exception with any type of reason.</p>
          <p>
	    Own Id: OTP-12770</p>
        </item>
        <item>
          <p>
	    Optimized node table statistics retrieval.</p>
          <p>
	    Own Id: OTP-12777</p>
        </item>
        <item>
          <p>
	    Map beam error logger warnings to warning messages by
	    default. Previously these messages were mapped to the
	    error channel by default.</p>
          <p>
	    Own Id: OTP-12781</p>
        </item>
        <item>
          <p>
	    gen_tcp:shutdown/2 is now asynchronous</p>
          <p>
	    This solves the following problems with the old
	    implementation:</p>
          <p>
	    It doesn't block when the TCP peer is idle or slow. This
	    is the expected behaviour when shutdown() is called: the
	    caller needs to be able to continue reading from the
	    socket, not be prevented from doing so.</p>
          <p>
	    It doesn't truncate the output. The current version of
	    gen_tcp:shutdown/2 will truncate any outbound data in the
	    driver queue after about 10 seconds if the TCP peer is
	    idle of slow. Worse yet, it doesn't even inform anyone
	    that the data has been truncated: 'ok' is returned to the
	    caller; and a FIN rather than an RST is sent to the TCP
	    peer.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-12797</p>
        </item>
        <item>
          <p>
	    Introduced delayed node table GC. This in order to avoid
	    oscillation of entries in and out of the tables. The
	    oscillation caused unnecessary lock contention on the
	    table locks. The delay length can be set by passing the
	    <seecom marker="erl#+zdntgc"><c>+zdntgc</c></seecom>
	    command line argument.</p>
          <p>
	    Characteristics impact: The tables can grow to very large
	    sizes with unused entries if the node is get huge amounts
	    of short lived connections from other nodes. This problem
	    can be alleviated by shortening the length of the delay
	    using the <c>+zdntgc</c> command line argument.</p>
          <p>
	    Own Id: OTP-12802</p>
        </item>
        <item>
	    <p>Improved implementation of <seemfa
	    marker="erlang#statistics/1"><c>erlang:statistics</c></seemfa><c>(io)</c>
	    in order to reduce contention between schedulers.</p>
	    <p>Characteristics impact: The actual call to
	    <c>erlang:statistics(io)</c> takes longer time to
	    complete, but the overall impact on the system is
	    improved.</p>
          <p>
	    Own Id: OTP-12842</p>
        </item>
        <item>
          <p>
	    There are many cases where user code needs to be able to
	    distinguish between a socket that was closed normally and
	    one that was aborted. Setting the option
	    {show_econnreset, true} enables the user to receive
	    ECONNRESET errors on both active and passive sockets.</p>
          <p>
	    Own Id: OTP-12843</p>
        </item>
        <item>
          <p>
	    Do not preallocate too large event pool</p>
          <p>
	    A default pool size of 4000 is too excessive for the
	    common case. This corresponds directly to the number of
	    threads in the system. Change
	    ERTS_TS_EV_ALLOC_DEFAULT_POOL_SIZE to 2048. Change
	    ERTS_TS_EV_ALLOC_POOL_SIZE to 32.</p>
          <p>
	    Own Id: OTP-12849</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 6.4.1.7</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A process communicating with a port via one of the
	    <c>erlang:port_*</c> BIFs could potentially end up in an
	    inconsistent state if the port terminated during the
	    communication. When this occurred the process could later
	    block in a <c>receive</c> even though it had messages
	    matching in its message queue.</p>
          <p>
	    This bug was introduced in erts version 5.10 (OTP R16A).</p>
          <p>
	    Own Id: OTP-13424 Aux Id: OTP-10336 </p>
        </item>
        <item>
          <p>
	    Calls to <c>erl_drv_send_term()</c> or
	    <c>erl_drv_output_term()</c> from a non-scheduler thread
	    while the corresponding port was invalid caused the
	    emulator to enter an inconsistent state which eventually
	    caused an emulator crash.</p>
          <p>
	    Own Id: OTP-13866</p>
        </item>
        <item>
	    <p>Driver and NIF operations accessing processes or ports
	    could cause an emulator crash when used from
	    non-scheduler threads. Those operations are:</p> <list>
	    <item><c>erl_drv_send_term()</c></item>
	    <item><c>driver_send_term()</c></item>
	    <item><c>erl_drv_output_term()</c></item>
	    <item><c>driver_output_term()</c></item>
	    <item><c>enif_send()</c></item>
	    <item><c>enif_port_command()</c></item> </list>
          <p>
	    Own Id: OTP-13869</p>
        </item>
        <item>
          <p>
	    Fix bug in <c>binary_to_term</c> for binaries created by
	    <c>term_to_binary </c> with option <c>compressed</c>. The
	    bug can cause <c>badarg</c> exception for a valid binary
	    when Erlang VM is linked against a <c>zlib</c> library of
	    version 1.2.9 or newer. Bug exists since OTP 17.0.</p>
          <p>
	    Own Id: OTP-14159 Aux Id: ERL-340 </p>
        </item>
        <item>
          <p>
	    Fixed bug in operator <c>bxor</c> causing erroneuos
	    result when one operand is a big <em>negative</em>
	    integer with the lowest <c>N*W</c> bits as zero and the
	    other operand not larger than <c>N*W</c> bits. <c>N</c>
	    is an integer of 1 or larger and <c>W</c> is 32 or 64
	    depending on word size.</p>
          <p>
	    Own Id: OTP-14514</p>
        </item>
        <item>
          <p>
	    Fixed bug in <c>binary_to_term</c> and
	    <c>binary_to_atom</c> that could cause VM crash.
	    Typically happens when the last character of an UTF8
	    string is in the range 128 to 255, but truncated to only
	    one byte. Bug exists in <c>binary_to_term</c> since ERTS
	    version 5.10.2 (OTP_R16B01) and <c>binary_to_atom</c>
	    since ERTS version 9.0 (OTP-20.0).</p>
          <p>
	    Own Id: OTP-14590 Aux Id: ERL-474 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 6.4.1.6</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    When calling <c>garbage_collect/[1,2]</c> or
	    <c>check_process_code/[2,3]</c> from a process with a
	    higher priority than the priority of the process operated
	    on, the run queues could end up in an inconsistent state.
	    This bug has now been fixed.</p>
          <p>
	    Own Id: OTP-13298 Aux Id: OTP-11388 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 6.4.1.5</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed a bug that could cause a crash dump to become
	    almost empty.</p>
          <p>
	    Own Id: OTP-13150</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 6.4.1.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The 'raw' socket option could not be used multiple times
	    in one call to any e.g gen_tcp function because only one
	    of the occurrences were used. This bug has been fixed,
	    and also a small bug concerning propagating error codes
	    from within inet:setopts/2.</p>
          <p>
	    Own Id: OTP-11482 Aux Id: seq12872 </p>
        </item>
      </list>
    </section>

</section>


<section><title>Erts 6.4.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The VTS mode in Common Test has been modified to use a
	    private version of the Webtool application (ct_webtool).</p>
          <p>
	    Own Id: OTP-12704 Aux Id: OTP-10922 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 6.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix missing quotation in the <c>LM_FIND_EMU_CC</c>
	    <c>autoconf</c> macro which could cause build failures.</p>
          <p>
	    Own Id: OTP-12388</p>
        </item>
        <item>
          <p>
	    Fix erroneous printout of monitors in crashdump file.</p>
          <p>
	    Own Id: OTP-12537</p>
        </item>
        <item>
          <p>
	    The runtime system without SMP support could crash in the
	    BIF <c>port_control/3</c> if the port that was being
	    accessed died during the call to the BIF.</p>
          <p>
	    Own Id: OTP-12544 Aux Id: Seq12777 </p>
        </item>
        <item>
          <p>
	    Avoid corrupt oversized integer to be created from binary
	    matching. Instead throw system_limit exception which is
	    the correct behavior. A peculiar symptom of this bug was
	    that bitwise operations (band, bor, bxor) on such
	    oversized integers could return the empty list [].
	    Credit: Mikael Pettersson, Nico Kruber</p>
          <p>
	    Own Id: OTP-12556</p>
        </item>
        <item>
          <p>
	    A race condition when calling <c>port_info/1</c> could
	    cause a memory fault has been fixed.</p>
          <p>
	    Own Id: OTP-12587</p>
        </item>
        <item>
          <p>
	    Fix comparison of exact terms. An overflow that could
	    cause faulty comparisons has been fixed. Comparison of
	    exact terms is exclusively used within Maps.</p>
          <p>
	    Own Id: OTP-12623</p>
        </item>
        <item>
          <p>
	    Fix bug in <c>list_to_integer/1</c> for very long lists
	    that could cause VM crash.</p>
          <p>
	    Own Id: OTP-12624</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Introduced a runtime system internal 64-bit API for
	    atomic memory operations.</p>
          <p>
	    Own Id: OTP-12351</p>
        </item>
        <item>
          <p>
	    Add command line argument option for the initial size of
	    process dictionaries.</p>
          <p>
	    Use '+hpds &lt;size&gt;' to set initial process
	    dictionary size for spawned processes.</p>
          <p>
	    Own Id: OTP-12535 Aux Id: seq12809 </p>
        </item>
        <item>
          <p>
	    Fix documentation on $char for Unicode</p>
          <p>
	    Own Id: OTP-12545</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 6.3.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix getifaddrs realloc pointer error</p>
          <p>
	    When a buffer was exhausted and subsequently reallocated,
	    we could get an unsafe pointer pointing to faulty memory.</p>
          <p>
	    For this to occur we would need to have a large number of
	    interfaces and a reallocation of memory to a lower
	    addresses.</p>
          <p>
	    The symptom would be garbage returned from
	    erlang:port_control(Port, 25, [])
	    (prim_inet:getifaddrs(Port) resulting in a badarg) or a
	    segmentation fault.</p>
          <p>
	    Own Id: OTP-12445</p>
        </item>
        <item>
          <p>
	    Don't close all file descriptors twice in child_setup</p>
          <p>
	    The commit c2b4eab25c907f453a394d382c04cd04e6c06b49
	    introduced an error in which child_setup erroneously
	    tried to close all file descriptors twice.</p>
          <p>
	    Use closefrom() if available when closing all file
	    descriptors.</p>
          <p>
	    The function closefrom() was only used in the vfork()
	    case before but is now also used in the fork() case if
	    available.</p>
          <p>
	    Own Id: OTP-12446</p>
        </item>
        <item>
          <p>
	    During a crashdump all file descriptors are closed to
	    ensure the closing of the epmd port and to reserve a file
	    descriptor for the crashdump file.</p>
          <p>
	    If a driver (third party library) cannot handle closing
	    of sockets this could result in a segmentation fault in
	    which case a crashdump would not be produced. This is now
	    fixed by only closing inets sockets via an emergency
	    close callback to the driver and thus closing the epmd
	    socket.</p>
          <p>
	    Own Id: OTP-12447</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 6.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix HiPE debug lock checking on OS X 64bit</p>
          <p>
	    Position-independent code is mandatory on OS X. We use
	    r11 as an intermediate register to fill
	    BIF_P-&gt;hipe.bif_callee. This fixes the following error
	    when doing `make debug FLAVOR=smp`:</p>
          <p>
	    clang -cc1as: fatal error: error in backend: 32-bit
	    absolute addressing is not supported in 64-bit mode</p>
          <p>
	    Own Id: OTP-12188</p>
        </item>
        <item>
          <p>
	    Fix race bug that could cause VM crash in
	    <c>erlang:port_get_data/1</c> if the port was closed by a
	    concurrent process. Also fix fatal bug if
	    <c>port_set_data/2</c> is called with a non-immediate
	    data term. Both bugs exist since R16B01.</p>
          <p>
	    Own Id: OTP-12208</p>
        </item>
        <item>
          <p>
	    Correct make variable SSL_DED_LD_RUNTIME_LIBRARY_PATH
	    when erl_xcomp_sysroot ends with a slash.</p>
          <p>
	    Own Id: OTP-12216 Aux Id: seq12700 </p>
        </item>
        <item>
          <p>
	    Fix two cases of unreachable code caused by false use of
	    assignment operators.</p>
          <p>
	    Own Id: OTP-12222</p>
        </item>
        <item>
          <p>
	    Fix bug when hipe compiled code makes tail call to a BIF
	    that disables GC while trapping (sush as binary_to_list,
	    list_to_binary, binary_to_term, term_to_binary).</p>
          <p>
	    Own Id: OTP-12231</p>
        </item>
        <item>
          <p>
	    Fix bug when a migrated empty memory carrier is reused
	    just before it should be destroyed by the thread that
	    created it.</p>
          <p>
	    Own Id: OTP-12249</p>
        </item>
        <item>
          <p>
	    Prevents compile-time errors in NIFs, when the compiler
	    is instructed to treat missing field initializers as
	    errors, by adding an initializer for the new options
	    field which was added to ErlNifEntry for 17.3.</p>
          <p>
	    Own Id: OTP-12266</p>
        </item>
        <item>
          <p>
	    Fixed CPU topology detection on FreeBSD systems where
	    Erlang/OTP is compiled by new C compilers (including, but
	    possibly not limited to, gcc 4.9 and clang).</p>
          <p>
	    Own Id: OTP-12267</p>
        </item>
        <item>
          <p>
	    Use C99 function isfinite() instead of finite() when
	    available on non GCC compilers.</p>
          <p>
	    Own Id: OTP-12268</p>
        </item>
        <item>
          <p>
	    Fix bug on windows where an incorrect number of links
	    could be returned when doing file:read_file_info on a
	    directory.</p>
          <p>
	    Own Id: OTP-12269</p>
        </item>
        <item>
          <p>
	    Fix rare bug when purging module on VM started with
	    +Meamin.</p>
          <p>
	    Own Id: OTP-12273</p>
        </item>
        <item>
          <p>
	    Repair run_erl terminal window size adjustment sent from
	    to_erl. This was broken in OTP 17.0 which could lead to
	    strange cursor behaviour in the to_erl shell.</p>
          <p>
	    Own Id: OTP-12275 Aux Id: seq12739 </p>
        </item>
        <item>
          <p>
	    Fixed bug on windows causing gen_tcp/udp to return an
	    error when given an fd to work with.</p>
          <p>
	    Own Id: OTP-12289</p>
        </item>
        <item>
          <p>
	    Fix various internal erts issues where negating a signed
	    integer in C would trigger undefined behavior. This fixes
	    issues when dividing with bignums and list_to_integer.</p>
          <p>
	    Own Id: OTP-12290</p>
        </item>
        <item>
          <p>
	    When flushing output to stdout on windows, the emulator
	    could sometimes hang indefinitely waiting for the flush
	    to complete. This has been fixed.</p>
          <p>
	    Own Id: OTP-12291</p>
        </item>
        <item>
          <p>
	    Fix so that non-smp emulators with dirty scheduler
	    support shows the correct number of dirty schedulers when
	    calling erlang:system_info(system_version).</p>
          <p>
	    Own Id: OTP-12295</p>
        </item>
        <item>
          <p>
	    Add <c>nif_version</c> to <c>erlang:system_info/1</c> in
	    order to get the NIF API version of the runtime system in
	    a way similar to <c>driver_version</c>.</p>
          <p>
	    Own Id: OTP-12298</p>
        </item>
        <item>
          <p>
	    Fix bug that could cause the return value from dirty NIF
	    with zero arity to be treated as garbage, leading to VM
	    crash.</p>
          <p>
	    Own Id: OTP-12300</p>
        </item>
        <item>
          <p>
	    Improve allocation carrier migration search logic. This
	    will reduce the risk of failed migrations that could lead
	    to excess memory consumption. It will also improve smp
	    performance due to reduced memory contention on the
	    migration pool.</p>
          <p>
	    Own Id: OTP-12323</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>Introduced support for eager check I/O.</p>
	    <p>By default eager check I/O will be disabled, but this
	    will most likely be changed in OTP 18. When eager check
	    I/O is enabled, schedulers will more frequently check for
	    I/O work. Outstanding I/O operations will however not be
	    prioritized to the same extent as when eager check I/O is
	    disabled.</p>
	    <p>Eager check I/O can be enabled using the <c>erl</c>
	    command line argument: <c>+secio true</c></p>
	    <p>Characteristics impact when enabled:</p> <list>
	    <item>Lower latency and smoother management of externally
	    triggered I/O operations.</item> <item>A slightly reduced
	    priority of externally triggered I/O operations.</item>
	    </list>
          <p>
	    Own Id: OTP-12117</p>
        </item>
        <item>
          <p>
	    Fix erts .app-file</p>
          <p>
	    Own Id: OTP-12189</p>
        </item>
        <item>
          <p>
	    Add configure option --with-ssl-incl=PATH to support
	    OpenSSL installations with headers and libraries at
	    different places.</p>
          <p>
	    Own Id: OTP-12215 Aux Id: seq12700 </p>
        </item>
        <item>
          <p>
	    Optimization of atomic memory operations with release
	    barrier semantics on 32-bit PowerPC when using the
	    implementation included in OTP.</p>
          <p>
	    Own Id: OTP-12250</p>
        </item>
        <item>
          <p>
	    Minor adjustment of scheduler activation code making sure
	    that an activation of a scheduler is not prevented by its
	    run-queue being non-empty. (Thanks to Songlu Cai)</p>
          <p>
	    Own Id: OTP-12287</p>
        </item>
        <item>
          <p>
	    Improved support for atomic memory operations provided by
	    the <url
	    href="https://github.com/ivmai/libatomic_ops/">libatomic_ops</url>
	    library. Most importantly support for use of native
	    double word atomics when implemented by
	    <c>libatomic_ops</c> (for example, implemented for ARM).</p>
          <p>
	    The <seeguide
	    marker="system/installation_guide:INSTALL#Advanced-configuration-and-build-of-ErlangOTP_Configuring_Atomic-Memory-Operations-and-the-VM"><c>$ERL_TOP/HOWTO/INSTALL.md</c></seeguide>
	    document now also more clearly describes when you want to
	    build together with a <c>libatomic_ops</c> installation.</p>
          <p>
	    Own Id: OTP-12302</p>
        </item>
        <item>
          <p>
	    Add configure option --with-ssl-rpath to control which
	    runtime library path to use for dynamic linkage toward
	    OpenSSL.</p>
          <p>
	    Own Id: OTP-12316 Aux Id: seq12753 </p>
        </item>
        <item>
          <p>
	    Added systemd notify support to epmd</p>
          <p>
	    Own Id: OTP-12321</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 6.2.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix bug when an migrated empty memory carrier is reused
	    just before it should be destroyed by the thread that
	    created it.</p>
          <p>
	    Own Id: OTP-12249</p>
        </item>
        <item>
          <p>
	    Repair run_erl terminal window size adjustment sent from
	    to_erl. This was broken in OTP 17.0 which could lead to
	    strange cursor behaviour in the to_erl shell.</p>
          <p>
	    Own Id: OTP-12275 Aux Id: seq12739 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 6.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    General documentation updates.</p>
          <p>
	    Own Id: OTP-12052</p>
        </item>
        <item>
	    <p>A bug in the VM code implementing sending of signals
	    to ports could cause the receiving port queue to remain
	    in a busy state forever. When this state had been
	    reached, processes sending command signals to the port
	    either got suspended forever, or, if the <c>nosuspend</c>
	    feature was used, always failed to send to the port. This
	    bug was introduced in ERTS version 5.10.</p>
	    <p>In order for this bug to be triggered on a port, one
	    had to at least once utilize the <c>nosuspend</c>
	    functionality when passing a signal to the port. This by
	    either calling</p> <list> <item> <seemfa
	    marker="erlang#port_command/3"><c>port_command(Port,
	    Data, [nosuspend | Options])</c></seemfa>, </item>
	    <item> <seemfa
	    marker="erlang#send/3"><c>erlang:send(Port, {PortOwner,
	    {command, Data}}, [nosuspend | Options])</c></seemfa>,
	    </item> <item> <seemfa
	    marker="erlang#send_nosuspend/2"><c>erlang:send_nosuspend(Port,
	    {PortOwner, {command, Data}})</c></seemfa>, or </item>
	    <item> <seemfa
	    marker="erlang#send_nosuspend/3"><c>erlang:send_nosuspend(Port,
	    {PortOwner, {command, Data}}, Options)</c></seemfa>.
	    </item> </list>
	    <p>Thanks Vasily Demidenok for reporting the issue, and
	    Sergey Kudryashov for providing a testcase.</p>
          <p>
	    Own Id: OTP-12082 Aux Id: OTP-10336 </p>
        </item>
        <item>
          <p>
	    Fix size overflow bug at memory allocation. A memory
	    allocation call, with an insane size close to the entire
	    address space, could return successfully as if it had
	    allocated just a few bytes. (Thanks to Don A. Bailey for
	    reporting)</p>
          <p>
	    Own Id: OTP-12091</p>
        </item>
        <item>
          <p>
	    Fix various issues where negating a signed integer would
	    trigger undefined behaviour. This fixes issues in the
	    enif_make_int64 interface and some edge cases inside the
	    erlang runtime system.</p>
          <p>
	    Own Id: OTP-12097</p>
        </item>
        <item>
          <p>
	    The documentation erroneously listed the <seecom
	    marker="erl#+swct"><c>+swct</c></seecom> command line
	    argument under <c>+sws</c>.</p>
          <p>
	    Own Id: OTP-12102 Aux Id: OTP-10994 </p>
        </item>
        <item>
          <p>
	    Profiling messages could be delivered out of order when
	    profiling on <c>runnable_procs</c> and/or
	    <c>runnable_ports</c> using <seemfa
	    marker="erlang#system_profile/2"><c>erlang:system_profile/2</c></seemfa>.
	    This bug was introduced in ERTS version 5.10.</p>
          <p>
	    Own Id: OTP-12105 Aux Id: OTP-10336 </p>
        </item>
        <item>
          <p>
	    Various logging fixes, including: Add run queue index to
	    the process dump in crash dumps.<br/> Add thread index to
	    enomem slogan when crashing.<br/> Remove error logger
	    message for sending messages to old instances of the same
	    node.</p>
          <p>
	    Own Id: OTP-12115</p>
        </item>
        <item>
          <p>
	    Fix compiler warnings reported by LLVM</p>
          <p>
	    Own Id: OTP-12138</p>
        </item>
        <item>
          <p>
	    Correct conversion of <c>MIN_SMALL</c> by
	    <c>list_to_integer/1</c> and <c>binary_to_integer/1</c>.
	    The bug produced an unnormalized bignum which can cause
	    strange behavior such as comparing different to a correct
	    <c>MIN_SMALL</c> integer. The value <c>MIN_SMALL</c> is
	    <c>-(1 bsl 27) = -134217728</c> on a 32-bit VM and <c>-(1
	    bsl 59) = -576460752303423488</c> on a 64-bit VM. (Thanks
	    to Jesper Louis Andersen, Mikael Pettersson and Anthony
	    Ramine for report, patch and optimization suggestion)</p>
          <p>
	    Own Id: OTP-12140</p>
        </item>
        <item>
          <p>
	    Fix bug in <c>term_to_binary</c> that reallocates binary
	    with inconsistent size information. Bug has never been
	    confirmed to be the cause of any faulty behavior.</p>
          <p>
	    Own Id: OTP-12141</p>
        </item>
        <item>
          <p>
	    Real_path method used while prim loading archive files
	    was not taking into account the fact that windows
	    directory symlinks can be across different drives.</p>
          <p>
	    Own Id: OTP-12155</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Add log2 histogram to lcnt for lock wait time</p>
          <p>
	    Own Id: OTP-12059</p>
        </item>
        <item>
          <p>
	    Introduced <seecref
	    marker="erl_nif#enif_schedule_nif"><c>enif_schedule_nif()</c></seecref>
	    to the NIF API.</p>
          <p>
	    The <c>enif_schedule_nif()</c> function allows a
	    long-running NIF to be broken into separate NIF
	    invocations without the help of a wrapper function
	    written in Erlang. The NIF first executes part of the
	    long-running task, then calls <c>enif_schedule_nif()</c>
	    to schedule a NIF for later execution to continue the
	    task. Any number of NIFs can be scheduled in this manner,
	    one after another. Since the emulator regains control
	    between invocations, this helps avoid problems caused by
	    native code tying up scheduler threads for too long.</p>
          <p>
	    The <c>enif_schedule_nif()</c> function also replaces the
	    <c>enif_schedule_dirty_nif()</c> in the experimental
	    dirty NIF API. Note that the only incompatible changes
	    made are in the experimental dirty NIF API.</p>
          <p>
	    See the <seecref marker="erl_nif">NIF
	    documentation</seecref> for more information.</p>
          <p>
	    Thanks to Steve Vinoski.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-12128</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 6.1.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    OTP-11850 fixed filelib:wildcard/1 to work with broken
	    symlinks. This correction, however, introduced problems
	    since symlinks were no longer followed for functions like
	    filelib:ensure_dir/1, filelib:is_dir/1,
	    filelib:file_size/1, etc. This is now corrected.</p>
          <p>
	    Own Id: OTP-12054 Aux Id: seq12660 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 6.1.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed ETHR_FORCE_INLINE which caused the build to break
	    on some platforms without adequate thread support
	    (VxWorks).</p>
          <p>
	    Own Id: OTP-12010</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 6.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>The documentation for <c>spawn_opt/5</c> now has a
	    note mentioning that the <c>monitor</c> option is not
	    supported.</p>
          <p>
	    Own Id: OTP-11849</p>
        </item>
        <item>
          <p>
	    Fix broken system monitoring of <c>large_heap</c> for
	    non-smp VM. No message for <c>large_heap</c> was ever
	    sent on non-smp VM. Bug exist since R16B.</p>
          <p>
	    Own Id: OTP-11852</p>
        </item>
        <item>
          <p>
	    The emulator without SMP support crashed when passing a
	    message to a process without enough heap space for the
	    message. This bug was introduced in <c>erts-6.0</c>.</p>
          <p>
	    Own Id: OTP-11887 Aux Id: OTP-11388 </p>
        </item>
        <item>
          <p>
	    Fix race between ETS table deletion and unfixation that
	    could cause VM crash. The race could happen between a
	    terminating process that does not own the table but has a
	    fixation on it and another process that deletes the table
	    (maybe the owner terminating) at the same time. Bug
	    existed since R15B02.</p>
          <p>
	    Own Id: OTP-11892</p>
        </item>
        <item>
	    <p>The string following the <c>-eval</c> option when
	    invoking <c>erl</c> would not be properly translated from
	    UTF-8 to a list of Unicode characters (as would the
	    arguments for <c>-run</c>).</p>
	    <p>That bug would cause the build of Erlang/OTP to fail
	    when building in a directory whose pathname contained
	    non-US ASCII characters encoded in UTF-8. (Thanks to Eric
	    Pailleau for reporting this bug.)</p>
          <p>
	    Own Id: OTP-11916</p>
        </item>
        <item>
          <p>
	    Fix erts_debug:size/1 to handle Map sizes</p>
          <p>
	    Own Id: OTP-11923</p>
        </item>
        <item>
          <p>
	    Removed <c>erlang:bitstr_to_list/1</c> and
	    <c>erlang:list_to_bitstr/1</c>. They were added by
	    mistake, and have always raised an <c>undefined</c>
	    exception when called.</p>
          <p>
	    Own Id: OTP-11942</p>
        </item>
        <item>
          <p>
	    Fixed compilation using mingw-w64 on Windows.</p>
          <p>
	    Thanks to Jani Hakala.</p>
          <p>
	    Own Id: OTP-11945</p>
        </item>
        <item>
          <p>
	    The git sha is no longer printed in the shell start
	    header when erlang is built from a tagged git release.</p>
          <p>
	    Own Id: OTP-11961</p>
        </item>
        <item>
          <p>
	    Fixed a bug where <c>send</c> trace events were
	    erroneously dropped when the send was done to a
	    registered process. This bug was introduced in R16B.</p>
          <p>
	    Own Id: OTP-11968</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>The following native functions now bump an appropriate
	    amount of reductions and yield when out of
	    reductions:</p> <list>
	    <item><c>erlang:binary_to_list/1</c></item>
	    <item><c>erlang:binary_to_list/3</c></item>
	    <item><c>erlang:bitstring_to_list/1</c></item>
	    <item><c>erlang:list_to_binary/1</c></item>
	    <item><c>erlang:iolist_to_binary/1</c></item>
	    <item><c>erlang:list_to_bitstring/1</c></item>
	    <item><c>binary:list_to_bin/1</c></item> </list>
	    <p>Characteristics impact:</p> <taglist>
	    <tag>Performance</tag> <item>The functions converting
	    from lists got a performance loss for very small lists,
	    and a performance gain for very large lists.</item>
	    <tag>Priority</tag> <item>Previously a process executing
	    one of these functions effectively got an unfair priority
	    boost. This priority boost depended on the input size.
	    The larger the input was, the larger the priority boost
	    got. This unfair priority boost is now lost. </item>
	    </taglist>
          <p>
	    Own Id: OTP-11888</p>
        </item>
        <item>
          <p>
	    The systemd features of epmd have been removed from epmd
	    by default. To enable them you have to build erlang with
	    the configure option --enable-systemd.</p>
          <p>
	    Own Id: OTP-11921</p>
        </item>
        <item>
          <p>
	    Removed Erlang wrapper code used when calling
	    <c>binary_to_term/1</c>, and <c>binary_to_term/2</c>.
	    This improves the performance of these BIFs especially
	    when they are called with small binaries as input.</p>
          <p>
	    Own Id: OTP-11931</p>
        </item>
        <item>
          <p>
	    Add erlang:system_info(tolerant_timeofday), an API to
	    check whether compensation for sudden changes of system
	    time is enabled or not.</p>
          <p>
	    Own Id: OTP-11970</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 6.0.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix broken system monitoring of <c>large_heap</c> for
	    non-smp VM. No message for <c>large_heap</c> was ever
	    sent on non-smp VM. Bug exist since R16B.</p>
          <p>
	    Own Id: OTP-11852</p>
        </item>
        <item>
          <p>
	    Fixed type spec of <c>erlang:system_info/1</c>.</p>
          <p>
	    Own Id: OTP-11859 Aux Id: OTP-11615 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 6.0</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The option dupnames did not work as intended in re. When
	    looking for names with {capture, [Name, ...]}, re:run
	    returned a random instance of the match for that name,
	    instead of the leftmost matching instance, which was what
	    the documentation stated. This is now corrected to adhere
	    to the documentation. The option {capture,all_names}
	    along with a re:inspect/2 function is also added to
	    further help in using named subpatterns.</p>
          <p>
	    Own Id: OTP-11205</p>
        </item>
        <item>
          <p>
	    Allow loading of NIF library with unicode path name</p>
          <p>
	    Own Id: OTP-11408</p>
        </item>
        <item>
          <p>
	    Allow loading of driver with unicode path name</p>
          <p>
	    Own Id: OTP-11549</p>
        </item>
        <item>
          <p>
	    Fixed a bug where starting Erlang without having an open
	    stdin on fd 0 would sometimes deadlock the emulator when
	    terminating.</p>
          <p>
	    Own Id: OTP-11558</p>
        </item>
        <item>
          <p>
	    The option '-names' in epmd now works on Windows (Thanks
	    to Johannes Weißl)</p>
          <p>
	    Own Id: OTP-11565</p>
        </item>
        <item>
          <p>
	    Correction of the examples in escript documentation.
	    (Thanks to Pierre Fenoll).</p>
          <p>
	    Own Id: OTP-11577</p>
        </item>
        <item>
          <p>
	    Fix bs_get_integer instruction</p>
          <p>
	    The instruction bs_get_integer could unnecessarily
	    trigger a garbage collection in failure cases which is
	    unwanted or outright dangerous.</p>
          <p>
	    Ex:</p>
          <p>
	    &lt;&lt;X:Sz,_/bits&gt;&gt; = &lt;&lt;"some
	    binary"&gt;&gt;</p>
          <p>
	    Previously, if Sz induced X to a bignum it would reserved
	    memory size this on the heap via a garbage collection
	    before checking if the size could actually match.</p>
          <p>
	    It will now check the binary size before triggering a
	    collection.</p>
          <p>
	    Own Id: OTP-11581</p>
        </item>
        <item>
          <p>
	    Remove heap space overestimation in <c>binary_to_term</c>
	    (and remote message reception) for integers in the
	    intervals [-2147483648,-1] and [256,2147483647] on 64-bit
	    emulators.</p>
          <p>
	    Own Id: OTP-11585</p>
        </item>
        <item>
          <p>
	    Add support for detecting the separate tinfo library from
	    ncurses (Thanks to Dirkjan Ochtman)</p>
          <p>
	    Own Id: OTP-11590</p>
        </item>
        <item>
          <p>
	    Deprecation warning for system_flag(cpu_topology) has
	    been extended for removal in OTP 18 (Thanks to Steve
	    Vinoski for the update)</p>
          <p>
	    Own Id: OTP-11602</p>
        </item>
        <item>
          <p>
	    Documentation improvement regarding some awkward wording
	    around the +spp flag. (Thanks to Brian L. Troutwine )</p>
          <p>
	    Own Id: OTP-11607</p>
        </item>
        <item>
          <p>
	    Fixed bug where sendfile would return the wrong error
	    code for a remotely closed socket if the socket was in
	    passive mode. (Thanks to Vincent Siliakus for reporting
	    the bug.)</p>
          <p>
	    Own Id: OTP-11614</p>
        </item>
        <item>
          <p>
	    Increase garbage collection tenure rate</p>
	    <p>The garbage collector tries to maintain the previous
	    heap block size during a minor gc, i.e. 'need' is not
	    utilized in determining the size of the new heap, instead
	    it relies on tenure and garbage to be sufficiently
	    large.</p>
	    <p>In instances during intense growing with exclusively
	    live data on the heap coupled with delayed tenure,
	    fullsweeps would be triggered directly after a minor gc
	    to make room for 'need' since the new heap would be
	    full.</p>
	    <p>To remedy this, the tenure of terms on the minor heap
	    will always happen (if it is below the high watermark)
	    instead of every other minor gc.</p>
	    <p>Characteristics Impact: Reduced CPU-time spent in
	    garbage collection but may infer delays in collecting
	    garbage from the heap. Tweak 'fullsweep_after' options to
	    increase gc pressure if needed.</p>
          <p>
	    Own Id: OTP-11617</p>
        </item>
        <item>
          <p>
	    Fix bug when comparing integers with floats larger than
	    2^992. The bug could potentially cause memory corruption
	    on 32-bit emulators.</p>
          <p>
	    Own Id: OTP-11618</p>
        </item>
        <item>
          <p>
	    Cross-compilation fixes for TileraMDE-3.0.1.125620</p>
          <p>
	    Own Id: OTP-11635</p>
        </item>
        <item>
          <p>
	    sendfile no longer uses async threads by default</p>
          <p>
	    This has been done because a slow client attack is
	    possible if the async thread pool is used. The scenario
	    is:</p>
          <p>
	    Client does a request for a file and then slowly receives
	    the file one byte at a time. This will eventually fill
	    the async thread pool with blocking sendfile operations
	    and thus starving the vm of all file operations.</p>
          <p>
	    If you still want to use the async threads pool for
	    sendfile an option to enable it has been introduced.</p>
          <p>
	    Thanks to Christopher Faulet for identifying this
	    vulnerability.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-11639</p>
        </item>
        <item>
          <p>
	    Do proper rollback of calls to
	    <c>enif_open_resource_type</c> when load/upgrade
	    callbacks of NIF library return failure.</p>
          <p>
	    Own Id: OTP-11722</p>
        </item>
        <item>
          <p>
	    Changed the default configuration when configuring with
	    <c>$ERL_TOP/configure</c> to be the same as when
	    configuring with <c>$ERL_TOP/otp_build configure</c>.</p>
          <p>
	    Previously floating point exceptions got enabled by
	    default on Linux when HiPE was enabled when configuring
	    with <c>$ERL_TOP/configure</c>, but not when configuring
	    with <c>$ERL_TOP/otp_build configure</c>. The default is
	    now in both cases not to use floating point exceptions
	    since there still exist unresolved issues with floating
	    point exceptions on Linux.</p>
          <p>
	    For more information see <seeguide
	    marker="system/installation_guide:INSTALL"><c>$ERL_TOP/HOWTO/INSTALL.md</c></seeguide>.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-11723</p>
        </item>
        <item>
          <p>
	    A comment in erl_db_tree.c no longer differ from the
	    code. (Thanks to Cobus Carstens)</p>
          <p>
	    Own Id: OTP-11793</p>
        </item>
        <item>
          <p>
	    Fix epmd debug functionality for VxWorks (Thanks to Jay
	    True)</p>
          <p>
	    Own Id: OTP-11808</p>
        </item>
        <item>
          <p>
	    Use closefrom/2 when available in child_setup (Thanks to
	    Rick Reed and Anthony Ramine)</p>
          <p>
	    Own Id: OTP-11809</p>
        </item>
        <item>
          <p>
	    Fix dtrace/systemtap bug where the probe arguments would
	    be concatenated due to faulty length calculation. </p>
          <p>
	    Thanks to Michal Ptaszek and Scott Lystig Fritchie</p>
          <p>
	    Own Id: OTP-11816</p>
        </item>
        <item>
          <p>
	    It is now better documented that the <c>+fn*</c> flags to
	    <c>erl</c> also affect how command line parameters and
	    environment variables are read. (Thanks to Vlad
	    Dumitrescu)</p>
          <p>
	    Own Id: OTP-11818</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Options to set match_limit and match_limit_recursion are
	    added to re:run. The option report_errors is also added
	    to get more information when re:run fails due to limits
	    or compilation errors.</p>
          <p>
	    Own Id: OTP-10285</p>
        </item>
        <item>
	    <p> Dialyzer's <c>unmatched_return</c> warnings have been
	    corrected. </p>
          <p>
	    Own Id: OTP-10908</p>
        </item>
        <item>
          <p>
	    A common case is to wrap an argument to
	    <c>list_to_binary/1</c> in a list to ensure conversion
	    can happen even though the argument may already be a
	    binary. Take special care of this case and do not copy
	    binary.</p>
          <p>
	    Impact: May cause incompatibility since a single binary
	    is no longer copied. Use <c>binary:copy/1,2</c> instead.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-11082</p>
        </item>
        <item>
          <p>
	    Make erlang:open_port/2 spawn and spawn_executable handle
	    unicode.</p>
          <p>
	    Own Id: OTP-11105</p>
        </item>
        <item>
          <p>
	    Handle unicode (widestring) in erl, erlc, heart, etc on
	    windows.</p>
          <p>
	    Own Id: OTP-11135</p>
        </item>
        <item>
          <p>
	    The version of the PCRE library Used by Erlang's re
	    module is raised to 8.33 from 7.6. This means, among
	    other things, better Unicode and Unicode Character
	    Properties support. New options connected to PCRE 8.33
	    are also added to the re module (ucd, notempty_atstart,
	    no_start_optimize). PCRE has extended the regular
	    expression syntax between 7.6 and 8.33, why this imposes
	    a potential incompatibility. Only very complicated
	    regular expressions may be affected, but if you know you
	    are using obscure features, please test run your regular
	    expressions and verify that their behavior has not
	    changed.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-11204</p>
        </item>
        <item>
	    <p>Filenames containing UTF-8 encoded characters can now
	    be handled by erlc.</p>
	    <p>If you have set the <c>ERLC_EMULATOR</c> environment
	    variable, note that <c>erlc</c> in OTP 17 will only work
	    with <c>erl</c> in OTP 17 since the protocol between the
	    <c>erlc</c> program and the <c>erl_compile</c> module has
	    changed.</p>
          <p>
	    Own Id: OTP-11248</p>
        </item>
        <item>
          <p>
	    By giving --enable-static-{nifs,drivers} to configure it
	    is now possible to statically linking of nifs and drivers
	    to the main Erlang VM binary. At the moment only the asn1
	    and crypto nifs of the Erlang/OTP nifs and drivers have
	    been prepared to be statically linked. For more details
	    see the Installation Guide in the System documentation.</p>
          <p>
	    Own Id: OTP-11258</p>
        </item>
        <item>
          <p>
	    Erlang/OTP has been ported to the realtime operating
	    system OSE. The port supports both smp and non-smp
	    emulator. For details around the port and how to started
	    see the User's Guide in the <em>ose</em> application.</p>
          <p>
	    Note that not all parts of Erlang/OTP has been ported. </p>
          <p>
	    Notable things that work are: non-smp and smp emulators,
	    OSE signal interaction, crypto, asn1, run_erl/to_erl,
	    tcp, epmd, distribution and most if not all non-os
	    specific functionality of Erlang.</p>
          <p>
	    Notable things that does not work are: udp/sctp, os_mon,
	    erl_interface, binding of schedulers.</p>
          <p>
	    Own Id: OTP-11334</p>
        </item>
        <item>
          <p>
	    Add the {active,N} socket option for TCP, UDP, and SCTP,
	    where N is an integer in the range -32768..32767, to
	    allow a caller to specify the number of data messages to
	    be delivered to the controlling process. Once the
	    socket's delivered message count either reaches 0 or is
	    explicitly set to 0 with inet:setopts/2 or by including
	    {active,0} as an option when the socket is created, the
	    socket transitions to passive ({active, false}) mode and
	    the socket's controlling process receives a message to
	    inform it of the transition. TCP sockets receive
	    {tcp_passive,Socket}, UDP sockets receive
	    {udp_passive,Socket} and SCTP sockets receive
	    {sctp_passive,Socket}. </p>
          <p>
	    The socket's delivered message counter defaults to 0, but
	    it can be set using {active,N} via any gen_tcp, gen_udp,
	    or gen_sctp function that takes socket options as
	    arguments, or via inet:setopts/2. New N values are added
	    to the socket's current counter value, and negative
	    numbers can be used to reduce the counter value.
	    Specifying a number that would cause the socket's counter
	    value to go above 32767 causes an einval error. If a
	    negative number is specified such that the counter value
	    would become negative, the socket's counter value is set
	    to 0 and the socket transitions to passive mode. If the
	    counter value is already 0 and inet:setopts(Socket,
	    [{active,0}]) is specified, the counter value remains at
	    0 but the appropriate passive mode transition message is
	    generated for the socket.</p>
          <p>
	    Thanks to Steve Vinoski</p>
          <p>
	    Own Id: OTP-11368</p>
        </item>
        <item>
          <p>
	    A new optional scheduler utilization balancing mechanism
	    has been introduced. For more information see the
	    <seecom marker="erl#+sub"><c>+sub</c></seecom> command
	    line argument.</p>
          <p>
	    Characteristics impact: None, when not enabled. When
	    enabled, changed timing in the system, normally a small
	    overhead due to measuring of utilization and calculating
	    balancing information. On some systems, such as old
	    Windows systems, the overhead can be quite substantial.
	    This time measurement overhead highly depend on the
	    underlying primitives provided by the OS.</p>
          <p>
	    Own Id: OTP-11385</p>
        </item>
        <item>
          <p>
	    A call to either the <c>garbage_collect/1</c> BIF or the
	    <c>check_process_code/2</c> BIF may trigger garbage
	    collection of another processes than the process calling
	    the BIF. The previous implementations performed these
	    kinds of garbage collections without considering the
	    internal state of the process being garbage collected. In
	    order to be able to more easily and more efficiently
	    implement yielding native code, these types of garbage
	    collections have been rewritten. A garbage collection
	    like this is now triggered by an asynchronous request
	    signal, the actual garbage collection is performed by the
	    process being garbage collected itself, and finalized by
	    a reply signal to the process issuing the request. Using
	    this approach processes can disable garbage collection
	    and yield without having to set up the heap in a state
	    that can be garbage collected.</p>
          <p>
	    The <seemfa
	    marker="erts:erlang#garbage_collect/2"><c>garbage_collect/2</c></seemfa>,
	    and <seemfa
	    marker="erts:erlang#check_process_code/3"><c>check_process_code/3</c></seemfa>
	    BIFs have been introduced. Both taking an option list as
	    last argument. Using these, one can issue asynchronous
	    requests.</p>
          <p>
	    <c>code:purge/1</c> and <c>code:soft_purge/1</c> have
	    been rewritten to utilize asynchronous
	    <c>check_process_code</c> requests in order to
	    parallelize work.</p>
          <p>
	    Characteristics impact: A call to the
	    <c>garbage_collect/1</c> BIF or the
	    <c>check_process_code/2</c> BIF will normally take longer
	    time to complete while the system as a whole won't be as
	    much negatively effected by the operation as before. A
	    call to <c>code:purge/1</c> and <c>code:soft_purge/1</c>
	    may complete faster or slower depending on the state of
	    the system while the system as a whole won't be as much
	    negatively effected by the operation as before.</p>
          <p>
	    Own Id: OTP-11388 Aux Id: OTP-11535, OTP-11648 </p>
        </item>
        <item>
          <p>
	    Cleanup 'Buckets' and 'Time left' fields in crashdump to
	    ease parsing.</p>
          <p>
	    Own Id: OTP-11419</p>
        </item>
        <item>
          <p>
	    Add sync option to file:open/2.</p>
          <p>
	    The sync option adds the POSIX O_SYNC flag to the open
	    system call on platforms that support the flag or its
	    equivalent, e.g., FILE_FLAG_WRITE_THROUGH on Windows. For
	    platforms that don't support it, file:open/2 returns
	    {error, enotsup} if the sync option is passed in. Thank
	    to Steve Vinoski and Joseph Blomstedt</p>
          <p>
	    Own Id: OTP-11498</p>
        </item>
        <item>
          <p>
	    erlang:binary_to_term will now cost an appropriate amount
	    of reductions and will interrupt (yield) for reschedule
	    if the term is big. This avoids too long schedules when
	    binary_to_term is used. (Thanks to Svante Karlsson for
	    the original patch)</p>
          <p>
	    Impact: Programs running binary_to_term on large binaries
	    will run more smoothly, but rescheduling will impact the
	    single process performance of the BIF. Single threaded
	    benchmarks might show degraded performance of the BIF,
	    while general system behaviour will be improved.</p>
          <p>
	    Own Id: OTP-11535 Aux Id: OTP-11388 </p>
        </item>
        <item>
          <p>
	    Added high resolution icon for windows. (Thanks to Daniel
	    Goertz for the inspiration.)</p>
          <p>
	    Own Id: OTP-11560</p>
        </item>
        <item>
          <p>
	    Migration of memory carriers has been enabled by default
	    on all ERTS internal memory allocators based on the
	    <seecref
	    marker="erts_alloc#alloc_util"><c>alloc_util</c></seecref>
	    framework except for <c>temp_alloc</c>. That is, <seecref
	    marker="erts_alloc#M_acul"><c>+M&lt;S&gt;acul
	    de</c></seecref> is default for these allocators. Note
	    that this also implies changed allocation strategies for
	    all of these allocators. They will all now use the
	    "address order first fit carrier best fit" strategy.</p>
          <p>
	    By passing <c>+Muacul 0</c> on the command line, all
	    configuration changes made by this change will be
	    reverted.</p>
          <p>
	    Characteristics impact: Improved memory characteristics
	    with a smaller memory footprint at the expense of a quite
	    small performance cost.</p>
          <p>
	    Own Id: OTP-11604 Aux Id: OTP-10279 </p>
        </item>
        <item>
	    <p>A clarification has been added to the documentation of
	    <c>-on_load()</c> in the Reference Manual that it is only
	    recommended for loading NIF libraries.</p>
          <p>
	    Own Id: OTP-11611</p>
        </item>
        <item>
	    <p><c>+fnaw</c> is now default when starting the
	    emulator; it used to be <c>+fnl</c>.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-11612</p>
        </item>
        <item>
          <p>
	    EEP43: New data type - Maps</p>
          <p>
	    With Maps you may for instance:</p>
          <taglist>
            <tag/> <item><c>M0 = #{ a =&gt; 1, b =&gt; 2}, % create
	      associations</c></item>
            <tag/><item><c>M1 = M0#{ a := 10 }, % update values</c></item>
            <tag/><item><c>M2 = M1#{ "hi" =&gt;
	      "hello"}, % add new associations</c></item>
            <tag/><item><c>#{ "hi" := V1, a := V2, b := V3} = M2.
               % match keys with values</c></item>
          </taglist>
          <p>
	    For information on how to use Maps please see Map Expressions in the
		<seeguide marker="system/reference_manual:expressions#map_expressions">
			Reference Manual</seeguide>.</p>
          <p>
	    The current implementation is without the following
	    features:</p>
          <taglist>
            <tag/><item>No variable keys</item>
	    <tag/><item>No single value access</item>
            <tag/><item>No map comprehensions</item>
          </taglist>
          <p>
	    Note that Maps is <em>experimental</em> during OTP 17.0.</p>
          <p>
	    Own Id: OTP-11616</p>
        </item>
        <item>
          <p>
	    The previously deprecated driver API function
	    <c>driver_async_cancel()</c> has been removed. Due to
	    this, the driver API version has been bumped to 3.0.</p>
          <p>
	    Thanks to Steve Vinoski.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-11628</p>
        </item>
        <item>
          <p>
	    Experimental "dirty scheduler" functionality has been
	    introduced. In order to try the functionality out, you
	    need to pass the command line argument
	    <c>--enable-dirty-schedulers</c> to <c>configure</c> when
	    building the system.</p>
          <p>
	    Dirty schedulers can currently only be used by NIFs on a
	    system with SMP support. More information can be found in
	    the <seecref
	    marker="erl_nif#dirty_nifs"><c>erl_nif(3)</c></seecref>
	    documentation, the <seecom
	    marker="erl"><c>erl(1)</c></seecom> documentation, and
	    in the git commit comment of commit
	    'c1c03ae4ee50e58b7669ea88ec4d29c6b2b67c7b'.</p>
          <p>
	    Note that the functionality is <em>experimental</em>, and
	    <em>not supported</em>. This functionality <em>will</em>
	    be subject to backward incompatible changes. You should
	    <em>not</em> enable the dirty scheduler functionality on
	    production systems. It is only provided for testing.</p>
          <p>
	    Thanks to Steve Vinoski.</p>
          <p>
	    Own Id: OTP-11629</p>
        </item>
        <item>
          <p>
	    Improve reduction cost and yielding of
	    <c>term_to_binary</c>. The reduction cost is increased
	    and garbage collection is disabled during yield.</p>
          <p>
	    Impact: Improves system responsiveness when
	    <c>term_to_binary</c> is called with large terms without
	    significant degradation of single threaded performance.</p>
          <p>
	    Own Id: OTP-11648 Aux Id: OTP-11388 </p>
        </item>
        <item>
          <p>
	    By default, the system's version of zlib will be used,
	    provided its version is 1.2.4 or higher; otherwise the
	    built-in zlib will be used. The built-in version of zlib
	    has been bumped to 1.2.8. (Use the
	    <c>--enable-builtin-zlib</c> option to <c>configure</c>
	    to force the use of the built-in zlib.)</p>
          <p>
	    Own Id: OTP-11669</p>
        </item>
        <item>
          <p>
	    The default float encoding in binary_to_term and
	    external_size has been changed to use minor_mode 1
	    instead of 0.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-11738</p>
        </item>
        <item>
          <p>
	    Introduced the <c>configure</c> option
	    <c>--with-assumed-cache-line-size=SIZE</c>. For more
	    information see <seeguide
	    marker="system/installation_guide:INSTALL"><c>$ERL_TOP/HOWTO/INSTALL.md</c></seeguide>.</p>
          <p>
	    Own Id: OTP-11742</p>
        </item>
        <item>
          <p>
	    Halfword emulator is marked as deprecated. It still works
	    as before but is planned to be removed in a future major
	    release.</p>
          <p>
	    Own Id: OTP-11777</p>
        </item>
        <item>
          <p>
	    The external format for Maps has changed in a way that is
	    not compatible with the format used in OTP 17.0-rc1 and
	    OTP 17.0-rc2.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-11782</p>
        </item>
        <item>
          <p>
	    Fixed faulty make dependency that would make some make
	    versions fail while building gen_git_version.mk.</p>
          <p>
	    Own Id: OTP-11784</p>
        </item>
        <item>
          <p>
	    Introduced functionality for allowing old drivers and NIF
	    libraries to be loaded during a transition period. For
	    more information see <seecref
	    marker="erts:erl_driver#version_management">the version
	    management section in the <c>erl_driver(3)</c>
	    documentation</seecref> and <seecref
	    marker="erts:erl_nif#version_management">the version
	    management section in the <c>erl_nif(3)</c>
	    documentation</seecref>.</p>
          <p>
	    Own Id: OTP-11799</p>
        </item>
        <item>
          <p>
	    Support file paths longer than 259 characters on Windows.
	    Long absolute paths are automatically converted to UNC
	    format with a <c>\\?\</c> prefix which is the only way to
	    represent long paths. The 259 character limit still
	    applies for individual file names, relative paths and the
	    current working directory.</p>
          <p>
	    Own Id: OTP-11813</p>
        </item>
        <item>
          <p>
	    Document that escript:create/2 also accepts a 3-elements
	    tuple containing files and zip:create/3 options to build
	    a zip file.</p>
          <p>
	    Thanks to Pierre Fenoll</p>
          <p>
	    Own Id: OTP-11827</p>
        </item>
        <item>
          <p>
	    Add systemd socket activation for epmd.</p>
          <p>
	    Thanks to Matwey V. Kornilov</p>
          <p>
	    Own Id: OTP-11829</p>
       </item>
      </list>
    </section>

</section>

<section><title>Erts 5.10.4.1</title>

    <section><title>Known Bugs and Problems</title>
      <list>
        <item>
          <p>
	    When using gen_tcp:connect and the <c>fd</c> option with
	    <c>port</c> and/or <c>ip</c>, the <c>port</c> and
	    <c>ip</c> options were ignored. This has been fixed so
	    that if <c>port</c> and/or <c>ip</c> is specified
	    together with <c>fd</c> a bind is requested for that
	    <c>fd</c>. If <c>port</c> and/or <c>ip</c> is not
	    specified bind will not be called.</p>
          <p>
	    Own Id: OTP-12061</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.10.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    When normalizing paths, erl_prim_loader would always
	    convert backslash to forward slash. This is correct on
	    Windows, but not on other operating systems.
	    erl_prim_loader now checks which OS is running before
	    performing this conversion.</p>
          <p>
	    Own Id: OTP-11170</p>
        </item>
        <item>
          <p>
	    Fixed syslog defines and defined LOG_ERR for systems
	    without syslog.h. Thanks to Matt Lewandowsky.</p>
          <p>
	    Own Id: OTP-11349</p>
        </item>
        <item>
          <p>
	    Check all pattern arguments passed to binary:matches/2.
	    Thanks to Mike Sassak.</p>
          <p>
	    Own Id: OTP-11350</p>
        </item>
        <item>
          <p>
	    Fix two small silent rules omissions. Thanks to Anthony
	    Ramine.</p>
          <p>
	    Own Id: OTP-11351</p>
        </item>
        <item>
          <p>
	    Teach configure to detect if posix_memalign cannot align
	    to more than the system page size. </p>
          <p>
	    For cross-compiled systems a new environment variable
	    called erl_xcomp_posix_memalign has been introduced to
	    indicate whether posix_memalign should be used.</p>
          <p>
	    Own Id: OTP-11371</p>
        </item>
        <item>
          <p>
	    Fix bsr bug occurring when shifting a huge number a huge
	    number of bits to the right. Thanks to Lars Hesel
	    Christensen.</p>
          <p>
	    Own Id: OTP-11381</p>
        </item>
        <item>
          <p>
	    Fix memory leak for distributed monitors</p>
          <p>
	    Own Id: OTP-11410</p>
        </item>
        <item>
          <p>
	    Fix various typos in erts, kernel and ssh. Thanks to
	    Martin Hässler.</p>
          <p>
	    Own Id: OTP-11414</p>
        </item>
        <item>
          <p>
	    Crashdumps initiated by out-of-memory on process spawn
	    could cause the beam to segfault during crashdump writing
	    due to invalid pointers.</p>
          <p>
	    The pointers are invalid since the process creation never
	    finished. This fix removes these processes from the
	    printouts. Reported by Richard Carlsson.</p>
          <p>
	    Own Id: OTP-11420</p>
        </item>
        <item>
          <p>
	    Crash dumps from 64-bit Erlang machines would have all
	    memory addresses truncated to 32 bits, which could cause
	    trouble inspecting processes message queues and stacks in
	    the crashdump viewer.</p>
          <p>
	    Own Id: OTP-11450</p>
        </item>
        <item>
          <p>
	    Threads other than schedulers threads could make thread
	    unsafe accesses when support for migration of memory
	    carriers had been enabled, i.e., when the <seecref
	    marker="erts_alloc#M_acul"><c>+M&lt;S&gt;acul</c></seecref>
	    command line flag had been passed to <seecom
	    marker="erl"><c>erl</c></seecom>. This could cause
	    corruption of the VMs internal state.</p>
          <p>
	    This bug was introduced in erts-5.10.2 when the support
	    for migration of memory carriers was introduced.</p>
          <p>
	    Own Id: OTP-11456 Aux Id: OTP-10279 </p>
        </item>
        <item>
          <p>
	    Fix bug in <c>binary_to_term</c> for invalid bitstrings
	    and very large binaries (>2Gb).</p>
          <p>
	    Own Id: OTP-11479</p>
        </item>
        <item>
          <p>
	    Under rare circumstances a process calling <seemfa
	    marker="kernel:inet#close/1"><c>inet:close/1</c></seemfa>,
	    <seemfa
	    marker="kernel:gen_tcp#close/1"><c>gen_tcp:close/1</c></seemfa>,
	    <seemfa
	    marker="kernel:gen_udp#close/1"><c>gen_udp:close/1</c></seemfa>,
	    or <seemfa
	    marker="kernel:gen_sctp#close/1"><c>gen_sctp:close/1</c></seemfa>
	    could hang in the call indefinitely.</p>
          <p>
	    Own Id: OTP-11491</p>
        </item>
        <item>
          <p>
	    Fix bug that could cause a 32-bit emulator to always
	    crash at start (since R16B01) depending on the alignment
	    of static data in the beam executable.</p>
          <p>
	    Own Id: OTP-11496</p>
        </item>
        <item>
          <p>
	    Fix benign bugs regarding bitstring compare. Only a
	    nuisance for debug and valgrind VM.</p>
          <p>
	    Own Id: OTP-11501</p>
        </item>
        <item>
          <p>
	    Silence warnings (Thanks to Anthony Ramine)</p>
          <p>
	    Own Id: OTP-11517</p>
        </item>
        <item>
          <p>
	    The default wordsize of the emulator (beam) is now
	    determined by compiler default on Mac OSX (Darwin). This
	    was previously forced to 32bits by the configure script
	    unless otherwise specified.</p>
          <p>
	    Own Id: OTP-11521</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    A new memory allocation feature called "super carrier"
	    has been introduced. The super carrier feature can be
	    used in different ways. It can for example be used for
	    pre-allocation of all memory that the runtime system
	    should be able to use.</p>
          <p>
	    By default the super carrier is disabled. It is enabled
	    by passing the <seecref
	    marker="erts:erts_alloc#MMscs"><c>+MMscs &lt;size in
	    MB&gt;</c></seecref> command line argument. For more
	    information see the documentation of the <seecref
	    marker="erts:erts_alloc#MMsco"><c>+MMsco</c></seecref>,
	    <seecref
	    marker="erts:erts_alloc#MMscrfsd"><c>+MMscrfsd</c></seecref>,
	    <seecref
	    marker="erts:erts_alloc#MMscrpm"><c>+MMscrpm</c></seecref>,
	    <seecref
	    marker="erts:erts_alloc#MMscs"><c>+MMscs</c></seecref>,
	    <seecref
	    marker="erts:erts_alloc#Musac"><c>+MMusac</c></seecref>,
	    and, <seecref
	    marker="erts:erts_alloc#Mlpm"><c>+Mlpm</c></seecref>
	    command line arguments in the <seecref
	    marker="erts:erts_alloc"><c>erts_alloc(3)</c></seecref>
	    documentation.</p>
          <p>
	    Since it is disabled by default there should be no impact
	    on system characteristics if not used.</p>
          <p>
	    This change has been marked as a potential
	    incompatibility since the returned list when calling
	    <seeerl
	    marker="erts:erlang#system_info_allocator_tuple"><c>erlang:system_info({allocator,
	    mseg_alloc})</c></seeerl> now also include an
	    <c>{erts_mmap, _}</c> tuple as one element in the list.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-11149</p>
        </item>
        <item>
          <p>
	    Added erlang:system_info(ets_limit) to provide a way to
	    retrieve the runtime's maximum number of ETS tables.
	    Thanks to Steve Vinoski</p>
          <p>
	    Own Id: OTP-11362</p>
        </item>
        <item>
          <p>
	    Add new BIF os:unsetenv/1 which deletes an environment
	    variable. Thanks to Martin Hässler.</p>
          <p>
	    Own Id: OTP-11446</p>
        </item>
        <item>
	    <p> Introduced a new guarantee regarding exit signals
	    from ports: </p><p> If the process calling one of the
	    synchronous port BIFs listed below is linked to the port
	    identified by the first argument, and the port exits
	    before sending the result of the port operation, the exit
	    signal issued due to this link will be received by the
	    processes before the BIF returns, or fail with an
	    exception due to the port not being open. </p><p> The
	    synchronous port BIFs are: </p> <list> <item><seemfa
	    marker="erlang#port_close/1"><c>port_close/1</c></seemfa></item>
	    <item><seemfa
	    marker="erlang#port_command/2"><c>port_command/2</c></seemfa></item>
	    <item><seemfa
	    marker="erlang#port_command/3"><c>port_command/3</c></seemfa></item>
	    <item><seemfa
	    marker="erlang#port_connect/2"><c>port_connect/2</c></seemfa></item>
	    <item><seemfa
	    marker="erlang#port_control/3"><c>port_control/3</c></seemfa></item>
	    <item><seemfa
	    marker="erlang#port_call/3"><c>erlang:port_call/3</c></seemfa></item>
	    <item><seemfa
	    marker="erlang#port_info/1"><c>erlang:port_info/1</c></seemfa></item>
	    <item><seemfa
	    marker="erlang#port_info/2"><c>erlang:port_info/2</c></seemfa></item>
	    </list> <p> Note that some ports under certain
	    circumstances unlink themselves from the calling process
	    before exiting, i.e. even though the process linked
	    itself to the port there might be no link triggering an
	    exit signal. </p> <p>Characteristics impact: The return
	    or exception from the synchronous port BIF will be
	    delayed if the port simultaneously exit due to some issue
	    unrelated to the outstanding synchronous port BIF call.
	    In all other cases characteristics are unchanged. </p>
          <p>
	    Own Id: OTP-11489</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.10.3.1</title>

    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Memory allocators will be able to create <c>sys_alloc</c>
	    carriers as fallback, if <c>mseg_alloc</c> cannot create
	    more carriers, on systems with <c>posix_memalign()</c>
	    support. This is similar to how it worked in pre-R16
	    releases.</p>
          <p>
	    Windows systems will create carriers using
	    <c>_aligned_malloc()</c> and can by this use the new
	    optimized allocator header scheme introduced in R16 on
	    other platforms.</p>
          <p>
	    Own Id: OTP-11318</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.10.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p> The documentation of predefined types and built-in
	    types has been corrected. </p>
          <p>
	    Own Id: OTP-11090</p>
        </item>
        <item>
          <p>
	    Fix changing terminal parameters in to_erl</p>
          <p>
	    Change the behaviour of to_erl to use TCSADRAIN instead
	    of TCSANOW when changing terminal parameters. This makes
	    the serial driver wait for the output queues to be empty
	    before applying the terminal parameter change. Thanks to
	    Stefan Zegenhagen.</p>
          <p>
	    Own Id: OTP-11206</p>
        </item>
        <item>
          <p>
	    The default value of {flush, boolean()} in erlang:halt/2
	    is documented to be 'true' if the status is an integer.
	    The implementation behaviour was reversed. The
	    Implementation is now corrected to adhere to the
	    documentation. Thanks to Jose Valim for reporting the
	    error.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-11218</p>
        </item>
        <item>
          <p>
	    Fix serious race bug in R16B01 that could cause PID
	    mix-ups when a lot of processes were spawned and
	    terminated in a very rapid pace on an SMP emulator with
	    at least two scheduler threads.</p>
          <p>
	    Own Id: OTP-11225</p>
        </item>
        <item>
          <p>
	    Validating a trace pattern with the option silent no
	    longer incorrectly enables/disables the silent option of
	    the calling process.</p>
          <p>
	    Own Id: OTP-11232</p>
        </item>
        <item>
          <p>
	    Fixed a bug where GCC 4.8 and later use a more aggressive
	    loop optimization algorithm that broke some previously
	    working code in the efile driver. Thanks to Tomas
	    Abrahamsson for reporting this issue.</p>
          <p>
	    Own Id: OTP-11246</p>
        </item>
        <item>
          <p>
	    Fixed bug when printing memory allocator acul option in
	    crash dump.</p>
          <p>
	    Own Id: OTP-11264</p>
        </item>
        <item>
          <p>
	    Opening a new compressed file on Windows could in rare
	    (random) cases result in {error,eisdir} or other error
	    codes although it should have succeeded. This is now
	    corrected.</p>
          <p>
	    Own Id: OTP-11265</p>
        </item>
        <item>
          <p>
	    Fixed a race condition when closing a trace port that
	    would cause the emulator to crash.</p>
          <p>
	    Own Id: OTP-11290</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    There is a new somewhat experimental socket option
	    'netns' that can set the network namespace for a socket
	    on Linux:es where it is supported. See the documentation.</p>
          <p>
	    Own Id: OTP-11157</p>
        </item>
        <item>
          <p>
	    New allocator strategy <c>aoffcbf</c> (address order
	    first fit carrier best fit). Supports carrier migration
	    but with better CPU performance than <c>aoffcaobf</c>.</p>
          <p>
	    Own Id: OTP-11174</p>
        </item>
        <item>
          <p>
	    Introduced functionality for inspection of system and
	    build configuration.</p>
          <p>
	    Own Id: OTP-11196</p>
        </item>
        <item>
          <p>
	    Fix matching of floating point middle-endian machines.
	    Thanks to Johannes Weissl.</p>
          <p>
	    Own Id: OTP-11201</p>
        </item>
        <item>
          <p>
	    Fix compile error on ARM and GCC versions greater than
	    4.1.0. Thanks to Johannes Weissl.</p>
          <p>
	    Own Id: OTP-11214</p>
        </item>
        <item>
          <p>
	    run_erl: Redirect standard streams to /dev/null. Thanks
	    to Johannes Weissl.</p>
          <p>
	    Own Id: OTP-11215</p>
        </item>
        <item>
          <p>
	    Misc. corrections in documentation for erl_driver. Thanks
	    to Giacomo Olgeni.</p>
          <p>
	    Own Id: OTP-11227</p>
        </item>
        <item>
          <p>
	    Fix documentation regarding binary_part.</p>
          <p>
	    Own Id: OTP-11239</p>
        </item>
        <item>
          <p>
	    Make edlin understand a few important control keys.
	    Thanks to Stefan Zegenhagen.</p>
          <p>
	    Own Id: OTP-11251</p>
        </item>
        <item>
          <p>
	    Export type zlib:zstream/0. Thanks to Loic Hoguin.</p>
          <p>
	    Own Id: OTP-11278</p>
        </item>
        <item>
          <p>
	    Add erl option to set schedulers by percentages. </p>
          <p>
	    For applications where measurements show enhanced
	    performance from the use of a non-default number of
	    emulator scheduler threads, having to accurately set the
	    right number of scheduler threads across multiple hosts
	    each with different numbers of logical processors is
	    difficult because the erl +S option requires absolute
	    numbers of scheduler threads and scheduler threads online
	    to be specified.</p>
          <p>
	    To address this issue, add a +SP option to erl, similar
	    to the existing +S option but allowing the number of
	    scheduler threads and scheduler threads online to be set
	    as percentages of logical processors configured and
	    logical processors available, respectively. For example,
	    "+SP 50:25" sets the number of scheduler threads to 50%
	    of the logical processors configured, and the number of
	    scheduler threads online to 25% of the logical processors
	    available. The +SP option also interacts with any
	    settings specified with the +S option, such that the
	    combination of options "+S 4:4 +SP 50:50" (in either
	    order) results in 2 scheduler threads and 2 scheduler
	    threads online.</p>
          <p>
	    Thanks to Steve Vinoski</p>
          <p>
	    Own Id: OTP-11282</p>
        </item>
        <item>
          <p>
	    Extend erl_driver interface with lock names</p>
          <p>
	    Lock and thread names are already a feature in the driver
	    interface. This extension will let developers read these
	    names which eases debugging.</p>
          <p>
	    Own Id: OTP-11303</p>
        </item>
        <item>
          <p>
	    Fix incorrect values returned by integer_to_binary/2.
	    Thanks to Juan Jose Comellas.</p>
          <p>
	    Own Id: OTP-11311</p>
        </item>
        <item>
          <p>
	    Fix system_flag scheduling_statistics - disable . Thanks
	    to Steve Vinoski.</p>
          <p>
	    Own Id: OTP-11317</p>
        </item>
        <item>
	    <p> The documentation of predefined types has been
	    corrected Thanks to Kostis Sagonas. </p>
          <p>
	    Own Id: OTP-11321</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.10.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A bug in prim_inet has been corrected. If the port owner
	    was killed at a bad time while closing the socket port
	    the port could become orphaned hence causing port and
	    socket leaking. Reported by Fred Herbert, Dmitry Belyaev
	    and others.</p>
          <p>
	    Own Id: OTP-10497 Aux Id: OTP-10562 </p>
        </item>
        <item>
          <p>
	    Compilation fixes for NetBSD. Thanks to YAMAMOTO Takashi.</p>
          <p>
	    Own Id: OTP-10941</p>
        </item>
        <item>
          <p>
	    Fixed a race condition when using delayed_write when
	    writing to a file which would cause the same data to be
	    written multiple times.</p>
          <p>
	    Own Id: OTP-10984</p>
        </item>
        <item>
          <p>
	    Fix small memory leak from tracing with option
	    <c>meta</c>.</p>
          <p>
	    Own Id: OTP-10997</p>
        </item>
        <item>
          <p>
	    Correct typo in erlsrv usage. Thanks to Bryan Hunter</p>
          <p>
	    Own Id: OTP-11002</p>
        </item>
        <item>
          <p>
	    ct_run: delete unused function. Thanks to Tuncer Ayaz.</p>
          <p>
	    Own Id: OTP-11003</p>
        </item>
        <item>
          <p>
	    Corrections to run_erl/to_erl handshake behaviour.</p>
          <p>
	    Own Id: OTP-11012</p>
        </item>
        <item>
          <p>
	    Fix typo in type: erlang:process_info_item(). Thanks to
	    Andrew Tunnell-Jones.</p>
          <p>
	    Own Id: OTP-11024</p>
        </item>
        <item>
          <p>
	    Fix src/dest overlap issue in ttsl driver. Thanks to
	    Steve Vinoski.</p>
          <p>
	    Own Id: OTP-11064</p>
        </item>
        <item>
          <p>
	    When sending to a port using <c>erlang:send(Port, Msg,
	    [nosuspend])</c>, the send operation was performed
	    synchronously. This bug has now been fixed.</p>
          <p>
	    Own Id: OTP-11076 Aux Id: OTP-10336 </p>
        </item>
        <item>
          <p>
	    When converting a faulty binary to a list with
	    unicode:characters_to_list, the error return value could
	    contain a faulty "rest", i.e. the io_list of characters
	    that could not be converted was wrong. This happened only
	    if input was a sub binary and conversion was from utf8.
	    This is now corrected.</p>
          <p>
	    Own Id: OTP-11080</p>
        </item>
        <item>
          <p>
	    Runtime system could crash when reporting stale
	    <c>driver_select()</c>.</p>
          <p>
	    Own Id: OTP-11084</p>
        </item>
        <item>
          <p>
	    Fix lock order violation for memory instrumentation
	    (+Mim, +Mis, +Mit).</p>
          <p>
	    Own Id: OTP-11085</p>
        </item>
        <item>
          <p>
	    Fixed some compilation warnings on miscellaneous
	    platforms. Thanks to Anthony Ramine.</p>
          <p>
	    Own Id: OTP-11086</p>
        </item>
        <item>
          <p>
	    Fixed issue when flushing i/o during shutdown on windows
	    where the Erlang VM would sometime hang due to a race
	    condition.</p>
          <p>
	    Own Id: OTP-11096</p>
        </item>
        <item>
          <p>
	    Fixed issue where repeated calls to erlang:nodes() could
	    cause unnecessary contention in the dist_table lock.</p>
          <p>
	    Own Id: OTP-11097</p>
        </item>
        <item>
          <p>
	    Properly guard WIDE_TAG use with HAVE_WCWIDTH in
	    ttsl_drv. Thanks to Anthony Ramine</p>
          <p>
	    Own Id: OTP-11106</p>
        </item>
        <item>
          <p>
	    Fix some Makefile rules that didn't support silent rules.
	    Thanks to Anthony Ramine.</p>
          <p>
	    Own Id: OTP-11111</p>
        </item>
        <item>
          <p>
	    Fix receive support in erl_eval with a BEAM module.
	    Thanks to Anthony Ramine.</p>
          <p>
	    Own Id: OTP-11137</p>
        </item>
        <item>
          <p>
	    erlang:now() could suddenly jump ~24 days into the future
	    on Windows. This is now corrected. Thanks to Garret Smith
	    for reporting and testing fixes.</p>
          <p>
	    Own Id: OTP-11146</p>
        </item>
        <item>
          <p>
	    erlang:term_to_binary will now cost an appropriate amount
	    of reductions and will interrupt (yield) for reschedule
	    if the term is big. This avoids too long schedules when
	    term_to_binary is used. </p>
          <p>
	    Impact: Programs running term_to_binary on large terms
	    will run more smothly, but rescheduling will impact the
	    single process performance of the BIF. Single threaded
	    benchmarks will show degraded performance of the BIF when
	    called with very large terms, while general system
	    behaviour will be improved. The overhead for allowing
	    restart and reduction counting also degrades local
	    performance of the BIF with between 5% and 10% even for
	    small terms.</p>
          <p>
	    Own Id: OTP-11163</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Replaced the lock protecting gathering of garbage
	    collection statistics with a lock-free solution.</p>
          <p>
	    Own Id: OTP-10271 Aux Id: kunagi-108
	    [04c5410f-9cc4-4696-8639-36bf98686c7a-7] </p>
        </item>
        <item>
	    <p>Support for migration of memory carriers between
	    memory allocator instances has been introduced.</p>
	    <p>By default this feature is not enabled and do not
	    effect the characteristics of the system. When enabled it
	    has the following impact on the characteristics of the
	    system:</p> <list> <item>Reduced memory footprint when
	    the memory load is unevenly distributed between scheduler
	    specific allocator instances.</item> <item>Depending on
	    the default allocation strategy used on a specific
	    allocator there might or might not be a slight
	    performance loss.</item> <item>When enabled on the
	    <c>fix_alloc</c> allocator, a different strategy for
	    management of fix blocks will be used.</item> <item>The
	    information returned from <seeerl
	    marker="erlang#system_info_allocator_tuple"><c>erlang:system_info({allocator,
	    A})</c></seeerl>, and <seeerl
	    marker="erlang#system_info_allocator_sizes"><c>erlang:system_info({allocator_sizes,
	    A})</c></seeerl> will be slightly different when this
	    feature has been enabled. An <c>mbcs_pool</c> tuple will
	    be present giving information about abandoned carriers,
	    and in the <c>fix_alloc</c> case no <c>fix_types</c>
	    tuple will be present. </item></list>
	    <p>For more information, see the documentation of the
	    <seecref
	    marker="erts_alloc#M_acul"><c>+M&lt;S&gt;acul</c></seecref>
	    command line argument.</p>
          <p>
	    Own Id: OTP-10279</p>
        </item>
        <item>
          <p>
	    Change specs for spawn_opt to use the process_level()
	    type declaration instead of re-defining it in various
	    places. Thanks to Kostis Sagonas.</p>
          <p>
	    Own Id: OTP-11008</p>
        </item>
        <item>
	    <p> Postscript files no longer needed for the generation
	    of PDF files have been removed. </p>
          <p>
	    Own Id: OTP-11016</p>
        </item>
        <item>
	    <p>Erlang source files with non-ASCII characters are now
	    encoded in UTF-8 (instead of latin1).</p>
          <p>
	    Own Id: OTP-11041 Aux Id: OTP-10907 </p>
        </item>
        <item>
          <p>
	    Optimization of simultaneous <c>inet_db</c> operations on
	    the same socket by using a lock free implementation.</p>
          <p>
	    Impact on the characteristics of the system: Improved
	    performance.</p>
          <p>
	    Own Id: OTP-11074</p>
        </item>
        <item>
          <p>
	    The <c>high_msgq_watermark</c> and
	    <c>low_msgq_watermark</c> <c>inet</c> socket options
	    introduced in OTP-R16A could only be set on TCP sockets.
	    These options are now generic and can be set on all types
	    of sockets.</p>
          <p>
	    Own Id: OTP-11075 Aux Id: OTP-10336 </p>
        </item>
        <item>
	    <p>A new better algorithm for management of the process,
	    and port tables has been introduced.</p>
	    <p>Impact on the characteristics of the system:</p>
	    <list> <item>The new algorithm ensures that both insert
	    and delete operations can be made in O(1) time
	    complexity. Previously used algorithm either caused
	    insert or delete to be O(N).</item> <item>The new
	    algorithm will also ensure that reuse of identifiers will
	    be less frequent than when the old algorithm was
	    used.</item> <item>Previously used algorithm ensured that
	    the latest created identifier compared as the largest
	    when comparing two identifiers of the same type that had
	    been created on the same node as long as no identifiers
	    had been reused. Since identifiers can be reused quite
	    fast, one has never been able to rely on this property.
	    Due to the introduction of this new algorithm this
	    property will not hold even if no identifiers has been
	    reused yet. This could be considered as an
	    incompatibility.</item> </list>
	    <p>Due to the above mensioned potential incompatibility,
	    it will still be possible to enable the old algorithm for
	    some time. The command line argument <seecom
	    marker="erl#+P"><c>+P legacy</c></seecom> will enable
	    the old algorithm on the process table, and <seecom
	    marker="erl#+Q"><c>+Q legacy</c></seecom> will do the
	    same for the port table. These command line arguments are
	    however deprecated as of their introduction and have been
	    scheduled for removal in OTP-R18.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-11077</p>
        </item>
        <item>
          <p>
	    Support wide characters in the shell through wcwidth().
	    Thanks to Anthony Ramine. Reported by Loïc Hoguin.</p>
          <p>
	    Own Id: OTP-11088</p>
        </item>
        <item>
          <p>
	    Added total used memory for each process in erlang crash
	    dumps.</p>
          <p>
	    Own Id: OTP-11098</p>
        </item>
        <item>
          <p>
	    Added support for hipe on Raspberry Pi (armv6l). Thanks
	    to Klaus Alfert.</p>
          <p>
	    Own Id: OTP-11125</p>
        </item>
        <item>
          <p>
	    Remove 'query' from the list of reserved words in docs.
	    Thanks to Matthias Endler and Loïc Hoguin.</p>
          <p>
	    Own Id: OTP-11158</p>
        </item>
        <item>
          <p>
	    Lift static limitation (FD_SETSIZE) for file descriptors
	    on Mac OS X. (Thanks to Anthony Ramine)</p>
          <p>
	    Own Id: OTP-11159</p>
        </item>
      </list>
    </section>


    <section><title>Known Bugs and Problems</title>
      <list>
        <item>
	    <p>Miscellaneous native code in OTP misbehave either due
	    to lengthy execution, or due to not bumping reductions
	    properly. Problems typically occur when passing huge sets
	    of data to a misbehaving BIF. Fixing this has high
	    priority and is being worked on, but there will remain
	    issues like this for some time.</p>
	    <p>In order to alleviate problems with scheduling which
	    might occur when executing misbehaving native code, the
	    command line argument <seecom
	    marker="erl#+sfwi">+sfwi</seecom> has been
	    introduced.</p>
	    <p>By default this feature is disabled and you are
	    advised not to enable it if you do not encounter problems
	    with misbehaving native code.</p>
	    <p>When enabled it has the following impact on the
	    characteristics of the system:</p> <list> <item>Work will
	    always be distributed between schedulers even when
	    executing misbehaving native code.</item> <item>It may
	    cause an increased amount of processes and/or ports
	    bouncing between schedulers which in turn will cause a
	    performance loss.</item> <item>It may cause reduced
	    performance due to reduced or lost work compaction when
	    all schedulers do not execute under full load.</item>
	    <item>An increased contention on run queue locks.</item>
	    </list>
          <p>
	    Own Id: OTP-11164</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.10.1.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A bug in the implementation of offline schedulers has
	    been fixed. The bug was introduced in OTP-R16A/ERTS-5.10,
	    and caused work-stealing between schedulers to fail. This
	    in turn, caused work to accumulate in some run-queues.
	    The bug was only triggered when there were offline
	    schedulers in the system, i.e., when the amount of online
	    schedulers was less than the total amount of schedulers.
	    The effect of the bug got more severe the larger amount
	    of offline schedulers the system had.</p>
          <p>
	    Own Id: OTP-11022 Aux Id: OTP-9892 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.10.1.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The BIF <seemfa
	    marker="erlang#is_process_alive/1"><c>is_process_alive/1</c></seemfa>
	    could prematurely return <c>false</c> while the process
	    being inspected was terminating. This bug was introduced
	    in ERTS-5.10.</p>
          <p>
	    Own Id: OTP-10926</p>
        </item>
        <item>
	    <p>Fix a problem in <c>erlang:delete_element/2</c> where
	    the call could corrupt one word of stack if the heap and
	    stack met during call.</p>
          <p>
	    Own Id: OTP-10932</p>
        </item>
        <item>
          <p>
	    The <seecom
	    marker="erl#+sws"><c>+sws&lt;value&gt;</c></seecom> and
	    <seecom
	    marker="erl#+swt"><c>+swt&lt;value&gt;</c></seecom>
	    system flags failed if no white space were passed between
	    the parameter and value parts of the flags. Upon failure,
	    the runtime system refused to start.</p>
          <p>
	    Own Id: OTP-11000</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Scheduler threads will now by default be less eager
	    requesting wakeup due to certain cleanup operations. This
	    can also be controlled using the <seecom
	    marker="erl#+swct"><c>+swct</c></seecom> command line
	    argument of <seecom
	    marker="erl"><c>erl(1)</c></seecom>.</p>
          <p>
	    Own Id: OTP-10994</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.10.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Threads created internally in the runtime system by
	    vanilla, fd, and spawn drivers on Windows systems could
	    make thread unsafe calls to <c>driver_select()</c>.</p>
          <p>
	    Own Id: OTP-10802</p>
        </item>
        <item>
          <p>
	    Threads created internally in the runtime system by the
	    vanilla, fd, and spawn drivers on Windows systems could
	    make unsafe memory accesses to driver data after port had
	    terminated.</p>
          <p>
	    Own Id: OTP-10803</p>
        </item>
        <item>
          <p>
	    The runtime system could crash when flushing data to
	    standard out or standard error on Windows.</p>
          <p>
	    Own Id: OTP-10807</p>
        </item>
        <item>
	    <p>Bugs due to the port optimizations introduced in
	    erts-5.10/OTP-R16A have been fixed:</p> <list>
	    <item>Memory leak when terminating ports</item>
	    <item>Memory leak when reaching the system limit of
	    maximum amount of concurrently existing ports</item>
	    <item>Crashes due to missing, or late test of bad port
	    handle</item> <item>The newly introduced driver API
	    function <c>erl_drv_busy_msgq_limits()</c> could not be
	    used by dynamically linked in drivers on Windows</item>
	    </list>
          <p>
	    Own Id: OTP-10809 Aux Id: OTP-10336 </p>
        </item>
        <item>
          <p>
	    Fix <c>{packet,httph}</c> header capitalization for
	    unrecognized header fields longer than 20 characters
	    such as <c>Sec-Websocket-Version</c>. The limit is simply
	    raised from 20 to 50 characters with the hope that valid
	    headers longer than 50 are not used.</p>
          <p>
	    Own Id: OTP-10824</p>
        </item>
        <item>
          <p>
	    Fix rounding issues in float_to_list/1,2. Thanks to Serge
	    Aleynikov</p>
          <p>
	    Own Id: OTP-10837</p>
        </item>
        <item>
          <p>
	    Fix memory leak in file driver introduced in R16A.</p>
          <p>
	    Own Id: OTP-10841</p>
        </item>
        <item>
	    <p>A bug in an ERTS internal queue implementation could
	    cause the loss of a wake up signal to a consumer thread.
	    This has now been fixed.</p>
	    <p>The effect of this bug, when triggered, was often only
	    a small or even no delay of certain operations. This
	    since, threads often are woken due to other unrelated
	    reasons. However, if the consumer thread was not woken
	    due to other reasons when the bug was triggered, these
	    operations could be left hanging, potentially for ever.
	    Such effects seems to have been very rare, but we have on
	    at least one occasion gotten a report about such an
	    issue.</p>
	    <p>Operations potentially effected by this bug:</p>
	    <taglist> <tag>Inspection of memory allocation
	    status</tag> <item>The Erlang process calling
	    <c>erlang:memory/[0,1]</c>, or
	    <c>erlang:system_info({allocator|allocator_sizes, _})</c>
	    could potentially hang waiting for responses from
	    involved threads.</item> <tag>Async thread pool
	    jobs</tag> <item>An async thread pool job request and/or
	    reply could potentially be left hanging. In OTP this only
	    effected file operations, but user implemented drivers
	    using the async thread pool were also effected. In the
	    file operation case, this would typically translate into
	    an Erlang process potentially hanging on the file
	    operation.</item> <tag>Shutting down the runtime
	    system</tag> <item>Due to the issue with the async thread
	    pool mentioned above, flushing of I/O while terminating
	    the runtime system could also potentially hang.</item>
	    <tag>ETS memory deallocation</tag> <item>Scheduled jobs
	    handling deallocation of the main structure of an ETS
	    table could potentially hang. This more or less only
	    translates into minor memory leaks.</item> <tag>Shutting
	    down distribution</tag> <item>The distribution shutdown
	    phase used when manually shutting down the distribution,
	    i.e., when calling <c>net_kernel:stop()</c>, could
	    potentially hang.</item> </taglist>
          <p>
	    Own Id: OTP-10854</p>
        </item>
        <item>
          <p>
	    OS X Snow Leopard now only uses write, as writev does not
	    work properly on very large files.</p>
          <p>
	    Own Id: OTP-10858</p>
        </item>
        <item>
          <p>
	    Fixed a bug where line oriented file I/O using read_ahead
	    was very slow for files with very large difference in
	    line length.</p>
          <p>
	    Own Id: OTP-10859</p>
        </item>
        <item>
          <p>
	    In erts-5.10 (R16A) faulty hashvalues were produced for
	    non-ASCII atoms (characters in byte-range 128..255). This
	    has now been fixed and hashvalues conforms to previous
	    OTP releases.</p>
          <p>
	    Own Id: OTP-10860</p>
        </item>
        <item>
          <p>
	    Fixes of memory accesses that might be thread unsafe when
	    the runtime system has been linked against third-party
	    libraries for atomic memory operations during the build.
	    Most builds are uneffected by this bug. If triggered, the
	    runtime system will most likely crash more or less
	    immediately.</p>
          <p>
	    Own Id: OTP-10875 Aux Id: OTP-10854 </p>
        </item>
        <item>
          <p>
	    Fixed a bug where it was longer possible to give the +sws
	    proposal flag to non-smp emulators.</p>
          <p>
	    Own Id: OTP-10881 Aux Id: seq12258 </p>
        </item>
        <item>
          <p>
	    Faulty type to bytes read for ReadFile on Windows. This
	    could cause windows systems to misbehave. The correct
	    type is now used.</p>
          <p>
	    Own Id: OTP-10890</p>
        </item>
        <item>
          <p>
	    Change default max ports for Windows to 8192. Having a
	    too large value caused Windows to not be able to recover
	    properly. If you want to use another value, pass <c>+Q
	    Value</c> to erl or werl.</p>
          <p>
	    Own Id: OTP-10892</p>
        </item>
        <item>
          <p>
	    Fix rare crash on halfword vm during code loading.</p>
          <p>
	    Own Id: OTP-10896</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Tuple funs (deprecated in R15B) are no longer supported.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-10170</p>
        </item>
        <item>
          <p>
	    Added four new bifs, <c>erlang:binary_to_integer/1,2</c>,
	    <c>erlang:integer_to_binary/1</c>,
	    <c>erlang:binary_to_float/1</c> and
	    <c>erlang:float_to_binary/1,2</c>. These bifs work
	    similarly to how their list counterparts work, except
	    they operate on binaries. In most cases converting from
	    and to binaries is faster than converting from and to
	    lists. </p>
          <p>
	    These bifs are auto-imported into erlang source files and
	    can therefore be used without the <c>erlang</c> prefix.</p>
          <p>
	    Own Id: OTP-10300 Aux Id: kunagi-74 [74] </p>
        </item>
        <item>
          <p>
	    The experimental support for packages has been removed.</p>
          <p>
	    Own Id: OTP-10348 Aux Id: kunagi-316 [227] </p>
        </item>
        <item>
	    <p>The driver API function <seecref
	    marker="erl_driver#erl_drv_consume_timeslice"><c>erl_drv_consume_timeslice()</c></seecref>,
	    and the NIF API function <seecref
	    marker="erl_nif#enif_consume_timeslice"><c>enif_consume_timeslice()</c></seecref>
	    have been introduced.</p>
	    <p>These functions are provided in order to better
	    support co-operative scheduling, improve system
	    responsiveness, and to make it easier to prevent
	    misbehaviors of the VM due to a process or port
	    monopolizing a scheduler thread. They can be used when
	    dividing lengthy work into a number of repeated calls
	    without the need to use threads.</p>
          <p>
	    Own Id: OTP-10810</p>
        </item>
        <item>
          <p>
	    The list_to_integer/2 bif has been optimized when used
	    with bases other than 10.</p>
          <p>
	    Own Id: OTP-10834 Aux Id: kunagi-74 [74] </p>
        </item>
        <item>
          <p>
	    The git commit sha of the HEAD commit is now added to the
	    Erlang shell when compiling a non-released Erlang
	    version.</p>
          <p>
	    Own Id: OTP-10838</p>
        </item>
        <item>
	    <p>Change caching policy for memory segment allocator.
	    For instance, prefer sbc segments over mbc segments,
	    caching policy is time-arrow aware, evicting older cached
	    segments to store newer segments. </p> <p>The default
	    number of cacheable segment has been increased from five
	    to ten segments. This can be modified, same as before,
	    with the command line option <c>+MMmcs 5</c></p>
	    <p>Impact: Increased speed for processing on larger
	    objects, e.g. binaries. Slight increase of mapped and
	    resident memory. Tune your system with memory options to
	    <c>erl</c> for best performance.</p>
          <p>
	    Own Id: OTP-10840</p>
        </item>
        <item>
          <p>
	    Updated config.sub and config.guess to latest version
	    from gnu.org</p>
          <p>
	    Own Id: OTP-10848</p>
        </item>
        <item>
          <p>
	    Add an xcomp file for Blue Gene/Q. Thanks to Kostis
	    Sagonas.</p>
          <p>
	    Own Id: OTP-10849</p>
        </item>
        <item>
          <p>
	    Cleanup of documentation of the type language. Thanks to
	    Kostis Sagonas.</p>
          <p>
	    Own Id: OTP-10850</p>
        </item>
        <item>
          <p>
	    Change the return value of hipe_bifs:remove_refs_from/1.
	    Thanks to Kostis Sagonas.</p>
          <p>
	    Own Id: OTP-10851</p>
        </item>
        <item>
          <p>
	    As of ERTS-5.10/OTP-R16A node names passed in the EPMD
	    protocol are required to be encoded in UTF-8. Since EPMD
	    previously accepted latin1 encoded node names this is an
	    incompatibility. However, since Erlang nodes always have
	    required characters in node names to be 7-bit ASCII
	    characters (and still do require this), this
	    incompatibility should not effect anyone using EPMD as an
	    Erlang Port Mapper Daemon.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-10872 Aux Id: OTP-10753 </p>
        </item>
        <item>
          <p>
	    The +pc flag to erl can be used to set the range of
	    characters considered printable. This affects how the
	    shell and io:format("~tp",...) functionality does
	    heuristic string detection. More can be read in STDLIB
	    users guide.</p>
          <p>
	    Own Id: OTP-10884</p>
        </item>
        <item>
          <p>
	    Fix a number of type cast errors related to formatted
	    printing on Win64 that can potentially cause problem when
	    the Erlang VM exceeds 4 GB of ram. (Thanks to Blaine
	    Whittle for the original patch)</p>
          <p>
	    Own Id: OTP-10887</p>
        </item>
        <item>
          <p>
	    The effect of the deprecated environment variable
	    ERL_MAX_PORTS had been removed prematurely. It has now
	    been re-added. Note that this is still scheduled to be
	    released in R17B.</p>
          <p>
	    Own Id: OTP-10895</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.10</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Set new peeled off SCTP socket to nonblocking socket
	    (Thanks to Jonas Falkevik)</p>
          <p>
	    Own Id: OTP-10491</p>
        </item>
        <item>
          <p>
	    Fix various typos (thanks to Tuncer Ayaz)</p>
          <p>
	    Own Id: OTP-10611</p>
        </item>
        <item>
          <p>
	    Fix fd leak when using async thread pool</p>
	    <p> When using the async thread pool, if an erlang
	    process asks to open a file and it gets shutdown/killed
	    while the file:open/2 call hasn't returned, it's possible
	    to leak a file descriptor against the target file. This
	    has now been fixed. (Thanks to Filipe David Manana)</p>
          <p>
	    Own Id: OTP-10677</p>
        </item>
        <item>
          <p>
	    Use sys/types.h instead of string.h to pull ssize_t
	    definition to erl_driver.h. This fixes build issue on
	    NetBSD. (Thanks to Yamamoto Takashi).</p>
          <p>
	    Own Id: OTP-10699</p>
        </item>
        <item>
          <p>
	    Arguments given with the -run or -s flags to erl are now
	    translated according to the file name encoding mode of
	    the runtime system.</p>
          <p>
	    Own Id: OTP-10702</p>
        </item>
        <item>
          <p>
	    The octet counters in the gen_tcp/inet interface could
	    behave in unexpected ways on 64bit platforms. The
	    behaviour is now as expected.</p>
          <p>
	    Own Id: OTP-10746</p>
        </item>
        <item>
          <p>
	    Certain linux kernels, most notably in redhat and CentOS
	    distribution, had a bug in writev which generated an
	    infinite loop in the tcp code of the VM. The bug is now
	    worked around.</p>
          <p>
	    Own Id: OTP-10747</p>
        </item>
        <item>
          <p>
	    A process that got killed (got an exit signal) while
	    operating on a compresseed file, could cause a
	    segmentation fault in the VM. This is now corrected.
	    Thanks to Filipe David Manana for identifying the problem
	    and submitting a solution.</p>
          <p>
	    Own Id: OTP-10748</p>
        </item>
        <item>
          <p>
	    Windows previously used three digit exponent in
	    formatting which caused difference between platforms, as
	    can be seen by float_to_list/1. This has now been fixed.</p>
          <p>
	    Own Id: OTP-10751</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    A boolean socket option 'ipv6_v6only' for IPv6 sockets
	    has been added. The default value of the option is OS
	    dependent, so applications aiming to be portable should
	    consider using <c>{ipv6_v6only,true}</c> when creating an
	    <c>inet6</c> listening/destination socket, and if
	    necessary also create an <c>inet</c> socket on the same
	    port for IPv4 traffic. See the documentation.</p>
          <p>
	    Own Id: OTP-8928 Aux Id: kunagi-193 [104] </p>
        </item>
        <item>
	    <p>It is now allowed to define stubs for BIFs, to allow
	    type specs to be written for BIFs. For example, if there
	    is BIF called <c>lists:member/2</c>, a dummy definition
	    of <c>lists:member/2</c> is now allowed.</p>
          <p>
	    Own Id: OTP-9861</p>
        </item>
        <item>
	    <p>Process optimizations. The most notable:</p> <list>
	    <item>New internal process table implementation allowing
	    for both parallel reads as well as writes. Especially
	    read operations have become really cheap. This reduce
	    contention in various situations. For example when,
	    spawning processes, terminating processes, sending
	    messages, etc.</item> <item>Optimizations of run queue
	    management reducing contention.</item>
	    <item>Optimizations of process internal state changes reducing
	    contention.</item> </list> <p>These changes imply changes
	    of the characteristics the system. Most notable: changed
	    timing in the system.</p>
          <p>
	    Own Id: OTP-9892 Aux Id: OTP-10167 </p>
        </item>
        <item>
          <p>
	    Non-blocking code loading. Earlier when an Erlang module
	    was loaded, all other execution in the VM were halted
	    while the load operation was carried out in single
	    threaded mode. Now modules are loaded without blocking
	    the VM. Processes may continue executing undisturbed in
	    parallel during the entire load operation. The load
	    operation is completed by making the loaded code visible
	    to all processes in a consistent way with one single
	    atomic instruction. Non-blocking code loading will
	    improve realtime characteristics when modules are
	    loaded/upgraded on a running SMP system.</p>
          <p>
	    Own Id: OTP-9974</p>
        </item>
        <item>
	    <p>In the SMP emulator, turning on and off tracing will
	    no longer take down the system to single-scheduling. </p>
          <p>
	    Own Id: OTP-10122</p>
        </item>
        <item>
	    <p>Remove VxWorks support</p>
          <p>
	    Own Id: OTP-10146</p>
        </item>
        <item>
          <p>
	    Added a general framework for executing benchmarks of
	    Erlang/OTP. Benchmarks for the Erlang VM and mnesia have
	    been incorporated in the framework. </p>
          <p>
	    For details about how to add more benchmarks see
	    $ERL_TOP/HOWTO/BENCHMARKS.md in the source distribution.</p>
          <p>
	    Own Id: OTP-10156</p>
        </item>
        <item>
          <p>
	    Optimized deletion of ETS-tables which significantly
	    improves performance when large amounts of temporary
	    tables are used.</p>
          <p>
	    This change imply changes of the characteristics the
	    system. Most notable: changed timing in the system.</p>
          <p>
	    Own Id: OTP-10167 Aux Id: OTP-9892 </p>
        </item>
        <item>
          <p>
	    Tuple funs (deprecated in R15B) are no longer supported.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-10170</p>
        </item>
        <item>
          <p>
	    New internal header scheme for allocators</p>
          <p>
	    Impact: Reduces size on object allocated in multiblock
	    carriers by one word</p>
          <p>
	    Own Id: OTP-10273 Aux Id: kunagi-20 [20] </p>
        </item>
        <item>
	    <p>Major port improvements. The most notable:</p> <list>
	    <item>New internal port table implementation allowing for
	    both parallel reads as well as writes. Especially read
	    operations have become really cheap.This reduce
	    contention in various situations. For example when,
	    creating ports, terminating ports, etc. </item>
	    <item>Dynamic allocation of port structures. This allow
	    for a much larger maximum amount of ports allowed as a
	    default. The previous default of 1024 has been raised to
	    65536. Maximum amount of ports can be set using the
	    <seecom marker="erts:erl#+Q">+Q</seecom> command line
	    flag of <seecom marker="erts:erl">erl(1)</seecom>. The
	    previously used environment variable <c>ERL_MAX_PORTS</c>
	    has been deprecated and scheduled for removal in
	    OTP-R17.</item> <item>Major rewrite of scheduling of port
	    tasks. Major benefits of the rewrite are reduced
	    contention on run queue locks, and reduced amount of
	    memory allocation operations needed. The rewrite was also
	    necessary in order to make it possible to schedule
	    signals from processes to ports.</item> <item>Improved
	    internal thread progress functionality for easy
	    management of unmanaged threads. This improvement was
	    necessary for the rewrite of the port task
	    scheduling.</item> <item>Rewrite of all process to port
	    signal implementations in order to make it possible to
	    schedule those operations. All port operations can now be
	    scheduled which allows for reduced lock contention on the
	    port lock as well as truly asynchronous communication
	    with ports.</item> <item>Optimized lookup of port handles
	    from drivers.</item> <item>Optimized driver lookup when
	    creating ports.</item> <item>Preemptible <seemfa
	    marker="erts:erlang#ports/0">erlang:ports/0</seemfa>
	    BIF.</item> <item>Improving responsiveness by bumping
	    reductions for a process calling a driver callback
	    directly.</item> </list>
	    <p>These changes imply changes of the characteristics of
	    the system. The most notable:</p> <taglist> <tag>Order of
	    signal delivery</tag> <item>The previous implementation
	    of the VM has delivered signals from processes to ports
	    in a synchronous stricter fashion than required by the
	    language. As of ERTS version 5.10, signals are truly
	    asynchronously delivered. The order of signal delivery
	    still adheres to the requirements of the language, but
	    only to the requirements. That is, some signal sequences
	    that previously always were delivered in one specific
	    order may now from time to time be delivered in different
	    orders. This may cause Erlang programs that have made
	    <em>false assumptions</em> about signal delivery order to
	    fail even though they previously succeeded. For more
	    information about signal ordering guarantees, see the
	    chapter on <seeguide
	    marker="erts:communication">communication</seeguide> in
	    the ERTS user's guide. The <c>+n</c> command line flag of
	    <seecom marker="erts:erl">erl(1)</seecom> can be
	    helpful when trying to find signaling order bugs in
	    Erlang code that have been exposed by these
	    changes.</item> <tag>Latency of signals sent from
	    processes to ports</tag> <item>Signals from processes to
	    ports where previously always delivered immediately. This
	    kept latency for such communication to a minimum, but it
	    could cause lock contention which was very expensive for
	    the system as a whole. In order to keep this latency low
	    also in the future, most signals from processes to ports
	    are by default still delivered immediately as long as no
	    conflicts occur. Such conflicts include not being able to
	    acquire the port lock, but also include other conflicts.
	    When a conflict occur, the signal will be scheduled for
	    delivery at a later time. A scheduled signal delivery may
	    cause a higher latency for this specific communication,
	    but improves the overall performance of the system since
	    it reduce lock contention between schedulers. The default
	    behavior of only scheduling delivery of these signals on
	    conflict can be changed by passing the <seecom
	    marker="erts:erl#+spp">+spp</seecom> command line flag
	    to <seecom marker="erts:erl">erl(1)</seecom>. The
	    behavior can also be changed on port basis using the
	    <seeerl
	    marker="erts:erlang#open_port_parallelism">parallelism</seeerl>
	    option of the <seemfa
	    marker="erts:erlang#open_port/2">open_port/2</seemfa>
	    BIF.</item> <tag>Execution time of the
	    <c>erlang:ports/0</c> BIF</tag> <item>Since <seemfa
	    marker="erts:erlang#ports/0">erlang:ports/0</seemfa> now
	    can be preempted, the responsiveness of the system as a
	    whole has been improved. A call to <c>erlang:ports/0</c>
	    may, however, take a much longer time to complete than
	    before. How much longer time heavily depends on the
	    system load.</item> <tag>Reduction cost of calling driver
	    callbacks</tag> <item>Calling a driver callback is quite
	    costly. This was previously not reflected in reduction
	    cost at all. Since the reduction cost now has increased,
	    a process performing lots of direct driver calls will be
	    scheduled out more frequently than before.</item>
	    </taglist>
	    <p><em>Potential incompatibilities</em>:</p> <list>
	    <item><c>driver_send_term()</c> has been deprecated and
	    has been scheduled for removal in OTP-R17. Replace usage
	    of <c>driver_send_term()</c> with usage of <seecref
	    marker="erts:erl_driver#erl_drv_send_term">erl_drv_send_term()</seecref>.</item>
	    <item><c>driver_output_term()</c> has been deprecated and
	    has been scheduled for removal in OTP-R17. Replace usage
	    of <c>driver_output_term()</c> with usage of <seecref
	    marker="erts:erl_driver#erl_drv_output_term">erl_drv_output_term()</seecref>.</item>
	    <item>The new function <seecref
	    marker="erts:erl_driver#erl_drv_busy_msgq_limits">erl_drv_busy_msgq_limits()</seecref>
	    has been added in order to able to control management of
	    port queues.</item> </list>
	    <p>The <seecref
	    marker="erts:erl_driver#version_management">driver API
	    version</seecref> has been bumped to 2.1 from 2.0 due to
	    the above changes in the driver API.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-10336 Aux Id: OTP-9892 </p>
        </item>
        <item>
          <p>
	    The experimental support for packages has been removed.</p>
          <p>
	    Own Id: OTP-10348 Aux Id: kunagi-316 [227] </p>
        </item>
        <item>
          <p>
	    Wrong parameters when setting seq_trace-tokens from
	    within a trace-pattern could crash the VM. This is now
	    corrected.</p>
          <p>
	    Own Id: OTP-10522</p>
        </item>
        <item>
          <p>
	    Erlang specification 4.7.3 defines max tuple size to
	    65535 elements It is now enforced to no more than
	    16777215 elements (arity 24 bits)</p>
          <p>
	    Previous edge cases (28 bits) were not validated and
	    could cause undefined behaviour.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-10633</p>
        </item>
        <item>
          <p>
	    Add insert_element/3 and delete_element/2</p>
          <p>
	    Own Id: OTP-10643</p>
        </item>
        <item>
          <p>
	    The previous default of a maximum of 32768 simultaneous
	    processes has been raised to 262144. This value can be
	    changed using the the <seecom
	    marker="erl#+P">+P</seecom> command line flag of
	    <seecom marker="erl">erl(1)</seecom>. Note that the
	    value passed now is considered as a hint, and that actual
	    value chosen in most cases will be a power of two.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-10647 Aux Id: OTP-9892, OTP-10336 </p>
        </item>
        <item>
          <p>
	    The previously (in R15) proposed scheduler wakeup
	    strategy is now used by default. This strategy is not as
	    quick to forget about previous overload as the previous
	    strategy.</p>
          <p>
	    This change imply changes of the characteristics the
	    system. Most notable: When a small overload comes and
	    then disappears repeatedly, the system will for a bit
	    longer time be willing to wake up schedulers than before.
	    Timing in the system will due to this also change.</p>
          <p>
	    The previous strategy can still be enabled by passing the
	    <seecom marker="erl#+sws">+sws legacy</seecom> command
	    line flag to <c>erl</c>.</p>
          <p>
	    Own Id: OTP-10661 Aux Id: OTP-10033 </p>
        </item>
        <item>
          <p>
	    The <seecom marker="erl#+stbt">+stbt</seecom> command line
	    argument of <c>erl</c> was added. This argument can be
	    used for trying to set scheduler bind type. Upon failure
	    unbound schedulers will be used.</p>
          <p>
	    Own Id: OTP-10668</p>
        </item>
        <item>
          <p>
	    Support ANSI in console</p>
          <p>
	    Unix platforms will no longer filter control sequences to
	    the ttsl driver thus enabling ANSI and colors in console.
	    (Thanks to Pedram Nimreezi)</p>
          <p>
	    Own Id: OTP-10678</p>
        </item>
        <item>
	    <p>Add file:allocate/3 operation</p>
	    <p>This operation allows pre-allocation of space for
	    files. It succeeds only on systems that support such
	    operation. (Thanks to Filipe David Manana)</p>
          <p>
	    Own Id: OTP-10680</p>
        </item>
        <item>
	    <p>Treat <c>-Wreturn-type</c> warnings as error when
	    using GCC (Thanks to Tuncer Ayaz)</p>
          <p>
	    Own Id: OTP-10683</p>
        </item>
        <item>
          <p>
	    Implement ./otp_build configure --enable-silent-rules</p>
          <p>
	    With silent rules, the output of make is less verbose and
	    compilation warnings are easier to spot. Silent rules are
	    disabled by default and can be disabled or enabled at
	    will by make V=0 and make V=1. (Thanks to Anthony Ramine)</p>
          <p>
	    Own Id: OTP-10726</p>
        </item>
        <item>
          <p>
	    Use share flags for all file operations on Windows.
	    Thanks to Filipe David Borba Manana.</p>
          <p>
	    Own Id: OTP-10727</p>
        </item>
        <item>
          <p>
	    Make/fakefop adjustments. Thanks to Tuncer Ayaz and
	    Sebastian Rasmussen.</p>
          <p>
	    Own Id: OTP-10733</p>
        </item>
        <item>
          <p>
	    The runtime system will now by default use 10 async
	    threads if thread support has been enabled when building
	    the runtime system.</p>
          <p>
	    This will prevent long blocking file-operations from
	    blocking scheduler threads for long periods of time,
	    which can be harmful. Apart from file-operations, it also
	    effects other operations scheduled on the async thread
	    pool by user implemented drivers.</p>
          <p>
	    The amount of async threads can be controlled by using
	    the <seecom
	    marker="erl#async_thread_pool_size"><c>+A</c></seecom>
	    command line argument of <c>erl(1)</c>. When running some
	    offline tools you <em>might</em> want to disable async
	    threads, but you are advised <em>not</em> to in the
	    general case. Instead, you might want to increase the
	    amount of async threads used.</p>
          <p>
	    This change imply changes of the characteristics the
	    system compared to the previous default. The
	    responsiveness of the system as a whole will be improved.
	    Operations scheduled on the async thread pool will get an
	    increased latency. The throughput of these operations may
	    increase, or decrease depending on the type of the
	    operations and how they get scheduled. In the case of
	    file operations, the throughput very much depends on how
	    the Erlang application access files. Multiple concurrent
	    accesses to different files have the potential of an
	    increased throughput.</p>
          <p>
	    Own Id: OTP-10736</p>
        </item>
        <item>
          <p>
	    The default reader group limit has been increased to 64
	    from 8. This limit can be set using the <c>+rg</c>
	    command line argument of <c>erl(1)</c>.</p>
          <p>
	    This change of default value will reduce lock contention
	    on ETS tables using the <c>read_concurrency</c> option at
	    the expense of memory consumption when the amount of
	    schedulers and logical processors are between 8 and 64.
	    For more information, see documentation of the <c>+rg</c>
	    command line argument of <c>erl(1)</c>.</p>
          <p>
	    Own Id: OTP-10737</p>
        </item>
        <item>
          <p>
	    New BIF float_to_list/2 which solves a problem of
	    float_to_list/1 that doesn't allow specifying the number
	    of digits after the decimal point when formatting floats
	    (Thanks to Serge Aleynikov).</p>
          <p>
	    Own Id: OTP-10752</p>
        </item>
        <item>
          <p>
	    Limited support for unicode atoms in the external format
	    and in the internal representation of the vm. This is a
	    preparative feature in order to support communication
	    with future releases of Erlang/OTP that may create
	    unicode atoms.</p>
          <p>
	    Own Id: OTP-10753</p>
        </item>
        <item>
          <p>
	    Increased potential concurrency in ETS for
	    <c>write_concurrency</c> option. The number of internal
	    table locks has increased from 16 to 64. This makes it
	    four times less likely that two concurrent processes
	    writing to the same table would collide and thereby
	    serialized. The cost is an increased constant memory
	    footprint for tables using write_concurrency. The memory
	    consumption per inserted record is not affected. The
	    increased footprint can be particularly large if
	    <c>write_concurrency</c> is combined with
	    <c>read_concurrency</c>.</p>
          <p>
	    Own Id: OTP-10787</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.9.3.1</title>

    <section><title>Known Bugs and Problems</title>
      <list>
        <item>
          <p>
	    Create an erl_crash.dump if no heart exists and no
	    ERL_CRASH_DUMP_SECONDS is set (behaviour changed).</p>
          <p>
	    Don't create an erl_crash.dump if heart do exists and no
	    ERL_CRASH_DUMP_SECONDS is set (behaviour not changed).</p>
          <p>
	    This changes the behaviour back to the R15B02 default
	    considering if a beam was running with no heart.</p>
          <p>
	    Own Id: OTP-10602</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.9.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix linking in OpenBSD. (Thanks to Matthew Dempsky)</p>
          <p>
	    Own Id: OTP-10395</p>
        </item>
        <item>
          <p>
	    Fix bug causing fallback atomics to be used even though
	    healthy gcc atomics or libatomic_ops was detected.</p>
          <p>
	    Own Id: OTP-10418</p>
        </item>
        <item>
          <p>
	    Ensure 'erl_crash.dump' when asked for it. This will
	    change erl_crash.dump behaviour.</p>
          <p>
	    * Not setting ERL_CRASH_DUMP_SECONDS will now terminate
	    beam immediately on a crash without writing a crash dump
	    file.</p>
          <p>
	    * Setting ERL_CRASH_DUMP_SECONDS to 0 will also terminate
	    beam immediately on a crash without writing a crash dump
	    file, i.e. same as not setting ERL_CRASH_DUMP_SECONDS
	    environment variable.</p>
          <p>
	    * Setting ERL_CRASH_DUMP_SECONDS to a negative value will
	    let the beam wait indefinitely on the crash dump file
	    being written.</p>
          <p>
	    * Setting ERL_CRASH_DUMP_SECONDS to a positive value will
	    let the beam wait that many seconds on the crash dump
	    file being written.</p>
          <p>
	    A positive value will set an alarm/timeout for restart
	    both in beam and in heart if heart is running.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-10422 Aux Id: kunagi-250 [161] </p>
        </item>
        <item>
          <p>
	    Fix bug where MSVRT100.dll was not included in the
	    windows installer.</p>
          <p>
	    Own Id: OTP-10481</p>
        </item>
        <item>
	    <p>In the expression
	    <c>&lt;&lt;Bin/binary,...&gt;&gt;</c>, if <c>Bin</c> was
	    a bitstring with a size not a multiple of 8, either no
	    exception was generated or an incorrect exception was
	    generated. (Thanks to Adam Rutkowski for reporting this
	    bug.)</p>
          <p>
	    Own Id: OTP-10524</p>
        </item>
        <item>
          <p>
	    The runtime system could crash while scheduling a port
	    task. The port task was scheduled either due to an
	    external I/O event being triggered, a driver timeout
	    being triggered, or data being sent over a distribution
	    channel.</p>
          <p>
	    Own Id: OTP-10556</p>
        </item>
        <item>
          <p>
	    <c>erlang:memory(ets)</c> erroneously included the size
	    of each ETS-table main structure twice.</p>
          <p>
	    Own Id: OTP-10558</p>
        </item>
        <item>
          <p>
	    Fix compile error in generated file hipe_amd64_bifs.S for
	    Solaris.</p>
          <p>
	    Own Id: OTP-10577</p>
        </item>
        <item>
          <p>
	    A faulty spec for process_info/2 could cause false
	    dialyzer warnings. The spec is corrected.</p>
          <p>
	    Own Id: OTP-10584</p>
        </item>
        <item>
          <p>
	    In very rare cases, the VM could crash if a garbage
	    collector was called while executing an appending bit
	    syntax instruction. The symptom was a core when
	    reallocating memory in the function erts_bs_append. The
	    garbage collector bug is now corrected.</p>
          <p>
	    Own Id: OTP-10590</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Improve support for building and testing in embedded ppc
	    environments.</p>
          <p>
	    Own Id: OTP-10265 Aux Id: kunagi-159
	    [daf97f67-5724-4812-a5b6-7e86990133d2-1] </p>
        </item>
        <item>
          <p>
	    Due to a race condition on Windows, sometimes when
	    printing to standard output and then immediately
	    terminating erlang all data would not be printed. The
	    emulator now waits for all data to be printed before
	    exiting.</p>
          <p>
	    Own Id: OTP-10325 Aux Id: kunagi-166
	    [dd72d0e2-3e76-4a51-8b56-7564e24eecae] </p>
        </item>
        <item>
          <p>
	    The frequency with which sleeping schedulers are woken
	    due to outstanding memory deallocation jobs has been
	    reduced.</p>
          <p>
	    Own Id: OTP-10476 Aux Id: OTP-10162 </p>
        </item>
        <item>
          <p>
	    Clearer warnings about the dangers of misuse of <seecref
	    marker="erl_nif#WARNING">native functions</seecref> and
	    <seecref marker="erl_driver#WARNING">drivers</seecref>
	    have been added to the documentation.</p>
          <p>
	    Own Id: OTP-10557</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.9.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix erl_prim_loader errors in handling of primary
	    archive. The following errors have been corrected:</p>
          <list> <item> If primary archive was named "xxx", then a
	    file in the same directory named "xxxyyy" would be
	    interpreted as a file named "yyy" inside the archive.
	    </item> <item> erl_prim_loader did not correctly create
	    and normalize absolute paths for primary archive and
	    files inside it, so unless given with exact same path
	    files inside the archive would not be found. E.g. if
	    escript was started as /full/path/to/xxx then
	    "./xxx/file" would not be found since erl_prim_loader
	    would try to match /full/path/to/xxx with
	    /full/path/to/./xxx. Same problem with ../. </item>
	    <item> Depending on how the primary archive was built,
	    erl_prim_loader:list_dir/1 would sometimes return an
	    empty string inside the file list. This was a virtual
	    element representing the top directory of the archive.
	    This has been removed. </item>
          </list>
          <p>
	    Thanks to Tuncer Ayaz and Shunichi Shinohara for
	    reporting and co-authoring corrections.</p>
          <p>
	    Own Id: OTP-10071</p>
        </item>
        <item>
	    <p>Fix: Add port-I/O statistics for active once and true
	    and not only active false.</p>
          <p>
	    Own Id: OTP-10073</p>
        </item>
        <item>
          <p>
	    The 64-bit windows installer did not look in the right
	    directories for 64-bit version of Microsoft Visual C++
	    2010 Redistibutable Package and hence took the wrong
	    decision about having to install the redistributable
	    package if the 32-bit version was installed but not the
	    64-bit and vice versa. This bug has now been fixed
	    Furthermore the sub-installer for the redistributable
	    package is now run in silent mode if the erlang installer
	    is.</p>
          <p>
	    Own Id: OTP-10096</p>
        </item>
        <item>
          <p>
	    epmd would fail to start automatically when starting a
	    distributed erlang node installed in a location with a
	    whitespace in the path.</p>
          <p>
	    Own Id: OTP-10106</p>
        </item>
        <item>
          <p>
	    A more or less harmless bug that sometimes caused memory
	    deallocations to be delayed longer than intended has been
	    fixed.</p>
          <p>
	    Own Id: OTP-10116</p>
        </item>
        <item>
          <p>
	    Fix bug causing emulator crash when running HiPE on ARM.
	    Bug has existed since R15B.</p>
          <p>
	    Own Id: OTP-10137</p>
        </item>
        <item>
	    <p> A bug regarding spaces in C function prototypes has
	    been fixed. (Thanks to Richard O'Keefe.) </p>
          <p>
	    Own Id: OTP-10138</p>
        </item>
        <item>
          <p>
	    Corrected dtrace pid length in message related probes.
	    (Thanks to Zheng Siyao)</p>
          <p>
	    Own Id: OTP-10142</p>
        </item>
        <item>
          <p>
	    Correct formatting in exit error messages</p>
          <p>
	    Ensure displayed sizes are not negative. (Thanks to
	    Michael Santos)</p>
          <p>
	    Own Id: OTP-10148</p>
        </item>
        <item>
          <p>
	    fix escript/primary archive reloading</p>
          <p>
	    If the mtime of an escript/primary archive file changes
	    after being added to the code path, correctly reload the
	    archive and update the cache. (Thanks to Tuncer Ayaz)</p>
          <p>
	    Own Id: OTP-10151</p>
        </item>
        <item>
          <p>
	    Doc fix: link from erlang:now/0 to os:timestamp/0</p>
          <p>
	    Sometimes os:timestamp/0 is more appropriate than
	    erlang:now/0. The documentation for the former has a link
	    to the latter; this patch adds a link in the other
	    direction to make os:timestamp/0 more visible. Thanks to
	    Magnus Henoch</p>
          <p>
	    Own Id: OTP-10180</p>
        </item>
        <item>
          <p>
	    The caret in the werl window (on Windows) could appear at
	    the wrong place after regaining focus. This is now
	    corrected.</p>
          <p>
	    Own Id: OTP-10181</p>
        </item>
        <item>
          <p>
	    Fix bug that in some cases could cause corrupted binaries
	    in ETS tables with <c>compressed</c> option.</p>
          <p>
	    Own Id: OTP-10182</p>
        </item>
        <item>
          <p>
	    Fix use of "clever" mktime</p>
          <p>
	    Commit 1eef765 introduced regression (conditional
	    _always_ evaluates to true) in which
	    erlang:localtime_to_universaltime/2 stopped working on
	    systems configured with timezone without DST (i.e. UTC)
	    on *BSD platforms: 1>
	    erlang:localtime_to_universaltime({{2012,1,1},{0,0,0}},
	    true). ** exception error: bad argument Thanks to Piotr
	    Sikora</p>
          <p>
	    Own Id: OTP-10187</p>
        </item>
        <item>
          <p>
	    Relocate bodies of DTrace probes to the statically-linked
	    VM.</p>
          <p>
	    Due to various operating systems (in both the DTrace and
	    SystemTap worlds) not fully supporting DTrace probes (or
	    SystemTap-compatibility mode probes) in shared libraries,
	    we relocate those probes to the statically-linked virtual
	    machine. This could be seen as pollution of the pristine
	    VM by a (yet) experimental feature. However:</p>
          <p>
	    1. This code can be eliminated completely by the C
	    preprocessor. 2. Leaving the probes in the dyntrace NIF
	    shared library simply does not work correctly on too many
	    platforms. *Many* thanks to Macneil Shonle at Basho for
	    assisting when my RSI-injured fingers gave out. (note:
	    Solaris 10 and FreeBSD 9.0-RELEASE can take a long time
	    to compile)</p>
          <p>
	    Own Id: OTP-10189</p>
        </item>
        <item>
          <p>
	    Fix bug in <c>ets:test_ms/2</c> that could cause emulator
	    crash when using <c>'$_'</c> in match spec.</p>
          <p>
	    Own Id: OTP-10190</p>
        </item>
        <item>
          <p>
	    Supplying a filename longer than the operating system
	    MAX_PATH to file:read_link/1 would cause a crash
	    (Segemntation fault/Critical Error) on all platforms.
	    This is now corrected.</p>
          <p>
	    Own Id: OTP-10200</p>
        </item>
        <item>
          <p>
	    If Perl was configured to interpret files as being
	    encoded in UTF-8, the build would crash in
	    <c>make_preload</c>. (Thanks to Aaron Harnly for noticing
	    this issue.)</p>
          <p>
	    Own Id: OTP-10201</p>
        </item>
        <item>
          <p>
	    Fix the erlc -MP flag</p>
          <p>
	    Because of a copy-and-paste error in erlc.c, the -MP flag
	    had the same effect as -MG. As a workaround, you had to
	    pass +makedep_phony to enable the MP option. This patch
	    makes -MP work as intended.</p>
          <p>
	    Own Id: OTP-10211</p>
        </item>
        <item>
          <p>
	    Allow mixed IPv4 and IPv6 addresses to sctp_bindx</p>
          <p>
	    Also allow mixed address families to bind, since the
	    first address on a multihomed sctp socket must be bound
	    with bind, while the rest are to be bound using
	    sctp_bindx. At least Linux supports adding address of
	    mixing families. Make inet_set_faddress function
	    available also when HAVE_SCTP is not defined, since we
	    use it to find an address for bind to be able to mix ipv4
	    and ipv6 addresses. Thanks to Tomas Abrahamsson</p>
          <p>
	    Own Id: OTP-10217</p>
        </item>
        <item>
          <p>
	    Fix support for leap seconds-aware timezones</p>
          <p>
	    erlang:universaltime_to_localtime is leap seconds-aware
	    (since 2008), however erlang:localtime_to_universaltime
	    is not, which gives surprising results on systems
	    configured with leap seconds-aware timezones: 1>
	    erlang:universaltime_to_localtime({{2012,1,1},{0,0,0}}).
	    {{2012,1,1},{0,0,0}} 2>
	    erlang:localtime_to_universaltime({{2012,1,1},{0,0,0}}).
	    {{2012,1,1},{0,0,24}} and completely breaks
	    calendar:local_time_to_universal_time_dst: 3>
	    calendar:local_time_to_universal_time_dst({{2011,1,1},{0,0,0}}).
	    [] Thanks to Piotr Sikora</p>
          <p>
	    Own Id: OTP-10227</p>
        </item>
        <item>
          <p>
	    erlsrv: gracefully stop emulator on Windows shutdown</p>
          <p>
	    Windows will send the SERVICE_CONTROL_SHUTDOWN event to
	    the service control handler when shutting down the
	    system. Instead of ignoring the event, erlsrv will now
	    invoke the stop action. Likewise, the Erlang emulator
	    (and it's po drivers) must not quit upon reception of the
	    CTRL_SHUTDOWN_EVENT event in th console control handler.
	    Thanks to Jan Kloetzke</p>
          <p>
	    Own Id: OTP-10228</p>
        </item>
        <item>
          <p>
	    Fix dtrace bug in file rename operation.</p>
          <p>
	    Own Id: OTP-10234</p>
        </item>
        <item>
          <p>
	    Fix bug in memory management of driver port data locks
	    (PDL). In some cases PDLs could be deallocated before
	    <c>ready_async</c> or <c>async_free</c> callback was
	    called.</p>
          <p>
	    Own Id: OTP-10249</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>Add port and suspend options to lock-counter
	    profiling. (Thanks to Rick Reed)</p>
          <p>
	    Own Id: OTP-10051</p>
        </item>
        <item>
          <p>
	    Latency when using the active_once option in gen_tcp
	    communication is reduced.</p>
          <p>
	    Own Id: OTP-10055 Aux Id: sto139 </p>
        </item>
        <item>
	    <p>Remove bit8 option support from inet</p>
          <p>
	    Own Id: OTP-10056</p>
        </item>
        <item>
          <p>
	    The OS Pid of a port program is now available by calling
	    erlang:port_info(Port,os_pid), Thanks to Matthias Lang
	    for the original patch.</p>
          <p>
	    Own Id: OTP-10057</p>
        </item>
        <item>
          <p>
	    Fix openpty usage in run_erl. </p>
          <p>
	    Reopening a slave file descriptor which was closed
	    earlier could lead to a misbehaving connection. This has
	    now been remedied.</p>
          <p>
	    Own Id: OTP-10076</p>
        </item>
        <item>
          <p>
	    Remove all code, documentation, options and diagnostic
	    functions which were related to the experimental hybrid
	    heap implementation.</p>
          <p>
	    Own Id: OTP-10105</p>
        </item>
        <item>
          <p>
	    Optimizations of memory deallocations.</p>
          <p>
	    Own Id: OTP-10162 Aux Id: OTP-7775 </p>
        </item>
        <item>
          <p>
	    Optimization of process locking.</p>
          <p>
	    Own Id: OTP-10163</p>
        </item>
        <item>
          <p>
	    Added a xcomp example file for powerpc-dso-linux-gnu</p>
          <p>
	    Own Id: OTP-10198</p>
        </item>
        <item>
          <p>
	    Detect when middle endian doubles are used by a platform
	    and account for it when decoding floats. (Thanks to Mike
	    Sperber)</p>
          <p>
	    Own Id: OTP-10209</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.9.1.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    On Linux systems using heart (erl -heart) and a
	    HEAR_BEAT_TIMEOUT less than default, heart could fire
	    even though Erlang was running fine after approx 298 to
	    497 days (depending on kernel config). This was due to
	    the behaviour of the times(2) system call. Usage of
	    times(2) is now replaced with clock_gettime(2) and the
	    CLOCK_MONOTONIC clock, resulting in a more stable
	    solution. The Erlang VM itself has used clock_gettime(2)
	    on linux since before R12B, so this only affects the
	    heart program.</p>
          <p>
	    Own Id: OTP-10111 Aux Id: seq12075 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.9.1.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    If threads support for the runtime system had been
	    disabled at compile time (<c>--disable-threads</c> had
	    been passed to <c>configure</c>), and the <c>+A</c>
	    command line argument of <c>erl</c> was passed when
	    starting the runtime system, <seecref
	    marker="erl_driver#driver_system_info">driver_system_info()</seecref>
	    erroneously claimed that the runtime system had async
	    threads even though it had not.</p>
          <p>
	    Due to this bug the file driver did not split tasks into
	    smaller chunks, but instead completed the whole task at
	    once, i.e., the scheduler got occupied with I/O for a
	    longer time than intended.</p>
          <p>
	    Own Id: OTP-10059</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    A proposal for a new scheduler wakeup strategy has been
	    implemented. For more information see the documentation
	    of the <seecom marker="erl#+sws">+sws</seecom> command
	    line argument of <c>erl</c>.</p>
          <p>
	    Own Id: OTP-10033 Aux Id: Seq12025 </p>
        </item>
        <item>
          <p>
	    A switch for configuration of busy wait length for
	    scheduler threads has been added. For more information
	    see the documentation of the <seecom
	    marker="erl#+sbwt">+sbwt</seecom> command line argument
	    of <c>erl</c>.</p>
          <p>
	    Own Id: OTP-10044 Aux Id: Seq11976 </p>
        </item>
        <item>
          <p>
	    The extra memory barriers introduced by bug-fix OTP-9281
	    were unnecessarily used also on tables without the
	    <c>write_concurrency</c> option enabled. This could
	    unnecessarily degrade performance of ETS tables without
	    <c>write_concurrency</c> on some hardware (e.g. PowerPC)
	    while not effecting performance at all on other hardware
	    (e.g. x86/x86_64).</p>
          <p>
	    OTP-9281 (R14B03): ETS tables using the
	    <c>write_concurrency</c> option could potentially get
	    into an internally inconsistent state.</p>
          <p>
	    Own Id: OTP-10048 Aux Id: OTP-9281 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.9.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p><c>erlang:system_profile</c> erroneous profiled the
	    profiler process when observing runnable processes. This
	    has been corrected. </p>
          <p>
	    Own Id: OTP-9849</p>
        </item>
        <item>
	    <p>Calling trace_info/2 asking for information about a
	    function that had native could could crash the run-time
	    system.</p>
          <p>
	    Own Id: OTP-9886</p>
        </item>
        <item>
          <p>
	    reduce smp locking time range in erts_garbage_collect
	    (thanks to Jovi Zhang)</p>
          <p>
	    Own Id: OTP-9912</p>
        </item>
        <item>
          <p>
	    Fix typo in supervisor behaviour doc (Thanks to Ricardo
	    Catalinas Jiménez)</p>
          <p>
	    Own Id: OTP-9924</p>
        </item>
        <item>
          <p>
	    Correct spelling of registered (Thanks to Richard
	    Carlsson)</p>
          <p>
	    Own Id: OTP-9925</p>
        </item>
        <item>
          <p>
	    erts: Remove unused variable (Thanks to Jovi Zhang)</p>
          <p>
	    Own Id: OTP-9926</p>
        </item>
        <item>
          <p>
	    Fix bug in ETS with <c>compressed</c> option and
	    insertion of term containing large integers (>2G) on
	    64-bit machines. Seen to cause emulator crash. (Thanks to
	    Diego Llarrull for excellent bug report)</p>
          <p>
	    Own Id: OTP-9932</p>
        </item>
        <item>
          <p>
	    Handle Linux OS where /sys/devices/system/node is only
	    readable by root. Fallback to /sys/devices/system/cpu for
	    topology info.</p>
          <p>
	    Own Id: OTP-9978</p>
        </item>
        <item>
	    <p> When an escript ends now all printout to standard
	    output and standard error gets out on the terminal. This
	    bug has been corrected by changing the behaviour of
	    erlang:halt/0,1, which should fix the same problem for
	    other escript-like applications, i.e that data stored in
	    the output port driver buffers got lost when printing on
	    a TTY and exiting through erlang:halt/0,1. </p>
	    <p> The BIF:s erlang:halt/0,1 has gotten improved
	    semantics and there is a new BIF erlang:halt/2 to
	    accomplish something like the old semantics. See the
	    documentation. </p>
	    <p> Now erlang:halt/0 and erlang:halt/1 with an integer
	    argument will close all ports and allow all pending async
	    threads operations to finish before exiting the emulator.
	    Previously erlang:halt/0 and erlang:halt(0) would just
	    wait for pending async threads operations but not close
	    ports. And erlang:halt/1 with a non-zero integer argument
	    would not even wait for pending async threads operations.
	    </p>
	    <p> To roughly the old behaviour, to not wait for ports
	    and async threads operations when you exit the emulator,
	    you use erlang:halt/2 with an integer first argument and
	    an option list containing {flush,false} as the second
	    argument. Note that now is flushing not dependent of the
	    exit code, and you cannot only flush async threads
	    operations which we deemed as a strange behaviour anyway.
	    </p>
	    <p>Also, erlang:halt/1,2 has gotten a new feature: If the
	    first argument is the atom 'abort' the emulator is
	    aborted producing a core dump, if the operating system so
	    allows. </p>
          <p>
	    Own Id: OTP-9985</p>
        </item>
        <item>
          <p>
	    Added check to inet driver to avoid building on operating
	    systems that do not yet have IPv6 compatible socket API.
	    (Thanks to Peer Stritzinger)</p>
          <p>
	    Own Id: OTP-9996</p>
        </item>
        <item>
          <p>
	    Fix bug when the number of CPUs actually found is lower
	    than the configured value. (Thanks to Benjamin
	    Herrenschmidt)</p>
          <p>
	    Own Id: OTP-10004</p>
        </item>
        <item>
          <p>
	    The runtime system without SMP support and without thread
	    support erroneously busy waited when no work was present.
	    This bug first appeared in <c>erts-5.9</c>.</p>
          <p>
	    Own Id: OTP-10019</p>
        </item>
        <item>
          <p>
	    Various typographical errors corrected in documentation
	    for common_test, driver, erl_driver and windows
	    installation instructions. (Thanks to Tuncer Ayaz)</p>
          <p>
	    Own Id: OTP-10037</p>
        </item>
        <item>
          <p>
	    Fix memory leak caused by race on exiting process</p>
          <p>
	    Own Id: OTP-10041</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>Add <c>erlang:statistics(scheduler_wall_time)</c> to
	    ensure correct determination of scheduler utilization.
	    Measuring scheduler utilization is strongly preferred
	    over CPU utilization, since CPU utilization gives very
	    poor indications of actual scheduler/vm usage.</p>
          <p>
	    Own Id: OTP-9858</p>
        </item>
        <item>
          <p>
	    ERTS internal API improvements. In some cases the amount
	    of atomic read operations needed have been reduced due to
	    this.</p>
          <p>
	    Own Id: OTP-9922</p>
        </item>
        <item>
          <p>
	    The DTrace source patch from Scott Lystig Fritchie is
	    integrated in the source tree. Using an emulator with
	    dtrace probe is still not supported for production use,
	    but may be a valuable debugging tool. Configure with
	    --with-dynamic-trace=dtrace (or
	    --with-dynamic-trace=systemtap) to create a build with
	    dtrace probes enabled. See runtime_tools for
	    documentation and examples.</p>
          <p>
	    Own Id: OTP-10017</p>
        </item>
      </list>
    </section>


    <section><title>Known Bugs and Problems</title>
      <list>
        <item>
          <p>
	    enif_make_copy may invalidate enif_inspect_binary.</p>
          <p>
	    Own Id: OTP-9828</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.9.0.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A feature test for the <c>lwsync</c> instruction
	    performed on PowerPC hardware at runtime system startup
	    got into an eternal loop if the instruction was not
	    supported. This bug was introduced in erts-5.9/OTP-R15B.</p>
          <p>
	    Own Id: OTP-9843</p>
        </item>
        <item>
          <p>
	    I/O events could potentially be delayed for ever when
	    enabling kernel-poll on a non-SMP runtime system
	    executing on Solaris. When also combined with
	    async-threads the runtime system hung before completing
	    the boot phase. This bug was introduced in
	    erts-5.9/OTP-R15B.</p>
          <p>
	    Own Id: OTP-9844</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.9</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Honor option <c>packet_size</c> for http packet parsing
	    by both TCP socket and <c>erlang:decode_packet</c>. This
	    gives the ability to accept HTTP headers larger than the
	    default setting, but also avoid DoS attacks by accepting
	    lines only up to whatever length you wish to allow. For
	    consistency, packet type <c>line</c> also honor option
	    <c>packet_size</c>. (Thanks to Steve Vinoski)</p>
          <p>
	    Own Id: OTP-9389</p>
        </item>
        <item>
	    <p> A few contracts in the <c>lists</c> module have been
	    corrected. </p>
          <p>
	    Own Id: OTP-9616</p>
        </item>
        <item>
          <p>
	    The Unicode noncharacter code points 16#FFFE and 16#FFFE
	    were not allowed to be encoded or decoded using the
	    <c>unicode</c> module or bit syntax. That was
	    inconsistent with the other noncharacters 16#FDD0 to
	    16#FDEF that could be encoded/decoded. To resolve the
	    inconsistency, 16#FFFE and 16#FFFE can now be encoded and
	    decoded. (Thanks to Alisdair Sullivan.)</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-9624</p>
        </item>
        <item>
          <p>
	    Make epp search directory of current file first when
	    including another file This completes a partial fix in
	    R11 that only worked for include_lib(). (Thanks to
	    Richard Carlsson)</p>
          <p>
	    Own Id: OTP-9645</p>
        </item>
        <item>
          <p>
	    Fixed memory leak in
	    <c>enif_inspect_io_list_as_binary</c> when applied on a
	    process independent environment.</p>
          <p>
	    Own Id: OTP-9668</p>
        </item>
        <item>
	    <p>The number of beam catches allowed in code are no
	    longer statically defined and will grow according to its
	    need.</p>
          <p>
	    Own Id: OTP-9692</p>
        </item>
        <item>
          <p>
	    Add missing parenthesis in heart doc.</p>
          <p>
	    Add missing spaces in the Reference Manual distributed
	    section.</p>
          <p>
	    In the HTML version of the doc those spaces are necessary
	    to separate those words.</p>
          <p>
	    Own Id: OTP-9693</p>
        </item>
        <item>
          <p>
	    Fixes module erlang doc style: option description (Thanks
	    to Ricardo Catalinas Jiménez)</p>
          <p>
	    Own Id: OTP-9697</p>
        </item>
        <item>
          <p>
	    Specifying a scope to binary:match/3 when using multiple
	    searchstrings resulted in faulty return values. This is
	    now corrected.</p>
          <p>
	    Own Id: OTP-9701</p>
        </item>
        <item>
          <p>
	    The runtime system crashed if more than one thread tried
	    to exit the runtime system at the same time.</p>
          <p>
	    Own Id: OTP-9705</p>
        </item>
        <item>
          <p>
	    Fix documentation for erlang:process_flag/2</p>
          <p>
	    For the subsection about process_flag(save_calls, N)
	    there's an unrelated paragraph about process priorities
	    which was copied from the preceding subsection regarding
	    process_flag(priority, Level). (Thanks to Filipe David
	    Manana)</p>
          <p>
	    Own Id: OTP-9714</p>
        </item>
        <item>
          <p>
	    Calls to <c>erlang:system_flag(schedulers_online, N)</c>
	    and/or <c>erlang:system_flag(multi_scheduling,
	    block|unblock)</c> could cause internal data used by this
	    functionality to get into an inconsistent state. When
	    this happened various problems occurred. This bug was
	    quite hard to trigger, so hopefully no-one has been
	    effected by it.</p>
          <p>
	    A spinlock used by the run-queue management sometimes got
	    heavily contended. This code has now been rewritten, and
	    the spinlock has been removed.</p>
          <p>
	    Own Id: OTP-9727</p>
        </item>
        <item>
          <p>
	    Use libdlpi to get physical address (Thanks to Trond
	    Norbye)</p>
          <p>
	    Own Id: OTP-9818</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p> An option list argument can now be passed to
	    <c>file:read_file_info/2, file:read_link_info/2</c> and
	    <c>file:write_file_info/3</c> and set time type
	    information in the call. Valid options are <c>{time,
	    local}, {time, universal}</c> and <c>{time, posix}</c>.
	    In the case of <c>posix</c> time no conversions are made
	    which makes the operation a bit faster. </p>
          <p>
	    Own Id: OTP-7687</p>
        </item>
        <item>
	    <p>A number of memory allocation optimizations have been
	    implemented. Most optimizations reduce contention caused
	    by synchronization between threads during allocation and
	    deallocation of memory. Most notably:</p> <list> <item>
	    Synchronization of memory management in scheduler
	    specific allocator instances has been rewritten to use
	    lock-free synchronization. </item> <item> Synchronization
	    of memory management in scheduler specific pre-allocators
	    has been rewritten to use lock-free synchronization.
	    </item> <item> The 'mseg_alloc' memory segment allocator
	    now use scheduler specific instances instead of one
	    instance. Apart from reducing contention this also
	    ensures that memory allocators always create memory
	    segments on the local NUMA node on a NUMA system. </item>
	    </list>
          <p>
	    Own Id: OTP-7775</p>
        </item>
        <item>
          <p>
	    The ethread atomic memory operations API used by the
	    runtime system has been extended and improved.</p>
          <p>
	    The ethread library now also performs runtime tests for
	    presence of hardware features, such as for example SSE2
	    instructions, instead of requiring this to be determined
	    at compile time.</p>
          <p>
	    All uses of the old deprecated atomic API in the runtime
	    system have been replaced with the use of the new atomic
	    API. In a lot of places this change imply a relaxation of
	    memory barriers used.</p>
          <p>
	    Own Id: OTP-9014</p>
        </item>
        <item>
	    <p>gen_sctp:open/0-2 may now return
	    {error,eprotonosupport} if SCTP is not supported</p>
	    <p>gen_sctp:peeloff/1 has been implemented and creates a
	    one-to-one socket which also are supported now</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-9239</p>
        </item>
        <item>
          <p>
	    Sendfile has been added to the file module's API.
	    sendfile/2 is used to read data from a file and send it
	    to a tcp socket using a zero copying mechanism if
	    available on that OS.</p>
          <p>
	    Thanks to Tuncer Ayaz and Steve Vinovski for original
	    implementation</p>
          <p>
	    Own Id: OTP-9240</p>
        </item>
        <item>
          <p>
	    enif_get_reverse_list function added to nif API. This
	    function should be used to reverse small lists which are
	    deep within other structures making it impractical to do
	    the reverse in Erlang.</p>
          <p>
	    Own Id: OTP-9392</p>
        </item>
        <item>
          <p>
	    The deprecated concat_binary/1 BIF has been removed. Use
	    <c>list_to_binary</c> or <c>iolist_to_binary/1</c>
	    instead.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-9421</p>
        </item>
        <item>
	    <p>Erlang/OTP can now be built using parallel make if you
	    limit the number of jobs, for instance using '<c>make
	    -j6</c>' or '<c>make -j10</c>'. '<c>make -j</c>' does not
	    work at the moment because of some missing
	    dependencies.</p>
          <p>
	    Own Id: OTP-9451</p>
        </item>
        <item>
	    <p>Line number and filename information are now included
	    in exception backtraces as a fourth element in the MFA
	    tuple. The information will be pretty-printed by the
	    shell and used by <c>common_test</c> to provide better
	    indication of where a test case.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-9468</p>
        </item>
        <item>
	    <p>All binary constants used to be handled as heap
	    binaries (i.e. the entire binary would be copied when
	    sent to another process). Binary constants larger than 64
	    bytes are now refc binaries (i.e. the actual data in the
	    binary will not be copied when sent to another
	    process).</p>
          <p>
	    Own Id: OTP-9486</p>
        </item>
        <item>
          <p>
	    If a float and an integer is compared, the integer is
	    only converted to a float if the float datatype can
	    contain it. Otherwise the float is converted to an
	    integer.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-9497</p>
        </item>
        <item>
          <p>
	    Add NIF function enif_is_number</p>
          <p>
	    This function allows for easily determining if a term
	    represents or not a number (integer, float, small or
	    big).(Thanks to Filipe David Manana)</p>
          <p>
	    Own Id: OTP-9629</p>
        </item>
        <item>
          <p>
	    The ERTS internal system block functionality has been
	    replaced by new functionality for blocking the system.
	    The old system block functionality had contention issues
	    and complexity issues. The new functionality piggy-backs
	    on thread progress tracking functionality needed by newly
	    introduced lock-free synchronization in the runtime
	    system. When the functionality for blocking the system
	    isn't used, there is more or less no overhead at all.
	    This since the functionality for tracking thread progress
	    is there and needed anyway.</p>
          <p>
	    Own Id: OTP-9631</p>
        </item>
        <item>
          <p>
	    An ERTS internal, generic, many to one, lock-free queue
	    for communication between threads has been introduced.
	    The many to one scenario is very common in ERTS, so it
	    can be used in a lot of places in the future. Currently
	    it is used by scheduling of certain jobs, and the async
	    thread pool, but more uses are planned for the future.</p>
          <p>
	    Drivers using the driver_async functionality are not
	    automatically locked to the system anymore, and can be
	    unloaded as any dynamically linked in driver.</p>
          <p>
	    Scheduling of ready async jobs is now also interleaved in
	    between other jobs. Previously all ready async jobs were
	    performed at once.</p>
          <p>
	    Own Id: OTP-9632</p>
        </item>
        <item>
          <p>
	    Tuple funs (a two-element tuple with a module name and a
	    function) are now officially deprecated and will be
	    removed in R16. Use '<c>fun M:F/A</c>' instead. To make
	    you aware that your system uses tuple funs, the very
	    first time a tuple fun is applied, a warning will be sent
	    to the error logger.</p>
          <p>
	    Own Id: OTP-9649</p>
        </item>
        <item>
          <p>
	    Changed the internal BIF calling convention. Will make
	    simpler faster code and allow BIFs with an arbitrary
	    arity.</p>
          <p>
	    Own Id: OTP-9662</p>
        </item>
        <item>
          <p>
	    Windows native critical sections are now used internally
	    in the runtime system on Windows as mutex implementation.
	    This since they perform better under extreme contention
	    than our own implementation.</p>
          <p>
	    Own Id: OTP-9671</p>
        </item>
        <item>
          <p>
	    Convert some erl_nif macros into inline functions. Allow
	    for better compile time type checking. (Thanks to Tuncer
	    Ayaz)</p>
          <p>
	    Own Id: OTP-9675</p>
        </item>
        <item>
          <p>
	    The <c>+scl</c> command line flag has been added. It can
	    be used for disabling compaction of scheduler load. For
	    more information see the <c>erl(1)</c> documentation.</p>
          <p>
	    Own Id: OTP-9695</p>
        </item>
        <item>
	    <p>The build system has been updated so that Erlang/OTP
	    can be built on Mac OS X Lion systems without a GCC
	    compiler. The INSTALL guide has been updated with
	    instructions on how to install a GCC compiler and build
	    Erlang/OTP with it, in order to get a run-time system
	    with better performance.</p>
          <p>
	    Own Id: OTP-9712</p>
        </item>
        <item>
          <p>
	    When loading a module, the system use to run on a single
	    scheduler during the entire loading process. This has
	    been changed to only take down the system just before
	    inserting the loaded code into the system tables,
	    resulting in a much shorter disruption if a module is
	    loaded in a busy system. (Suggested by Bob Ippolito.)</p>
          <p>
	    Own Id: OTP-9720</p>
        </item>
        <item>
          <p>
	    Possible to run HiPE without floating point exceptions
	    (FPE). Useful on platforms that lack reliable FPE. Slower
	    float operations compared to HiPE with FPE.</p>
          <p>
	    Own Id: OTP-9724</p>
        </item>
        <item>
          <p>
	    As of ERTS version 5.9 (OTP-R15B) the runtime system will
	    by default <em>not</em> bind schedulers to logical
	    processors.</p>
          <p>
	    If the Erlang runtime system is the only operating system
	    process that binds threads to logical processors, this
	    improves the performance of the runtime system. However,
	    if other operating system processes (as for example
	    another Erlang runtime system) also bind threads to
	    logical processors, there might be a performance penalty
	    instead. In some cases this performance penalty might be
	    severe. Due to this, we change the default so that the
	    user must make an active decision in order to bind
	    schedulers.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-9726</p>
        </item>
        <item>
          <p>
	    The use of <c>erlang:system_flag(scheduler_bind_type,
	    _)</c> and <c>erlang:system_flag(cpu_topology, _)</c>
	    have been deprecated and scheduled for removal in
	    erts-5.10/OTP-R16. For more information see the
	    documentation of <c>erlang:system_flag/2</c>.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-9749</p>
        </item>
        <item>
          <p>
	    An ancient workaround for a Windows bug was removed from
	    the open_port code, open_port({spawn,...}...) is now
	    faster. Thanks to Daniel Goertzen.</p>
          <p>
	    Own Id: OTP-9766</p>
        </item>
        <item>
          <p>
	    The use of deprecated 32bit time_t on 32bit Windows is
	    removed.</p>
          <p>
	    Own Id: OTP-9767</p>
        </item>
        <item>
          <p>
	    The NIF <c>reload</c> mechanism is deprecated. Do not use
	    it as an upgrade method for live production systems. It
	    might be removed in future releases. It can still serve
	    as a development feature but a warning message will be
	    logged each time it is used.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-9771</p>
        </item>
        <item>
	    <p>The driver interface has been changed to enable 64-bit
	    aware drivers. Most importantly the return types for
	    ErlDrvEntry callbacks 'call' and 'control' has ben
	    enlarged which require drivers to be changed or they will
	    cause emulator crashes. See <seecref
	    marker="erl_driver#rewrites_for_64_bits"> Rewrites for
	    64-bit driver interface </seecref> in the driver manual.
	    </p>
	    <p>Due to this driver <seecref
	    marker="erl_driver#version_management">version
	    management</seecref> is now mandatory. A driver that is
	    not written with version management or a driver that was
	    compiled with the wrong major version will be not be
	    loaded by the emulator.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-9795</p>
        </item>
        <item>
          <p>
	    Eliminate use of deprecated regexp module</p>
          <p>
	    Own Id: OTP-9810</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.8.5</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Several bugs concerning constant binary constructions
	    such as &lt;&lt;0:4294967295&gt;&gt; have been corrected.
	    Depending on the actual size of the binary and the type
	    of run-time system (32-bit, halfword, 64-bit), such
	    expression could either crash the run-time system or make
	    the loader refuse loading of the module.</p>
          <p>
	    Own Id: OTP-9284</p>
        </item>
        <item>
          <p>
	    The Erlsrv utility failed to stop the erlang machine if
	    no StopAction was defined when the service was stopped.
	    This is now corrected.</p>
          <p>
	    Own Id: OTP-9344</p>
        </item>
        <item>
          <p>
	    Due to a bug in glibc the runtime system could abort
	    while trying to destroy a mutex. A fix for this was
	    introduced in R14B02. This fix did, however, not solve
	    the problem. The runtime system will now issue a warning
	    instead of aborting.</p>
          <p>
	    Own Id: OTP-9373 Aux Id: OTP-9009 </p>
        </item>
        <item>
          <p>
	    Replace atom in DRV macro in prim_file with string</p>
          <p>
	    An experimental version of Dialyzer discovered that the
	    atom that replaced the DRV macro in prim_file ends up in
	    calls to erlang:open_port({spawn, Driver}, Portopts) as
	    the Driver argument. The documentation states that this
	    call requires a string there.</p>
          <p>
	    This change is also consistent with the one introduced in
	    commit 0f03b1e9d2bef3bc830c31a369261af4c5234727 by Kostis
	    Sagonas.</p>
          <p>
	    Own Id: OTP-9377</p>
        </item>
        <item>
          <p>
	    Fix typos in the epmd documentation (Thanks to Holger
	    Weiß )</p>
          <p>
	    Own Id: OTP-9387</p>
        </item>
        <item>
          <p>
	    Fix faulty integer terms created by NIF API from 64-bit
	    integers on halfword emulator. (Thanks to Paolo Negri and
	    Paul Davis)</p>
          <p>
	    Own Id: OTP-9394</p>
        </item>
        <item>
          <p>
	    Fix <c>epmd</c> crash on vxworks caused by faulty
	    argument to select() system call.</p>
          <p>
	    Own Id: OTP-9427 Aux Id: seq11855 </p>
        </item>
        <item>
          <p>
	    The ets:test_ms function could in rare cases truncate the
	    error messages. This is now corrected.</p>
          <p>
	    Own Id: OTP-9435</p>
        </item>
        <item>
          <p>
	    Fix bug related to hibernate and HiPE (clear
	    F_HIBERNATE_SCHED flag)</p>
          <p>
	    F_HIBERNATE_SCHED flag that was introduced in
	    b7ecdcd1ae9e11b8f75e must be cleared in hipe_mode_switch
	    as well. Otherwise, processes running HiPE code that
	    hibernate, wake up and then trap into a BIF will not be
	    rescheduled.(Thanks to Paul Guyot)</p>
          <p>
	    Own Id: OTP-9452</p>
        </item>
        <item>
          <p>
	    Fix bug in FreeBSD topology detection code (Thanks to
	    Paul Guyot)</p>
          <p>
	    Own Id: OTP-9453</p>
        </item>
        <item>
          <p>
	    Fix use of logical operator &amp;&amp; with constant
	    operand instead of bitwise &amp; (Thanks to Cristian
	    Greco)</p>
          <p>
	    Own Id: OTP-9454</p>
        </item>
        <item>
          <p>
	    inet: error if fd does not match socket domain</p>
          <p>
	    If an IPv4 fd is opened as an IPv6 socket, unexpected
	    behaviour can occur. For example, if an IPv4 UDP socket
	    is opened and passed into Erlang as an IPv6 socket, the
	    first 3 bytes (corresponding to 1 byte representing the
	    protocol family, 2 bytes set to the port) are stripped
	    from the payload. The cause of the UDP payload truncation
	    happens in inet_drv.c:packet_inet_input when a call to
	    inet_get_address fails silently because the family is set
	    to PF_INET6 but the buffer len is the size of an IPv4
	    struct sockaddr_in.</p>
          <p>
	    (Thanks to Andrew Tunnell-Jones for finding the bug and
	    the test case!)</p>
          <p>
	    Own Id: OTP-9455</p>
        </item>
        <item>
          <p>
	    erts: use a union to avoid strict aliasing issues</p>
          <p>
	    Use a union for pointer type conversion to avoid compiler
	    warnings about strict-aliasing violations with gcc-4.1.
	    gcc >= 4.2 does not emit the warning. erts: adapt
	    matrix_nif to R14 erl_nif API changes (Thanks To Tuncer
	    Ayaz)</p>
          <p>
	    Own Id: OTP-9487</p>
        </item>
        <item>
          <p>
	    fix 64-bit issues in the garbage collection (Thanks to
	    Richard Carlsson)</p>
          <p>
	    Own Id: OTP-9488</p>
        </item>
        <item>
          <p>
	    epmd: fix compiler warnings</p>
          <p>
	    Suppress compiler warnings about ignored return values.
	    (Thanks to Michael Santos )</p>
          <p>
	    Own Id: OTP-9500</p>
        </item>
        <item>
          <p>
	    Fix non-existing function (erlang:disconnect/1) in
	    distributed reference manual (Thanks to Fabian Król)</p>
          <p>
	    Own Id: OTP-9504</p>
        </item>
        <item>
          <p>
	    Document fdatasync -lrt requirement (SunOS &lt;= 5.10)
	    (Thanks to Tuncer Ayaz)</p>
          <p>
	    Own Id: OTP-9512</p>
        </item>
        <item>
          <p>
	    Let epmd ignore empty ERL_EPMD_ADDRESS</p>
          <p>
	    If the environment variable ERL_EPMD_ADDRESS is set to
	    the empty string, empd now behaves like it does by
	    default when ERL_EPMD_ADDRESS is unset. That is, in this
	    case, epmd now listens on all available interfaces
	    instead of using only the loopback interface, which
	    happened because epmd added the loopback address to the
	    (in this case empty) list of addresses specified via
	    ERL_EPMD_ADDRESS.</p>
          <p>
	    Also, epmd now ignores ERL_EPMD_ADDRESS if it contains
	    only separator characters (comma and space).</p>
          <p>
	    The same applies to epmd's -address option.(Thanks to
	    Holger Weiß)</p>
          <p>
	    Own Id: OTP-9525</p>
        </item>
        <item>
          <p>
	    Remove dead code in erl_compile (Thanks to Tuncer Ayaz)</p>
          <p>
	    Own Id: OTP-9527</p>
        </item>
        <item>
          <p>
	    Add erlang:external_size/2 BIF</p>
          <p>
	    This BIF's second parameter is a list of options.
	    Currently the only allowed option is {minor_version,
	    Version} where version is either 0 (default) or 1.
	    (Thanks to Filipe David Manana )</p>
          <p>
	    Own Id: OTP-9528</p>
        </item>
        <item>
          <p>
	    Fix enif_compare on 64bits machines</p>
          <p>
	    In 64bits machines the Sint type has a size of 8 bytes,
	    while on 32bits machines it has a 4 bytes size.
	    enif_compare was ignoring this and therefore returning
	    incorrect values when the result of the CMP function
	    (which returns a Sint value) doesn't fit in 4 bytes.
	    (Thanks to Filipe David Manana)</p>
          <p>
	    Own Id: OTP-9533</p>
        </item>
        <item>
          <p>
	    Implement or fix -Werror option</p>
          <p>
	    If -Werror is enabled and there are warnings no output
	    file is written. Also make sure that error/warning
	    reporting is consistent. (Thanks to Tuncer Ayaz)</p>
          <p>
	    Own Id: OTP-9536</p>
        </item>
        <item>
	    <p>In some rare cases we did not have a run queue when
	    scheduling misc ops. This is now fixed.</p>
          <p>
	    Own Id: OTP-9537</p>
        </item>
        <item>
	    <p>Remove misc. compiler warnings</p>
          <p>
	    Own Id: OTP-9542</p>
        </item>
        <item>
          <p>
	    Two bugs in gen_sctp has been corrected: getopts/setopts
	    hence also send could only be called from socket owner,
	    and options 'linger', 'rcvbuf' and 'sndbuf' was read from
	    wrong protocol layer hence read wrong values by getopts.</p>
          <p>
	    Own Id: OTP-9544</p>
        </item>
        <item>
          <p>
	    Erlang/OTP can now be built on MacOS X Lion.</p>
          <p>
	    Own Id: OTP-9547</p>
        </item>
        <item>
	    <p> XML files have been corrected. </p>
          <p>
	    Own Id: OTP-9550 Aux Id: OTP-9541 </p>
        </item>
        <item>
          <p>
	    Fix potential errors inspired by running cppcheck(1)
	    (Thanks to Christian von Roques)</p>
          <p>
	    Own Id: OTP-9557</p>
        </item>
        <item>
	    <p>When auxiliary work was enqueued on a scheduler, the
	    wakeup of the scheduler in order to handle this work
	    could be lost. Wakeups in order to handle ordinary work
	    were not effected by this bug. The bug only effected
	    runtime systems with SMP support as follows:</p> <list>
	    <item>Deallocation of some ETS data structures could be
	    delayed.</item> <item>On Linux systems not using the NPTL
	    thread library (typically ancient systems with kernel
	    versions prior to 2.6) and Windows systems, the <c>{Port,
	    {exit_status, Status}}</c> message from a terminating
	    port program could be delayed. That is, it only effected
	    port programs which had been started by passing
	    <c>exit_status</c> as an option to
	    <c>open_port/2</c>.</item> </list>
          <p>
	    Own Id: OTP-9567</p>
        </item>
        <item>
          <p>
	    Handle rare race in the crypto key server functionality</p>
          <p>
	    Own Id: OTP-9586</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p> Types and specifications have been added. </p>
          <p>
	    Own Id: OTP-9356</p>
        </item>
        <item>
          <p>
	    New allocator strategy "address order first fit". May
	    ease the emptying of memory carriers and thereby real
	    release of memory back to the OS.</p>
          <p>
	    Own Id: OTP-9424</p>
        </item>
        <item>
          <p>
	    The new <c>erlang:check_old_code/1</c> BIF checks whether
	    a module has old code.</p>
          <p>
	    Own Id: OTP-9495</p>
        </item>
        <item>
	    <p> Update documentation and specifications of some of
	    the zlib functions. </p>
          <p>
	    Own Id: OTP-9506</p>
        </item>
        <item>
          <p>
	    Detect the available CPUs on IRIX</p>
          <p>
	    Add support for querying the number of configured and
	    online processors on SGI systems running IRIX.(Thanks to
	    Holger Weiß)</p>
          <p>
	    Own Id: OTP-9531</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.8.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Fix binary and iolist overflow problems. Typically
	    problems arose in length calculation where the result
	    would exceed (1 bsl 32 - 1).</p>
          <p>
	    Own Id: OTP-9118</p>
        </item>
        <item>
          <p>
	    Using the old erlang shell (i.e. erl instead on werl) on
	    windows and doing several init:restart's would eventually
	    hang the VM. That is no longer the case.</p>
          <p>
	    Own Id: OTP-9139</p>
        </item>
        <item>
          <p>
	    Removed recursive C code when printing Erlang terms to
	    buffers, avoiding stack overflows that could cause VM to
	    crash.</p>
          <p>
	    Own Id: OTP-9140</p>
        </item>
        <item>
          <p>
	    The send_timeout option in gen_tcp did not work properly
	    in active mode or with {active,once} options. This is now
	    corrected.</p>
          <p>
	    Own Id: OTP-9145</p>
        </item>
        <item>
          <p>
	    Fixed various typos across the documentation (Thanks to
	    Tuncer Ayaz)</p>
          <p>
	    Own Id: OTP-9154</p>
        </item>
        <item>
	    <p>Remove duplicate stack entries which could occur after
	    calling certain BIFs.</p>
          <p>
	    Own Id: OTP-9163</p>
        </item>
        <item>
          <p>
	    A race when starting two nodes simultaneously using
	    run_erl has been removed.</p>
          <p>
	    Own Id: OTP-9164</p>
        </item>
        <item>
          <p>
	    Add documentation on .erlang processing back again
	    (Thanks to Gabor Liptak)</p>
          <p>
	    Own Id: OTP-9189</p>
        </item>
        <item>
          <p>
	    Remove gratuitous paren in driver_entry(Thanks to Tuncer
	    Ayaz)</p>
          <p>
	    Own Id: OTP-9192</p>
        </item>
        <item>
          <p>
	    Fix some wrong pointer dereferences (Thanks to Cristian
	    Greco)</p>
          <p>
	    Own Id: OTP-9194</p>
        </item>
        <item>
          <p>
	    erts: Remove unused variables (Thanks to Tuncer Ayaz)</p>
          <p>
	    Own Id: OTP-9205</p>
        </item>
        <item>
          <p>
	    The documentation for <c>init:get_args/0</c> has been
	    removed. <c>init:get_args/0</c> itself was deprecated in
	    R9C and removed in R12B. (Thanks to Eric Pailleau.)</p>
          <p>
	    Own Id: OTP-9209</p>
        </item>
        <item>
          <p>
	    Allow user to specify the IP address epmd binds to</p>
          <p>
	    The IP address(es) epmd binds to can now be specified by
	    the user, either via epmd's new "-address" option or (if
	    that's not used) by setting the environment variable
	    ERL_EPMD_ADDRESS. Multiple addresses may be specified
	    using a comma-separated list. If the loopback address is
	    not in this list, it will be added implicitly, so that
	    the daemon can be queried by an interactive epmd
	    process.(Thanks to Holger Weiß)</p>
          <p>
	    Own Id: OTP-9213</p>
        </item>
        <item>
          <p>
	    epmd: include host address in local access check</p>
          <p>
	    In FreeBSD jails, the source and destination address of
	    connections to localhost are changed to be the IP address
	    of the jail. Consider connections from the host's IP
	    address to itself (e.g., the source and destination
	    address match) to be local for the access control checks.
	    (Thanks to Michal Santos and Tom at diogunix.com)</p>
          <p>
	    Own Id: OTP-9214</p>
        </item>
        <item>
          <p>
	    Fix list returned by net_kernel:epmd_module</p>
          <p>
	    Function epmd_module of net_kernel returns a list instead
	    of an atom, when the epmd_module-flag is used. (Thanks to
	    Markus Knofe)</p>
          <p>
	    Own Id: OTP-9215</p>
        </item>
        <item>
          <p>
	    Fix epmd's dbg_perror() output</p>
          <p>
	    The dbg_perror() function now hands the current errno
	    value over to dbg_gen_printf(). This fixes the problem
	    that errno had been reset to zero by the time it was used
	    (to print the corresponding error message) in the
	    dbg_gen_printf() function. (Thanks to Holger Weiß)</p>
          <p>
	    Own Id: OTP-9223</p>
        </item>
        <item>
          <p>
	    heart: remove garbage appended to heart command</p>
          <p>
	    heart:get_cmd/0 is documented to return an empty string
	    if the command is cleared. get_cmd/0 returns 2 extra
	    bytes: 1 byte for the trailing null, 1 byte from the op
	    (the op is an unsigned char and 2 bytes are allocated for
	    it in the returned buffer). (Thanks to Michael Santos)</p>
          <p>
	    Own Id: OTP-9224</p>
        </item>
        <item>
          <p>
	    file: fix hang reading compressed files</p>
          <p>
	    The gzio driver goes into an infinite loop when reading
	    past the end of a compressed file. Reported-By: Alex
	    Morarash (Thanks to Michael Santos)</p>
          <p>
	    Own Id: OTP-9245</p>
        </item>
        <item>
	    <p>Eliminate alias warnings from gcc 4.5.2</p>
          <p>
	    Own Id: OTP-9250</p>
        </item>
        <item>
          <p>
	    Unsigned integer may overflow in error message (Thanks to
	    Michael Santos)</p>
          <p>
	    Own Id: OTP-9251</p>
        </item>
        <item>
          <p>
	    Driver names should be strings, not atoms</p>
          <p>
	    Own Id: OTP-9253</p>
        </item>
        <item>
          <p>
	    driver_entry: Remove gratuitous paren and fix typo
	    (Thanks to Tuncer Ayaz)</p>
          <p>
	    Own Id: OTP-9254</p>
        </item>
        <item>
          <p>
	    Fix format specifiers in erl_exit messages</p>
          <p>
	    Fix an error message by using an unsigned integer
	    specifier as seen in a tweet by @metabrew: #erlang VM
	    crashed with "no next heap size found: -2090496108,
	    offset 0", suddenly allocated all available RAM</p>
          <p>
	    Also correct mis-typed string formats in bif.c.(Thanks to
	    Michael Santos)</p>
          <p>
	    Own Id: OTP-9262</p>
        </item>
        <item>
          <p>
	    net_drv: remove unused tcp request id inet_drv: remove
	    gratuitous assignment (Thanks to Tuncer Ayaz)</p>
          <p>
	    Own Id: OTP-9263</p>
        </item>
        <item>
          <p>
	    Teach run_erl RUN_ERL_DISABLE_FLOWCNTRL for disabling
	    flow control</p>
          <p>
	    Flow control can cause unwanted behaviour of the beam
	    process, if accidentally hit Ctrl-S (instead of Ctrl-D to
	    detach) the entire beam may be blocked.</p>
          <p>
	    Fix this problem by making it possible to turn off flow
	    control by setting the environment variable
	    RUN_ERL_DISABLE_FLOWCNTRL. (Thanks to Jonas Faklkevik)</p>
          <p>
	    Own Id: OTP-9270</p>
        </item>
        <item>
	    <p>The following bugs due to missing memory barriers have
	    been fixed:</p> <list> <item><p> ETS tables using the
	    <c>write_concurrency</c> option could potentially get
	    into an internally inconsistent state. </p></item>
	    <item><p> ETS tables using the <c>ordered_set</c> option
	    could potentially get into an internally inconsistent
	    state. </p></item> <item><p> A number of memory barriers
	    have been added when building with the
	    <c>libatomic_ops</c> API (i.e. when passing
	    <c>--with-libatomic_ops=PATH</c> to <c>configure</c>) and
	    the tilera atomics API (i.e. when building for the tilera
	    chip). Note that these bugs were due to erroneous usage
	    of the APIs, and not in the implementations of the APIs.
	    When using these APIs the following bugs where
	    present:</p> <list> <item><p> The BIF
	    <c>erlang:ports/0</c> could return an erroneous result.
	    </p></item> <item><p> A thread blocking other threads
	    during code loading, or setup of tracing could
	    potentially read invalid data. </p></item> <item><p>
	    Fixation of ETS tables could potentially get into an
	    internally inconsistent state. </p></item> </list>
	    </item> </list>
          <p>
	    Own Id: OTP-9281</p>
        </item>
        <item>
          <p>
	    Fix halfword bug for ETS ordered_set when doing
	    <c>select/match</c> with partly bound key.</p>
          <p>
	    Own Id: OTP-9292</p>
        </item>
        <item>
          <p>
	    Fix bug in <c>code:is_module_native</c> that caused crash
	    for deleted modules.</p>
          <p>
	    Own Id: OTP-9298</p>
        </item>
        <item>
          <p>
	    Calling <c>driver_async_cancel()</c> could cause a
	    scheduler thread to enter an eternal loop doing no useful
	    work. (Thanks to Anders Ramsell)</p>
          <p>
	    Own Id: OTP-9302</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    New <c>enif_is_exception function</c> to allow NIFs to
	    determine whether an <c>ERL_NIF_TERM</c> represents an
	    exception. (Thanks to Steve Vinoski)</p>
          <p>
	    Own Id: OTP-9150</p>
        </item>
        <item>
          <p>
	    A process being garbage collected by another process
	    could be scheduled on another scheduler. This prevented
	    this scheduler from doing any useful work until the
	    garbage collection was done. This either occurred due to
	    a explicit call to the <c>garbage_collect/1</c> BIF, or
	    due to a garbage collection part of code loading. A
	    process being garbage collected like this will now not be
	    scheduled until the garbage collection has completed.</p>
          <p>
	    Own Id: OTP-9211</p>
        </item>
        <item>
          <p>
	    Remove unnecessary validation copy in
	    prim_file:drv_command/3 (Thanks to Tony Rogvall)</p>
          <p>
	    Own Id: OTP-9276</p>
        </item>
        <item>
          <p>
	    Symbolic link handling on windows have been slightly
	    updated to map error conditions more consequently and
	    correctly read directory links created outside of the
	    Erlang environment.</p>
          <p>
	    Own Id: OTP-9279</p>
        </item>
        <item>
          <p>
	    Due to standard library DLL mismatches between versions
	    of OpenSSL and Erlang/OTP, OpenSSL is now linked
	    statically to the crypto driver on Windows. This fixes
	    problems starting crypto when running Erlang as a service
	    on all Windows versions.</p>
          <p>
	    Own Id: OTP-9280</p>
        </item>
        <item>
	    <p>Halfword emulator memory handling improvements:</p>
	    <list> <item><p>Much more of internal memory structures
	    have been made able to use "high" memory and are no
	    longer restricted to the 4Gb limit that still applies for
	    all process heap data.</p> </item> <item><p>Fixed faulty
	    values from <c>erlang:memory()</c> caused by 32-bit
	    counter overflow.</p> </item> <item><p>New counter
	    <c>low</c> in <c>erlang:memory()</c> that sums up all
	    memory restricted by 4Gb limit.</p> </item> </list>
          <p>
	    Own Id: OTP-9291 Aux Id: seq11841 </p>
        </item>
        <item>
          <p>
	    The value set in the undocumented and unsupported
	    ERL_version_FLAGS (e.g. ERL_R14B03_FLAGS) environment
	    variable can now be overridden by the command line
	    (similar to ERL_AFLAGS).</p>
          <p>
	    Own Id: OTP-9297</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.8.3.2</title>

    <section><title>Known Bugs and Problems</title>
      <list>
        <item>
          <p>
	    Fix halfword emulator bug in <c>ets:select_delete</c> for
	    <c>ordered_set</c> that caused emulator to crash.</p>
          <p>
	    Own Id: OTP-9258 Aux Id: seq11836 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.8.3.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Ets table type ordered_set could order large integer keys
	    wrongly on pure 64bit platforms. This is now corrected.</p>
          <p>
	    Own Id: OTP-9181</p>
        </item>
        <item>
          <p>
	    The status of a process was unnecessarily set to waiting
	    before a process was enqueued in a run queue. This bug
	    was harmless up until OTP-R14B01. In OTP-R14B02
	    <c>erlang:hibernate/3</c> was fixed (OTP-9125). After the
	    introduction of OTP-9125, the previously harmless process
	    status bug sometimes caused erroneous badarg exceptions
	    from <c>process_info()</c>.</p>
          <p>
	    OTP-9125 also introduced a thread unsafe access to the
	    status field of a process which now also have been fixed.</p>
          <p>
	    *** INCOMPATIBILITY with noxs ***</p>
          <p>
	    Own Id: OTP-9197</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.8.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The scroll wheel now scrolls the werl window on Windows.</p>
          <p>
	    Own Id: OTP-8985</p>
        </item>
        <item>
          <p>
	    Some malformed distribution messages could cause VM to
	    crash, this is now corrected.</p>
          <p>
	    Own Id: OTP-8993</p>
        </item>
        <item>
          <p>
	    The OS function getifaddrs() can return NULL in some
	    address fields for e.g PPP and tunnel devices which
	    caused the emulator to segfault. This bug has now been
	    corrected.</p>
          <p>
	    Own Id: OTP-8996</p>
        </item>
        <item>
          <p>
	    The expression &lt;&lt;A:0&gt;&gt; would always produce
	    an empty binary, even if <c>A</c> was not an integer.
	    Corrected to cause a <c>badarg</c> exception if the type
	    of <c>A</c> is invalid. (Thanks to Zvi.)</p>
          <p>
	    Own Id: OTP-8997</p>
        </item>
        <item>
          <p>
	    A bug that potentially could cause an emulator crash when
	    deleting an ETS-table has been fixed. A resource leak
	    when hitting the maximum amount of ETS-tables allowed has
	    also been fixed.</p>
          <p>
	    Own Id: OTP-8999</p>
        </item>
        <item>
          <p>
	    A bug in the <c>exit/2</c> BIF could potentially cause an
	    emulator crash.</p>
          <p>
	    Own Id: OTP-9005</p>
        </item>
        <item>
          <p>
	    Due to a bug in glibc the runtime system could abort
	    while trying to destroy a mutex. The runtime system will
	    now issue a warning instead of aborting.</p>
          <p>
	    Own Id: OTP-9009</p>
        </item>
        <item>
          <p>
	    A bug in epmd could create strange behaviour when
	    listen() calls failed. This is now corrected thanks to
	    Steve Vinoski.</p>
          <p>
	    Own Id: OTP-9024</p>
        </item>
        <item>
	    <p>When setting file_info the win32_driver will now
	    correctly set access and modified time. Previously these
	    entities were swapped.</p>
          <p>
	    Own Id: OTP-9046</p>
        </item>
        <item>
          <p>
	    Setting scheduler bind type to <c>unbound</c> failed if
	    binding of schedulers wasn't supported, or if CPU
	    topology wasn't present. This even though the
	    documentation stated that it is possible to set the bind
	    type to <c>unbound</c>.</p>
          <p>
	    Own Id: OTP-9056 Aux Id: Seq11779 </p>
        </item>
        <item>
	    <p>Two problems were fixed in crash dump: The time left
	    for timers are now shown as unsigned integers and the
	    contents of ordered_set ETS tables is no longer
	    included.</p>
          <p>
	    Own Id: OTP-9057</p>
        </item>
        <item>
          <p>
	    The VM could fail to set IP_TOS and SO_PRIORITY in
	    certain situations, either because sockets were supplied
	    as open file descriptors, or because SO_PRIORITY by
	    default was set higher than the user can explicitly set
	    it to. Those situations are now handled.</p>
          <p>
	    Own Id: OTP-9069</p>
        </item>
        <item>
          <p>
	    Wx on MacOS X generated complains on stderr about certain
	    cocoa functions not being called from the "Main thread".
	    This is now corrected.</p>
          <p>
	    Own Id: OTP-9081</p>
        </item>
        <item>
          <p>
	    Fix a couple typos in driver_entry(3) (thanks to Tuncer
	    Ayaz).</p>
          <p>
	    Own Id: OTP-9085</p>
        </item>
        <item>
          <p>
	    Mention that "-detached" implies "-noinput"</p>
          <p>
	    Clarify that specifying "-noinput" is unnecessary if the
	    "-detached" flag is given. (thanks to Holger Weiß)</p>
          <p>
	    Own Id: OTP-9086</p>
        </item>
        <item>
          <p>
	    A potential problem (found by code inspection) when
	    calling a fun whose code was not loaded has been fixed.</p>
          <p>
	    Own Id: OTP-9095</p>
        </item>
        <item>
          <p>
	    The emulator could get into a state where it didn't check
	    for I/O.</p>
          <p>
	    Own Id: OTP-9105 Aux Id: Seq11798 </p>
        </item>
        <item>
          <p>
	    Attempting to create binaries exceeding 2Gb (using for
	    example <c>term_to_binary/1</c>) would crash the emulator
	    with an attempt to allocate huge amounts of memory.
	    (Thanks to Jon Meredith.)</p>
          <p>
	    Own Id: OTP-9117</p>
        </item>
        <item>
          <p>
	    Fix erlang:hibernate/3 on HiPE enabled emulator (Thanks
	    to Paul Guyot)</p>
          <p>
	    Own Id: OTP-9125</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>From this release, the previously experimental
	    halfword emulator is now official. It can be enabled by
	    giving the <c>--enable-halfword-emulator</c> option to
	    the <c>configure</c> script.</p>
	    <p>The halfword emulator is a 64-bit application, but
	    uses halfwords (32-bit words) for all data in Erlang
	    processes, therefore using less memory and being faster
	    than the standard 64-bit emulator. The total size of all
	    BEAM code and all process data for all processes is
	    limited to 4Gb, but ETS tables and off-heap binaries are
	    only limited by the amount of available memory.</p>
          <p>
	    Own Id: OTP-8941</p>
        </item>
        <item>
          <p>
	    32-bit atomic memory operations have been introduced
	    internally in the run time system, and are now used where
	    appropriate. There were previously only atomic memory
	    operations of word size available. The 32-bit atomic
	    memory operations slightly reduce memory consumption, and
	    slightly improve performance on 64-bit runtime systems.</p>
          <p>
	    Own Id: OTP-8974</p>
        </item>
        <item>
          <p>
	    Performance enhancements for looking up timer-entries and
	    removing timers from the wheel.</p>
          <p>
	    Own Id: OTP-8990</p>
        </item>
        <item>
          <p>
	    Write accesses to ETS tables have been optimized by
	    reducing the amount of atomic memory operations needed
	    during a write access.</p>
          <p>
	    Own Id: OTP-9000</p>
        </item>
        <item>
          <p>
	    Strange C coding in the VM made the -D_FORTIFY_SOURCE
	    option to gcc-4.5 react badly. The code is now cleaned up
	    so that it's accepted by gcc-4.5.</p>
          <p>
	    Own Id: OTP-9025</p>
        </item>
        <item>
          <p>
	    The memory footprint for loaded code has been somewhat
	    reduced (especially in the 64-bit BEAM machine).</p>
          <p>
	    Own Id: OTP-9030</p>
        </item>
        <item>
          <p>
	    The maximum number of allowed arguments for an Erlang
	    function has been lowered from 256 to 255, so that the
	    number of arguments can now fit in a byte.</p>
          <p>
	    Own Id: OTP-9049</p>
        </item>
        <item>
          <p>
	    Dependency generation for Makefiles has been added to the
	    compiler and erlc. See the manual pages for
	    <c>compile</c> and <c>erlc</c>. (Thanks to Jean-Sebastien
	    Pedron.)</p>
          <p>
	    Own Id: OTP-9065</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.8.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p> Fix format_man_pages so it handles all man sections
	    and remove warnings/errors in various man pages. </p>
          <p>
	    Own Id: OTP-8600</p>
        </item>
        <item>
          <p>
	    The <c>configure</c> command line argument <seeguide
	    marker="system/installation_guide:INSTALL#Advanced-configuration-and-build-of-ErlangOTP">--enable-ethread-pre-pentium4-compatibility</seeguide>
	    had no effect. This option is now also automatically
	    enabled if required on the build machine.</p>
          <p>
	    Own Id: OTP-8847</p>
        </item>
        <item>
          <p>
	    Windows 2003 and Windows XP pre SP3 would sometimes not
	    start the Erlang R14B VM at all due to a bug in the cpu
	    topology detection. The bug affects Windows only, no
	    other platform is even remotely affected. The bug is now
	    corrected.</p>
          <p>
	    Own Id: OTP-8876</p>
        </item>
        <item>
          <p>
	    The HiPE run-time in the 64-bit emulator could do a
	    64-bit write to a 32-bit struct field. It happened to be
	    harmless on Intel/AMD processors. Corrected. (Thanks to
	    Mikael Pettersson.)</p>
          <p>
	    Own Id: OTP-8877</p>
        </item>
        <item>
          <p>
	    A bug in <seecref
	    marker="erl_driver#erl_drv_tsd_get">erl_drv_tsd_get()</seecref>
	    and <seecref
	    marker="erl_nif#enif_tsd_get">enif_tsd_get()</seecref>
	    could cause an emulator crash. These functions are
	    currently not used in OTP. That is, the crash only occur
	    on systems with user implemented NIF libraries, or
	    drivers that use one of these functions.</p>
          <p>
	    Own Id: OTP-8889</p>
        </item>
        <item>
          <p>
	    Calling <c>erlang:system_info({cpu_topology,
	    CpuTopologyType})</c> with another <c>CpuTopologyType</c>
	    element than one of the documented atoms <c>defined</c>,
	    <c>detected</c>, or <c>used</c> caused an emulator crash.
	    (Thanks to Paul Guyot)</p>
          <p>
	    Own Id: OTP-8914</p>
        </item>
        <item>
          <p>
	    The ERTS internal rwlock implementation could get into an
	    inconsistent state. This bug was very seldom triggered,
	    but could be during heavy contention. The bug was
	    introduced in R14B (erts-5.8.1).</p>
          <p>
	    The bug was most likely to be triggered when using the
	    <c>read_concurrency</c> option on an ETS table that was
	    frequently accessed from multiple processes doing lots of
	    writes and reads. That is, in a situation where you
	    typically don't want to use the <c>read_concurrency</c>
	    option in the first place.</p>
          <p>
	    Own Id: OTP-8925 Aux Id: OTP-8544 </p>
        </item>
        <item>
          <p>
	    Tracing to port could cause an emulator crash when
	    unloading the trace driver.</p>
          <p>
	    Own Id: OTP-8932</p>
        </item>
        <item>
          <p>
	    Removed use of CancelIoEx on Windows that had been shown
	    to cause problems with some drivers.</p>
          <p>
	    Own Id: OTP-8937</p>
        </item>
        <item>
          <p>
	    The fallback implementation used when no native atomic
	    implementation was found did not compile. (Thanks to
	    Patrick Baggett, and Tuncer Ayaz)</p>
          <p>
	    Own Id: OTP-8944</p>
        </item>
        <item>
          <p>
	    Some integer values used during load balancing could
	    under rare circumstances wrap causing a load unbalance
	    between schedulers.</p>
          <p>
	    Own Id: OTP-8950</p>
        </item>
        <item>
          <p>
	    The windows VM now correctly handles appending to large
	    files (> 4GB).</p>
          <p>
	    Own Id: OTP-8958</p>
        </item>
        <item>
          <p>
	    Name resolving of IPv6 addresses has been implemented for
	    Windows versions that support it. The use of ancient
	    resolver flags (AI_V4MAPPED | AI_ADDRCONFIG) to the
	    getaddrinfo() function has been removed since e.g FreeBSD
	    regard mapped IPv4 addresses to be a security problem and
	    the semantics of the address configured flag is
	    uncertain.</p>
          <p>
	    Own Id: OTP-8969</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    The help texts produced by the <c>configure</c> scripts
	    in the top directory and in the erts directory have been
	    aligned and cleaned up.</p>
          <p>
	    Own Id: OTP-8859</p>
        </item>
        <item>
          <p>
	    When the runtime system had fewer schedulers than logical
	    processors, the system could get an unnecessarily large
	    amount reader groups.</p>
          <p>
	    Own Id: OTP-8861</p>
        </item>
        <item>
          <p>
	    <c>run_rel</c> has been updated to support Solaris's
	    /dev/ptmx device and to load the necessary STREAMS
	    modules so that <c>to_erl</c> can provide terminal echo
	    of keyboard input. (Thanks to Ryan Tilder.)</p>
          <p>
	    Own Id: OTP-8878</p>
        </item>
        <item>
          <p>
	    The Erlang VM now supports Unicode filenames. The feature
	    is turned on by default on systems where Unicode
	    filenames are mandatory (Windows and MacOSX), but can be
	    enabled on other systems with the '+fnu' emulator option.
	    Enabling the Unicode filename feature on systems where it
	    is not default is however considered experimental and not
	    to be used for production. Together with the Unicode file
	    name support, the concept of "raw filenames" is
	    introduced, which means filenames provided without
	    implicit unicode encoding translation. Raw filenames are
	    provided as binaries, not lists. For further information,
	    see stdlib users guide and the chapter about using
	    Unicode in Erlang. Also see the file module manual page.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-8887</p>
        </item>
        <item>
	    <p>Buffer overflows have been prevented in <c>erlc</c>,
	    <c>dialyzer</c>, <c>typer</c>, <c>run_test</c>,
	    <c>heart</c>, <c>escript</c>, and <c>erlexec</c>.</p>
	    (Thanks to Michael Santos.)
          <p>
	    Own Id: OTP-8892</p>
        </item>
        <item>
          <p>
	    The runtime system is now less eager to suspend processes
	    sending messages over the distribution. The default value
	    of the distribution buffer busy limit has also been
	    increased from 128 KB to 1 MB. This in order to improve
	    throughput.</p>
          <p>
	    Own Id: OTP-8901</p>
        </item>
        <item>
          <p>
	    The distribution buffer busy limit can now be configured
	    at system startup. For more information see the
	    documentation of the <c>erl</c> <seecom
	    marker="erl#+zdbbl">+zdbbl</seecom> command line flag.
	    (Thanks to Scott Lystig Fritchie)</p>
          <p>
	    Own Id: OTP-8912</p>
        </item>
        <item>
          <p>
	    The inet driver internal buffer stack implementation has
	    been rewritten in order to reduce lock contention.</p>
          <p>
	    Own Id: OTP-8916</p>
        </item>
        <item>
          <p>
	    New ETS option <c>compressed</c>, to enable a more
	    compact storage format at the expence of heavier table
	    operations. For test and evaluation, <c>erl +ec</c> can
	    be used to force compression on all ETS tables.</p>
          <p>
	    Own Id: OTP-8922 Aux Id: seq11658 </p>
        </item>
        <item>
          <p>
	    There is now a new function inet:getifaddrs/0 modeled
	    after C library function getifaddrs() on BSD and LInux
	    that reports existing interfaces and their addresses on
	    the host. This replaces the undocumented and unsupported
	    inet:getiflist/0 and inet:ifget/2.</p>
          <p>
	    Own Id: OTP-8926</p>
        </item>
        <item>
          <p>
	    Support for detection of CPU topology and binding of
	    schedulers on FreeBSD 8 have been added. (Thanks to Paul
	    Guyot)</p>
          <p>
	    Own Id: OTP-8939</p>
        </item>
        <item>
          <p>
	    Several bugs related to hibernate/3 and HiPE have been
	    corrected. (Thanks to Paul Guyot.)</p>
          <p>
	    Own Id: OTP-8952</p>
        </item>
        <item>
          <p>
	    Support for soft and hard links on Windows versions and
	    filesystems that support them is added.</p>
          <p>
	    Own Id: OTP-8955</p>
        </item>
        <item>
          <p>
	    The win32 virtual machine is now linked large address
	    aware. his allows the Erlang VM to use up to 3 gigs of
	    address space on Windows instead of the default of 2
	    gigs.</p>
          <p>
	    Own Id: OTP-8956</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.8.1.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p> Fix that the documentation top index generator can
	    handle an Ericsson internal application group. </p>
          <p>
	    Own Id: OTP-8875</p>
        </item>
        <item>
	    <p>In embedded mode, on_load handlers that called
	    <c>code:priv_dir/1</c> or other functions in <c>code</c>
	    would hang the system. Since the <c>crypto</c>
	    application now contains an on_loader handler that calls
	    <c>code:priv_dir/1</c>, including the <c>crypto</c>
	    application in the boot file would prevent the system
	    from starting.</p>
	    <p>Also extended the <c>-init_debug</c> option to print
	    information about on_load handlers being run to
	    facilitate debugging.</p>
          <p>
	    Own Id: OTP-8902 Aux Id: seq11703 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.8.1.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Windows 2003 and Windows XP pre SP3 would sometimes not
	    start the Erlang R14B VM at all due to a bug in the cpu
	    topology detection. The bug affects Windows only, no
	    other platform is even remotely affected. The bug is now
	    corrected.</p>
          <p>
	    Own Id: OTP-8876</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.8.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Very small floating point numbers generated errors when
	    converting from list to float in some versions of the VM,
	    this is now corrected so that i.e.
	    list_to_float("1.0e-324"). returns 0.0 in all versions of
	    Erlang.</p>
          <p>
	    Own Id: OTP-7178</p>
        </item>
        <item>
          <p>
	    Windows Vista and Windows 7 file system virtualization,
	    which makes "old style" windows programs execute in a
	    file system sandbox, was previously unintentionally
	    turned on for the Erlang VM. This is now corrected so
	    that i.e. writes to C:\Program Files\. without
	    administrator privileges will fail.</p>
          <p>
	    Own Id: OTP-7405</p>
        </item>
        <item>
          <p>
	    Fix faulty 64-bit integer term output from drivers. Large
	    64-bits integers did not generate correct bignums and
	    could even cause emulator crash. Only affects drivers
	    using ERL_DRV_INT64 or ERL_DRV_UINT64, introduced in
	    R13B03.</p>
          <p>
	    Own Id: OTP-8716</p>
        </item>
        <item>
          <p>
	    Fixed: inet:setopts(S, [{linger,{true,2}}]) returned
	    {error,einval} for SCTP sockets. The inet_drv had a bug
	    when checking the option size.</p>
          <p>
	    Own Id: OTP-8726 Aux Id: seq11617 </p>
        </item>
        <item>
	    <p>Fix libm linking with --as-needed flag</p>
          <p>
	    When building with "--as-needed" linker flags on Linux
	    the build will fail. This has now been fixed.</p>
          <p>
	    (Thanks to Christian Faulhammer)</p>
          <p>
	    Own Id: OTP-8728</p>
        </item>
        <item>
          <p>
	    gen_udp:connect/3 was broken for SCTP enabled builds. It
	    did not detect remote end errors as it should.</p>
          <p>
	    Own Id: OTP-8729</p>
        </item>
        <item>
	    <p>Reduce the risk of integer wrapping in bin vheap size
	    counting.</p> <p>The vheap size series will now use the
	    golden ratio instead of doubling and fibonacci
	    sequences.</p>
          <p>
	    Own Id: OTP-8730</p>
        </item>
        <item>
          <p>
	    ETS ordered_set containing <c>[]</c> as key could cause
	    strange thing to happen, like an infinite hanging
	    <c>ets:select</c>.</p>
          <p>
	    Own Id: OTP-8732</p>
        </item>
        <item>
	    <p>reference() has been substituted for ref() in the
	    documentation.</p>
          <p>
	    Own Id: OTP-8733</p>
        </item>
        <item>
          <p>
	    When a native compiled module called a not loaded
	    non-native compiled module that had an on_load function,
	    the export entries were trashed after code loading so on
	    the next call from the native compiled module to the
	    non-native compiled the emulator crashed. This bug has
	    now been fixed.</p>
          <p>
	    Own Id: OTP-8736</p>
        </item>
        <item>
          <p>
	    HiPE-enabled Erlang VMs running on BSD systems sometimes
	    generated messages like "Yikes! erts_alloc() returned
	    misaligned address 0x8016a512c". Fixed. (Thanks to Mikael
	    Pettersson.)</p>
          <p>
	    Own Id: OTP-8769</p>
        </item>
        <item>
          <p>
	    A race condition in <c>erts_poll()</c> could cause delay
	    of poll for I/O.</p>
          <p>
	    Own Id: OTP-8773</p>
        </item>
        <item>
          <p>
	    Removed some potential vulnerabilities from the Erlang
	    Port Mapper Daemon (epmd) and straightened up access
	    control. Also removed hazardous interfaces allowing
	    anyone on a machine to forcefully unregister other nodes.
	    This means that the ei_unregister/erl_unregister
	    interfaces in erl_interface is rendered not only error
	    prone and mystifying as before, but totally ineffective.
	    The old behaviour of unchecked node unregistering can be
	    restored if needed, see epmd documentation for details.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-8780</p>
        </item>
        <item>
	    <p> Building in a source tree without prebuilt platform
	    independent build results failed on the SSL examples
	    when: </p> <list><item> cross building. This has been
	    solved by not building the SSL examples during a cross
	    build. </item><item> building on Windows. </item></list>
          <p>
	    Own Id: OTP-8791</p>
        </item>
        <item>
          <p>
	    inet:getsockopt for SCTP sctp_default_send_param had a
	    bug to not initialize required feilds causing random
	    answers. It is now corrected.</p>
          <p>
	    Own Id: OTP-8795 Aux Id: seq11655 </p>
        </item>
        <item>
          <p>
	    The hipe_bifs:get_hrvtime/0 BIF now always returns a real
	    value even if the "perfctr" Linux kernel extension is not
	    available. It used to return a dummy value. (Thanks to
	    Mikael Pettersson.)</p>
          <p>
	    Own Id: OTP-8798</p>
        </item>
        <item>
          <p>
	    Calling a native-code compiled module with an
	    <c>on_load</c> function could cause a crash. (Thanks to
	    Mikael Pettersson.)</p>
          <p>
	    Own Id: OTP-8799</p>
        </item>
        <item>
	    <p>The emulator could crash while writing a crash dump if
	    native-compiled modules had been loaded. (Thanks to Paul
	    Guyot.)</p>
          <p>
	    Own Id: OTP-8801</p>
        </item>
        <item>
          <p>
	    The garbage collector could crash if invoked from
	    native-compiled code after a call to a BIF. (Thanks to
	    Paul Guyot.)</p>
          <p>
	    Own Id: OTP-8821</p>
        </item>
        <item>
          <p>
	    A rare memory leak in binary:matches is removed</p>
          <p>
	    Own Id: OTP-8823</p>
        </item>
        <item>
	    <p>For a socket in the HTTP packet mode, the return value
	    from <c>gen_tcp:recv/2,3</c> if there is an error in the
	    header will be <c>{ok,{http_error,String}}</c> instead of
	    <c>{error,{http_error,String}}</c> to be consistent with
	    <c>ssl:recv/2,3</c>.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-8831</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    ets:select_reverse/{1,2,3} are now documented.</p>
          <p>
	    Own Id: OTP-7863</p>
        </item>
        <item>
          <p>
	    External format of integers changed to make full use of
	    all 32 bits of INTEGER_EXT. This is a compatible change
	    as old code can read full 32-bit integers but only
	    produce 28-bit integers as INTEGER_EXT.</p>
          <p>
	    Own Id: OTP-8540 Aux Id: seq11534 </p>
        </item>
        <item>
          <p>
	    Large parts of the <c>ethread</c> library have been
	    rewritten. The <c>ethread</c> library is an Erlang
	    runtime system internal, portable thread library used by
	    the runtime system itself.</p>
          <p>
	    Most notable improvement is a reader optimized rwlock
	    implementation which dramatically improve the performance
	    of read-lock/read-unlock operations on multi processor
	    systems by avoiding ping-ponging of the rwlock cache
	    lines. The reader optimized rwlock implementation is used
	    by miscellaneous rwlocks in the runtime system that are
	    known to be read-locked frequently, and can be enabled on
	    ETS tables by passing the <seeerl
	    marker="stdlib:ets#new_2_read_concurrency">{read_concurrency,
	    true}</seeerl> option upon table creation. See the
	    documentation of <seemfa
	    marker="stdlib:ets#new/2">ets:new/2</seemfa> for more
	    information. The reader optimized rwlock implementation
	    can be fine tuned when starting the runtime system. For
	    more information, see the documentation of the <seecom
	    marker="erts:erl#+rg">+rg</seecom> command line argument
	    of <c>erl</c>.</p>
          <p>
	    There is also a new implementation of rwlocks that is not
	    optimized for readers. Both implementations interleaves
	    readers and writers during contention as opposed to,
	    e.g., the NPTL (Linux) pthread rwlock implementation
	    which use either a reader or writer preferred strategy.
	    The reader/writer preferred strategy is problematic since
	    it starves threads doing the non-preferred operation.</p>
          <p>
	    The new rwlock implementations in general performs better
	    in ERTS than common pthread implementations. However, in
	    some extremely heavily contended cases this is not the
	    case. Such heavy contention can more or less only appear
	    on ETS tables. This when multiple processes do very large
	    amounts of write locked operations simultaneously on the
	    same table. Such use of ETS is bad regardless of rwlock
	    implementation, will never scale, and is something we
	    strongly advise against.</p>
          <p>
	    The new rwlock implementations depend on atomic
	    operations. If no native atomic implementation is found,
	    a fallback solution will be used. Using the fallback
	    implies a performance degradation. That is, it is more
	    important now than before to build OTP with a native
	    atomic implementation.</p>
          <p>
	    The <c>ethread</c> library contains native atomic
	    implementations for, x86 (32 and 64 bit), powerpc (32
	    bit), sparc V9 (32 and 64 bit), and tilera (32 bit). On
	    other hardware gcc's builtin support for atomic memory
	    access will be used if such exists. If no such support is
	    found, <c>configure</c> will warn about no atomic
	    implementation available.</p>
          <p>
	    The <c>ethread</c> library can now also use the
	    <c>libatomic_ops</c> library for atomic memory accesses.
	    This makes it possible for the Erlang runtime system to
	    utilize optimized native atomic operations on more
	    platforms than before. If <c>configure</c> warns about no
	    atomic implementation available, try using the
	    <c>libatomic_ops</c> library. Use the <seeguide
	    marker="system/installation_guide:INSTALL#Advanced-configuration-and-build-of-ErlangOTP">--with-libatomic_ops=PATH</seeguide>
	    <c>configure</c> command line argument when specifying
	    where the <c>libatomic_ops</c> installation is located.
	    The <c>libatomic_ops</c> library can be downloaded from:
	    <url
	    href="http://www.hpl.hp.com/research/linux/atomic_ops/">http://www.hpl.hp.com/research/linux/atomic_ops/</url></p>
          <p>
	    The changed API of the <c>ethread</c> library has also
	    caused modifications in the Erlang runtime system.
	    Preparations for the to come "delayed deallocation"
	    feature has also been done since it depends on the
	    <c>ethread</c> library.</p>
          <p>
	    <em>Note</em>: When building for x86, the <c>ethread</c>
	    library will now use instructions that first appeared on
	    the pentium 4 processor. If you want the runtime system
	    to be compatible with older processors (back to 486) you
	    need to pass the <seeguide
	    marker="system/installation_guide:INSTALL#Advanced-configuration-and-build-of-ErlangOTP">--enable-ethread-pre-pentium4-compatibility</seeguide>
	    <c>configure</c> command line argument when configuring
	    the system.</p>
          <p>
	    Own Id: OTP-8544</p>
        </item>
        <item>
          <p>
	    erlang:localtime_to_universaltime({{2008, 8, 1}, {0, 0,
	    0}},true) when TZ=UTC now behaves consistently on all
	    Unix platforms.</p>
          <p>
	    The problem fixed was originally reported by Paul Guyot
	    on erlang-bugs mailing list:</p>
          <p>
	    http://www.erlang.org/pipermail/erlang-bugs/2008-November/001077.html</p>
          <p>
	    Own Id: OTP-8580</p>
        </item>
        <item>
          <p>
	    Optimization reducing memory consumption by two words per
	    ETS object.</p>
          <p>
	    Own Id: OTP-8737</p>
        </item>
        <item>
          <p>
	    Fixes for unsupported halfword-emulator</p>
          <p>
	    Own Id: OTP-8745</p>
        </item>
        <item>
          <p>
	    NIF 64-bit integer support; <c>enif_get_int64</c>,
	    <c>enif_get_uint64</c>, <c>enif_make_int64</c>,
	    <c>enif_make_uint64</c>.</p>
          <p>
	    Own Id: OTP-8746</p>
        </item>
        <item>
          <p>
	    Alignment of trailing data in messages has been adjusted.
	    This in order to be able to pass data of any type as
	    trailing data in the future.</p>
          <p>
	    Own Id: OTP-8754</p>
        </item>
        <item>
          <p>
	    The obsolete/driver.h header file has been removed. It
	    has been obsolete and deprecated since R8B. Drivers that
	    still include obsolete/driver.h must be updated to
	    include erl_driver.h.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-8758</p>
        </item>
        <item>
          <p>
	    Added erlang:system_info(build_type) which makes it
	    easier to chose drivers, NIF libraries, etc based on
	    build type of the runtime system.</p>
          <p>
	    The NIF library for crypto can now be built for valgrind
	    and/or debug as separate NIF libraries that will be
	    automatically loaded if the runtime system has been built
	    with a matching build type.</p>
          <p>
	    Own Id: OTP-8760</p>
        </item>
        <item>
          <p>
	    Further lessened the memory requirements of ETS objects.</p>
          <p>
	    Own Id: OTP-8762</p>
        </item>
        <item>
	    <p>The broken elib_malloc alternate memory allocator has
	    been removed. <c>erlang:system_info(elib_malloc)</c> will
	    always return <c>false</c>, and in R15,
	    <c>erlang:system_info(elib_malloc)</c> will fail with a
	    <c>badarg</c> exception.</p>
          <p>
	    Own Id: OTP-8764</p>
        </item>
        <item>
          <p>
	    Calling <c>erlang:system_info/1</c> with the new argument
	    <c>update_cpu_info</c> will make the runtime system
	    reread and update the internally stored CPU information.
	    For more information see the documentation of <seeerl
	    marker="erlang#system_info_update_cpu_info">erlang:system_info(update_cpu_info)</seeerl>.</p>
          <p>
	    The CPU topology is now automatically detected on Windows
	    systems with less than 33 logical processors. The runtime
	    system will now, also on Windows, by default bind
	    schedulers to logical processors using the
	    <c>default_bind</c> bind type if the amount of schedulers
	    is at least equal to the amount of logical processors
	    configured, binding of schedulers is supported, and a CPU
	    topology is available at startup.</p>
          <p>
	    Own Id: OTP-8765</p>
        </item>
        <item>
          <p>
	    The SMP ERTS internal child waiter thread used on Linux
	    system with NPTL was unintentionally disabled during
	    cross compilation rewrites (OTP-8323 in R13B03). It has
	    now been re-enabled. Enabling it again gives a slight
	    performance improvement.</p>
          <p>
	    Own Id: OTP-8774</p>
        </item>
        <item>
          <p>
	    <c>epmd</c> used to generate a message to the syslog when
	    it started up, which could be annoying. This has been
	    changed to only generate the message if the debug switch
	    is given. (Thanks to Michael Santos.)</p>
          <p>
	    Own Id: OTP-8775</p>
        </item>
        <item>
          <p>
	    The scheduler wakeup threshold is now possible to adjust
	    at system boot. For more information see the <seecom
	    marker="erl#+swt">+swt</seecom> command line argument of
	    <c>erl</c>.</p>
          <p>
	    Own Id: OTP-8811</p>
        </item>
        <item>
          <p>
	    The undocumented function inet:ifget/2 has been improved
	    to return interface hardware address (MAC) on platforms
	    supporting getaddrinfo() (such as BSD unixes). Note it
	    still does not work on all platforms for example not
	    Windows nor Solaris, so the function is still
	    undocumented.</p>
          <p>
	    Buffer overflow and field init bugs for inet:ifget/2 and
	    inet:getservbyname/2 has also been fixed.</p>
          <p>
	    Thanks to Michael Santos.</p>
          <p>
	    Own Id: OTP-8816</p>
        </item>
        <item>
          <p>
	    Optimizations for MIPS when using gcc atomics. (Thanks to
	    Steve Vinoski)</p>
          <p>
	    Own Id: OTP-8834</p>
        </item>
        <item>
          <p>
	    Lock optimization in timer functionality.</p>
          <p>
	    Own Id: OTP-8835</p>
        </item>
      </list>
    </section>


    <section><title>Known Bugs and Problems</title>
      <list>
        <item>
	    <p>Fix epmd and build environment to build on VxWorks</p>
          <p>
	    Own Id: OTP-8838</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.8</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Driver threads, such as async threads, using <seecref
	    marker="erl_driver#ErlDrvPDL">port data locks</seecref>
	    peeked at the port status field without proper locking
	    when looking up the driver queue.</p>
          <p>
	    Own Id: OTP-8475</p>
        </item>
        <item>
          <p>
	    The use of <c>mmap()</c> was unnecessarily disabled when
	    cross compiling.</p>
          <p>
	    The <c>configure</c> arguments <c>--with-ssl</c>, and
	    <c>--with-odbc</c> refused to accept libraries outside of
	    <c>$erl_xcomp_sysroot</c> when cross compiling for no
	    good reason.</p>
          <p>
	    The <c>configure</c> argument <c>--with-odbc</c> didn't
	    handle the value <c>yes</c> correct.</p>
          <p>
	    The <c>configure</c> arguments <c>--with-odbc</c>, and
	    <c>--without-odbc</c> have also been added to the
	    configure help.</p>
          <p>
	    (Thanks to Steve Vinoski for reporting these issues)</p>
          <p>
	    Own Id: OTP-8484</p>
        </item>
        <item>
          <p>
	    A call to the BIF <c>unregister(RegName)</c> when a port
	    had the name <c>RegName</c> registered in the runtime
	    system without SMP support caused a runtime system crash.
	    (Thanks to Per Hedeland for the bugfix and test case.)</p>
          <p>
	    Own Id: OTP-8487</p>
        </item>
        <item>
          <p>
	    The runtime system crashed if fewer logical processors
	    were found than reported by <c>sysconf(
	    SC_NPROCESSORS_CONF)</c>.</p>
          <p>
	    Own Id: OTP-8549</p>
        </item>
        <item>
          <p>
	    Fix memory management bug causing crash of non-SMP
	    emulator with async threads enabled. The bug did first
	    appear in R13B03.</p>
          <p>
	    Own Id: OTP-8591 Aux Id: seq11554 </p>
        </item>
        <item>
          <p>
	    Port locks could be prematurely destroyed.</p>
          <p>
	    Own Id: OTP-8612</p>
        </item>
        <item>
	    <p>The <c>empd</c> program could loop and consume 100%
	    CPU time if an unexpected error occurred in
	    <c>listen()</c> or <c>accept()</c>. Now <c>epmd</c> will
	    terminate if a non-recoverable error occurs. (Thanks to
	    Michael Santos.)</p>
          <p>
	    Own Id: OTP-8618</p>
        </item>
        <item>
          <p>
	    When kernel poll has been enabled, a livelock could in
	    rare circumstances occur. Problem reported by Chetan
	    Ahuja, fix by Mikael Pettersson.</p>
          <p>
	    Own Id: OTP-8632</p>
        </item>
        <item>
          <p>
	    Windows: Closing port of program that stalled without
	    reading all data could deadlock scheduler thread.</p>
          <p>
	    Own Id: OTP-8641</p>
        </item>
        <item>
          <p>
	    On some combination of Montavista Linux on Cavium Octeon
	    processors, some socket-related system calls returned
	    other numbers than -1 for errors. This caused a core dump
	    in inet_drv.c. Now the code works around this problem.</p>
          <p>
	    Own Id: OTP-8654</p>
        </item>
        <item>
          <p>
	    Missing memory barriers in <c>erts_poll()</c> could cause
	    the runtime system to hang indefinitely.</p>
          <p>
	    Own Id: OTP-8658</p>
        </item>
        <item>
          <p>
	    <c>ethr_rwmutex_tryrlock()</c> acquired and refused to
	    acquire a lock with inverted logic. The lock was however
	    never acquired in a thread unsafe manner. (Thanks to JR
	    Zhang for noting this issue)</p>
          <p>
	    Own Id: OTP-8662</p>
        </item>
        <item>
          <p>
	    Extreme combinations of register/unregister in a highly
	    parallel SMP application could crash the VM. The error
	    is corrected.</p>
          <p>
	    Own Id: OTP-8663</p>
        </item>
        <item>
          <p>
	    On Windows, files are now opened with FILE_SHARE_DELETE
	    to get closer to Unix semantics.</p>
          <p>
	    Own Id: OTP-8667</p>
        </item>
        <item>
          <p>
	    <c>erlang:system_info(multi_scheduling)</c> sometimes
	    erroneously returned <c>enabled</c> when it should have
	    returned <c>blocked</c>.</p>
          <p>
	    Own Id: OTP-8675</p>
        </item>
        <item>
          <p>
	    Fix bug causing <c>erlang:decode_packet</c> and
	    <c>enif_make_string</c> to generate faulty strings with
	    negative character values for ascii values larger than
	    127. (Thanks to Paul Guyot)</p>
          <p>
	    Own Id: OTP-8685</p>
        </item>
        <item>
          <p>
	    <c>open_port/2</c> with the <c>spawn</c> and
	    <c>spawn_executable</c> options can include an
	    <c>{env,Env}</c> option. In some cases unsetting
	    variables would not work on Unix (typically if more
	    variables were unset than were actually present in the
	    environment).</p>
          <p>
	    Own Id: OTP-8701</p>
        </item>
        <item>
          <p>
	    A user defined CPU topology set via a call to <seeerl
	    marker="erlang#system_flag_cpu_topology">erlang:system_flag(cpu_topology,
	    CPUTopology)</seeerl> was not properly verified, and
	    could in worst case cause an emulator crash. The emulator
	    crash could only occur when a user defined CPU topology
	    already existed and was redefined.</p>
          <p>
	    Own Id: OTP-8710</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    The grammar for match specifications in ERTS users guide
	    only described the tracing dialect of match
	    specifications. An informal grammar for the ETS dialect
	    is added.</p>
          <p>
	    Own Id: OTP-8086 Aux Id: seq11333 </p>
        </item>
        <item>
          <p>
	    The module binary from EEP31 (and EEP9) is implemented.</p>
          <p>
	    Own Id: OTP-8217</p>
        </item>
        <item>
          <p>
	    New NIF API function <c>enif_make_new_binary</c></p>
          <p>
	    Own Id: OTP-8474</p>
        </item>
        <item>
          <p>
	    The guard BIF <c>is_boolean/1</c> (introduced in R10B)
	    has now been included in the lists of BIFs allowed in
	    guards in the Reference Manual.</p>
          <p>
	    Own Id: OTP-8477</p>
        </item>
        <item>
          <p>
	    Added function <c>zip:foldl/3</c> to iterate over zip
	    archives.</p>
          <p>
	    Added functions to create and extract escripts. See
	    <c>escript:create/2</c> and <c>escript:extract/2</c>.</p>
          <p>
	    The undocumented function <c>escript:foldl/3</c> has been
	    removed. The same functionality can be achieved with the
	    more flexible functions <c>escript:extract/2</c> and
	    <c>zip:foldl/3</c>.</p>
          <p>
	    Record fields has been annotated with type info. Source
	    files as been adapted to fit within 80 chars and trailing
	    whitespace has been removed.</p>
          <p>
	    Own Id: OTP-8521</p>
        </item>
        <item>
	    <p>A regular expression with many levels of parenthesis
	    could cause a buffer overflow. That has been corrected.
	    (Thanks to Michael Santos.)</p>
          <p>
	    Own Id: OTP-8539</p>
        </item>
        <item>
          <p>
	    <c>erlang:decode_packet(httph_bin,..)</c> could return
	    corrupt header strings or even crash the VM. This has
	    been fixed. It only happened on 32-bit VM if the header
	    name was unknown and between 16 and 20 characters long.
	    Sockets with simular <c>packet</c> option did not suffer
	    from this bug.</p>
          <p>
	    Own Id: OTP-8548</p>
        </item>
        <item>
	    <p>New NIF features:</p> <list><item> Send messages from
	    a NIF, or from thread created by NIF, to any local
	    process (<c>enif_send</c>) </item><item> Store terms
	    between NIF calls (<c>enif_alloc_env</c>,
	    <c>enif_make_copy</c>) </item><item> Create binary terms
	    with user defined memory management
	    (<c>enif_make_resource_binary</c>) </item></list> <p>And
	    some incompatible changes made to the API. For more
	    information see the warning text in <seecref
	    marker="erl_nif">erl_nif(3)</seecref>.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-8555</p>
        </item>
        <item>
	    <p>If the '<c>fop</c>' program (needed for building PDF
	    files) cannot not be found, it is now possible to build
	    the HTML and man pages anyway (there will also be dummy
	    PDF files with no real content created). (Thanks to
	    Tuncer Ayaz.)</p>
          <p>
	    Own Id: OTP-8559</p>
        </item>
        <item>
	    <p>When defining macros the closing right parenthesis
	    before the dot is now mandatory.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-8562</p>
        </item>
        <item>
	    <p>Local and imported functions now override the
	    auto-imported BIFs when the names clash. The pre R14
	    behaviour was that auto-imported BIFs would override
	    local functions. To avoid that old programs change
	    behaviour, the following will generate an error:</p>
	    <list><item><p>Doing a call without explicit module name
	    to a local function having a name clashing with the name
	    of an auto-imported BIF that was present (and
	    auto-imported) before OTP R14A</p></item>
	    <item><p>Explicitly importing a function having a name
	    clashing with the name of an autoimported BIF that was
	    present (and autoimported) before OTP R14A</p></item>
	    <item><p>Using any form of the old compiler directive
	    <c>nowarn_bif_clash</c></p></item> </list> <p>If the BIF
	    was added or auto-imported in OTP R14A or later,
	    overriding it with an import or a local function will
	    only result in a warning,</p> <p>To resolve clashes, you
	    can either use the explicit module name <c>erlang</c> to
	    call the BIF, or you can remove the auto-import of that
	    specific BIF by using the new compiler directive
	    <c>-compile({no_auto_import,[F/A]}).</c>, which makes all
	    calls to the local or imported function without explicit
	    module name pass without warnings or errors.</p> <p>The
	    change makes it possible to add auto-imported BIFs
	    without breaking or silently changing old code in the
	    future. However some current code ingeniously utilizing
	    the old behaviour or the <c>nowarn_bif_clash</c> compiler
	    directive, might need changing to be accepted by the
	    compiler.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-8579</p>
        </item>
        <item>
          <p>
	    A bug in re that could cause certain regular expression
	    matches never to terminate is corrected. (Thanks to
	    Michael Santos and Gordon Guthrie.)</p>
          <p>
	    Own Id: OTP-8589</p>
        </item>
        <item>
	    <p>The erlang:open_port spawn and spawn_executable
	    directives can include an <c>{env,Env}</c> directive to
	    set up environment variables for the spawned process. A
	    bug prevented applications from using <c>{env,Env}</c> to
	    set an environment variable whose value ended with a
	    '<c>=</c>' (equal sign) character; the trailing equal
	    sign was mistaken as an indication that an environment
	    variable was to be cleared from the environment of the
	    spawned process. (Thanks to Steve Vinoski.)</p>
          <p>
	    Own Id: OTP-8614</p>
        </item>
        <item>
	    <p><c>receive</c> statements that can only read out a
	    newly created reference are now specially optimized so
	    that it will execute in constant time regardless of the
	    number of messages in the receive queue for the process.
	    That optimization will benefit calls to
	    <c>gen_server:call()</c>. (See <c>gen:do_call/4</c> for
	    an example of a receive statement that will be
	    optimized.)</p>
          <p>
	    Own Id: OTP-8623</p>
        </item>
        <item>
          <p>
	    The functions file:advise/4 and file:datasync/1 have been
	    added. (Thanks to Filipe David Manana.)</p>
          <p>
	    Own Id: OTP-8637</p>
        </item>
        <item>
          <p>
	    New NIF API functions: <c>enif_make_atom_len</c>,
	    <c>enif_make_existing_atom_len</c>,
	    <c>enif_make_string_len</c>, <c>enif_get_atom_length</c>,
	    <c>enif_get_list_length</c>, <c>enif_is_list</c>,
	    <c>enif_is_tuple</c> (by Tuncer Ayaz)</p>
          <p>
	    Own Id: OTP-8640</p>
        </item>
        <item>
          <p>
	    Support for using gcc's built-in functions for atomic
	    memory access has been added. This functionality will be
	    used if available and no other native atomic
	    implementation in ERTS is available.</p>
          <p>
	    Own Id: OTP-8659</p>
        </item>
        <item>
          <p>
	    The number of spinlocks used when implementing atomic
	    fall-backs when no native atomic implementation is
	    available has been increased from 16 to 1024.</p>
          <p>
	    Own Id: OTP-8660</p>
        </item>
        <item>
          <p>
	    Writer preferred pthread read/write locks has been
	    enabled on Linux.</p>
          <p>
	    Own Id: OTP-8661</p>
        </item>
        <item>
          <p>
	    The runtime system will by default bind schedulers to
	    logical processors using the <c>default_bind</c> bind
	    type if the amount of schedulers are at least equal to
	    the amount of logical processors configured, binding of
	    schedulers is supported, and a CPU topology is available
	    at startup. </p>
          <p>
	    <em>NOTE:</em> If the Erlang runtime system is the only
	    operating system process that binds threads to logical
	    processors, this improves the performance of the runtime
	    system. However, if other operating system processes (as
	    for example another Erlang runtime system) also bind
	    threads to logical processors, there might be a
	    performance penalty instead. If this is the case you, are
	    are advised to unbind the schedulers using the <seecom
	    marker="erl#+sbt">+sbtu</seecom> command line argument,
	    or by invoking <seeerl
	    marker="erlang#system_flag_scheduler_bind_type">erlang:system_flag(scheduler_bind_type,
	    unbound)</seeerl>.</p>
          <p>
	    Own Id: OTP-8666</p>
        </item>
        <item>
          <p>
	    The recently added BIFs erlang:min/2, erlang:max/2 and
	    erlang:port_command/3 are now auto-imported (as they were
	    originally intended to be). Due to the recent compiler
	    change (OTP-8579), the only impact on old code defining
	    it's own min/2, max/2 or port_command/3 functions will be
	    a warning, the local functions will still be used. The
	    warning can be removed by using
	    -compile({no_auto_import,[min/2,max/2,port_command/3]}).
	    in the source file.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-8669 Aux Id: OTP-8579 </p>
        </item>
        <item>
          <p>
	    There is a new option 'exclusive' to file:open/2 that
	    uses the OS O_EXCL flag where supported to open the file
	    in exclusive mode.</p>
          <p>
	    Own Id: OTP-8670</p>
        </item>
        <item>
          <p>
	    Now, binary_to_term/2 is auto-imported. This will cause a
	    compile warning if and only if a module has got a local
	    function with that name.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-8671</p>
        </item>
        <item>
          <p>
	    Alignment of scheduler data and run queues were adjusted.</p>
          <p>
	    Own Id: OTP-8673</p>
        </item>
        <item>
	    <p>Call time breakpoint tracing</p> <list><item>Introduce
	    a <c>call_time</c> option to
	    <c>erlang:trace_pattern/3</c>.This option enables call
	    time breakpoint tracing on code that is executed by
	    processes with call tracing enabled. Call time tracing
	    stores the number of calls and the time spent of each
	    function with this trace pattern enabled. The information
	    can be retrieved with <c>erlang:trace_info/2</c></item>
	    <item>Add a scheduler array for BpData. To solve the
	    issue of multiple schedulers constantly updating the head
	    pointer to the bp data wheel, each scheduler now has its
	    own entrypoint to the wheel. This head pointer can be
	    updated without a locking being taken.</item></list>
	    <p>Teach call count tracing to use atomics</p>
	    <list><item>Call count previously used a global lock for
	    accessing and writing its counter in the breakpoint. This
	    is now changed to atomics instead.</item> <item>The
	    change will let call count tracing and cprof to scale
	    better when increasing the number of
	    schedulers.</item></list>
          <p>
	    Own Id: OTP-8677</p>
        </item>
        <item>
	    <p><c>eprof</c> has been reimplemented with support in
	    the Erlang virtual machine and is now both faster (i.e.
	    slows down the code being measured less) and scales much
	    better. In measurements we saw speed-ups compared to the
	    old eprof ranging from 6 times (for sequential code that
	    only uses one scheduler/core) up to 84 times (for
	    parallel code that uses 8 cores).</p>
	    <p>Note: The API for the <c>eprof</c> has been cleaned up
	    and extended. See the documentation.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-8706</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.7.5.2</title>

    <section><title>Known Bugs and Problems</title>
      <list>
        <item>
          <p>
	    Two bugs in gen_sctp has been corrected: getopts/setopts
	    hence also send could only be called from socket owner,
	    and options 'linger', 'rcvbuf' and 'sndbuf' was read from
	    wrong protocol layer hence read wrong values by getopts.</p>
          <p>
	    Own Id: OTP-9544</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.7.5.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
            Driver threads, such as async threads, using <seecref
            marker="erl_driver#ErlDrvPDL">port data locks</seecref>
            peeked at the port status field without proper locking
            when looking up the driver queue.</p>
          <p>
            Own Id: OTP-8475</p>
        </item>
        <item>
          <p>
            A call to the BIF <c>unregister(RegName)</c> when a port
            had the name <c>RegName</c> registered in the runtime
            system without SMP support caused a runtime system crash.
            (Thanks to Per Hedeland for the bugfix and test case.)</p>
          <p>
            Own Id: OTP-8487</p>
        </item>
        <item>
          <p>
            Fix memory management bug causing crash of non-SMP
            emulator with async threads enabled. The bug did first
            appear in R13B03.</p>
          <p>
            Own Id: OTP-8591 Aux Id: seq11554 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.7.5</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fix <c>binary_to_term</c> crash on compressed term with
	    corrupt size field.</p>
          <p>
	    Own Id: OTP-8336</p>
        </item>
        <item>
          <p>
	    Processes and/or ports could get stuck on a blocked
	    scheduler when <c>erlang:system_flag(multi_scheduling,
	    block)</c> was used.</p>
          <p>
	    Processes and/or ports could get stuck on an offline
	    scheduler when schedulers online were reduced using
	    <c>erlang:system_flag(schedulers_online,
	    SchedulersOnline)</c>.</p>
          <p>
	    Own Id: OTP-8342</p>
        </item>
        <item>
	    <p>Building on Windows will now work if the paths to
	    <c>mc.exe</c> and <c>rc.exe</c> contain spaces. The
	    README.win32 file has been updated with some information
	    about building using Visual Studio 2008. (Thanks to
	    Andrew Thompson.)</p>
          <p>
	    Own Id: OTP-8345</p>
        </item>
        <item>
          <p>
	    EPMD now correctly handles the extra data field which can
	    be given in the ALIVE2_REQ request and retrieved in the
	    PORT2_RESP response. (Thanks to Klas Johansson.)</p>
          <p>
	    Own Id: OTP-8361</p>
        </item>
        <item>
          <p>
	    The configure test for reliable floating point exceptions
	    has been update to work on modern versions of Mac OS X.
	    (Thanks to Trannie Carter.)</p>
          <p>
	    Own Id: OTP-8368</p>
        </item>
        <item>
          <p>
	    ERTS makefiles used to detect the use of a gcc C compiler
	    by checking if CC equaled gcc. That is, the makefiles
	    failed to detect gcc C compilers with other command line
	    names than gcc. `configure' now substitute GCC into the
	    makefiles. If CC is a gcc C compiler, GCC will have the
	    value yes. (Thanks to Jean-Sébastien Pédron)</p>
          <p>
	    Own Id: OTP-8373</p>
        </item>
        <item>
          <p>
	    ETS bug causing the <c>memory</c> counter from
	    <c>ets:info</c> for ordered_set's to sometimes get out of
	    synch and absurdly high.</p>
          <p>
	    Own Id: OTP-8377 Aux Id: seq11442 </p>
        </item>
        <item>
          <p>
	    Immediately repeated multi-scheduling block/unblock
	    cycles using <c>erlang:system_flag(multi_scheduling,
	    block | unblock)</c> could deadlock the runtime system.</p>
          <p>
	    Own Id: OTP-8386</p>
        </item>
        <item>
	    <p>A number of bugs concerning re and unicode are
	    corrected:</p>
	    <p>re:compile no longer loses unicode option, which also
	    fixes bug in re:split.</p>
	    <p>re:replace now handles unicode charlist replacement
	    argument</p>
	    <p>re:replace now handles unicode RE charlist argument
	    correctly</p>
	    <p>re:replace now handles binary unicode output correctly
	    when nothing is replaced.</p>
	    <p>Most code, testcases and error isolation done by Rory
	    Byrne.</p>
          <p>
	    Own Id: OTP-8394</p>
        </item>
        <item>
          <p>
	    The loading of native code was not properly atomic in the
	    SMP emulator, which could cause crashes. Also a per-MFA
	    information table for the native code has now been
	    protected with a lock since it turns that it could be
	    accessed concurrently in the SMP emulator. (Thanks to
	    Mikael Pettersson.)</p>
          <p>
	    Own Id: OTP-8397</p>
        </item>
        <item>
          <p>
	    Fix processes in exiting status that are about to be
	    scheduled, to not be allowed to garbage collect.</p>
          <p>
	    Own Id: OTP-8420</p>
        </item>
        <item>
	    <p>Removed bogus "\011" character sequence in
	    documentation.</p>
          <p>
	    Own Id: OTP-8422</p>
        </item>
        <item>
          <p>
	    The resolver routines failed to look up the own node name
	    as hostname, if the OS native resolver was erroneously
	    configured, bug reported by Yogish Baliga, now fixed.</p>
          <p>
	    The resolver routines now tries to parse the hostname as
	    an IP string as most OS resolvers do, unless the native
	    resolver is used.</p>
          <p>
	    The DNS resolver inet_res and file resolver inet_hosts
	    now do not read OS configuration files until they are
	    needed. Since the native resolver is default, in most
	    cases they are never needed.</p>
          <p>
	    The DNS resolver's automatic updating of OS configuration
	    file data (/etc/resolv.conf) now uses the 'domain'
	    keyword as default search domain if there is no 'search'
	    keyword.</p>
          <p>
	    Own Id: OTP-8426 Aux Id: OTP-8381 </p>
        </item>
        <item>
          <p>
	    The re module: A regular expression with an option change
	    at the start of a pattern that had top-level alternatives
	    could cause overwriting and/or a crash. (Thanks to
	    Michael Santos.)</p>
          <p>
	    Own Id: OTP-8438</p>
        </item>
        <item>
          <p>
	    Harmless buffer overflow by one byte in asn1 and
	    ram_file_drv.</p>
          <p>
	    Own Id: OTP-8451</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Improved GC performance after BIF/NIF call when a lot of
	    heap fragments was created. This will mainly benefit NIFs
	    that return large compound terms.</p>
          <p>
	    Own Id: OTP-8240</p>
        </item>
        <item>
	    <p>Incompatible changes in the experimental NIF
	    feature.</p> <list><item> Changed the NIF function
	    prototypes in order to allow more than 3 function
	    arguments. </item><item> <c>enif_get_data</c> renamed as
	    <c>enif_priv_data</c>. </item><item>
	    <c>enif_make_string</c> got a third argument for
	    character encoding. </item><item> The return value of
	    <c>erlang:load_nif/2</c> on error changed. </item></list>
	    <p>Read more in the documentation of <c>erl_nif</c> and
	    <c>erlang:load_nif/2</c></p>.
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-8304</p>
        </item>
        <item>
	    <p>Cross compilation improvements and other build system
	    improvements.</p>
	    <p>Most notable:</p> <list><item> Lots of cross
	    compilation improvements. The old cross compilation
	    support was more or less non-existing as well as broken.
	    Please, note that the cross compilation support should
	    still be considered as experimental. Also note that old
	    cross compilation configurations cannot be used without
	    modifications. For more information on cross compiling
	    Erlang/OTP see the <c>$ERL_TOP/INSTALL-CROSS.md</c> file.
	    </item><item> Support for staged install using <url
	    href="http://www.gnu.org/prep/standards/html_node/DESTDIR.html">DESTDIR</url>.
	    The old broken <c>INSTALL_PREFIX</c> has also been fixed.
	    For more information see the <c>$ERL_TOP/INSTALL.md</c>
	    file. </item><item> Documentation of the <c>release</c>
	    target of the top <c>Makefile</c>. For more information
	    see the <c>$ERL_TOP/INSTALL.md</c> file. </item><item>
	    <c>make install</c> now by default creates relative
	    symbolic links instead of absolute ones. For more
	    information see the <c>$ERL_TOP/INSTALL.md</c> file.
	    </item><item> <c>$ERL_TOP/configure --help=recursive</c>
	    now works and prints help for all applications with
	    <c>configure</c> scripts. </item><item> Doing <c>make
	    install</c>, or <c>make release</c> directly after
	    <c>make all</c> no longer triggers miscellaneous
	    rebuilds. </item><item> Existing bootstrap system is now
	    used when doing <c>make install</c>, or <c>make
	    release</c> without a preceding <c>make all</c>.
	    </item><item> The <c>crypto</c> and <c>ssl</c>
	    applications use the same runtime library path when
	    dynamically linking against <c>libssl.so</c> and
	    <c>libcrypto.so</c>. The runtime library search path has
	    also been extended. </item><item> The <c>configure</c>
	    scripts of Erl_interface and ODBC now
	    search for thread libraries and thread library quirks the
	    same way as ERTS do. </item><item> The
	    <c>configure</c> script of the <c>odbc</c> application
	    now also looks for odbc libraries in <c>lib64</c> and
	    <c>lib/64</c> directories when building on a 64-bit
	    system. </item><item> The <c>config.h.in</c> file in the
	    <c>erl_interface</c> application is now automatically
	    generated in instead of statically updated which reduces
	    the risk of <c>configure</c> tests without any effect.
	    </item></list>
	    <p>(Thanks to Henrik Riomar for suggestions and
	    testing)</p>
	    <p>(Thanks to Winston Smith for the AVR32-Linux cross
	    configuration and testing)</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-8323</p>
        </item>
        <item>
	    <p>NIF improvements:</p> <list><item> Driver API for
	    multi-threading made available for NIFs. </item><item>
	    Support for mempory managed (garbage collected) resource
	    objects. A way to pass "pointers" to native data
	    structures between C and Erlang in a safe way.
	    </item><item> Support for references, floats and term
	    comparison. </item><item> Various new functions, like
	    <c>enif_inspect_iolist_as_binary</c>,
	    <c>enif_make_sub_binary</c>, <c>enif_get_string</c>,
	    <c>enif_get_atom</c>, <c>enif_make_tuple_from_array</c>,
	    <c>enif_make_list_from_array</c>,
	    <c>enif_make_existing_atom</c>. </item></list>
          <p>
	    Own Id: OTP-8335</p>
        </item>
        <item>
          <p>
	    Minor alignment adjustments of scheduler specific data.</p>
          <p>
	    Own Id: OTP-8341</p>
        </item>
        <item>
	    <p>The documentation is now possible to build in an open
	    source environment after a number of bugs are fixed and
	    some features are added in the documentation build
	    process. </p>
	    <p>- The arity calculation is updated.</p>
	    <p>- The module prefix used in the function names for
	    bif's are removed in the generated links so the links
	    will look like
	    "http://www.erlang.org/doc/man/erlang.html#append_element-2"
	    instead of
	    "http://www.erlang.org/doc/man/erlang.html#erlang:append_element-2".</p>
	    <p>- Enhanced the menu positioning in the html
	    documentation when a new page is loaded.</p>
	    <p>- A number of corrections in the generation of man
	    pages (thanks to Sergei Golovan)</p>
	    <p>- The legal notice is taken from the xml book file so
	    OTP's build process can be used for non OTP
	    applications.</p>
          <p>
	    Own Id: OTP-8343</p>
        </item>
        <item>
          <p>
	    There is new <c>erlang:binary_to_term/2</c> BIF that
	    takes an option list. The option <c>safe</c> can be used
	    to prevent creation of resources that are not garbage
	    collected (such as atoms). (Thanks to Jayson Vantuyl.)</p>
          <p>
	    Own Id: OTP-8367</p>
        </item>
        <item>
          <p>
	    The default settings for garbage collection of binaries
	    has been adjusted to be less aggressive than in R13B03.
	    It is now also possible configure the settings for binary
	    GC. See the documentation for <c>spawn_opt/2-5</c>,
	    <c>erlang:system_info/1</c>, <c>erlang:system_flag/2</c>,
	    <c>process_flag/2-3</c>, <c>erlang:trace/3</c>, and the
	    documentation for <c>erl</c> for the new command line
	    options <c>+hms</c> and <c>+hmbs</c>.</p>
          <p>
	    Own Id: OTP-8370</p>
        </item>
        <item>
          <p>
	    A bug causing memory corruption in re:run() has been
	    corrected. (Thanks to Yamashina Hio.)</p>
          <p>
	    Own Id: OTP-8375</p>
        </item>
        <item>
          <p>
	    The <c>-Werror</c> option for <c>erlc</c> and the
	    compiler option <c>warnings_as_errors</c> will cause
	    warnings to be treated as errors. (Thanks to Christopher
	    Faulet.)</p>
          <p>
	    Own Id: OTP-8382</p>
        </item>
        <item>
          <p>
	    Explicit top directories in archive files are now
	    optional.</p>
          <p>
	    For example, if an archive (app-vsn.ez) just contains an
	    app-vsn/ebin/mod.beam file, the file info for the app-vsn
	    and app-vsn/ebin directories are faked using the file
	    info from the archive file as origin. The virtual
	    directories can also be listed. For short, the top
	    directories are virtual if they does not exist.</p>
          <p>
	    Own Id: OTP-8387</p>
        </item>
        <item>
          <p>
	    An unnecessary lock operation in os:timestamp/0 has been
	    eliminated, making it slightly more efficient. (Thanks to
	    Jonas Falkevik and Tuncer Ayaz.)</p>
          <p>
	    Own Id: OTP-8390</p>
        </item>
        <item>
          <p>
	    There is a new <c>+t</c> emulator option for changing the
	    maximum number of atoms. (Thanks to Julien Barbot.)</p>
          <p>
	    Own Id: OTP-8405</p>
        </item>
        <item>
          <p>
	    Fixed numerous compiler warnings generated by gcc 4.4.1
	    and tile-cc 2.0.1.78377 when compiling the runtime
	    system.</p>
          <p>
	    Own Id: OTP-8412</p>
        </item>
        <item>
          <p>
	    <c>configure</c> learned the option
	    <c>--enable-m32-build</c> to force the building of a
	    32-bit run-time on systems where the default C compiler
	    generates 64-bit executables by default.</p>
          <p>
	    Own Id: OTP-8415</p>
        </item>
        <item>
          <p>
	    HiPE now works in the 64-bit emulator on Mac OS X.
	    (Thanks to Geoff Cant.)</p>
          <p>
	    Own Id: OTP-8416</p>
        </item>
        <item>
          <p>
	    Improved handling of symbolic links to escripts</p>
          <p>
	    Own Id: OTP-8417</p>
        </item>
        <item>
          <p>
	    Add lock profiling tool.</p>
          <p>
	    The Lock profiling tool, lcnt, can make use of the
	    internal lock statistics when the runtime system is built
	    with this feature enabled.</p>
          <p>
	    This provides a mechanism to examine potential lock
	    bottlenecks within the runtime itself.</p>
          <p>
	    - Add erts_debug:lock_counters({copy_save, bool()}). This
	    option enables or disables statistics saving for
	    destroyed processes and ets-tables. Enabling this might
	    consume a lot of memory.</p>
          <p>
	    - Add id-numbering for lock classes which is otherwise
	    undefined.</p>
          <p>
	    Own Id: OTP-8424</p>
        </item>
        <item>
          <p>
	    Removed spurious options to the emulator from escript.</p>
          <p>
	    Own Id: OTP-8427</p>
        </item>
        <item>
          <p>
	    Minor documentation fixes. Mainly anchor adjustments.</p>
          <p>
	    Own Id: OTP-8457</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.7.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    An insufficient stack allocation was made when reading
	    CPU information on BSD operating systems. (Thanks Michael
	    Turner and Akira Kitada)</p>
          <p>
	    Own Id: OTP-8207</p>
        </item>
        <item>
          <p>
	    A bug when supplying an argument without a dash directly
	    after the program name when starting erlang could prevent
	    distribution to start. This is now corrected.</p>
          <p>
	    Own Id: OTP-8209</p>
        </item>
        <item>
          <p>
	    A ticker process could potentially be blocked
	    indefinitely trying to send a tick to a node not
	    responding. If this happened, the connection would not be
	    brought down as it should.</p>
          <p>
	    Own Id: OTP-8218</p>
        </item>
        <item>
          <p>
	    Using certain firewalls (i.e. MS IAS Client and certain
	    versions of COMODO) could expose an undocumented
	    behaviour in the Win32 socket interface causing the name
	    resolution calls to hang infinitely. This is now worked
	    around by adding possibilities for port programs under
	    Windows to use overlapped I/O on their standard
	    input/output file handles.</p>
          <p>
	    Own Id: OTP-8230</p>
        </item>
        <item>
          <p>
	    Fixed bug on ETS tables with <c>write_concurrency</c>.
	    The emulator could crash when doing a <c>select</c> or
	    <c>match</c> with a bound key without finding any object.</p>
          <p>
	    Own Id: OTP-8242</p>
        </item>
        <item>
	    <p>The <c>information-request</c> /
	    <c>information-response</c>, and
	    <c>group-leader-change-request</c> /
	    <c>group-leader-changed-response</c> signal pairs
	    described below did not always adhere to the signal order
	    guarantees of Erlang's signal model in the runtime system
	    with SMP support. These signals could for example
	    sometimes pass exit signals.</p>
	    <p>The following BIFs behaviors can be modeled as if an
	    asynchronous <c>information-request</c> signal is sent to
	    <c>Pid</c>. If <c>Pid</c> is alive, it responds with an
	    asynchronous <c>information-response</c> signal;
	    otherwise, the runtime system responds with a
	    <c>no-such-process</c> signal. When the response is
	    received, the caller transforms it into the result of the
	    BIF.</p> <list> <item><c>is_process_alive(Pid)</c></item>
	    <item><c>erlang:process_display(Pid, Type)</c></item>
	    <item><c>process_info(Pid)</c></item>
	    <item><c>process_info(Pid, ItemSpec)</c></item> </list>
	    <p>When <c>Pid</c> resides on the same node as the caller
	    of <c>group_leader(GroupLeader, Pid)</c>, the
	    <c>group_leader/2</c> BIFs behavior can be modeled as if
	    an asynchronous <c>group-leader-change-request</c> signal
	    is sent to <c>Pid</c>. If <c>Pid</c> is alive, it
	    responds with an asynchronous
	    <c>group-leader-changed-response</c> signal; otherwise,
	    the runtime system responds with a <c>no-such-process</c>
	    signal. When the response is received, the caller
	    transforms it into the result of the BIF. The distributed
	    case which only consists of an asynchronous
	    <c>group-leader-change-request</c> signal and no response
	    is not effected.</p>
          <p>
	    Own Id: OTP-8245</p>
        </item>
        <item>
          <p>
	    Errors in the <c>system_profile</c> documentation has
	    been corrected.</p>
          <p>
	    Own Id: OTP-8257</p>
        </item>
        <item>
          <p>
	    Low watermark socket option modified high watermark
	    instead of low watermark in the inet_driver. (Thanks to
	    Feng Yu and Tuncer Ayaz)</p>
          <p>
	    Own Id: OTP-8279</p>
        </item>
        <item>
          <p>
	    A race condition could cause the runtime system with SMP
	    support to end up in a completely unresponsive state.</p>
          <p>
	    Own Id: OTP-8297</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    The use of <c>pthread_cond_timedwait()</c> have been
	    completely removed from the runtime system. This since
	    its behavior is unpredictable when the system clock is
	    suddenly changed. The previous use of it was harmless.</p>
          <p>
	    Own Id: OTP-8193</p>
        </item>
        <item>
          <p>
	    The documentation is now built with open source tools
	    (xsltproc and fop) that exists on most platforms. One
	    visible change is that the frames are removed.</p>
          <p>
	    Own Id: OTP-8201</p>
        </item>
        <item>
          <p>
	    A new garbage collecting strategy for binaries which is
	    more aggressive than the previous implementation.
	    Binaries now has a virtual binary heap tied to each
	    process. When binaries are created or received to a
	    process it will check if the heap limit has been reached
	    and if a reclaim should be done. This imitates the
	    behavior of ordinary Erlang terms. The virtual heaps are
	    grown and shrunk like ordinary heaps. This will lessen
	    the memory footprint of binaries in a system.</p>
          <p>
	    Own Id: OTP-8202</p>
        </item>
        <item>
          <p>
	    The <c>ErlDrvTermData</c> term types used by
	    <c>driver_output_term()</c> and <c>driver_send_term()</c>
	    have been extended with the term types
	    <c>ERL_DRV_INT64</c>, and <c>ERL_DRV_UINT64</c> for
	    passing 64-bit integers. Also the 64-bit integer data
	    types <c>ErlDrvSInt64</c> and <c>ErlDrvUInt64</c> have
	    been introduced.</p>
          <p>
	    For more information see the <seecref
	    marker="erl_driver">erl_driver(3)</seecref>
	    documentation.</p>
          <p>
	    Own Id: OTP-8205</p>
        </item>
        <item>
          <p>
	    [escript] The restriction that the first line in escripts
	    must begin with <c>#!</c> has been removed.</p>
          <p>
	    [escript] Some command line options to the escript
	    executable has now been documented. For example you can
	    run an escript in the debugger by just adding a command
	    line option.</p>
          <p>
	    [escript] The documentation of the escript header syntax
	    has been clarified. For example the header is optional.
	    This means that it is possible to directly "execute"
	    <c>.erl</c>, <c>.beam</c> and<c>.zip</c> files.</p>
          <p>
	    Own Id: OTP-8215</p>
        </item>
        <item>
          <p>
	    The instruction for building OTP on Windows was outdated
	    and incomplete, the document is updated.</p>
          <p>
	    Also the otp_build script required windows drives to show
	    up in Cygwin using the /cygdrive prefix. That requirement
	    is now removed.</p>
          <p>
	    Own Id: OTP-8219</p>
        </item>
        <item>
          <p>
	    A module can have native implemented functions (NIFs)
	    that are dynamically loaded by calling
	    <c>erlang:load_nif/2</c>. This is an experimental feature
	    that is not yet intended for production systems. It is
	    released with intention to get some early feedback on the
	    interfaces before they are carved in stone.</p>
          <p>
	    Own Id: OTP-8220</p>
        </item>
        <item>
          <p>
	    The <c>float/1</c> BIF would always force a garbage
	    collection. The BIFs <c>size/1</c>, <c>byte_size/1</c>,
	    <c>bit_size/1</c>, <c>abs/1</c>, and <c>round/1</c> would
	    force a garbage-collection if the result was not a
	    sufficiently small integer.</p>
          <p>
	    Own Id: OTP-8221</p>
        </item>
        <item>
          <p>
	    The <seemfa
	    marker="erlang#port_command/3">erlang:port_command/3</seemfa>
	    BIF has been added. <c>erlang:port_command/3</c> is
	    currently not auto imported, but it is planned to be auto
	    imported in OTP R14. For more information see the
	    <seeerl marker="erlang">erlang(3)</seeerl>
	    documentation.</p>
          <p>
	    Own Id: OTP-8225</p>
        </item>
        <item>
          <p>
	    '<c>configure --enable-darwin-64bit</c>' would fail if
	    Snow Leopard had been booted with the 64-bit kernel.
	    (Thanks to Ryan M. Graham.)</p>
          <p>
	    Own Id: OTP-8236</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.7.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    On Windows, open_port({spawn,Command},Opts) could not run
	    executables with spaces in the path or filename,
	    regardless of quoting efforts. While
	    open_port({spawn_executable,Exec},Opts) can run any
	    executable, it was still impossible to use 'spawn' to do
	    the same thing. This is now corrected.</p>
          <p>
	    Own Id: OTP-8055</p>
        </item>
        <item>
          <p>
	    The scheduler bind type <c>processor_spread</c> spread
	    schedulers too much on large NUMA systems.</p>
          <p>
	    The new scheduler bind type <c>spread</c> spreads
	    schedulers as much as possible, and behaves as
	    <c>processor_spread</c> previously did. For more
	    information see the documentation of the <c>+sbt</c>
	    command line argument in the <c>erl(1)</c> documentation,
	    and the documentation of
	    <c>erlang:system_flag(scheduler_bind_type,
	    SchedulerBindType)</c>.</p>
          <p>
	    Own Id: OTP-8063</p>
        </item>
        <item>
          <p>
	    Automatically detected CPU topology on Linux system could
	    erroneously contain logical processors with <c>-1</c> as
	    identifiers. This happened when
	    <c>sysconf(_SC_NPROCESSORS_CONF)</c> returned a value
	    larger than the amount of logical processors found.</p>
          <p>
	    Own Id: OTP-8064</p>
        </item>
        <item>
          <p>
	    When the minimal term [] (end of list) was sent as the
	    complete message to a process on another node, and
	    received there, it could not be decoded. This bug is now
	    corrected. Fortunately [] is uncommon as the complete
	    message in real applications but it is a serious bug
	    anyway.</p>
          <p>
	    Own Id: OTP-8092</p>
        </item>
        <item>
	    <p>A bug when the floating point exception pointer was
	    not initialized has been corrected. It manifested itself
	    on CentOS 5.1 sometimes when a floating point value was
	    sent to a remote node. Bug reported and patch suggested
	    by David Reiss, confirmed by Mikael Pettersson.</p>
	    <p>Some build problems on IRIX was also corrected.
	    Problem reported by Patrick Baggett, patch by Mikael
	    Pettersson.</p>
          <p>
	    Own Id: OTP-8095</p>
        </item>
        <item>
          <p>
	    A terminating process could erroneously unregister a name
	    for another process. This could occur under the following
	    conditions: The name of the terminating process was
	    unregistered and then registered for another process
	    simultaneously as the process that first had the name was
	    terminating.</p>
          <p>
	    Own Id: OTP-8099 Aux Id: seq11344 </p>
        </item>
        <item>
          <p>
	    Running erlc in a very deep directory (with a path length
	    of more 256 or more characters) would cause the emulator
	    to crash in a call to <c>list_to_atom/1</c>. (Thanks to
	    Chris Newcombe.)</p>
          <p>
	    Own Id: OTP-8124</p>
        </item>
        <item>
          <p>
	    A deadlock of the runtime system could occur when
	    unregistering the name of a port.</p>
          <p>
	    Own Id: OTP-8145</p>
        </item>
        <item>
          <p>
	    <c>Makefile.in</c> has been updated to use the LDFLAGS
	    environment variable (if set). (Thanks to Davide
	    Pesavento.)</p>
          <p>
	    Own Id: OTP-8157</p>
        </item>
        <item>
          <p>
	    The pthread rwlock implementation on Linux could cause
	    starvation of writers. We, therefore, now use our own
	    rwlock implementation on Linux.</p>
          <p>
	    Own Id: OTP-8158</p>
        </item>
        <item>
          <p>
	    Open source Erlang builds are updated to work well on
	    Snow Leopard (MacOS X 10.6)</p>
          <p>
	    Own Id: OTP-8168</p>
        </item>
        <item>
          <p>
	    A call to <c>erlang:system_info(schedulers_online)</c>
	    could end up in an infinite loop. This happened if the
	    amount of schedulers was larger than one, the amount of
	    schedulers online was one, and someone was blocking
	    multi-scheduling.</p>
          <p>
	    Own Id: OTP-8169</p>
        </item>
        <item>
          <p>
	    An error in erlang:system_profile/2 could cause
	    timestamped messages to arrive out of order in the SMP
	    case. This has now been fixed.</p>
          <p>
	    Own Id: OTP-8171</p>
        </item>
	<item>
	  <p>
	    <c>binary_to_atom/2</c> and
	    <c>binary_to_existing_atom/2</c> would leak memory if the
	    binary contained unaligned data.</p>
          <p>
	    Own Id: OTP-8192</p>
        </item>
        <item>
          <p>
	    The async thread pool in the runtime system without SMP
	    support used a memory allocator that was not thread safe
	    for async jobs.</p>
          <p>
	    Own Id: OTP-8194</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Processor internal NUMA nodes are now supported in the
	    ERTS internal CPU topology representation. For more
	    information see the documentation of the <c>+sct</c>
	    command line argument in the <c>erl(1)</c> documentation,
	    and the documentation of
	    <c>erlang:system_info(cpu_topology)</c>.</p>
          <p>
	    Own Id: OTP-8041</p>
        </item>
        <item>
          <p>
	    Documentation for ets improved about concurrency.</p>
          <p>
	    Own Id: OTP-8050</p>
        </item>
        <item>
          <p>
	    Emulator flags in an escript were earlier inherited to
	    emulators started from from the emulator running the
	    escript. For example when an escript invoked
	    <c>os:cmd("erl")</c>, the new emulator were given
	    erroneous emulator flags. This bug has now been fixed</p>
          <p>
	    Escript filenames may now contain dots.</p>
          <p>
	    Own Id: OTP-8060</p>
        </item>
        <item>
          <p>
	    Made some BIFs non-recursive (relational operators,hash
	    and phash) to limit internal stack usage.</p>
          <p>
	    Own Id: OTP-8065</p>
        </item>
        <item>
          <p>
	    Fixed Windows specific bug in erl_prim_loader. Now it
	    handles the root directory (e.g. c:/) better. This bug
	    affected the directory listing in the debugger.</p>
          <p>
	    Own Id: OTP-8080</p>
        </item>
        <item>
          <p>
	    A TCP socket with option <c>{packet,4}</c> could crash
	    the emulator if it received a packet header with a very
	    large size value (>2Gb). The same bug caused
	    <c>erlang:decode_packet/3</c> to return faulty values.
	    (Thanks to Georgos Seganos.)</p>
          <p>
	    Own Id: OTP-8102</p>
        </item>
        <item>
          <p>
	    The maximum size of the export table has been raised from
	    65536 to 524288 entries.</p>
          <p>
	    Own Id: OTP-8104 Aux Id: seq11345 </p>
        </item>
        <item>
          <p>
	    The file module has now a read_line/1 function similar to
	    the io:get_line/2, but with byte oriented semantics. The
	    function file:read_line/1 works for raw files as well,
	    but for good performance it is recommended to use it
	    together with the 'read_ahead' option for raw file
	    access.</p>
          <p>
	    Own Id: OTP-8108</p>
        </item>
        <item>
          <p>
	    Fixed bug causing emulator crash when reading a term in
	    external format containing a corrupt list with a negative
	    length.</p>
          <p>
	    Own Id: OTP-8117</p>
        </item>
        <item>
          <p>
	    New emulator flag <c>+sss</c>, to set stack size of
	    scheduler threads.</p>
          <p>
	    Own Id: OTP-8119</p>
        </item>
        <item>
          <p>
	    The Windows utility Erlsrv, run in interactive mode now
	    accepts options for registering internal service name and
	    description field of Windows registry database.</p>
          <p>
	    Own Id: OTP-8132</p>
        </item>
        <item>
          <p>
	    <c>erlang:demonitor(Mon, [flush])</c> has been optimized.
	    Previously it always searched the message queue of the
	    caller for a <c>'DOWN'</c> message. Current
	    implementation only search the message queue when
	    necessary. It is quite common that the search is not
	    necessary.</p>
          <p>
	    A new option <c>info</c> has been added to
	    <c>erlang:demonitor/2</c>. For more information see the
	    <c>erlang(3)</c> documentation.</p>
          <p>
	    Own Id: OTP-8143</p>
        </item>
        <item>
          <p>
	    I/O tasks could unnecessarily be rescheduled. This was
	    harmless, but not useful work.</p>
          <p>
	    Own Id: OTP-8148</p>
        </item>
        <item>
          <p>
	    Minor improvements of <c>erlang:memory/[1,2]</c>.</p>
          <p>
	    Own Id: OTP-8152</p>
        </item>
        <item>
          <p>
	    New configuration option to enable use of shared zlib.</p>
          <p>
	    Own Id: OTP-8155</p>
        </item>
        <item>
          <p>
	    Fixed smp bug in ETS that could cause emulator crash when
	    table with more than 1000 objects accessed by several
	    processes, including calls to variants of <c>select</c>
	    or <c>match</c> combined with concurrent object deletion.</p>
          <p>
	    Own Id: OTP-8166 Aux Id: seq11392 </p>
        </item>
        <item>
          <p>
	    The code path interpretation is now more relaxed. The
	    flag -code_path_choice now defaults to relaxed instead of
	    strict. See the documentation of code and init for more
	    info.</p>
          <p>
	    Own Id: OTP-8170</p>
        </item>
        <item>
          <p>
	    Load balancing of run queues and check for I/O are
	    triggered more often than before in situations where
	    processes are scheduled often but are doing very little
	    work each time they execute.</p>
          <p>
	    Own Id: OTP-8172</p>
        </item>
        <item>
          <p>
	    Call tracing binary comprehensions would cause an
	    emulator crash. (Thanks to Paul Mineiro.)</p>
          <p>
	    Own Id: OTP-8179</p>
        </item>
        <item>
          <p>
	    <c>binary_to_term/1</c> would crash the emulator instead
	    of generating a <c>badarg</c> exception when given
	    certain invalid terms. (Thanks to Scott Lystig Fritchie.)</p>
          <p>
	    Own Id: OTP-8180</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.7.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Crash dumps should now cause less problems for the
	    crashdump_viewer application. (For processes where arity
	    was non-zero, the arguments are now longer printed - they
	    used to be printed in a format that was not parseable.)</p>
          <p>
	    Own Id: OTP-7472 Aux Id: seq11019, 11292 </p>
        </item>
        <item>
          <p>
	    Processes could potentially get stuck on an offline
	    scheduler.</p>
          <p>
	    Own Id: OTP-7990</p>
        </item>
        <item>
          <p>
	    <c>binary_to_atom/2</c> and
	    <c>binary_to_existing_atom/2</c> could leak memory if
	    they caused a <c>badarg</c> exception.</p>
          <p>
	    Own Id: OTP-7997</p>
        </item>
        <item>
          <p>
	    A process could under very rare circumstances erroneously
	    be resumed.</p>
          <p>
	    Own Id: OTP-8000</p>
        </item>
        <item>
          <p>
	    Load balancing between schedulers could under rare
	    circumstances cause an emulator crash.</p>
          <p>
	    Own Id: OTP-8008</p>
        </item>
        <item>
          <p>
	    <c>erlang:memory(processes_used)</c> always returned
	    <c>0</c> instead of the correct value. (Thanks to Geoff
	    Cant)</p>
          <p>
	    Own Id: OTP-8022</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Major improvements of the Erlang distribution for Erlang
	    runtime systems with SMP support. Previously distribution
	    port locks were heavily contended, and all encoding and
	    decoding for a specific distribution channel had to be
	    done in sequence. Lock contention due to the distribution
	    is now negligible and both encoding and decoding of
	    Erlang messages can be done in parallel.</p>
          <p>
	    The old atom cache protocol used by the Erlang
	    distribution has been dropped since it effectively
	    prevented all parallel encoding and decoding of messages
	    passed over the same distribution channel.</p>
          <p>
	    A new atom cache protocol has been introduced which
	    isolates atom cache accesses and makes parallel encoding
	    and decoding of messages passed over the same
	    distribution channel possible. The new atom cache
	    protocol also use an atom cache size 8 times larger than
	    before. The new atom cache protocol is documented in the
	    ERTS users guide.</p>
          <p>
	    Erlang messages received via the distribution are now
	    decoded by the receiving Erlang processes without holding
	    any distribution channel specific locks. Erlang messages
	    and signals sent over the distribution are as before
	    encoded by the sending Erlang process, but now without
	    holding any distribution channel specific locks during
	    the encoding. That is, both encoding and decoding can be
	    and are done in parallel regardless of distribution
	    channel used.</p>
          <p>
	    The part that cannot be parallelized is the atom cache
	    updates. Atom cache updates are therefore now scheduled
	    on the distribution port. Since it is only one entity per
	    distribution channel doing this work there is no lock
	    contention due to the atom cache updates.</p>
          <p>
	    The new runtime system does not understand the old atom
	    cache protocol. New and old runtime systems can however
	    still communicate, but no atom cache will be used.</p>
          <p>
	    Own Id: OTP-7774</p>
        </item>
        <item>
          <p>
	    Fixed a bug that caused error logging from
	    <c>driver_select</c> sometimes with additional symptoms
	    such as failing IP communications or even an emulator
	    crash.</p>
          <p>
	    Own Id: OTP-7898 Aux Id: seq11304 </p>
        </item>
        <item>
          <p>
	    Improved SMP concurrency for ETS tables. Several mutating
	    operations can now be performed truly concurrent on
	    different records of the same table. To support this, the
	    table has to be created with option
	    <c>write_concurrency</c>, as it is achieved at the
	    expense of some execution and memory overhead.
	    <c>ets:select</c> and <c>select_count</c> has also been
	    improved for all tables to not acquire exclusive table
	    lock during the iteration.</p>
          <p>
	    Own Id: OTP-7922</p>
        </item>
        <item>
          <p>
	    erl (that is erl.exe and dyn_erl) and erlexec has been
	    made more dynamic so no hard coded paths needs to added
	    at installation time to erl (that is erl.ini and erl).
	    Reltool will make use of this in a future release.</p>
          <p>
	    Own Id: OTP-7952</p>
        </item>
        <item>
          <p>
	    Added functionality to get higher resolution timestamp
	    from system. The erlang:now function returns a timestamp
	    that's not always consistent with the actual operating
	    system time (due to resilience against large time changes
	    in the operating system). The function os:timestamp/0 is
	    added to get a similar timestamp as the one being
	    returned by erlang:now, but untouched by Erlangs time
	    correcting and smoothing algorithms. The timestamp
	    returned by os:timestamp is always consistent with the
	    operating systems view of time, like the calendar
	    functions for getting wall clock time, but with higher
	    resolution. Example of usage can be found in the os
	    manual page.</p>
          <p>
	    Own Id: OTP-7971</p>
        </item>
        <item>
          <p>
	    Two new options are added to open_port - spawn_executable
	    which runs external executables in a controlled way, and
	    spawn_driver which only opens port to loaded Erlang
	    drivers. See the erlang manual page for details.</p>
          <p>
	    Own Id: OTP-7995</p>
        </item>
        <item>
          <p>
	    New functionality in ETS to transfer the ownership of a
	    table. A table can either change owner be declaring an
	    "heir", another process that will inherit the table if
	    the owner terminates. A table can also change owner by
	    calling a new function <c>ets:give_away</c>.</p>
          <p>
	    Own Id: OTP-8006</p>
        </item>
        <item>
          <p>
	    Updates to Tilera build environment.</p>
          <p>
	    Own Id: OTP-8009</p>
        </item>
        <item>
          <p>
	    A stack trace was unnecessarily saved during process
	    termination.</p>
          <p>
	    Own Id: OTP-8014</p>
        </item>
        <item>
          <p>
	    User defined CPU topology and scheduler bind type can now
	    be set from the command line when starting an emulator.
	    For more information see the documentation of the
	    <c>+sct</c>, and the <c>+sbt</c> emulator flags in the
	    <c>erl(1)</c> documentation.</p>
          <p>
	    The CPU topologies returned from
	    <c>erlang:system_info/1</c> and
	    <c>erlang:system_flag/2</c> now always contain the
	    <c>processor</c> level, also when not strictly necessary.</p>
          <p>
	    Own Id: OTP-8030</p>
        </item>
        <item>
          <p>
	    Various fixes in ETS: <c>ets:first</c> could return a
	    deleted key in a fixated table. <c>ets:lookup</c> could
	    return objects out of order if a deleted object was
	    re-inserted into a fixed bag. <c>ets:delete_object</c>
	    could fail to delete duplicate objects in a
	    duplicate_bag.</p>
          <p>
	    Own Id: OTP-8040</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.7.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Fixed a bug on Windows that could make
	    <c>gen_tcp:send</c> hang trying to send an iolist of more
	    than 16 binaries.</p>
          <p>
	    Own Id: OTP-7816</p>
        </item>
        <item>
          <p>
	    The runtime system could under rare circumstances crash
	    during load balancing.</p>
          <p>
	    Own Id: OTP-7908 Aux Id: otp-7500 </p>
        </item>
        <item>
          <p>
	    <c>run_erl</c> uses fallback if Unix98 pseudo-terminal is
	    not present on host.</p>
          <p>
	    Own Id: OTP-7916 Aux Id: seq11249 </p>
        </item>
        <item>
          <p>
	    A message buffer memory leak in the runtime system
	    without smp support has been fixed.</p>
          <p>
	    Own Id: OTP-7941</p>
        </item>
        <item>
	    <p>Attempting to append a binary of 16Mb or greater to
	    another binary using the bit syntax would cause a
	    <c>system_limit</c> exception. There was also several
	    cases when constructing binaries when a <c>badarg</c>
	    exception was generated when it should have been
	    <c>system_limit</c>.</p>
          <p>
	    Own Id: OTP-7942</p>
        </item>
        <item>
          <p>
	    The runtime system with SMP support failed to terminate
	    the caller of <c>link(RemotePid)</c> properly, if
	    <c>RemotePid</c> was the pid of a process on an
	    unreachable node. The calling process was in this case
	    marked as exiting, but never terminated.</p>
          <p>
	    Own Id: OTP-7946</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Rudimentary support for cross compiling is added to the
	    source release. The support is still in its infancy and
	    has only been used to cross compile on Linux for a
	    different cpu architecture and a different Linux version,
	    but should be extendible to support other platforms as
	    well. The cross configuration files with examples are
	    placed in $ERL_TOP/xcomp/. View README.xcomp and run
	    $ERL_TOP/otp_build -help for further information.</p>
          <p>
	    Own Id: OTP-7854</p>
        </item>
        <item>
	    <p>The escape sequence <c>\{</c> which was given a new
	    interpretation in R13A has retained its old meaning (the
	    ASCII code for <c>{</c>), which means that codes greater
	    than 255 have to be stated using hexadecimal characters
	    (for example, <c>\x{AAA}</c>). The escape sequence
	    <c>\xH</c> where H is a hexadecimal character followed by
	    something else but a hexadecimal character is no longer
	    valid (incompatibility with R13A). Character codes less
	    than 256 can be stated using two hexadecimal characters
	    (for example, <c>\x0D</c>).</p>
          <p>
	    Own Id: OTP-7891 Aux Id: OTP-7855 </p>
        </item>
        <item>
	    <p>The <c>term_to_binary/1</c> BIF used to be implemented
	    with recursive C code, which could cause the Erlang
	    emulator to terminate because of a stack overflow.</p>
	    <p>Also fixed some minor issues in
	    <c>term_to_binary/1</c> and <c>binary_to_term/1</c>
	    pointed out by Matthew Dempsky.</p>
          <p>
	    Own Id: OTP-7894</p>
        </item>
        <item>
          <p>
	    Several glitches and performance issues in the Unicode
	    and I/O-system implementation of R13A have been
	    corrected.</p>
          <p>
	    Own Id: OTP-7896 Aux Id: OTP-7648 OTP-7887 </p>
        </item>
        <item>
          <p>
	    Minor documentation improvements of the
	    <c>scheduler_bind_type</c> argument of
	    <c>erlang:system_flag/2</c>, and the
	    <c>scheduler_bind_type</c>, and the
	    <c>scheduler_bindings</c> arguments of
	    <c>erlang:system_info/1</c>.</p>
          <p>
	    Own Id: OTP-7901 Aux Id: OTP-7777 </p>
        </item>
        <item>
          <p>
	    There is a new BIF <c>erlang:make_tuple/3</c>.</p>
          <p>
	    Own Id: OTP-7913</p>
        </item>
      </list>
    </section>

</section>


<section><title>Erts 5.7</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p><em>OpenSource:</em></p>
	    <p>FreeBSD leap-seconds are handled according to patch
	    submitted by OpenSource user Kenji Rikitake. No test case
	    covers this functionality (unsupported platform).</p>
          <p>
	    Own Id: OTP-7609</p>
        </item>
        <item>
          <p>
	    A corrected bug in ETS for <c>bag</c> and
	    <c>duplicate_bag</c>. A <c>delete/2</c> or
	    <c>lookup_element/3</c> could miss objects in a fixed
	    table if one or more objects with the same key had
	    already been deleted.</p>
          <p>
	    Own Id: OTP-7665</p>
        </item>
        <item>
          <p>
	    A new driver call-back <c>stop_select</c> is introduced
	    to allow drivers to de-select and then close a file
	    descriptor in a safe way in a SMP emulator. The old way
	    was not strictly according to posix standard and could in
	    some rare cases lead to unexpected behavior. A new flag
	    <c>ERL_DRV_USE</c> can be passed to
	    <c>driver_select()</c> to tell it that the descriptor
	    should be closed. <c>stop_select</c> is then called when
	    it is safe to do so. Old drivers will however still work
	    as before.</p>
          <p>
	    Own Id: OTP-7670</p>
        </item>
        <item>
          <p>
	    A bug fixed for TCP sockets with option
	    <c>{packet,http}</c>. An HTTP request with an absolute
	    URI was returned with a corrupt path string. This bug did
	    only exist in R12B-4 and R12B-5.</p>
          <p>
	    Own Id: OTP-7682 Aux Id: OTP-7647 </p>
        </item>
        <item>
          <p>
	    run_erl did in some cases fail to extract control
	    sequences from to_erl (like: winsize=X,Y) and did instead
	    send them to be interpreted by the erlang shell.</p>
          <p>
	    Own Id: OTP-7688</p>
        </item>
        <item>
          <p>
	    A bug in the installer on Windows not updating file
	    associations properly is now corrected.</p>
          <p>
	    Own Id: OTP-7746</p>
        </item>
        <item>
	    <p>More space than necessary could be allocated in
	    binaries when appending to a binary (also in a binary
	    comprehension) and the data appended did not consist of
	    wholes bytes (e.g. 13 bits).</p>
          <p>
	    Own Id: OTP-7747</p>
        </item>
        <item>
          <p>
	    The gen_sctp option sctp_peer_addr_params,
	    #sctp_paddrparams{address={IP,Port} was erroneously
	    decoded in the inet driver. This bug has now been
	    corrected.</p>
          <p>
	    Own Id: OTP-7755</p>
        </item>
        <item>
          <p>
	    Outstanding async driver jobs leaked memory if the
	    issuing port died before the async jobs completed.</p>
          <p>
	    Own Id: OTP-7784</p>
        </item>
        <item>
	    <p>A bug in the dynamic library loading affecting, among
	    others, OpenSolaris is now corrected. (Thanks to Paul
	    Fisher.)</p>
          <p>
	    Own Id: OTP-7796</p>
        </item>
        <item>
          <p>
	    run_erl compile errors fixed for FreeBSD</p>
          <p>
	    Own Id: OTP-7817</p>
        </item>
        <item>
          <p>
	    A bug in the inet driver for SCTP on Solaris showing for
	    e.g gen_sctp:abort/1 and gen_sctp:eof/1 has been
	    corrected. Patch suggestion by Simon Cornish.</p>
          <p>
	    Own Id: OTP-7866</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    The order of objects visited in select for ordered_set is
	    now documented.</p>
          <p>
	    Own Id: OTP-7339</p>
        </item>
        <item>
          <p>
	    The runtime system with SMP support now uses multiple,
	    scheduler specific run queues, instead of one globally
	    shared run queue.</p>
          <p>
	    The lock protecting the shared run queue was heavily
	    contended, and the shared run queue also caused Erlang
	    processes to randomly migrate between schedulers with
	    negative cache effects as a result.</p>
          <p>
	    With the current scheduler specific run queue solution,
	    lock contention due to run queue protection has been
	    reduced, and Erlang processes are only migrated when
	    needed to balance the load between the schedulers. The
	    reduced amount of migration also reduce lock contention
	    on locks protecting the scheduler specific instances of
	    the erts internal memory allocators.</p>
          <p>
	    The scheduler specific run queues are also a necessity
	    for a lot of future planned NUMA (Non-Uniform Memory
	    Access) specific optimizations.</p>
          <p>
	    Own Id: OTP-7500</p>
        </item>
        <item>
	    <p>Support for Unicode is implemented as described in
	    EEP10. Formatting and reading of unicode data both from
	    terminals and files is supported by the io and io_lib
	    modules. Files can be opened in modes with automatic
	    translation to and from different unicode formats. The
	    module 'unicode' contains functions for conversion
	    between external and internal unicode formats and the re
	    module has support for unicode data. There is also
	    language syntax for specifying string and character data
	    beyond the ISO-latin-1 range.</p>
	    <p>The interactive shell will support input and output of
	    unicode characters when the terminal and operating system
	    supports it.</p>
	    <p>Please see the EEP and the io/io_lib manual pages as
	    well as the stdlib users guide for details.</p>
	    <p><em>I/O-protocol incompatibilities:</em></p>
	    <p>The io_protocol between io_Server and client is
	    updated to handle protocol data in unicode formats. The
	    updated protocol is now documented. The specification
	    resides in the stdlib <em>users manual</em>, which is a
	    new part of the manual.</p>
	    <p><em>io module incompatibilities:</em></p>
	    <p>The io:put_chars, io:get_chars and io:get_line all
	    handle and return unicode data. In the case where
	    binaries can be provided (as to io:put_chars), they shall
	    be encoded in UTF-8. When binaries are returned (as by
	    io:get_line/get_chars when the io_server is set in
	    <em>binary mode</em>) the returned data is also
	    <em>always</em> encoded as UTF-8. The file module however
	    still returns byte-oriented data, why file:read can be
	    used instead of io:get_chars to read binary data in
	    ISO-latin-1.</p>
	    <p><em>io_lib module incompatibilities:</em></p>
	    <p>io_lib:format can, given new format directives (i.e
	    "~ts" and "~tc"), return lists containing integers larger
	    than 255. </p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-7648 Aux Id: OTP-7580 OTP-7514 OTP-7494
	    OTP-7443 OTP-7181 EEP10 EEP11 </p>
        </item>
        <item>
          <p>
	    The format of the string returned by
	    <c>erlang:system_info(system_version)</c> (as well as the
	    first message when Erlang is started) has changed. The
	    string now contains the both the OTP version number as
	    well as the erts version number.</p>
          <p>
	    Own Id: OTP-7649</p>
        </item>
        <item>
          <p>
	    Message passing has been further optimized for parallel
	    execution. Serial message passing is slightly more
	    expensive than before, but parallel send to a common
	    receiver is much cheaper.</p>
          <p>
	    Own Id: OTP-7659</p>
        </item>
        <item>
          <p>
	    Lock contention on the atom table lock when decoding
	    Erlang terms on the external format has been drastically
	    reduced.</p>
          <p>
	    Own Id: OTP-7660</p>
        </item>
        <item>
          <p>
	    The undocumented, unsupported, and deprecated guard BIF
	    <c>is_constant/1</c> has been removed.</p>
          <p>
	    *** INCOMPATIBILITY with R12B ***</p>
          <p>
	    Own Id: OTP-7673</p>
        </item>
        <item>
          <p>
	    The Erlang process lock implementation has been improved
	    by Mat Hostetter at Tilera Corporation.</p>
          <p>
	    Own Id: OTP-7692</p>
        </item>
        <item>
          <p>
	    A <c>{nodedown, Node}</c> message passed by the
	    <c>net_kernel:monitor_nodes/X</c> functionality is now
	    guaranteed to be sent after <c>Node</c> has been removed
	    from the result returned by <c>erlang:nodes/Y</c>.</p>
          <p>
	    Own Id: OTP-7725</p>
        </item>
        <item>
	    <p>The short-circuit operators <c>andalso</c> and
	    <c>orelse</c> no longer guarantees that their second
	    argument is either <c>true</c> or <c>false</c>. As a
	    consequence, <c>andalso</c>/<c>orelse</c> are now
	    tail-recursive.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-7748</p>
        </item>
        <item>
          <p>
	    A new BIF, <c>lists:keyfind/3</c>, has been added. It
	    works like <c>lists:keysearch/3</c> except that it does
	    not wrap the returned tuple in a <c>value</c> tuple in
	    case of success. (Thanks to James Hague for suggesting
	    this function.)</p>
          <p>
	    Own Id: OTP-7752</p>
        </item>
        <item>
          <p>
	    Optimization for drivers by creating small binaries
	    direct on process heap.</p>
          <p>
	    Own Id: OTP-7762</p>
        </item>
        <item>
	    <p><c>I bsl N</c> could cause the Erlang virtual machine
	    to run of memory instead generating a <c>system_limit</c>
	    if N was absurdly huge. (Thanks to Daniel Hedlund.)</p>
	    <p>There would always be a garbage collection when
	    evaluating <c>I bsl N</c> or <c>I bsr N</c> if <c>I</c>
	    was a bignum.</p>
	    <p>If <c>I</c> is an integer and <c>N</c> a bignum, <c>I
	    bsl N</c> will now cause the correct <c>system_limit</c>
	    exception instead of <c>bad_arith</c> as in earlier
	    releases.</p>
	    <p>If <c>I</c> is an integer and <c>N</c> a bignum, <c>I
	    bsr N</c> will return either 0 or -1 depending on the
	    sign of <c>I</c> instead of causing a <c>bad_arith</c>
	    exception as in earlier releases.</p>
          <p>
	    Own Id: OTP-7764</p>
        </item>
        <item>
          <p>
	    Scheduler threads can now be bound to logical processors
	    on newer Linux and Solaris systems. More systems will be
	    supported in the future.</p>
          <p>
	    In some cases performance has increased drastically when
	    binding schedulers. Schedulers are not bound by default,
	    though. This since it might cause a performance
	    degradation if multiple programs have bound to
	    processors, e.g. multiple Erlang runtime systems. For
	    more information see the documentation of
	    <c>erlang:system_flag/2</c>.</p>
          <p>
	    In order to bind scheduler threads the CPU topology need
	    to be known. On some newer Linux and Solaris systems the
	    runtime system automatically detects the CPU topology. If
	    the emulator isn't able to automatically detect the CPU
	    topology, the CPU topology can be defined. For more
	    information see the documentation of
	    <c>erlang:system_flag/2</c>.</p>
          <p>
	    Own Id: OTP-7777</p>
        </item>
        <item>
	    <p>The compiler will refuse to a compile file where the
	    module name in the file differs from the output file
	    name.</p>
	    <p>When compiling using <c>erlc</c>, the current working
	    directory will no be included in the code path (unless
	    explicitly added using "-pa .").</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-7793</p>
        </item>
        <item>
          <p>
	    The BIFs <c>atom_to_binary/2</c>,
	    <c>binary_to_atom/2</c>, and
	    <c>binary_to_existing_atom/2</c> have been added.</p>
          <p>
	    Own Id: OTP-7804</p>
        </item>
        <item>
          <p>
	    The amount of schedulers online can now be changed during
	    operation. The amount of schedulers online defaults to
	    the same amount as available logical processors. For more
	    information see the documentation of
	    <c>erlang:system_flag/2</c> and <c>erl</c>.</p>
          <p>
	    Own Id: OTP-7811</p>
        </item>
        <item>
	    <p>The deprecated functions <c>erlang:fault/1</c>,
	    <c>erlang:fault/2</c>, and <c>file:rawopen/2</c> have
	    been removed.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-7812</p>
        </item>
        <item>
          <p>
	    Erts internal dynamically allocated process and port
	    specific data for rarely used data. This is used to
	    reduce memory usage of processes and ports that do not
	    use specific functionality. More functionality will be
	    moved to process and port specific data in future
	    releases.</p>
          <p>
	    Own Id: OTP-7818</p>
        </item>
        <item>
          <p>
	    New packet type <c>http_bin</c> for gen_tcp sockets and
	    <c>erlang:decode_packet</c>. It works like <c>http</c>
	    except that strings are returned as binaries instead of
	    lists.</p>
          <p>
	    Own Id: OTP-7821</p>
        </item>
        <item>
          <p>
	    The obsolete wd_keeper program for embedded Solaris
	    systems has been removed.</p>
          <p>
	    Own Id: OTP-7822</p>
        </item>
        <item>
          <p>
	    Nodes belonging to different independent clusters can now
	    co-exist on the same host with the help of a new
	    environment variable setting ERL_EPMD_PORT.</p>
          <p>
	    Own Id: OTP-7826</p>
        </item>
        <item>
	    <p>There are new functions <c>erlang:min/2</c> and
	    <c>erlang:max/2</c> to calculate the minimum and maximum
	    of two terms, respectively. Note that the functions are
	    not auto-imported, so they need to be imported explicitly
	    or the <c>erlang</c> prefix must be used when calling
	    them.</p>
          <p>
	    Own Id: OTP-7841</p>
        </item>
        <item>
	    <p>The copyright notices have been updated.</p>
          <p>
	    Own Id: OTP-7851</p>
        </item>
        <item>
	    <p>Enhanced build environment for cross compilation to
	    Tilera Tile architecture.</p>
	    <p>Support for native ethread atomics on Tilera
	    Tile64/TilePro (Thanks to Tilera Corporation).</p>
          <p>
	    Own Id: OTP-7852</p>
        </item>
        <item>
	    <p>The escape sequences <c>\x</c> and <c>\{</c> have been
	    assigned new interpretations (they used to return the
	    ASCII code for <c>x</c> and <c>{</c> respectively). One
	    or more octal characters inside curly brackets after a
	    leading backslash is from now on an alternative to the
	    existing syntax <c>\NNN</c>, but can also be used for
	    codes greater than 255. In a similar fashion, one or more
	    hexadecimal characters can be put inside curly brackets
	    after a leading <c>\x</c>. Furthermore, the escape
	    sequences <c>\xH</c> and <c>\xHH</c>, where N is a
	    hexadecimal character, can be used for codes less than
	    256.</p>
	    <p>NOTE: These new escape sequences are still considered
	    experimental and may be changed in the R13B release.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-7855</p>
        </item>
        <item>
          <p>
	    The PCRE library's exported function names are now
	    prefixed with erts_ in the erlang emulator to avoid
	    clashes with dynamically loaded drivers.</p>
          <p>
	    Own Id: OTP-7861</p>
        </item>
        <item>
          <p>
	    A runtime system with SMP support will now be built by
	    default on most platforms if a usable posix thread
	    library or native windows threads are found.</p>
          <p>
	    For more information see the top README file.</p>
          <p>
	    Own Id: OTP-7872</p>
        </item>
      </list>
    </section>

</section>


<section><title>Erts 5.6.5.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A corrected bug in ETS for <c>bag</c> and
	    <c>duplicate_bag</c>. A <c>delete/2</c> or
	    <c>lookup_element/3</c> could miss objects in a fixed
	    table if one or more objects with the same key had
	    already been deleted.</p>
          <p>
	    Own Id: OTP-7665</p>
        </item>
        <item>
          <p>
	    A bug fixed for TCP sockets with option
	    <c>{packet,http}</c>. An HTTP request with an absolute
	    URI was returned with a corrupt path string. This bug did
	    only exist in R12B-4 and R12B-5.</p>
          <p>
	    Own Id: OTP-7682 Aux Id: OTP-7647 </p>
        </item>
        <item>
          <p>
	    Calling <c>gen_tcp:send()</c> from several processes on
	    socket with option <c>send_timeout</c> could lead to much
	    longer timeout than specified. The solution is a new
	    socket option <c>{send_timeout_close,true}</c> that will
	    do automatic close on timeout. Subsequent calls to send
	    will then immediately fail due to the closed connection.</p>
          <p>
	    Own Id: OTP-7731 Aux Id: seq11161 </p>
        </item>
        <item>
          <p>
	    A process being garbage collected via the
	    <c>garbage_collect/1</c> BIF or the
	    <c>check_process_code/2</c> BIF didn't handle message
	    receive and resume correctly during the garbage collect.
	    When this occurred, the process returned to the state it
	    had before the garbage collect instead of entering the
	    new state.</p>
          <p>
	    Own Id: OTP-7738</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.6.5</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A bug in inet_drv concerning gen_tcp:connect has been
	    corrected. A connect towards a non-open port through open
	    firewalls could sometimes erroneously be successful. Any
	    subsequent operation would fail, though.</p>
          <p>
	    Own Id: OTP-6542</p>
        </item>
        <item>
          <p>
	    Floating point arithmetic in drivers could cause a
	    runtime system crash and/or unexpected results on runtime
	    systems with floating point exceptions enabled. Floating
	    point exceptions are disabled unless explicitly enabled
	    or if hipe is enabled.</p>
          <p>
	    Own Id: OTP-7237</p>
        </item>
        <item>
          <p>
	    A bug when many sockets got signalled simultaneously
	    causing the emulator to panic with the message
	    "Inconsistent, why isn't io reported?" is now corrected.</p>
          <p>
	    Own Id: OTP-7420</p>
        </item>
        <item>
          <p>
	    Starting erl with option "-detached" now disconnects
	    correctly from terminal session on Unix.</p>
          <p>
	    Own Id: OTP-7461</p>
        </item>
        <item>
          <p>
	    Mended gdb etp-commands for ETS access.</p>
          <p>
	    Own Id: OTP-7538</p>
        </item>
        <item>
          <p>
	    <c>erlang:decode_packet/3</c> allows white space between
	    HTTP header tag and colon according to RFC2616.</p>
          <p>
	    Own Id: OTP-7543</p>
        </item>
        <item>
          <p>
	    An emulator compiled for SCTP now starts even if the
	    dynamic libraries are not present. The SCTP driver is
	    then of course not loaded.</p>
          <p>
	    Own Id: OTP-7551</p>
        </item>
        <item>
	    <p>To build on Mac OS X, 10.3.0 or later is now required
	    because of fixes for two problems:</p>
	    <p>There would be a resource leak when <c>erl_ddl</c>
	    attempted to unload a driver. This problem has been
	    corrected by using <c>dlopen()</c> (which works on all
	    modern Unix-like platforms) instead of the Mac OS X
	    specific API calls.</p>
	    <p>Signal handling in the run-time system for HiPE has
	    been updated to work on later versions of Mac OS X than
	    10.2.x. Therefore, <c>--enable-hipe</c> now works on Mac
	    OS X with Intel CPUs.</p>
	    <p>Thanks to Geoff Cant for the patches.</p>
          <p>
	    Own Id: OTP-7562</p>
        </item>
        <item>
	    <p>Corrected some information about the protocol between
	    EPMD and Erlang nodes. (Thanks to Michael Regen.)</p>
          <p>
	    Own Id: OTP-7594</p>
        </item>
        <item>
          <p>
	    When using
	    <c>erlang:system_monitor(Pid,{long_gc,Time})</c>, and the
	    GC time exceeded 1 second, it sometimes erroneously
	    showed up as about 4300 seconds. (This bug was corrected
	    in R9C, but re-introduced in R12B.) (Thanks to Chris
	    Newcombe.)</p>
          <p>
	    Own Id: OTP-7622 Aux Id: OTP-4903, seq8379 </p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    The driver entry of a dynamically loaded driver is now
	    copied when loaded which enables some internal
	    optimizations. Note that drivers that modify the driver
	    entry during execution will not work anymore. Such a
	    miss-use of the driver interface is however not
	    supported.</p>
          <p>
	    Own Id: OTP-6900</p>
        </item>
        <item>
          <p>
	    The split function is now added to the re library.
	    Exceptions and errors from both run, replace and split
	    are made more consistent.</p>
          <p>
	    Own Id: OTP-7514 Aux Id: OTP-7494 </p>
        </item>
        <item>
          <p>
	    Fixed harmless compiler warnings when building the
	    emulator and minor build changes in order to avoid
	    unnecessary rebuilds.</p>
          <p>
	    Own Id: OTP-7530</p>
        </item>
        <item>
          <p>
	    There is now experimental support for loading of code
	    from archive files. See the documentation of <c>code</c>,
	    <c>init</c>, <c>erl_prim_loader </c> and <c>escript</c>
	    for more info.</p>
          <p>
	    The error handling of <c>escripts</c> has been improved.</p>
          <p>
	    An <c>escript</c> may now set explicit arguments to the
	    emulator, such as <c>-smp enabled</c>.</p>
          <p>
	    An <c>escript</c> may now contain a precompiled beam
	    file.</p>
          <p>
	    An <c>escript</c> may now contain an archive file
	    containing one or more applications (experimental).</p>
          <p>
	    The internal module <c>code_aux</c> has been removed.</p>
          <p>
	    Own Id: OTP-7548 Aux Id: otp-6622 </p>
        </item>
        <item>
          <p>
	    The reallocation functionality part of the ERTS internal
	    memory allocators, now consider current block in
	    combination with surrounding free blocks as an
	    alternative location for a reallocation.</p>
          <p>
	    Own Id: OTP-7555</p>
        </item>
        <item>
	    <p>There could remain false references from a process to
	    a module that has been called earlier, so that the
	    process would be killed if the module was reloaded.
	    (Thanks to Richard Carlsson.)</p>
	    <p>Also, the fix for this bug also made it possible to
	    make stack backtraces (as returned from
	    <c>erlang:get_stacktrace/0</c> and other functions) more
	    correct in that the immediate caller is always included
	    in the stack backtrace (it could sometimes be
	    missing).</p>
          <p>
	    Own Id: OTP-7559</p>
        </item>
        <item>
          <p>
	    Improved locking in IO-handling for better smp
	    performance.</p>
          <p>
	    Own Id: OTP-7560</p>
        </item>
        <item>
          <p>
	    Improved BIF rescheduling functionality.</p>
          <p>
	    Own Id: OTP-7587</p>
        </item>
        <item>
          <p>
	    Loading a module compiled with Erlang/OTP R9C and calling
	    <c>module_info/0</c> in the module would crash the
	    emulator. The emulator now refuses to load any module
	    compiled with R9C or earlier. (Note: only trivial modules
	    compiled with R10B or earlier could be loaded anyway.)
	    (Thanks to Martin Kjellin.)</p>
          <p>
	    Own Id: OTP-7590</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.6.4.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A process calling one of the following BIFs could under
	    very rare conditions deadlock in the runtime system with
	    SMP support: <c>check_process_code/2</c>,
	    <c>garbage_collect/1</c>, <c>process_info/[1,2]</c>,
	    <c>system_flag/2</c>, and
	    <c>erlang:suspend_process/[1,2]</c>.</p>
          <p>
	    Own Id: OTP-7582</p>
        </item>
        <item>
          <p>
	    A couple of statistics variables were not managed in a
	    thread safe manner in the runtime system with SMP
	    support.</p>
          <p>
	    Own Id: OTP-7583</p>
        </item>
        <item>
          <p>
	    An extremely rare race condition when terminating a
	    process could potentially cause a runtime system crash.</p>
          <p>
	    Own Id: OTP-7584</p>
        </item>
        <item>
          <p>
	    Under certain conditions and when using run_erl/to_erl,
	    the terminal Erlang driver (ttsl_drv) could crash the
	    emulator by doing a division by zero due to incorrect
	    handling of terminals reporting a zero width. For
	    terminals reporting zero width, the driver now fallbacks
	    to a default width of 80 and a default height of 24
	    (vt100), as a fallback behaviour. This fixes the crashes
	    and also makes output on "dumb" terminals much more
	    readable.</p>
          <p>
	    Own Id: OTP-7592 Aux Id: seq11073 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.6.4.1</title>

    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    A new <c>erts_alloc</c> parameter
	    <c>+M&lt;S&gt;rmbcmt</c> (relative multiblock carrier
	    move threshold) has been added. It determines when to
	    force a moving realloc in a multiblock carrier when a
	    block is shrunk. For more information see the
	    <c>erts_alloc(3)</c> documentation.</p>
          <p>
	    Own Id: OTP-7540</p>
        </item>
        <item>
	    <p>The new option <c>+d</c> can be given to <c>erl</c> to
	    suppress the crash dump generation if an internal error
	    is detected. As a result, a more useful core dump is
	    produced.</p>
          <p>
	    Own Id: OTP-7578 Aux Id: seq11052 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.6.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Double backslashes in format string passed to the erts
	    internal printf implementation produced erroneous
	    results. No such format strings were passed to the erts
	    internal printf implementation, i.e., the bug was
	    therefore completely harmless. (Thanks to Perry Smith.)</p>
          <p>
	    Own Id: OTP-7408</p>
        </item>
        <item>
          <p>
	    Large files are now handled on Windows, where the
	    filesystem supports it.</p>
          <p>
	    Own Id: OTP-7410</p>
        </item>
        <item>
          <p>
	    Bug fixed for <c>{packet,http}</c> when space follows
	    http headers.</p>
          <p>
	    Own Id: OTP-7458</p>
        </item>
        <item>
          <p>
	    The trace option <c>running</c> could cause an emulator
	    crash if the current function couldn't be determined.</p>
          <p>
	    Own Id: OTP-7484</p>
        </item>
        <item>
          <p>
	    Using 16#ffffFFFF as a timeout value in receive...after
	    would often cause a timeout almost at once due to an
	    32-bit integer overflow. (Thanks to Serge Aleynikov and
	    Matthias Lang.)</p>
          <p>
	    Own Id: OTP-7493</p>
        </item>
        <item>
          <p>
	    For the process that an escript runs in, the
	    <c>trap_exit</c> process flag is now <c>false</c> instead
	    of <c>true</c> (as in previous releases). Scripts that
	    depend on the previous (counter-intuitive) behaviour
	    might not work. (Thanks to Bengt Kleberg.)</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-7517</p>
        </item>
        <item>
          <p>
	    A bug in the <c>string:to_integer/1</c> builtin made the
	    emulator unstable. This is now corrected. (Thanks to Lev
	    Walkin.)</p>
          <p>
	    Own Id: OTP-7526</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>Performance for ETS intensive applications should now
	    be better in the SMP emulator. Also, ETS table
	    identifiers (as returned by <c>ets:new/2</c>) are now
	    spread out in wider range than before (using 28 bits in a
	    32-bit emulator) to make sure that the table identifier
	    for a deleted table will not be quickly re-used.</p>
	    <p>NOTE: Table identifiers can now be negative integers.
	    Programs that (incorrectly) assume that table identifiers
	    can only be positive integers might stop to work. (The
	    type of a table identifier is intentionally not
	    documented, and may change in a future release.)</p>
          <p>
	    Own Id: OTP-7348</p>
        </item>
        <item>
          <p>
	    New BIF <c>erlang:decode_packet/3</c> that extracts a
	    protocol packet from a binary. Similar to the socket
	    option <c>{packet, Type}</c>. Also documented the socket
	    packet type <c>http</c> and made it official.
	    <em>NOTE</em>: The tuple format for <c>http</c> packets
	    sent from an active socket has been changed in an
	    incompatible way.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-7404</p>
        </item>
        <item>
          <p>
	    The source code for the documentation for some
	    applications (erts, kernel, stdlib, and several others)
	    are now included in the source tar ball. There is
	    currently no Makefile support for building HTML files
	    from the source (such support will be included in a
	    future release).</p>
          <p>
	    Own Id: OTP-7406</p>
        </item>
        <item>
          <p>
	    A lot of frequently accessed memory counters (erts
	    internal) have been removed. This since they hurt
	    performance on the runtime system with SMP support. As a
	    result <c>erlang:memory/[0,1]</c> will only deliver a
	    result if all <c>erts_alloc(3)</c> allocators are enabled
	    (default). The result delivered when all
	    <c>erts_alloc(3)</c> allocators are enabled are both more
	    accurate and less accurate than before. More memory than
	    before are included in the result, but the different
	    parts that are summed are not gathered atomically. A call
	    to <c>erlang:memory/[0,1]</c> is much cheaper for the
	    system than before. This since the information isn't
	    gathered atomically anymore which was very expensive.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-7468</p>
        </item>
        <item>
          <p>
	    Pre-allocators used for, for example, timers, and
	    messages have been rewritten to be scheduler specific.
	    That is, different schedulers will now allocate from
	    different pools which reduces lock contention.</p>
          <p>
	    Own Id: OTP-7470</p>
        </item>
        <item>
          <p>
	    On Mac OS X, file:sync/1 now guarantees that all
	    filesystem buffers are written to the disk by using the
	    fcntl() with F_FULLFSYNC option. Previously, file:sync/1
	    called fsync(), which only guaranteed that the data had
	    been transferred to the disk drive. (Thanks to Jan
	    Lehnardt.)</p>
          <p>
	    Own Id: OTP-7471</p>
        </item>
        <item>
          <p>
	    Termination of a process that takes a long time can now
	    be preempted, i.e., the terminating process will be
	    rescheduled for later continuation of termination so that
	    other processes can execute. Termination of a process
	    that owns many and/or large ets tables typically takes a
	    long time.</p>
          <p>
	    Own Id: OTP-7477</p>
        </item>
        <item>
          <p>
	    A new trace option <c>exiting</c> has been added. The
	    <c>exiting</c> trace is similar to the <c>running</c>
	    trace, but for exiting processes. For more information
	    see the erlang(3) documentation.</p>
          <p>
	    The <c>erlang:trace/3</c> bif now doesn't block other
	    scheduler threads if only one tracee is specified in the
	    call to <c>erlang:trace/3</c>.</p>
          <p>
	    Own Id: OTP-7481</p>
        </item>
        <item>
          <p>
	    The re module is extended with repetitive matches (global
	    option) and replacement function.</p>
          <p>
	    Own Id: OTP-7494 Aux Id: OTP-7181 </p>
        </item>
        <item>
          <p>
	    In the section about binary construction, the reference
	    manual now mentions what happens when an integer value
	    does not fit into an integer segment of size N (namely,
	    that the N least significant bits will be put into into
	    the binary and that the most significant bits will be
	    silently discarded). (Thanks to Edwin Fine.)</p>
          <p>
	    Own Id: OTP-7506</p>
        </item>
        <item>
          <p>
	    Setting the <c>{active,once}</c> for a socket (using
	    inets:setopts/2) is now specially optimized (because the
	    <c>{active,once}</c> option is typically used much more
	    frequently than other options).</p>
          <p>
	    Own Id: OTP-7520</p>
        </item>
      </list>
    </section>


    <section><title>Known Bugs and Problems</title>
      <list>
        <item>
          <p>
	    Floating point arithmetic in drivers can cause a runtime
	    system crash and/or unexpected results on runtime systems
	    with floating point exceptions enabled. Floating point
	    exceptions are disabled unless explicitly enabled or if
	    hipe is enabled.</p>
          <p>
	    Own Id: OTP-7237</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.6.3.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Binary construction with an integer field of size 0 at
	    the end of the constructed binary (and the size given in
	    a variable), would cause a write of one byte outside the
	    memory reserved for the binary, which in turn could cause
	    an emulator crash.</p>
          <p>
	    Own Id: OTP-7422</p>
        </item>
        <item>
          <p>
	    A race condition in the dynamic driver implementation
	    could cause an emulator crash. (Thanks to Paul Fisher)</p>
          <p>
	    Own Id: OTP-7464</p>
        </item>
        <item>
          <p>
	    Calls to <c>erlang:system_info(allocated_areas)</c> could
	    cause the runtime system with SMP support to crash.</p>
          <p>
	    Own Id: OTP-7474</p>
        </item>
        <item>
          <p>
	    The <c>env</c> option to <c>open_port()</c> could cause
	    the runtime system with SMP support to crash.</p>
          <p>
	    Own Id: OTP-7475</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Operations that needed to block other threads in the
	    runtime system with SMP support unnecessarily waited for
	    async threads to block. Most important the
	    <c>erlang:memory/[0,1]</c> bif, code loading, and the
	    <c>erlang:trace/3</c> bif.</p>
          <p>
	    Own Id: OTP-7480</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.6.3.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Calls to <c>erlang:memory/[0,1]</c> could cause the
	    runtime system with SMP support to crash.</p>
          <p>
	    Own Id: OTP-7415</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.6.3.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Doing local call trace on bit syntax matching code that
	    has been optimized with delayed sub-binary creation could
	    crash the emulator.</p>
          <p>
	    Own Id: OTP-7399 Aux Id: seq10978 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.6.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Only one to_erl process at a time is allowed to connect
	    to the same run_erl pipe. Prevents buggy behaviour when
	    IO from several to_erl's get interleaved.</p>
          <p>
	    Own Id: OTP-5107</p>
        </item>
        <item>
          <p>
	    IPv6 name resolving has now been fixed to use
	    getaddrinfo() patch (thoroughly reworked) courtesy of Love
	    Hörnquist-Åstrand submitted by Fredrik Thulin. It also
	    can use gethostname2() patch (also reworked) courtesy of
	    Mikael Magnusson for debian submitted by Sergei Golovan.</p>
          <p>
	    Own Id: OTP-5382</p>
        </item>
        <item>
          <p>
	    Improved error handling in run_erl</p>
          <p>
	    Own Id: OTP-7252</p>
        </item>
        <item>
	    <p>A permanent fix for the deadlock issue temporarily
	    fixed by OTP-7260.</p> <taglist><tag>OTP-7260</tag><item>
	    The runtime system with SMP support could under rare
	    circumstances deadlock when a distribution channel was
	    taken down while multiple simultaneous operations were
	    performed on it. </item></taglist>
          <p>
	    Own Id: OTP-7267 Aux Id: OTP-7260 </p>
        </item>
        <item>
          <p>
	    ./configure has been improved to find 64-bit OpenSSL
	    libraries.</p>
          <p>
	    Own Id: OTP-7270</p>
        </item>
        <item>
          <p>
	    A terminating process could under very rare circumstances
	    trigger a bug which could crash the runtime system with
	    SMP support.</p>
          <p>
	    Own Id: OTP-7272</p>
        </item>
        <item>
          <p>
	    SCTP_ADDR_CONFIRMED events are now handled by gen_sctp.</p>
          <p>
	    Own Id: OTP-7276</p>
        </item>
        <item>
          <p>
	    binary_to_term/1 would crash the emulator if the binary
	    data contained an external fun with non-atom module
	    and/or function. Corrected to generate a badarg
	    exception.</p>
          <p>
	    Own Id: OTP-7281</p>
        </item>
        <item>
          <p>
	    On Mac OS 10.5 (Leopard), sending to socket which the
	    other end closes could cause the emulator to consume 100%
	    CPU time. (Thanks to Matthias Radestock.)</p>
          <p>
	    Own Id: OTP-7289</p>
        </item>
        <item>
          <p>
	    The vanilla driver used on Windows could crash the
	    emulator and sometimes produced corrupt files. The
	    vanilla driver is the driver that is used when one only
	    pass a filename as first argument to <c>open_port/2</c>.
	    <em>NOTE</em>: This use of <c>open_port/2</c> is
	    <em>obsolete</em>, and the documentation of this use has
	    previously been removed. The functionality is only
	    present for backward compatibility reasons and
	    <em>will</em> eventually be removed.</p>
          <p>
	    Own Id: OTP-7301</p>
        </item>
        <item>
          <p>
	    Faulty matching in binaries larger than 512Mb on 64bit
	    machines fixed.(On 32bit, the size limit for binaries is
	    still 512Mb). Thanks to Edwin Fine and Per Gustafsson for
	    finding fault and fix.</p>
          <p>
	    Own Id: OTP-7309</p>
        </item>
        <item>
          <p>
	    crypto:start() on Windows caused emulator to hang on
	    error popup window if openssl DLL was not found. Windows
	    error popups now suppressed.</p>
          <p>
	    Own Id: OTP-7325</p>
        </item>
        <item>
          <p>
	    Configuration option <c>without-termcap</c> can be used to
	    disable the use of termcap libraries for terminal cursor
	    control in the shell.</p>
          <p>
	    Own Id: OTP-7338</p>
        </item>
        <item>
          <p>
	    to_erl reports its terminal window size to run_erl in
	    order to get output formatted accordingly</p>
          <p>
	    Own Id: OTP-7342</p>
        </item>
        <item>
          <p>
	    On Solaris, the <c>compressed</c> option for file
	    operations did not work if the file descriptor happened
	    to be greater than 255 (a problem with fopen() and
	    friends in Solaris itself).</p>
          <p>
	    Own Id: OTP-7343 Aux Id: seq10949 </p>
        </item>
        <item>
          <p>
	    A race condition in the runtime system with SMP support
	    causing an erroneous removal of a newly created ets table
	    has been fixed.</p>
          <p>
	    The race occurred when a process removed a table during
	    termination simultaneously as another process removed the
	    same table via <c>ets:delete/1</c> and a third process
	    created a table that accidentally got the same internal
	    table index as the table being removed.</p>
          <p>
	    Own Id: OTP-7349</p>
        </item>
        <item>
          <p>
	    <c>zlib:inflate</c> failed when the size of the inflated
	    data was an exact multiple of the internal buffer size
	    (4000 bytes by default).</p>
          <p>
	    Own Id: OTP-7359</p>
        </item>
        <item>
          <p>
	    If the total number of allowed atoms is exceeded, there
	    will now be a controlled termination of the emulator with
	    a crash dump file. The emulator used to simply crash.
	    (Thanks Howard Yeh and Thomas Lindgren.)</p>
          <p>
	    Own Id: OTP-7372</p>
        </item>
        <item>
          <p>
	    The break handler in werl on Windows could cause the
	    emulator to hang or crash, that is now corrected.</p>
          <p>
	    Own Id: OTP-7394 Aux Id: seq10969 </p>
        </item>
        <item>
          <p>
	    The configure script now tests for an serious
	    optimization bug in gcc-4.3.0. If the bug is present, the
	    configure script will abort (if this happens, the only
	    way to build Erlang/OTP is to change to another version
	    of gcc). (Thanks to Mikael Pettersson.)</p>
          <p>
	    Own Id: OTP-7397</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    On Unix, the emulator now notices when the width of the
	    terminal has changed. (Thanks to Matthew Dempsky and
	    Patrick Mahoney.)</p>
          <p>
	    Own Id: OTP-7290</p>
        </item>
        <item>
          <p>
	    There is a new function <c>init:stop/1</c> which can be
	    used to shutdown the system cleanly AND generate a
	    non-zero exit status or crash dump. (Thanks to Magnus
	    Froberg.)</p>
          <p>
	    Own Id: OTP-7308</p>
        </item>
        <item>
          <p>
	    process_info(Pid, garbage_collection) now returns more
	    information</p>
          <p>
	    Own Id: OTP-7311</p>
        </item>
        <item>
          <p>
	    The <c>hide</c> option for <c>open_port/2</c> is now
	    documented. (Thanks to Richard Carlsson.)</p>
          <p>
	    Own Id: OTP-7358</p>
        </item>
      </list>
    </section>


    <section><title>Known Bugs and Problems</title>
      <list>
        <item>
          <p>
	    Floating point arithmetic in drivers can cause a runtime
	    system crash on runtime systems with floating point
	    exceptions enabled. Floating point exceptions are
	    disabled unless explicitly enabled or if hipe is enabled.</p>
          <p>
	    Own Id: OTP-7237</p>
        </item>
      </list>
    </section>

</section>


<section><title>Erts 5.6.2</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The maximum length of an atom of 255 characters is now
	    strictly enforced. <c>binary_to_term/1</c> will now fail
	    with a badarg if an encoded term contains an atom longer
	    than 255 characters. Atoms created by drivers will now be
	    truncated to 255 characters if necessary. (Thanks to
	    Matthew Dempsky.)</p>
          <p>
	    Own Id: OTP-7147</p>
        </item>
        <item>
          <p>
	    A bug in "bignum handling" on some 64bit architectures
	    could cause rem and div operations on large numbers to
	    hang indefinitely. Rem operations involving the smallest
	    negative number representable in 28 bits or 60 bits could
	    also cause access violation and emulator crash. Both
	    errors are corrected.</p>
          <p>
	    Own Id: OTP-7177</p>
        </item>
        <item>
          <p>
	    When doing the initial garbage collection after waking a
	    hibernated process, a fullsweep garbage collection was
	    unnecessarily triggered.</p>
          <p>
	    Own Id: OTP-7212</p>
        </item>
        <item>
	    <p>The beta testing module <c>gen_sctp</c> now supports
	    active mode as stated in the documentation. Active mode
	    is still rather untested, and there are some issues about
	    what should be the right semantics for
	    <c>gen_sctp:connect/5</c>. In particular: should it be
	    blocking or non-blocking or choosable. There is a high
	    probability it will change semantics in a (near) future
	    patch.</p> <p>Try it, give comments and send in bug
	    reports!</p>
          <p>
	    Own Id: OTP-7225</p>
        </item>
        <item>
          <p>
	    Invalid arguments to <c>ets:update_counter/3</c> were not
	    handled correctly. A tuple position (<c>Pos</c>) less
	    than 1 caused the element directly following the key to
	    be updated (as if no position at all had been specified).
	    All invalid values for <c>Pos</c> will now fail with
	    <c>badarg</c>.</p>
          <p>
	    Own Id: OTP-7226</p>
        </item>
        <item>
          <p>
	    The runtime system with SMP support could under rare
	    circumstances deadlock when a distribution channel was
	    taken down while multiple simultaneous operations were
	    performed on it.</p>
          <p>
	    Own Id: OTP-7260</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    More checksum/hash algorithms from the zlib library are
	    now available as built in functions (like md5 hashes has
	    been for a long time).</p>
          <p>
	    Own Id: OTP-7128</p>
        </item>
        <item>
          <p>
	    Minor improvements in the garbage collector.</p>
          <p>
	    Own Id: OTP-7139 Aux Id: OTP-7132 </p>
        </item>
        <item>
          <p>
	    The switch "-detached" to the windows werl program now
	    can create an erlang virtual machine without any main
	    window and without a temporary console showing.</p>
          <p>
	    Own Id: OTP-7142</p>
        </item>
        <item>
	    <p><c>erlang:system_info/1</c> now accepts the
	    <c>logical_processors</c>, and <c>debug_compiled</c>
	    arguments. For more info see the, <c>erlang(3)</c>
	    documentation.</p> <p>The scale factor returned by
	    <c>test_server:timetrap_scale_factor/0</c> is now also
	    effected if the emulator uses a larger amount of
	    scheduler threads than the amount of logical processors
	    on the system. </p>
          <p>
	    Own Id: OTP-7175</p>
        </item>
        <item>
          <p>
	    A new BIF ets:update_element/3. To update individual
	    elements within an ets-tuple, without having to read,
	    update and write back the entire tuple.</p>
          <p>
	    Own Id: OTP-7200</p>
        </item>
        <item>
          <p>
	    A process executing the <c>processes/0</c> BIF can now be
	    preempted by other processes during its execution. This
	    in order to disturb the rest of the system as little as
	    possible. The returned result is, of course, still a
	    consistent snapshot of existing processes at a time
	    during the call to <c>processes/0</c>.</p>
          <p>
	    The documentation of the <c>processes/0</c> BIF and the
	    <c>is_process_alive/1</c> BIF have been updated in order
	    to clarify the difference between an existing process and
	    a process that is alive.</p>
          <p>
	    Own Id: OTP-7213</p>
        </item>
      </list>
    </section>

</section>


<section><title>Erts 5.6.1.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Not enough parameters were passed when sending an error
	    report in erl_check_io.c (Thanks to Matthew Dempsky).</p>
          <p>
	    Own Id: OTP-7176</p>
        </item>
        <item>
          <p>
	    In rare circumstances, complex binary matching code could
	    cause the emulator to crash or not match when it should.
	    (Thanks to Rory Byrne.)</p>
          <p>
	    Own Id: OTP-7198</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>The <c>{allocator_sizes, Alloc}</c> and
	    <c>alloc_util_allocators</c> arguments are now accepted
	    by <c>erlang:system_info/1</c>. For more information see
	    the <c>erlang(3)</c> documentation.</p>
          <p>
	    Own Id: OTP-7167</p>
        </item>
        <item>
          <p>
	    The finishing reallocation of the heap block when
	    hibernating a process is now always moving the heap block
	    since it drastically reduces memory fragmentation when
	    hibernating large amounts of processes.</p>
          <p>
	    Own Id: OTP-7187</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.6.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    The SMP emulator on sparc64 erroneously used the sparc32
	    atomic and the sparc32 spinlock implementations which
	    caused it to crash.</p>
          <p>
	    Own Id: OTP-7006</p>
        </item>
        <item>
          <p>
	    Call tracing the new guard BIFs <c>byte_size</c>,
	    <c>bit_size</c>, or <c>tuple_size</c> and the loading a
	    module that uses one of those functions, could cause the
	    emulator to terminate.</p>
          <p>
	    Own Id: OTP-7008</p>
        </item>
        <item>
          <p>
	    configuring --enable-darwin-universal or
	    --enable-darwin-64bit on MacOSX could result in a non
	    optimized emulator. Top level configure script now
	    corrected.</p>
          <p>
	    Own Id: OTP-7014</p>
        </item>
        <item>
          <p>
	    configuring --with-gd did not produce correct include
	    flags for percept.</p>
          <p>
	    Own Id: OTP-7015</p>
        </item>
        <item>
          <p>
	    Environment variables weren't handled in thread safe
	    manner in the runtime system with SMP support on Windows.</p>
          <p>
	    <c>erl_drv_putenv()</c>, and <c>erl_drv_getenv()</c> has
	    been introduced for use in drivers. Do <em>not</em> use
	    putenv(), or getenv() directly in drivers. For more
	    information see the <c>erl_driver</c> documentation.</p>
          <p>
	    Own Id: OTP-7035</p>
        </item>
        <item>
          <p>
	    HIPE: Corrected the choice of interface to the send/3 and
	    setnode/3 BIFs for native-compiled code. Using the
	    incorrect interface could, in unusual circumstances, lead
	    to random runtime errors.</p>
          <p>
	    Own Id: OTP-7067</p>
        </item>
        <item>
          <p>
	    Garbage collections could become extremely slow when
	    there were many keys in the process dictionary. (Thanks
	    to Fredrik Svahn.)</p>
          <p>
	    Own Id: OTP-7068</p>
        </item>
        <item>
          <p>
	    The duplicate documentation directory in the windows
	    installation is removed.</p>
          <p>
	    Own Id: OTP-7070</p>
        </item>
        <item>
	    <p>Documentation bugfixes and clarifications.</p> (Thanks
	    to Joern (opendev@gmail.com), Matthias Lang, and Richard
	    Carlsson.)
          <p>
	    Own Id: OTP-7079</p>
        </item>
        <item>
          <p>
	    The runtime system with SMP support <em>not</em> using
	    the native atomic integer implementation part of OTP
	    could deadlock when run on a system with more than one
	    logical processor. That is, only the runtime system with
	    SMP support on <em>other</em> hardware platforms than
	    x86, x86_64, sparc32, and powerpc32 were effected by this
	    bug.</p>
          <p>
	    Own Id: OTP-7080</p>
        </item>
        <item>
          <p>
	    The break handling code (run when Ctrl-C is hit) could
	    could potentially deadlock the runtime system with SMP
	    support.</p>
          <p>
	    Own Id: OTP-7104</p>
        </item>
        <item>
          <p>
	    The sctp driver has been updated to work against newer
	    lksctp packages e.g 1.0.7 that uses the API spelling
	    change adaption -> adaptation. Older lksctp (1.0.6) still
	    work. The erlang API in gen_sctp.erl and inet_sctp.hrl
	    now spells 'adaptation' regardless of the underlying C
	    API.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-7120</p>
        </item>
        <item>
	    <p>A bug in <c>erlang:phash2/1</c> on 64-bit platforms
	    has been fixed. (Thanks to Scott Lystig Fritchie.)</p>
          <p>
	    Own Id: OTP-7127</p>
        </item>
        <item>
          <p>
	    The emulator could under rare circumstances crash while
	    garbage collecting.</p>
          <p>
	    Own Id: OTP-7132</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
	    <p>The documentation has been updated so as to reflect
	    the last updates of the Erlang shell as well as the minor
	    modifications of the control sequence <c>p</c> of the
	    <c>io_lib</c> module.</p> <p>Superfluous empty lines have
	    been removed from code examples and from Erlang shell
	    examples.</p>
          <p>
	    Own Id: OTP-6944 Aux Id: OTP-6554, OTP-6911 </p>
        </item>
        <item>
          <p>
	    Bit syntax construction with a small integer in a
	    non-byte aligned field wider than the CPU's word size
	    could cause garbage bits in the beginning of the field.</p>
          <p>
	    Own Id: OTP-7085</p>
        </item>
        <item>
          <p>
	    All Windows versions older than Windows 2000 are now
	    <em>not supported</em> by the Erlang runtime system. This
	    since there was a need for usage of features introduced
	    in Windows 2000.</p>
          <p>
	    Own Id: OTP-7086</p>
        </item>
        <item>
	    <p>Memory management improvements especially for the
	    runtime system with SMP support:</p> <list> <item> The
	    runtime system with SMP support can now use multiple,
	    thread specific instances of most memory allocators. This
	    improves performance since it reduces lock contention in
	    the memory allocators. It may however increase memory
	    usage for some applications. The runtime system with SMP
	    support will by default enable this feature on most
	    allocators. The amount of instances used can be
	    configured. </item> <item> <c>driver_alloc()</c>,
	    <c>driver_realloc()</c>, and <c>driver_free()</c> now use
	    their own erts specific memory allocator instead of the
	    default <c>malloc()</c> implementation on the system.
	    </item> <item> The default configuration of some
	    allocators have been changed to fit applications that use
	    much memory better. </item> <item> Some new
	    <c>erts_alloc</c> configuration parameters have been
	    added. </item> <item> <c>erts_alloc_config</c> has been
	    modified to be able to create configurations suitable for
	    multiple instances of allocators. </item> <item> The
	    returned value from <c>erlang:system_info({allocator,
	    Alloc})</c> has been changed. This since an allocator may
	    now run in multiple instances. </item> </list> <p>If you
	    for some reason want the memory allocators to be
	    configured as before, you can pass the <c>+Mea r11b</c>
	    command-line argument to <c>erl</c>.</p> <p>For more
	    information see the <c>erts_alloc(3)</c>, the
	    <c>erts_alloc_config(3)</c>, and the <c>erlang(3)</c>
	    documentation.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-7100</p>
        </item>
        <item>
          <p>
	    On Unix, denormalized floating point numbers could not be
	    created using <c>list_to_float/1</c> or
	    <c>binary_to_term/1</c>. (Thanks to Matthew Dempsky.)</p>
          <p>
	    Own Id: OTP-7122</p>
        </item>
        <item>
          <p>
	    Native atomic integers and spin-locks are now also
	    available for the runtime system with SMP support on
	    sparc64.</p>
          <p>
	    Own Id: OTP-7130</p>
        </item>
        <item>
          <p>
	    FP exceptions support for sparc64 userspace on Linux has
	    been added. Note that FP exception support is now turned
	    off by default, so to actually enable it you need to do
	    '<c>./configure --enable-fp-exceptions</c>'.</p>
          <p>
	    Own Id: OTP-7131</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.6</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    A bug for raw files when reading 0 bytes returning 'eof'
	    instead of empty data has been corrected.</p>
          <p>
	    Own Id: OTP-6291 Aux Id: OTP-6967 </p>
        </item>
        <item>
          <p>
	    All exported functions in gzio.c have now been renamed to
	    avoid conflict with drivers that are indirectly linked
	    with an external zlib library.</p>
          <p>
	    Own Id: OTP-6816 Aux Id: OTP-6591 </p>
        </item>
        <item>
          <p>
	    On the 64-bit Erlang emulator, bit syntax construction
	    with integers containing more than 60 bits ("big
	    numbers") into fields with more than 60 bits could
	    produce incorrect results.</p>
          <p>
	    Own Id: OTP-6833</p>
        </item>
        <item>
          <p>
	    When the runtime system failed to allocate memory for
	    binaries, it could dead lock while writing the
	    <c>erl_crash.dump</c>.</p>
          <p>
	    Own Id: OTP-6848</p>
        </item>
        <item>
          <p>
	    The runtime system with SMP support could deadlock if a
	    process called the <c>erlang:suspend_process(Pid)</c> BIF
	    or the <c>erlang:garbage_collect(Pid)</c> BIF while the
	    process identified by <c>Pid</c> was currently running
	    and the process calling the BIFs was terminated during
	    the call to the BIFs.</p>
          <p>
	    Processes suspending each other via the
	    <c>erlang:suspend_process/1</c> BIF or garbage collecting
	    each other via the <c>erlang:garbage_collect/1</c> BIF
	    could deadlock each other when the runtime system with
	    SMP support was used.</p>
          <p>
	    Own Id: OTP-6920</p>
        </item>
        <item>
          <p>
	    <c>dbg</c> could leave traced processes in a suspended
	    state if the tracer process was killed with exit reason
	    <c>kill</c>.</p>
          <p>
	    <c>erlang:suspend_process/2</c> has been introduced which
	    accepts an option list as second argument. For more
	    information see the <c>erlang(3)</c> documentation.</p>
          <p>
	    Processes suspended via
	    <c>erlang:suspend_process/[1,2]</c> will now be
	    automatically resumed if the process that called
	    <c>erlang:suspend_process/[1,2]</c> terminates.</p>
          <p>
	    Processes could previously be suspended by one process
	    and resumed by another unless someone was tracing the
	    suspendee. This is <em>not</em> possible anymore. The
	    process resuming a process <em>has</em> to be the one
	    that suspended it.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-6946</p>
        </item>
        <item>
	    <p>file:write_file/3, file:write/2 and file:read/2 could
	    crash (contrary to documentation) for odd enough file
	    system problems, e.g write to full file system. This bug
	    has now been corrected.</p> <p>In this process the file
	    module has been rewritten to produce better error codes.
	    Posix error codes now originate from the OS file system
	    calls or are generated only for very similar causes (for
	    example 'enomem' is generated if a memory allocation
	    fails, and 'einval' is generated if the file handle in
	    Erlang is a file handle but currently invalid).</p>
	    <p>More Erlang-ish error codes are now generated. For
	    example <c>{error,badarg}</c> is now returned from
	    <c>file:close/1</c> if the argument is not of a file
	    handle type. See file(3).</p> <p>The possibility to write
	    a single byte using <c>file:write/2</c> instead of a list
	    or binary of one byte, contradictory to the
	    documentation, has been removed.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-6967 Aux Id: OTP-6597 OTP-6291 </p>
        </item>
        <item>
          <p>
	    Monitor messages produced by the system monitor
	    functionality, and garbage collect trace messages could
	    contain erroneous heap and/or stack sizes when the actual
	    heaps and/or stacks were huge.</p>
          <p>
	    As of erts version 5.6 the <c>large_heap</c> option to
	    <c>erlang:system_monitor/[1,2]</c> has been modified. The
	    monitor message is sent if the sum of the sizes of all
	    memory blocks allocated for all heap generations is equal
	    to or larger than the specified size. Previously the
	    monitor message was sent if the memory block allocated
	    for the youngest generation was equal to or larger than
	    the specified size.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-6974 Aux Id: seq10796 </p>
        </item>
        <item>
          <p>
            <c>inet:getopts/2</c> returned random values on Windows
            Vista.</p>
          <p>
            Own Id: OTP-7003</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    The emulator internal process lock implementation has
	    been rewritten and optimized. A slight risk of starvation
	    existed in the previous implementation. This risk has
	    also been eliminated in the new implementation.</p>
          <p>
	    Own Id: OTP-6500</p>
        </item>
        <item>
          <p>
	    Bitstrings (bit-level) binaries and binary comprehensions
	    are now part of the language. See the Reference Manual.</p>
          <p>
	    Own Id: OTP-6558</p>
        </item>
        <item>
          <p>
	    The windows version of erlang now has SMP support. The
	    SMP emulator is run by default on machines which shows
	    more than one virtual or physical processor.</p>
          <p>
	    Own Id: OTP-6560 Aux Id: OTP-6925 </p>
        </item>
        <item>
          <p>
	    The details of the compressed term format has been
	    documented in erl_ext_dist.txt. (Thanks to Daniel
	    Goertzen.)</p>
          <p>
	    Own Id: OTP-6755</p>
        </item>
        <item>
          <p>
	    The runtime system with SMP support is now started by
	    default if more than one logical processor are detected.
	    For more information, see the <c>erl(3)</c>
	    documentation.</p>
          <p>
	    Own Id: OTP-6756</p>
        </item>
        <item>
          <p>
	    The external format for Erlang terms and the distribution
	    protocol are now documented in ERTS User's Guide.</p>
          <p>
	    Own Id: OTP-6779</p>
        </item>
        <item>
          <p>
	    New BIF's erlang:system_profile/1 and
	    erlang:system_profile/2. These BIF's controls concurrency
	    profiling options for processes, ports and schedulers.</p>
          <p>
	    Own Id: OTP-6783 Aux Id: OTP-6285 </p>
        </item>
        <item>
          <p>
	    The <c>ErlDrvTermData</c> term types used by
	    <c>driver_output_term()</c> and <c>driver_send_term()</c>
	    have been extended with the term types
	    <c>ERL_DRV_BUF2BINARY</c>, <c>ERL_DRV_EXT2TERM</c>, and
	    <c>ERL_DRV_UINT</c>. <c>ERL_DRV_BUF2BINARY</c> is used
	    for passing and creating a binary,
	    <c>ERL_DRV_EXT2TERM</c> is used for passing terms encoded
	    with the external term format, and <c>ERL_DRV_UINT</c> is
	    used for passing unsigned integers.</p>
          <p>
	    Also the data types <c>ErlDrvUInt</c> and
	    <c>ErlDrvSInt</c> have been added which makes it more
	    obvious how arguments to term types are interpreted with
	    regards to width and signedness.</p>
          <p>
	    The incorrect data types <c>ErlDriverTerm</c>,
	    <c>ErlDriverBinary</c>, and <c>ErlDriverPort</c> in the
	    <c>erl_driver(3)</c> documentation have been replaced
	    with the correct data types <c>ErlDrvTermData</c>,
	    <c>ErlDrvBinary</c>, and <c>ErlDrvPort</c>.</p>
          <p>
	    For more information see the <c>erl_driver(3)</c>
	    documentation.</p>
          <p>
	    Own Id: OTP-6823</p>
        </item>
        <item>
          <p>
	    Miscellaneous improvements of the erts internal thread
	    library.</p>
          <p>
	    It now support optimized atomic operations and spin-locks
	    on windows.</p>
          <p>
	    Fall-backs based on mutexes and/or spin-locks for missing
	    optimized atomic operations, spin-locks, or rwlocks has
	    been implemented. This makes it possible to compile the
	    runtime system with SMP support on a lot more platforms.</p>
          <p>
	    Default stack size on OpenBSD has been increased to 256
	    kilo-words.</p>
          <p>
	    Own Id: OTP-6831 Aux Id: OTP-6560 </p>
        </item>
        <item>
	    <p>Many bit syntax operations, both construction and
	    matching, are faster. For further information, see the
	    Efficiency Guide.</p>
          <p>
	    Own Id: OTP-6838</p>
        </item>
        <item>
	    <p>Literal lists, tuples, and binaries are no longer
	    constructed at run-time as they used to be, but are
	    stored in a per-module constant pool. Literals that are
	    used more than once are stored only once.</p>
	    <p>This is not a change to the language, only in the
	    details of its implementation. Therefore, the
	    implications of this change is described in the
	    Efficiency Guide.</p>
	    <p>Example 1: In the expression <c>element(BitNum-1,
	    {1,2,4,8,16,32,64,128})</c>, the tuple used to be
	    constructed every time the expression was executed, which
	    could be detrimental to performance in two ways if the
	    expression was executed in a loop: the time to build the
	    tuple itself and the time spent in garbage collections
	    because the heap filled up with garbage faster.</p>
	    <p>Example 2: Literal strings, such as <c>"abc"</c>, used
	    to be stored in the compiled code compactly as a byte
	    string and expanded to a list at run-time. Now all
	    strings will be stored expanded to lists (such as
	    <c>[$a,$b,$c]</c>) in the constant pool. That means that
	    the string will be faster to use at run-time, but that it
	    will require more space even when not used. If space is
	    an issue, you might want to use binary literals (that is,
	    <c>&lt;&lt;"abc"&gt;&gt;</c>) instead of string literals for
	    infrequently used long strings (such as error
	    messages).</p>
          <p>
	    Own Id: OTP-6850</p>
        </item>
        <item>
	    <p>The Erlang driver API has been extended with a
	    portable POSIX thread like API for multi-threading. The
	    Erlang driver thread API provides:</p> <list>
	    <item>Threads</item> <item>Mutexes</item> <item>Condition
	    variables</item> <item>Read/Write locks</item>
	    <item>Thread specific data</item> </list> <p>For more
	    information see the <c>erl_driver(3)</c>
	    documentation.</p>
          <p>
	    Own Id: OTP-6857</p>
        </item>
        <item>
          <p>
	    Recursive calls now usually consume less stack than in
	    R11B. See the Efficiency Guide.</p>
          <p>
	    Own Id: OTP-6862 Aux Id: seq10746 </p>
        </item>
        <item>
          <p>
	    The deprecated BIFs <c>erlang:old_binary_to_term/1</c>
	    and <c>erlang:info/1</c> have been removed.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-6876</p>
        </item>
        <item>
          <p>
	    Calls to driver call-backs triggered by external events
	    are now scheduled and interleaved with execution of
	    Erlang processes also on the runtime system without SMP
	    support.</p>
          <p>
	    Own Id: OTP-6878</p>
        </item>
        <item>
          <p>
	    Faster arithmetic of integers of more than 27 bits signed
	    (or 60 bits signed on an 64-bit CPU), and also faster
	    integer multiplication. (Thanks to Tony Rogvall.)</p>
          <p>
	    Own Id: OTP-6891</p>
        </item>
        <item>
	    <p>Significant improvements of the <c>process_info</c>
	    BIFs:</p> <list> <item> <c>process_info/2</c> can now be
	    called with a list of items as second argument in order
	    to atomically retrieve information about multiple items.
	    </item> <item> <c>process_info/[1,2]</c> has been
	    optimized in the runtime system with SMP support. The
	    whole scheduler could previously be blocked for a
	    significant period of time in <c>process_info/[1,2]</c>
	    waiting for a lock on the process being inspected. The
	    Erlang process calling <c>process_info/[1,2]</c> can
	    still be blocked for a significant period of time waiting
	    for the lock, but the scheduler will now be able to run
	    other processes while the process calling
	    <c>process_info/[1,2]</c> waits for the lock. </item>
	    <item> <c>process_info/2</c> now accept a few more items
	    than before. </item> <item> The documentation of
	    <c>process_info/[1,2]</c> has been improved. </item>
	    </list> <p>For more information see the <c>erlang(3)</c>
	    documentation.</p>
          <p>
	    Own Id: OTP-6899</p>
        </item>
        <item>
          <p>
	    <c>open_port({}, [])</c> could crash the emulator.
	    (Thanks to Matthew Dempsky.)</p>
          <p>
	    Own Id: OTP-6901</p>
        </item>
        <item>
	    <p>Two new guard BIFs have been introduced as a
	    recommended replacement for <c>size/1</c>. (The
	    <c>size/1</c> BIF will be removed no earlier than in
	    R14B.) The BIFs are <c>tuple_size/1</c> to calculate the
	    size of a tuple and <c>byte_size/1</c> to calculate the
	    number of bytes needed for the contents of the binary or
	    bitstring (rounded up to the nearest number of bytes if
	    necessary).</p>
	    <p>There is also a new <c>bit_size/1</c> BIF that returns
	    the exact number of bits that a binary or bitstring
	    contains.</p>
          <p>
	    Own Id: OTP-6902</p>
        </item>
        <item>
	    <p>The <c>ets:fixtable/2</c> function, which has been
	    deprecated for several releases, has been removed.</p>
	    <p>The <c>ets:info/1</c> function has been reimplemented
	    as a BIF, which guarantees that information returned is
	    consistent.</p>
	    <p>The <c>ets:info/2</c> function now fails with reason
	    <c>badarg</c> if the second argument is invalid.
	    (Dialyzer can be used to find buggy code where the second
	    argument is misspelled.)</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-6906</p>
        </item>
        <item>
          <p>
	    As the linux kernel may generate a minor fault when
	    tracing with CPU timestamps, and there exists no patch to
	    the Linux kernel that fixes the problem, cpu timestamps
	    are disabled on Linux for now.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-6922</p>
        </item>
        <item>
	    <p>The functions io:columns/0, io:columns/1, io:rows/0
	    and io:rows/1 are added to allow the user to get
	    information about the terminal geometry. The shell takes
	    some advantage of this when formatting output. For
	    regular files and other io-devices where height and width
	    are not applicable, the functions return
	    {error,enotsup}.</p>
	    <p>Potential incompatibility: If one has written a custom
	    io-handler, the handler has to either return an error or
	    take care of io-requests regarding terminal height and
	    width. Usually that is no problem as io-handlers, as a
	    rule of thumb, should give an error reply when receiving
	    unknown io-requests, instead of crashing.</p>
          <p>
	    *** POTENTIAL INCOMPATIBILITY ***</p>
          <p>
	    Own Id: OTP-6933</p>
        </item>
        <item>
          <p>
	    <c>driver_caller()</c> can now also be used from the
	    <c>start</c> callback of a driver.</p>
          <p>
	    Own Id: OTP-6951</p>
        </item>
        <item>
          <p>
	    The emulator can now be compiled for 64bit intel, as well
	    as a 32bit universal binary on darwin/MacOSX 10.4 and
	    10.5.</p>
          <p>
	    Own Id: OTP-6961</p>
        </item>
        <item>
          <p>
	    If <c>open_port</c> fails because all available ports are
	    already in use, it will now throw a <c>system_limit</c>
	    exception instead of an <c>enfile</c> exception.
	    (<c>enfile</c> might still be thrown if the operating
	    system would return ENFILE.)</p>
          <p>
	    Own Id: OTP-6968</p>
        </item>
        <item>
          <p>
	    The <c>spawn_monitor/1</c> and <c>spawn_monitor/3</c> BIFs
	    are now auto-imported (i.e. they no longer need an
	    <c>erlang:</c> prefix).</p>
          <p>
	    Own Id: OTP-6975</p>
        </item>
        <item>
          <p>
	    On Windows, the werl window now handles resize, so that
	    the whole window can be utilized. Text selection is also
	    updated to be line oriented instead of rectangle oriented
	    as in earlier versions.</p>
          <p>
	    Own Id: OTP-6994 Aux Id: OTP-6933 </p>
        </item>
        <item>
          <p>
	    Kqueue support (kernel-poll) has been enabled on FreeBSD.
	    The problem with kqueue not detecting writes on a pipe on
	    FreeBSD was actually not a kqueue issue, but a writev on
	    pipes issue. Neither poll(), nor select() detected the
	    write when the bug hit. NetBSD and DragonFlyBSD probably
	    have or have had the same bug. This bug should have been
	    fixed in FreeBSD 6.3 and FreeBSD 7.0 thanks to
	    Jean-Sebastien Pedron.</p>
          <p>
	    Own Id: OTP-7001</p>
        </item>
      </list>
    </section>

</section>


<section><title>Erts 5.5.5.5</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Hanging writes on temporarily unavailable NFS
	    filesystems could cause the execution of (not file
	    related) erlang code to get blocked even though I/O
	    threads were used. This is now corrected.</p>
          <p>
	    Own Id: OTP-6907 Aux Id: seq10771 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.5.5.4</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    Data passed to a driver via <c>erlang:port_call</c> could
	    be corrupted when the runtime system with SMP support was
	    used. (Thanks to YAMASHINA Hio.)</p>
          <p>
	    Own Id: OTP-6879</p>
        </item>
        <item>
          <p>
	    In the SMP emulator, if several processes called
	    ets:update_counter/3 (even for different tables) when the
	    counter values exceeded 27 bits, the counter values could
	    be corrupted or the emulator could crash.</p>
          <p>
	    Own Id: OTP-6880 Aux Id: seq10760 </p>
        </item>
      </list>
    </section>

</section>


<section><title>Erts 5.5.5.3</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
	    <p>Creating a named table using <c>ets:new/2</c> or
	    renaming a named table using <c>ets:rename/2</c> could in
	    rare circumstances succeed, meaning that there would be
	    two or more tables with the same name. Now such call will
	    fail with a <c>badarg</c> exception as it is supposed to
	    do.</p>
	    <p><c>ets:delete/1</c> used on a named table now removes
	    the name immediately so that a new table with the same
	    name can be created.</p>
	    <p>Turning on call trace on the internal BIF that
	    implements <c>ets:delete/1</c> would crash the
	    emulator.</p>
	    <p>SMP emulator only: Using <c>ets:rename/2</c> on a
	    table that <c>ets:safe_fixtable/2</c> has been used on
	    could cause an emulator crash or undefined behaviour
	    because of a missing lock.</p>
          <p>
	    Own Id: OTP-6872 Aux Id: seq10756, seq10757 </p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.5.5.2</title>

    <section><title>Known Bugs and Problems</title>
      <list>
        <item>
          <p>
	    ets:select/3 on ordered_set and with a chunksize a
	    multiple of 1000 gave all elements instead of just 1000.
	    Also ets:slot/2 on ordered set could give unexpected
	    results on SMP emulator. Both problems are corrected.</p>
          <p>
	    Own Id: OTP-6842</p>
        </item>
      </list>
    </section>

</section>

<section><title>Erts 5.5.5.1</title>

    <section><title>Fixed Bugs and Malfunctions</title>
      <list>
        <item>
          <p>
	    All exported functions in gzio.c have now been renamed to
	    avoid conflict with drivers that are indirectly linked
	    with an external zlib library.</p>
          <p>
	    Own Id: OTP-6816 Aux Id: OTP-6591 </p>
        </item>
        <item>
          <p>
	    Calling binary_to_term/1 with certain invalid binaries
	    would crash the emulator.</p>
          <p>
	    Own Id: OTP-6817</p>
        </item>
      </list>
    </section>


    <section><title>Improvements and New Features</title>
      <list>
        <item>
          <p>
	    Restored speed of bit-syntax matching of 32 bits
	    integers.</p>
          <p>
	    Own Id: OTP-6789 Aux Id: seq10688 </p>
        </item>
      </list>
    </section>

</section>

  <section>
    <title>Erts 5.5.5</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>The functions in gzio.c have been renamed to avoid
            conflict with drivers that indirectly linked with an
            external zlib library.</p>
          <p>Own Id: OTP-6591</p>
        </item>
        <item>
          <p>The emulator without SMP support dumped core if an
            async-thread finished a job after the emulator had begun
            writing an <c><![CDATA[erl_crash.dump]]></c>. </p>
          <p>Own Id: OTP-6685</p>
        </item>
        <item>
          <p>In bit syntax matching, integer fields with greater
            size than 16Mb would fail to match. (Thanks to Bertil
            Karlsson and Francesco Pierfederici.)</p>
          <p>Matching out a 32-bit integer not aligned on a byte
            boundary from a binary could cause an heap overflow (and
            subsequent termination of the emulator).</p>
          <p>A module that contained bit syntax construction with a
            literal field size greater than 16Mb would fail to
            load.</p>
          <p>Several other similar bugs having to do with huge
            field sizes were eliminated.</p>
          <p>Attempting to construct a binary longer than 536870911
            bytes will now fail with a <c><![CDATA[system_limit]]></c> exception
            (rather than fail in mysterious ways or construct an
            binary with incorrect contents). Similarly, attempting
            to match a binary longer than 536870911 bytes will now
            fail (instead of producing an incorrect result). This
            limitation has been documented in the Efficiency Guide.
            (The limit is in the 32-bit emulator; use the 64-bit
            emulator if you need to handle larger binaries than
            536870911.)</p>
          <p>Own Id: OTP-6686</p>
        </item>
        <item>
          <p>Bugs in rem and div of very large numbers are corrected.</p>
          <p>Own Id: OTP-6692</p>
        </item>
        <item>
          <p><c><![CDATA[erlang:system_info({allocator, Alloc})]]></c> didn't
            allocate enough heap when a bignum was part of the result
            which could cause an emulator crash.</p>
          <p>Own Id: OTP-6693</p>
        </item>
        <item>
          <p>It was previously not possible to pass
            <c><![CDATA[erts_alloc]]></c> the same configuration via the
            command-line, as used by default. </p>
          <p>A <c><![CDATA[+M*]]></c> command-line argument that configure a
            size of some sort can now be passed a value that equals
            the size of the address space. The value used, in this
            case, will be <c><![CDATA["the size of the address space" - 1]]></c>.</p>
          <p>Own Id: OTP-6699</p>
        </item>
        <item>
          <p><c><![CDATA[SysIOVec* driver_peekq(ErlDrvPort port, int *vlen)]]></c> did not update <c><![CDATA[*vlen]]></c> if <c><![CDATA[port]]></c> was
            invalid. <c><![CDATA[*vlen]]></c> is now set to <c><![CDATA[-1]]></c> if the
            <c><![CDATA[port]]></c> is invalid.</p>
          <p>The <c><![CDATA[efile]]></c> driver
            expects <c><![CDATA[*vlen]]></c> to be updated also when the
            <c><![CDATA[port]]></c> is invalid. This situation occurs seldom, but
            when the runtime system has async-threads enabled and
            ports are killed it can. When it occurred the runtime
            system crashed.</p>
          <p>Own Id: OTP-6729</p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>For scripts written using <c><![CDATA[escript]]></c>, there is a new
            function <c><![CDATA[escript:script_name/0]]></c>, which can be used
            to retrieve the pathame of the script. The documentation
            has been clarified regarding pre-defined macros such as
            ?MODULE and the module name.</p>
          <p>Own Id: OTP-6593</p>
        </item>
        <item>
          <p>The section Guards in the chapter The Abstract Format
            of the ERTS User's Guide has been updated.</p>
          <p>Own Id: OTP-6600</p>
        </item>
        <item>
          <p>Corrected protocol layer flue for socket options
            SO_LINGER, SO_SNDBUF and SO_RCVBUF, for SCTP.</p>
          <p>Own Id: OTP-6625 Aux Id: OTP-6336 </p>
        </item>
        <item>
          <p>The behaviour of the inet option {active,once} on peer
            close is improved and documented.</p>
          <p>Own Id: OTP-6681</p>
        </item>
        <item>
          <p>The inet option send_timeout for connection oriented
            sockets is added to allow for timeouts in communicating
            send requests to the underlying TCP stack.</p>
          <p>Own Id: OTP-6684 Aux Id: seq10637 OTP-6681 </p>
        </item>
        <item>
          <p>The command line flag <c><![CDATA[-args_file FileName]]></c>, and
            the environment variables <c><![CDATA[ERL_AFLAGS]]></c>, and
            <c><![CDATA[ERL_ZFLAGS]]></c> for the <c><![CDATA[erl]]></c> command have been
            added. For more information see the <c><![CDATA[erl(1)]]></c>
            documentation.</p>
          <p>Own Id: OTP-6697</p>
        </item>
        <item>
          <p>The <c><![CDATA[is_constant/1]]></c> type test has been deprecated.
            <c><![CDATA[is_constant/1]]></c> is improperly named and almost
            entirely undocumented.</p>
          <p>Own Id: OTP-6731</p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>Erts 5.5.4.3</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p><c><![CDATA[process_flag(trap_exit, Bad)]]></c> where <c><![CDATA[Bad]]></c>
            was a term not equal to <c><![CDATA[true]]></c> or <c><![CDATA[false]]></c>,
            didn't fail with <c><![CDATA[badarg]]></c> as it should; instead, the
            failure was silently ignored. This bug was introduced in
            <c><![CDATA[erts-5.5.2]]></c>.</p>
          <p>Own Id: OTP-6627 Aux Id: OTP-6160 </p>
        </item>
        <item>
          <p>The minimum and default stack size for async-threads has
            been increased to 16 kilowords. This since the previous
            minimum and default stack size of 8 kilowords proved to
            be too small (introduced in <c><![CDATA[erts-5.5.4.2]]></c>).</p>
          <p>Own Id: OTP-6628 Aux Id: OTP-6580, Seq10633 </p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>process_flag/2 accepts the new flag <c><![CDATA[sensitive]]></c>.</p>
          <p>Own Id: OTP-6592 Aux Id: seq10555 </p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>Erts 5.5.4.2</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>When a port steals control over a file descriptor from
            another port, the stealing port tests if the other port
            is alive. This in order to be able to give an accurate
            error message. In the runtime system with SMP support,
            this test was done without appropriate locks held. This
            could in worst case lead to an erroneous error message;
            therefore, this bug is to be considered harmless.</p>
          <p>Own Id: OTP-6602</p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>The default stack size for threads in the async-thread
            pool has been shrunk to 8 kilowords, i.e., 32 KB on
            32-bit architectures. This small default size has been
            chosen since the amount of async-threads might be quite
            large. The default stack size is enough for drivers
            delivered with Erlang/OTP, but might not be sufficiently
            large for other dynamically linked in drivers that use
            the <c><![CDATA[driver_async()]]></c> functionality. A suggested
            stack size for threads in the async-thread pool can be
            configured via the <c><![CDATA[+a]]></c> command line argument of
            <c><![CDATA[erl(1)]]></c>.</p>
          <p>*** POTENTIAL INCOMPATIBILITY ***</p>
          <p>Own Id: OTP-6580</p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>Erts 5.5.4.1</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>Setting the time on the system while using heart on a
            linux machine where the emulator was built with
            clock_gettime support (default from Linux 2.6/erts-5.5.4
            and upwards), could make the heart command fire. This was
            due to bug in the heart executable which is now
            corrected.</p>
          <p>Own Id: OTP-6598 Aux Id: seq10614 </p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>Erts 5.5.4</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>Corrected misspelling of '<c><![CDATA[-pz]]></c>' in the help text
            for <c><![CDATA[erlc]]></c>. (Thanks to Ulf Wiger.)</p>
          <p>Own Id: OTP-6433</p>
        </item>
        <item>
          <p>The MD5 calculation of a BEAM file done by
            <c><![CDATA[code:module_md5/1]]></c>, <c><![CDATA[beam_lib:md5/1]]></c>, and by
            the compiler for the default value of the <c><![CDATA[vsn]]></c>
            attribute have all been changed so that its result will
            be the same on all platforms; modules containing funs
            could get different MD5s on different platforms.</p>
          <p>Own Id: OTP-6459</p>
        </item>
        <item>
          <p>The emulator could dump core while writing an
            <c><![CDATA[erl_crash.dump]]></c> file if there were funs with a
            large terms in its environment. Since there is no way to
            inspect a fun's environment in the crashdump_viewer
            application anyway, a variables in the environment are
            now set to [] before dumping the fun. (Thanks to
            Jean-Sebastien Pedron.)</p>
          <p>Own Id: OTP-6504</p>
        </item>
        <item>
          <p><c><![CDATA[{Port, {exit_status, S}}]]></c> messages from ports
            opened with the <c><![CDATA[exit_status]]></c> option could under
            rare circumstances be delayed. This bug was present on
            Erlang runtime systems without SMP support on all unix
            operating systems other than SunOS.</p>
          <p>Own Id: OTP-6528</p>
        </item>
        <item>
          <p>A bug in linuxthreads could cause the emulator to dump
            core when dlerror() was called before the first call to
            dlopen(). As a workaround the emulator always makes a
            call to dlopen() on initialization when linuxthreads is
            used as thread library.</p>
          <p>Own Id: OTP-6530</p>
        </item>
        <item>
          <p>file:sync/1 did not do anything on Windows. Now it calls
            the system function for flushing buffers
            (FlushFileBuffers()). (Thanks to Matthew Sackman.)</p>
          <p>Own Id: OTP-6531</p>
        </item>
        <item>
          <p><c><![CDATA[open_port/2]]></c> could on the runtime system with SMP
            support fail with the wrong exit reason when a port
            couldn't be created. When this happened the exit reason
            was typically <c><![CDATA[eintr]]></c>, or <c><![CDATA[ebusy]]></c> instead of
            <c><![CDATA[eagain]]></c>.</p>
          <p>Own Id: OTP-6536</p>
        </item>
        <item>
          <p>The file driver (efile_drv) did not flush data written
            using the option 'delayed_write' after the set timeout
            time, rather at the next file operation. This bug has now
            been corrected.</p>
          <p>Own Id: OTP-6538</p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>An interface towards the SCTP Socket API Extensions
            has been implemented.It is an Open Source patch courtesy
            of Serge Aleynikov and Leonid Timochouk. The Erlang code
            parts has been adapted by the OTP team, changing the
            Erlang API somewhat.</p>
          <p>The Erlang interface consists of the module
            <c><![CDATA[gen_sctp]]></c> and an include file
            <c><![CDATA[-include_lib("kernel/include/inet_sctp.hrl").]]></c> for
            option record definitions. The <c><![CDATA[gen_sctp]]></c> module is
            documented.</p>
          <p>The delivered Open Source patch, before the OTP team
            rewrites, was written according to
            http://tools.ietf.org/html/draft-ietf-tsvwg-sctpsocket-13
            and was claimed to work fine, tested on Linux Fedora Core
            5.0 (kernel 2.6.15-2054 or later) and on Solaris 10 and
            11. The OTP team rewrites used the same standard document
            but might have accidentally broken some functionality. If
            so it will soon be patched to working state. The tricky
            parts in C and the general design has essentially not
            changed. During the rewrites the code was hand tested on
            SuSE Linux Enterprise Server 10, and briefly on Solaris
            10. Feedbach on code and docs is very much
            appreciated.</p>
          <p>The SCTP interface is in beta state. It has only been
            hand tested and has no automatic test suites in OPT
            meaning everything is most certainly not tested. Socket
            active mode is broken. IPv6 is not tested. The
            documentation has been reworked due to the API changes,
            but has not been proofread after this.</p>
          <p>Thank you from the OTP team to Serge Aleynikov and
            Leonid Timochouk for a valuable contribution. We hope we
            have not messed it up too much.</p>
          <p>Own Id: OTP-6336</p>
        </item>
        <item>
          <p>A <c><![CDATA[{minor_version,Version}]]></c> option is now recognized
            by <c><![CDATA[term_to_binary/2]]></c>. {minor_version,1} will cause
            floats to be encoded in an exact and more space-efficient
            way compared to the previous encoding.</p>
          <p>Own Id: OTP-6434</p>
        </item>
        <item>
          <p>There is a new <c><![CDATA[escript]]></c> program that can be used
            for writing scripts in Erlang. Erlang scripts don't need
            to be compiled and any arguments can be passed to them
            without risk that they are interpreted by the Erlang
            system.</p>
          <p>Own Id: OTP-6505</p>
        </item>
        <item>
          <p>Setting and getting socket options in a "raw" fashion is
            now allowed. Using this feature will inevitably produce
            non portable code, but will allow setting ang getting
            arbitrary uncommon options on TCP stacks that do have
            them.</p>
          <p>Own Id: OTP-6519</p>
        </item>
        <item>
          <p>Miscellaneous signal handling improvements on the Erlang
            runtime system with SMP support.</p>
          <p>The fallback implementation of spin locks and atomic
            operations are now implemented using pthread spin locks
            when pthread spin locks are found on the system.</p>
          <p>The Erlang runtime system with SMP support can now run on
            Linux systems that has Linuxthreads instead of NPTL
            (Native POSIX Thread Library). Note that the SMP support
            hasn't been as thoroughly tested with Linuxthreads as
            with NPTL. A runtime system with SMP support will
            therefore not be built by default on Linux when NPTL
            isn't found. In order to force a build of the runtime
            system with SMP support, pass <c><![CDATA[--enable-smp-support]]></c>
            to <c><![CDATA[configure]]></c> when building OTP.</p>
          <p>Own Id: OTP-6525</p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>Erts 5.5.3.1</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p><c><![CDATA[erlang:system_flag(multi_scheduling, block)]]></c> could
            cause the emulator with SMP support to deadlock.</p>
          <p>Own Id: OTP-6431 Aux Id: OTP-6403 </p>
        </item>
        <item>
          <p>The runtime system with SMP support failed to call the
            driver timeout callback of ports in state closing. This
            could cause ports to fail flushing their I/O queues.</p>
          <p>Own Id: OTP-6432</p>
        </item>
        <item>
          <p>The <c><![CDATA[{Port, closed}]]></c> message from a closed port
            could arrive at the port owner before <c><![CDATA[Port]]></c> had
            been removed from the result of <c><![CDATA[erlang:ports/0]]></c> in
            the runtime system with SMP support.</p>
          <p>Own Id: OTP-6437</p>
        </item>
        <item>
          <p>The async id of async jobs created via
            <c><![CDATA[driver_async]]></c> wasn't created in a thread safe
            manner in the runtime system with SMP support. This could
            in worst case cause <c><![CDATA[driver_async_cancel()]]></c> to
            cancel another async job than intended.</p>
          <p>Own Id: OTP-6438</p>
        </item>
        <item>
          <p>Under rare circumstances a terminating connection between
            two nodes could cause an instantaneous reconnect between
            the two nodes to fail on the runtime system with SMP
            support.</p>
          <p>Own Id: OTP-6447</p>
        </item>
        <item>
          <p>In the documentation of the driver entry field
            <c><![CDATA[extended_marker]]></c> of erts version 5.5.3
            (<c><![CDATA[driver_entry(3)]]></c>), the following is stated: "The
            following fields are ignored if this field is equal to
            <c><![CDATA[0]]></c>". This is a documentation bug and has been
            changed to: "If this field is equal to <c><![CDATA[0]]></c>, all the
            fields following this field also <em>have</em> to be
            <c><![CDATA[0]]></c>, or <c><![CDATA[NULL]]></c> in case it is a pointer field".</p>
          <p>The runtime check for detection of old incompatible
            drivers made when loading drivers has been improved. The
            emulator can, however, not make sure that a driver that
            doesn't use the extended driver interface isn't
            incompatible. Therefore, when loading a driver that
            doesn't use the extended driver interface, there is a
            risk that it will be loaded also when the driver is
            incompatible. When the driver use the extended driver
            interface, the emulator can verify that it isn't of an
            incompatible driver version. You are therefore advised to
            use the extended driver interface.</p>
          <p>For more information see the <c><![CDATA[erl_driver(3)]]></c> and
            <c><![CDATA[driver_entry(3)]]></c> documentation.</p>
          <p>Own Id: OTP-6452 Aux Id: OTP-6330 </p>
        </item>
        <item>
          <p>When terminating ports on the runtime system with SMP
            support, removal of links to processes was done without
            locking the link lock on processes. This could cause an
            emulator crash.</p>
          <p>Own Id: OTP-6475</p>
        </item>
        <item>
          <p>The emulator with SMP support could crash when a port
            flushed its I/O queue by calling <c><![CDATA[driver_async()]]></c>
            from the timeout driver callback.</p>
          <p>Own Id: OTP-6479</p>
        </item>
        <item>
          <p>Large exit reasons could under rare circumstances cause
            the runtime system with SMP support to crash.</p>
          <p>Own Id: OTP-6521</p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>Faster system calls for keeping the time accurate are
            used on newer Linux kernels, which can result in a
            significant speed-up of the emulator on those systems.</p>
          <p>Own Id: OTP-6430</p>
        </item>
        <item>
          <p>Added number of async threads and number of scheduler
            threads to the system information that can be retrieved
            via <c><![CDATA[driver_system_info()]]></c>. For more information see
            the <c><![CDATA[erl_driver(3)]]></c> documentation.</p>
          <p>Own Id: OTP-6440</p>
        </item>
        <item>
          <p>When <c><![CDATA[SIGUSR1]]></c> is received by the runtime system
            with SMP support, the <c><![CDATA[erl_crash.dump]]></c> is now
            written by a special thread, instead of as before
            directly from the signal handler.</p>
          <p>Own Id: OTP-6465</p>
        </item>
        <item>
          <p>term_to_binary/2 with compression is now faster.</p>
          <p></p>
          <p>term_to_binary/2 now accepts the option
            '<c><![CDATA[{compressed,Level}]]></c>' for specifying the
            compression level. <c><![CDATA[Level]]></c> must be in the range 0
            (no compression) through 9 (highest compression level).
            Default is 6.</p>
          <p>Future compatibility bugfix: binary_to_term/1 did not
            handle the <c><![CDATA[Uniq]]></c> and <c><![CDATA[Index]]></c> fields
            correctly.</p>
          <p>Own Id: OTP-6494</p>
        </item>
        <item>
          <p>Removed unnecessary reallocation when initializing
            kernel-poll set.</p>
          <p>Own Id: OTP-6516</p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>Erts 5.5.3</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>Node and fun table entries could under rare circumstances
            be deallocated multiple times on the emulator with SMP
            support.</p>
          <p>Own Id: OTP-6369</p>
        </item>
        <item>
          <p>epoll_wait() can repeat entries for the same file
            descriptor in the result array. This could cause the
            ready_input, ready_output, or event callbacks of a driver
            to unintentionally be called multiple times. We have only
            noted repeated entries when an error condition has
            occurred on the file descriptor. In this case, the
            repeated entries should normally not be a problem for the
            driver since it should detect the error and de-select the
            file descriptor. Therefore this bug should be considered
            harmless. The emulator now coalesce repeated entries into
            one.</p>
          <p>You are only affected by this bug if you are using
            erts-5.5.2.* and the kernel-poll feature on linux.</p>
          <p>Own Id: OTP-6376 Aux Id: OTP-6222 </p>
        </item>
        <item>
          <p>If a process that was waiting in gen_tcp:accept/1 was
            killed, calling gen_tcp:accept/1 again on the same listen
            socket would fail with '<c><![CDATA[{error,einval}]]></c>'.</p>
          <p>Own Id: OTP-6381 Aux Id: seq10535 </p>
        </item>
        <item>
          <p>The emulator failed to start on Solaris 10 when
            kernel-poll support was enabled and the maximum number of
            filedescriptors configured was less than or equal to 256.</p>
          <p>Own Id: OTP-6384 Aux Id: OTP-6222 </p>
        </item>
        <item>
          <p>The R10B compiler could generate unsafe
            <c><![CDATA[bs_save/bs_restore]]></c> instructions that could cause
            memory corruption. (The R11B compiler does not have that
            problem.) The erlang emulator will now refuse to load
            R10B-compiled modules that contain such unsafe
            <c><![CDATA[bs_save/bs_restore]]></c> instructions. In addition, the
            beam_validator module in the compiler will also reject
            such instructions (in case it is used to validate R10B
            code). (Thanks to Matthew Reilly.)</p>
          <p>Own Id: OTP-6386</p>
        </item>
        <item>
          <p>Process and port timers could fail to work properly on
            the runtime system with SMP support. Many thanks to
            Dmitriy Kargapolov and Serge Aleynikov who tracked down
            this bug.</p>
          <p>Own Id: OTP-6387</p>
        </item>
        <item>
          <p>Bit syntax code compiled by an R10B compiler that matched
            out a floating point number would not properly check that
            the floating point number was valid; if the float was,
            for instance, NaN the emulator could crash.</p>
          <p>Own Id: OTP-6395</p>
        </item>
        <item>
          <p>statistics(runtime) on Windows used to return the elapsed
            system time for the process, instead of the user time.
            Corrected. (Thanks to Robert Virding.)</p>
          <p>Own Id: OTP-6407</p>
        </item>
        <item>
          <p>A loadable driver (loaded by erl_ddll) which used
            driver_async() would cause the emulator to crash. (Thanks
            to Dmitriy Kargapolov.)</p>
          <p>Own Id: OTP-6410</p>
        </item>
        <item>
          <p>Under rare circumstances the emulator on unix platforms
            could fail to terminate the Erlang port corresponding to
            a port program opened with the <c><![CDATA[exit_status]]></c> option.</p>
          <p>Own Id: OTP-6411</p>
        </item>
        <item>
          <p>A link removed via <c><![CDATA[unlink/1]]></c> could under rare
            circumstances transfer exit signals for a short period of
            time after the call to <c><![CDATA[unlink/1]]></c> had returned when
            the runtime system with SMP support was used.</p>
          <p>Own Id: OTP-6425 Aux Id: OTP-6160 </p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>In the runtime system with SMP support, ports are now
            being scheduled on the scheduler threads interleaved with
            processes instead of being run in a separate I/O thread.</p>
          <p>Own Id: OTP-6262</p>
        </item>
        <item>
          <p>More interfaces are added in erl_ddll, to support
            different usage scenarios.</p>
          <p>Own Id: OTP-6307 Aux Id: OTP-6234 </p>
        </item>
        <item>
          <p>In the runtime system with SMP support, the global
            I/O lock has been replaced with a more fine grained port
            locking scheme. Port locking is either done on driver
            level, i.e., all ports executing the same driver share a
            lock, or on port level, i.e., each port has its own lock.
            Currently the inet driver, the efile driver, and the
            spawn driver use port level locking and all other
            statically linked in drivers use driver level locking. By
            default dynamically linked in drivers will use locking on
            driver level. For more information on how to enable port
            level locking see the <c><![CDATA[erl_driver(3)]]></c> and the
            <c><![CDATA[driver_entry(3)]]></c> man pages. </p>
          <p>As of erts
            version 5.5.3 the driver interface has been extended. The
            extended interface introduce version management, the
            possibility to pass capability flags to the runtime
            system at driver initialization, and some new driver API
            functions. For example, the <c><![CDATA[driver_system_info()]]></c>
            function which can be used to determine if the driver is
            run in a runtime system with SMP support or not. The
            extended interface doesn't have to be used, <em>but</em>
            dynamically linked in driver <em>have</em> to be
            recompiled. For information see the <c><![CDATA[erl_driver(3)]]></c>
            and the <c><![CDATA[driver_entry(3)]]></c> man pages. </p>
          <p><em>NOTE:</em> Dynamically linked in drivers
            <em>have</em> to be recompiled. </p>
          <p>*** POTENTIAL INCOMPATIBILITY ***</p>
          <p>Own Id: OTP-6330 Aux Id: OTP-6262 </p>
        </item>
        <item>
          <p>A test and debug feature which modifies the timing of the
            runtime system has been added. For more information, see
            documentation of the <c><![CDATA[+T<Level>]]></c> command line
            argument of <c><![CDATA[erl(1)]]></c>.</p>
          <p>Own Id: OTP-6382</p>
        </item>
        <item>
          <p>The version of zlib (http://zlib.net) linked into
            run-time system has been updated to version 1.2.3.</p>
          <p>Own Id: OTP-6394</p>
        </item>
        <item>
          <p>The <c><![CDATA[erlc]]></c> program now passes on the <c><![CDATA[-smp]]></c>
            and <c><![CDATA[-hybrid]]></c> options to the Erlang emulator it
            starts. This is mainly useful for compiling native code,
            because native code must be compiled with same type of
            run-time system as in which it will be run.</p>
          <p>If the <c><![CDATA[-s]]></c> option is given, <c><![CDATA[erlc]]></c> now
            prints a warning that it is deprecated and that it will
            be removed in R12B.</p>
          <p>Own Id: OTP-6398</p>
        </item>
        <item>
          <p>The <c><![CDATA[schedulers]]></c> option of
            <c><![CDATA[erlang:system_flag/2]]></c> has been removed, i.e., the
            number of scheduler threads cannot be changed after
            emulator boot time any more.</p>
          <p>A <c><![CDATA[multi_scheduling]]></c> option has been added to
            <c><![CDATA[erlang:system_flag/2]]></c>. This option can be used for
            blocking and unblocking multi-scheduling. For more
            information see the <c><![CDATA[erlang(3)]]></c> documentation.</p>
          <p>Own Id: OTP-6403</p>
        </item>
        <item>
          <p>A port program that had been started with the
            <c><![CDATA[exit_status]]></c> option and closed one of the pipes
            used for communication with the emulator caused the
            emulator to continuously poll for termination of the port
            program. This only became a problem when the emulator
            didn't have other things to do and the port program
            closed a pipe much earlier than it terminated. When the
            emulator had other things to do, such as running Erlang
            processes, the emulator polled for termination in between
            scheduling of processes.</p>
          <p>Now the emulator doesn't poll for termination of the port
            program at all; instead, it waits for the child signal
            from the terminated port program to arrive and then
            schedules the Erlang port for termination.</p>
          <p>The termination of any port programs have also been
            optimized. Previously the termination of any port program
            did always cause a scan of a table of the size equal to
            maximum number of file descriptors. If the maximum number
            of file descriptors was large, this scan could be quite
            expensive. Now the search have been reduced to the set of
            ports started with the <c><![CDATA[exit_status]]></c> option.</p>
          <p>Note, all of the above only applies to Erlang emulators
            on Unix platforms.</p>
          <p>Own Id: OTP-6412 Aux Id: seq10194 </p>
        </item>
        <item>
          <p>* BEAM: added support for floating-point exceptions on
            FreeBSD (32-bit x86)</p>
          <p>* SMP: made locking procedures work even when native
            lock operations aren't implemented</p>
          <p>* SMP: improved timing accuracy in the timer thread
            (if enabled)</p>
          <p>Own Id: OTP-6424</p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>Erts 5.5.2.2</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>A bug in the kernel poll implementation could cause the
            emulator to omit polling for events on file descriptors.
            The bug was only present when using the kernel poll
            implementation based on epoll or kqueue. This bug was
            introduced in erts-5.5.2.</p>
          <p>Own Id: OTP-6344 Aux Id: OTP-6222 </p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>Erts 5.5.2.1</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>The run_erl program now acquires its pseudo-ttys using
            openpty(3), so that it will work on newer Linux
            distributions that don't have the traditional pseudo-tty
            devices in the file system. On platforms that don't have
            openpty(3), run_erl will still search for pseudo-tty
            devices in the file system.</p>
          <p>The run_erl program will now wait using waitpid(3) to
            prevent the program it spawned to become defunct. run_erl
            will also terminate after a delay of 5 seconds (to allow
            any pending output to be written to the log file) if the
            spawned program terminates even if some child of it still
            holds stdin and/or stdout open.</p>
          <p>Own Id: OTP-6225 Aux Id: seq10500 </p>
        </item>
        <item>
          <p>A bug in ordered_set ETS datatyp caused ets:select (and
            match) to return faulty results when the table contained
            process id's from another node.</p>
          <p>Own Id: OTP-6338</p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>Erts 5.5.2</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>erlc: A typo in the help text for '-pa path' was
            corrected.</p>
          <p>Own Id: OTP-6218</p>
        </item>
        <item>
          <p>Failure in port command/control driver callbacks could
            crash the non-SMP emulator. This bug was introduced in
            the 5.5 version of erts.</p>
          <p>Own Id: OTP-6224</p>
        </item>
        <item>
          <p>Erroneous "<c><![CDATA[Input driver gone away without deselecting!]]></c>" error reports could sometimes occur
            when a driver instance terminated in the ready_output()
            callback of the driver. This bug was only present in
            emulators that used poll(). Note, that this bug was
            harmless, the only effect it had was the erroneous error
            report.</p>
          <p>Own Id: OTP-6229 Aux Id: OTP-3993, Seq5266, Seq7247,
            OTP-4307 </p>
        </item>
        <item>
          <p>The emulator could cause a type assertion failure while
            writing an erl_crash.dump, causing the erl_crash.dump to
            be terminated and a core dump generated.</p>
          <p>Own Id: OTP-6235 Aux Id: seq10444 </p>
        </item>
        <item>
          <p>The registered name of a process is now the last
            observable resource removed before links and monitors are
            triggered when a process terminates.</p>
          <p>Previously ets tables were removed after the registered
            name. This could cause problems on the runtime system
            with SMP support for code that expected that ets tables
            owned by a specific process had been removed if the name
            of the process had been removed.</p>
          <p>Own Id: OTP-6237</p>
        </item>
        <item>
          <p>Failure to fork() a new (os) process could cause the
            emulator to deadlock. This bug affect all emulators with
            SMP support, and emulators with async thread support on
            SunOS.</p>
          <p>Own Id: OTP-6241 Aux Id: OTP-3906 </p>
        </item>
        <item>
          <p>Fprof traces could become truncated for the SMP emulator.
            This bug has now been corrected.</p>
          <p>Own Id: OTP-6246</p>
        </item>
        <item>
          <p>The undocumented functions inet:getiflist/0,1
            inet:ifget/2,3 and inet:getif/1 were completely broken on
            Windows. That has been fixed.</p>
          <p>Own Id: OTP-6255</p>
        </item>
        <item>
          <p>Behavior in case of disappeared nodes when using the
            dist_auto_connect once got changed in R11B-1. The
            timeouts regarding normal distributed operations is now
            reverted to the old (pre R11B-1).</p>
          <p>Own Id: OTP-6258 Aux Id: OTP-6200, seq10449 </p>
        </item>
        <item>
          <p>The bsl and bsr operators could cause the emulator to
            crash if given invalid arguments. (Thanks to datacompboy
            and Per Gustafsson.)</p>
          <p>Own Id: OTP-6259</p>
        </item>
        <item>
          <p>driver_cancel_timer() could under certain circumstances
            fail to cancel the timer on the runtime system with SMP
            support.</p>
          <p>Own Id: OTP-6261</p>
        </item>
        <item>
          <p>A call to erlang:system_info(info) could deadlock the
            runtime system with SMP support.</p>
          <p>Own Id: OTP-6268</p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>Exit signals are now truly asynchronous in the runtime
            system with SMP support. This simplifies locking in bifs
            a lot, and makes process termination cheaper.</p>
          <p>Own Id: OTP-6160</p>
        </item>
        <item>
          <p>When tracing on the runtime system with SMP support it
            can be difficult to know when a trace has been delivered
            to the tracer. A new built in function
            <c><![CDATA[erlang:trace_delivered/1]]></c> has been introduced in
            order to make it easier to know when the trace has been
            delivered. See the erlang(3) man page for more
            information.</p>
          <p>Own Id: OTP-6205 Aux Id: OTP-6269 </p>
        </item>
        <item>
          <p>Kernel poll support can now be combined with SMP support.
            Currently the following kernel poll versions exist:
            <c><![CDATA[/dev/poll]]></c>, <c><![CDATA[epoll]]></c>, and <c><![CDATA[kqueue]]></c>. Linux
            <c><![CDATA[kpoll]]></c> has been replaced with <c><![CDATA[epoll]]></c>. Some
            time in the future there will also be a kernel poll
            version using Solaris event ports.</p>
          <p>The "check io" implementation for unix has been
            completely rewritten. The current kernel poll
            implementation reduce the amount of system calls needed
            compared to the old kernel poll implementation.</p>
          <p>When <c><![CDATA[epoll]]></c> or <c><![CDATA[kqueue]]></c> is used either
            <c><![CDATA[poll]]></c> or <c><![CDATA[select]]></c> is used as fallback.
            Previously only <c><![CDATA[poll]]></c> could be used as fallback.
            Since <c><![CDATA[select]]></c> now can be used as fallback, kernel
            poll support is now also available on newer MacOSX. Note
            however, when <c><![CDATA[select]]></c> is used as fallback, the
            maximum number of file descriptors is limited to
            <c><![CDATA[FD_SETSIZE]]></c>. </p>
          <p>Kernel poll support is now enabled by default if
            <c><![CDATA[/dev/poll]]></c>, <c><![CDATA[epoll]]></c>, or <c><![CDATA[kqueue]]></c> is found
            when building OTP, i.e. you do not have to pass the
            <c><![CDATA[--enable-kernel-poll]]></c> argument to <c><![CDATA[configure]]></c>.
            As before, kernel poll is disabled by default in the
            runtime system. In order to enable it, pass the
            <c><![CDATA[+Ktrue]]></c> command line argument to <c><![CDATA[erl]]></c>.</p>
          <p>Note: <c><![CDATA[configure]]></c> will refuse to enable kernel poll
            support on FreeBSD since <c><![CDATA[kqueue]]></c> have problems with
            (at least) pipes on all version of FreeBSD that we have
            tested.</p>
          <p>Own Id: OTP-6222 Aux Id: seq10380 </p>
        </item>
        <item>
          <p>The <c><![CDATA[erl_ddll]]></c> module and the code in the emulator
            have been completely rewritten; several bugs were fixed.</p>
          <p>Own Id: OTP-6234</p>
        </item>
        <item>
          <p>The SMP emulator now avoids locking for the following
            operations (thus making them as fast as in the UP
            emulator): <c><![CDATA[atom_to_list/1]]></c>, atom comparison, atom
            hashing, <c><![CDATA[erlang:apply/3]]></c>.</p>
          <p>Own Id: OTP-6252</p>
        </item>
        <item>
          <p>There are new BIFs <c><![CDATA[erlang:spawn_monitor/1,3]]></c>,
            and the new option <c><![CDATA[monitor]]></c> for
            <c><![CDATA[spawn_opt/2,3,4,5]]></c>.</p>
          <p>The <c><![CDATA[observer_backend]]></c> module has been updated to
            handle the new BIFs.</p>
          <p>Own Id: OTP-6281</p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>Erts 5.5.1.1</title>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>There is now an option read_packets for UDP sockets that
            sets the maximum number of UDP packets that will be read
            for each invocation of the socket driver.</p>
          <p>Own Id: OTP-6249 Aux Id: seq10452 </p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>Erts 5.5.1</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>Complex pattern matching of strings would fail in the 64
            bits emulator because of a bug in the loader. (Thanks to
            Igor Goryachev.)</p>
          <p>Own Id: OTP-6142</p>
        </item>
        <item>
          <p><c><![CDATA[-134217728 div 134217728]]></c> and <c><![CDATA[-134217728 rem 134217728]]></c> would be calculated incorrectly.
            <c><![CDATA[abs(-2147483648)]]></c> could in unlucky circumstances
            cause a heap overflow, as could size(Binary) when size of
            the binary was larger than 128Mb.</p>
          <p>Own Id: OTP-6154</p>
        </item>
        <item>
          <p>erlang:display/1 displayed erroneous values for negative
            integers.</p>
          <p>Big integers (both positive and negative) were previously
            displayed in hexadecimal form while small integers were
            displayed in decimal form. All integers are now displayed
            in decimal form.</p>
          <p>NOTE: erlang:display/1 should only be used for debugging.</p>
          <p>Own Id: OTP-6156</p>
        </item>
        <item>
          <p>A call to erlang:trace/3 with erroneous flags caused the
            SMP emulator to deadlock instead of exiting the calling
            process with badarg.</p>
          <p>Own Id: OTP-6175</p>
        </item>
        <item>
          <p>A bug causing the emulator to hang when exiting a process
            that is exception traced has been fixed.</p>
          <p>Own Id: OTP-6180</p>
        </item>
        <item>
          <p>ets:rename/1 could deadlock, or crash the SMP emulator
            when the table wasn't a named table.</p>
          <p>ets:next/2, and ets:prev/2 could return erroneous results
            on the SMP emulator.</p>
          <p>Own Id: OTP-6198 Aux Id: seq10392, seq10415 </p>
        </item>
        <item>
          <p>A memory allocation bug could cause the SMP emulator to
            crash when a process had executed a <c><![CDATA[receive after]]></c>
            with a larger timeout than 10 minutes.</p>
          <p>Own Id: OTP-6199</p>
        </item>
        <item>
          <p>The runtime system with SMP support did not slowly adjust
            its view of time when the system time suddenly changed.</p>
          <p>Timeouts could sometimes timeout too early on the runtime
            system with SMP support.</p>
          <p>Own Id: OTP-6202</p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>The smp runtime system now automatically detects the
            number of logical processors on MacOSX (darwin) and
            OpenBSD.</p>
          <p>The smp runtime system is now built by default on MacOSX
            (darwin) on x86.</p>
          <p>Own Id: OTP-6119</p>
        </item>
        <item>
          <p>The <c><![CDATA[-smp]]></c> command line argument now take the
            following options: <c><![CDATA[enable]]></c>, <c><![CDATA[auto]]></c>, or
            <c><![CDATA[disable]]></c>.</p>
          <p>Especially the <c><![CDATA[-smpauto]]></c> argument is useful since
            it starts the Erlang runtime system with SMP support if
            it is available and more than one logical processor are
            detected; otherwise, it starts the Erlang runtime system
            without SMP support. For more information see the
            <c><![CDATA[erl(1)]]></c> man page.</p>
          <p>Own Id: OTP-6126</p>
        </item>
        <item>
          <p>Increased the reduction cost for sending messages in the
            SMP emulator so it behaves more like the non-SMP
            emulator.</p>
          <p>Own Id: OTP-6196</p>
        </item>
        <item>
          <p>A port running a dynamically linked-in driver that exits
            due to the driver being unloaded now exits with exit
            reason <c><![CDATA[driver_unloaded]]></c>. Previously the port exited
            with exit reason <c><![CDATA[-1]]></c>.</p>
          <p>*** POTENTIAL INCOMPATIBILITY ***</p>
          <p>Own Id: OTP-6204</p>
        </item>
        <item>
          <p>Changed name of the <c><![CDATA[erlang:system_info/1]]></c> argument
            <c><![CDATA[scheduler]]></c> to <c><![CDATA[scheduler_id]]></c>. This since the
            <c><![CDATA[scheduler]]></c> argument so easily could be mixed up
            with the <c><![CDATA[schedulers]]></c> argument (both returning
            integers).</p>
          <p>*** POTENTIAL INCOMPATIBILITY ***</p>
          <p>Own Id: OTP-6208</p>
        </item>
        <item>
          <p>The changes below were made by Mikael Pettersson, HiPE.</p>
          <p>HiPE runtime system:</p>
          <p>Reduce overheads in the HiPE runtime system's BIF glue
            code.</p>
          <p>Fix bug when exceptions are thrown from BEAM to HiPE.</p>
          <p>Support SPARC on Linux.</p>
          <p>Support x86 on FreeBSD.</p>
          <p>Floating-point exceptions:</p>
          <p>Reduce overheads in checking results of floating-point
            operations.</p>
          <p>Minor bug fix in SSE2 floating-point exception
            handling.</p>
          <p>Support SSE2 floating-point exceptions on 32-bit x86
            machines.</p>
          <p>Make FP exceptions work in the SMP runtime system on
            FreeBSD/x86.</p>
          <p>Support floating-point exceptions on SPARCs running
            Linux.</p>
          <p>Runtime system:</p>
          <p>Minor scheduler optimisation in the non-SMP runtime
            system.</p>
          <p>Substantial reduction of I/O thread overheads in the
            SMP runtime system if the separate timer thread is used.
            (In R11B-1, the separate timer thread is not used.)</p>
          <p>Own Id: OTP-6211</p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>ERTS 5.5</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>Previously <c><![CDATA[unlink/1]]></c> and <c><![CDATA[erlang:demonitor/2]]></c>
            behaved completely asynchronous. This had one undesirable
            effect, though. You could never know when you were
            guaranteed <em>not</em> to be affected by a link that you
            had unlinked or a monitor that you had demonitored.</p>
          <p>The new behavior of <c><![CDATA[unlink/1]]></c> and
            <c><![CDATA[erlang:demonitor/2]]></c> can be viewed as two operations
            performed atomically. Asynchronously send an unlink
            signal or a demonitor signal, and ignore any future
            results of the link or monitor.</p>
          <p><em>NOTE</em>: This change can cause some obscure code
            to fail which previously did not. For example, the
            following code might hang:</p>
          <code type="none"><![CDATA[
            Mon = erlang:monitor(process, Pid),
            %% ...
            exit(Pid, bang),
            erlang:demonitor(Mon),
            receive
                {'DOWN', Mon , process, Pid, _} -> ok
            %% We were previously guaranteed to get a down message
            %% (since we exited the process ourself), so we could
            %% in this case leave out:
            %% after 0 -> ok
            end,
          ]]></code>
          <p>*** POTENTIAL INCOMPATIBILITY ***</p>
          <p>Own Id: OTP-5772</p>
        </item>
        <item>
          <p>Two bugs fixed: If the environment variable <c><![CDATA[ERL_FLAGS]]></c>
            was set, its contents would be appended to the end of the
            command line even if the command line had an <c><![CDATA[-extra]]></c>
            options. Changed to place the options from <c><![CDATA[ERL_FLAGS]]></c>
            just before <c><![CDATA[-extra]]></c>. Also, the <c><![CDATA[-smp]]></c> and
            <c><![CDATA[-hybrid]]></c> flags no longer have any effect if placed
            after <c><![CDATA[-extra]]></c>.</p>
          <p>Own Id: OTP-6054</p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>The documentation for writing drivers in the ERTS User's
            Guide has been expanded and updated.</p>
          <p>Own Id: OTP-5192</p>
        </item>
        <item>
          <p>The <c><![CDATA[andalso]]></c> and <c><![CDATA[orelse]]></c> operators are
            now allowed to be used in guards. That also applies to
            match specifications.</p>
          <p>Own Id: OTP-5894 Aux Id: OTP-5149 </p>
        </item>
        <item>
          <p>There is a new trace match spec function
            <c><![CDATA[{exception_trace}]]></c> and a corresponding trace
            message <c><![CDATA[exception_from]]></c> that can be used to trace
            on any exit from a function, both normal function return
            and exception return. See the documentation for
            details.</p>
          <p>The <c><![CDATA[return_to]]></c> trace message is now also
            generated when the execution returns to a function due to
            catching an exception.</p>
          <p>Own Id: OTP-5956</p>
        </item>
        <item>
          <p>Erlang runtime system with SMP (symmetric multi processing)
            support.</p>
          <p>The runtime system with SMP support is in this release
            focused on stability and there are a number of steps
            with optimizations to follow before it will take 
            full advantage of multi processor systems.
            The released system is however truly multi threaded
            and you will notice increased performance
            for many applications already.
            We recommend that you evaluate your application on  
            the SMP version of the runtime system and wait for some
            more optimizations before you use it in a real product. 
            You will then discover if there are any problems in 
            your application that needs to be fixed in order for 
            it to work properly in a multi threaded environment. 
            More optimized versions of the runtime system
            with SMP support will be included in the R11B
            maintenance releases.</p>
          <p>The SMP enabled runtime system will be started if
            the <c><![CDATA[-smp]]></c> command line argument is passed to
            the <c><![CDATA[erl]]></c> command. In order to make use of more than
            one processor core, multiple scheduler threads are used. By
            default, the number of scheduler threads will equal
            the number of processor cores. The number of scheduler
            threads can be set with the <c><![CDATA[+S]]></c> command line argument.
            For more information see the <c><![CDATA[erl(1)]]></c> man page.</p>
          <p>A runtime system with SMP support is by default built on
            the following platforms if posix threads, and a gcc
            compiler of at least version 2.95 is found:</p>
          <list type="bulleted">
            <item>
              <p>Linux with at least kernel version 2.6 and the Native
                POSIX Thread Library on x86, x86_64, and 32-bits
                PowerPC.</p>
            </item>
            <item>
              <p>Solaris of at least version 8 on 32-bits SPARC-V9.</p>
            </item>
            <item>
              <p>MacOSX of at least version 10.4 (Darwin 8.0) on
                32-bits PowerPC.</p>
            </item>
          </list>
          <p>The runtime system with SMP support is known <em>not</em>
            to build on:</p>
          <list type="bulleted">
            <item>
              <p>Windows.</p>
            </item>
            <item>
              <p>Linux with kernel versions less than 2.4, or without
                the Native POSIX Thread Library.</p>
            </item>
            <item>
              <p>Other hardware platforms than x86, x86_64, 32-bits
                SPARC-V9 and 32-bits PowerPC.</p>
            </item>
          </list>
          <p>Windows will be supported in a future release.</p>
          <p>The runtime system with SMP support might build on other
            operating systems in combination with supported hardware.
            In order to force a build of a runtime system with SMP
            support, pass the <c><![CDATA[--enable-smp-support]]></c> command line
            argument to configure. Note, however, that it is not enough
            that it builds. The underlying thread library and operating
            system has to provide SMP support as well. If the thread
            library does not distribute scheduler threads over multiple
            processor cores then the runtime system will only seemingly
            provide SMP support. If the runtime system is not built by
            default on a specific platform, we have <em>not</em> tested
            it on that platform.</p>
          <p><em>NOTE</em>: The design of SMP support for drivers is
            ongoing. There will probably be incompatible driver
            changes (only affecting drivers run on the runtime system
            with SMP support) released as patches for R11B.</p>
          <p><em>Potential incompatibility</em>: Previously, specific
            driver call-backs were always called from the same thread.
            This is <em>not</em> true in the runtime system with SMP
            support. Calls to call-backs will be made from different
            threads, e.g., two consecutive calls to exactly the same
            call-back can be made from two different threads. This
            will in <em>most</em> cases not be a problem. All calls
            to call-backs are synchronized, i.e., only one call-back
            will be called at a time.</p>
          <p>In the future the default behavior will <em>probably</em>
            be the following: Calls to call-backs will, as now, be
            made from different threads. Calls to call-backs in the
            same driver <em>instance</em> will be synchronized. It
            will probably be possible to configure so that all calls
            to call-backs in all driver instances of a specific
            driver type will be synchronized. It may be possible to
            configure so that all calls to call-backs of a driver
            instance or a of a specific driver type will be made from
            the same thread.</p>
          <p>Parallelism in the Erlang code executed is a necessity
            for the Erlang runtime system to be able to take
            advantage of multi-core or multi-processor hardware.
            There need to be at least as many Erlang processes
            runnable as processor cores for the Erlang runtime system
            to be able to take advantage of all processor cores.</p>
          <p>An Erlang runtime system with SMP support with only one
            Erlang process runnable all the time will almost always be
            slower than the same Erlang runtime system without SMP
            support. This is due to thread synchronization overhead.</p>
          <p>Known major bottleneck in the Erlang runtime system:</p>
          <list type="bulleted">
            <item>
              <p>Currently the I/O system uses one "big lock", i.e. only
                one thread can do I/O at a time (with the exception of
                async threads and threads created by users own linked-in
                drivers). This is high on the list of things to
                optimize. Note, code that does not do I/O can be executed
                at the same time as one thread does I/O.</p>
            </item>
          </list>
          <p>Some pitfalls which might cause Erlang programs that work on
            the non-SMP runtime system to fail on the SMP runtime
            system:</p>
          <list type="bulleted">
            <item>
              <p>A newly spawned process will often begin executing
                immediately. Code that expects that the parent process
                will be able to execute for a while before the child
                process begins executing is likely to fail.</p>
            </item>
            <item>
              <p>High priority processes could previously provide
                mutual exclusion (bad programming style) by preventing
                normal and low priority processes from being run. High
                priority processes cannot be used this way to provide
                mutual exclusion.</p>
            </item>
            <item>
              <p><c><![CDATA[erlang:yield()]]></c> could be used to provide some
                kind of temporary mutual exclusion (also bad programming
                style). <c><![CDATA[erlang:yield()]]></c> cannot be used to provide
                any kind of mutual exclusion.</p>
            </item>
            <item>
              <p>Obscure pitfall, only if a process being traced also
                sends normal messages to the tracer:<br></br>
                &nbsp;&nbsp;The order between trace messages and normal
                messages is undefined. I.e. the order between normal
                messages sent from a tracee to a tracer and the trace
                messages generated from the same tracee to the same
                tracer is undefined. The internal order of normal
                messages and the internal order of trace messages will,
                of course, be preserved as before.</p>
            </item>
          </list>
          <p>The kernel poll feature is currently not supported by
            the runtime system with SMP support. It will probably be
            supported in a future release.</p>
          <p>*** POTENTIAL INCOMPATIBILITY ***</p>
          <p>Own Id: OTP-6006 Aux Id: OTP-6095 </p>
        </item>
        <item>
          <p>Linked-in driver modifications.</p>
          <list type="bulleted">
            <item>
              <p>Linked-in drivers must be recompiled.</p>
            </item>
            <item>
              <p>The <c><![CDATA[refc]]></c> field in the <c><![CDATA[ErlDrvBinary]]></c> type
                has been removed. The reference count can be accessed
                via API functions. For more information see
                the <c><![CDATA[erl_driver(1)]]></c> man page.</p>
            </item>
          </list>
          <p>*** POTENTIAL INCOMPATIBILITY ***</p>
          <p>Own Id: OTP-6095 Aux Id: OTP-6006 </p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>ERTS 5.4.13</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>Large files (more than 2 GBytes) are now handled on
            Solaris 8.</p>
          <p>Own Id: OTP-5849 Aux Id: seq10157 </p>
        </item>
        <item>
          <p>A failing bit syntax construction could fail with the
            PREVIOUS exception reason that had occurred in the process
            (instead of with <c><![CDATA[badarg]]></c>).</p>
          <p>Own Id: OTP-5911</p>
        </item>
        <item>
          <p>When building OTP, the Kernel application was built in
            both the primary and secondary bootstrap steps, which
            would cause problems if OTP including its bootstrap is
            checked into a version control system (such as CVS).
            (Thanks to Sebastian Strollo.)</p>
          <p>Own Id: OTP-5921</p>
        </item>
        <item>
          <p><c><![CDATA[binary_to_term(<<131,109,255,255,255,255)]]></c> and
            similar expressions used to crash the emulator instead of
            causing a <c><![CDATA[badarg]]></c> exception. (Thanks to Matthias
            Lang.)</p>
          <p>Own Id: OTP-5933</p>
        </item>
        <item>
          <p><c><![CDATA[erlang:hibernate/3]]></c> could sometimes crash the emulator
            when no heap was needed.</p>
          <p>Own Id: OTP-5940</p>
        </item>
        <item>
          <p>Execution of match specs could under rare circumstances
            cause the emulator to dump core.</p>
          <p>Execution of match specs could cause memory leaks in the
            hybrid emulator.</p>
          <p>Own Id: OTP-5955</p>
        </item>
        <item>
          <p>A bug in <c><![CDATA[erlang:trace_info/2]]></c> when getting info for a
            function in a deleted module resulting in an emulator
            crash, has been corrected.</p>
          <p>Own Id: OTP-5957</p>
        </item>
        <item>
          <p>Different (and old) <c><![CDATA[config.guess]]></c> files in the
            ERTS and Erl_Interface applications would cause build
            problems on the new Intel-based iMacs.
            (Thanks to Sebastion Strollo.)</p>
          <p>Own Id: OTP-5967</p>
        </item>
        <item>
          <p>pthread header and library mismatch on Linux systems (at
            least some SuSE and Debian) with both NPTL and
            Linuxthreads libraries installed.</p>
          <p>Own Id: OTP-5981</p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>The driver_set_timer did not change the previous timeout
            if called a second time. Now it works as specified,
            changing the timeout.</p>
          <p>Own Id: OTP-5942</p>
        </item>
        <item>
          <p>The undocumented <c><![CDATA[{packet,http}]]></c> option (for the
            <c><![CDATA[gen_tcp]]></c> module) did not not work correctly when
            there were multiple continuation lines. (Thanks to Per
            Hedeland.)</p>
          <p>Own Id: OTP-5945</p>
        </item>
        <item>
          <p>The setuid_socket_wrap program was corrected to work for
            C compilers that treat the <c><![CDATA[char]]></c> type as unsigned.
            (Thanks to Magnus Henoch.)</p>
          <p>Own Id: OTP-5946</p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>ERTS 5.4.12</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>Fixed a minor build problem on Windows.</p>
          <p>Own Id: OTP-5819 Aux Id: OTP-5382 OTP-5540 OTP-5577 </p>
        </item>
        <item>
          <p>The <c><![CDATA[delay_send]]></c> option for <c><![CDATA[gen_tcp]]></c> was
            broken on Windows.</p>
          <p>Own Id: OTP-5822</p>
        </item>
        <item>
          <p>If there were user-defined variables in the boot
            script, and their values were not provided using the
            <c><![CDATA[-boot_var]]></c> option, the emulator would refuse to
            start with a confusing error message. Corrected to show a
            clear, understandable message.</p>
          <p>The <c><![CDATA[prim_file]]></c> module was modified to not depend
            on the <c><![CDATA[lists]]></c> module, to make it possible to start
            the emulator using a user-defined loader. (Thanks to
            Martin Bjorklund.)</p>
          <p>Own Id: OTP-5828 Aux Id: seq10151 </p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>The HiPE compiler identifies more leaf functions,
            giving slightly faster code.</p>
          <p>Corrected problems in HiPE's coalescing register
            allocating that would cause it to fail when compiling
            very large functions (e.g. some of parse modules in the
            Megaco application).</p>
          <p>Own Id: OTP-5853</p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>ERTS 5.4.11</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>Timers could sometimes timeout too early. This bug has
            now been fixed.</p>
          <p>Automatic cancellation of timers created by
            <c><![CDATA[erlang:send_after(Time,pid(),Msg)]]></c> and
            <c><![CDATA[erlang:start_timer(Time,pid(),Msg)]]></c> has been
            introduced. Timers created with the receiver specified by a
            pid, will automatically be cancelled when the receiver
            exits. For more information see the <c><![CDATA[erlang(3)]]></c> man
            page.</p>
          <p>In order to be able to maintain a larger amount of timers
            without increasing the maintenance cost, the internal
            timer wheel and bif timer table have been enlarged.</p>
          <p>Also a number of minor bif timer optimizations have been
            implemented.</p>
          <p>Own Id: OTP-5795 Aux Id: OTP-5090, seq8913, seq10139,
            OTP-5782 </p>
        </item>
        <item>
          <p><c><![CDATA[erlang:monitor(process,Pid)]]></c> hanged if <c><![CDATA[Pid]]></c>
            referred to a process on a non-existing node with the same
            nodename as the nodename of node on which the call was made.
            This bug has now been fixed.</p>
          <p>Own Id: OTP-5827</p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>By setting Unix environment variables, the priority for
            the emulator can be lowered when it is writing crash
            dumps and the time allowed for finishing writing a crash
            dump can be set to a certain number of seconds. See the
            documentation for <c><![CDATA[erl]]></c> in the ERTS application.
            (Also, a few other previously undocumented environment
            variables are now documented.)</p>
          <p>Own Id: OTP-5818</p>
        </item>
        <item>
          <p>Documentation improvements:</p>
          <p>- documentation for <c><![CDATA[erlang:link/1]]></c> corrected</p>
          <p>- command line flag <c><![CDATA[-code_path_cache]]></c> added</p>
          <p>- <c><![CDATA[erl]]></c> command line flags clarifications</p>
          <p>- <c><![CDATA[net_kernel(3)]]></c> clarifications</p>
          <p>Own Id: OTP-5847</p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>ERTS 5.4.10</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>-D_GNU_SOURCE is now always passed on the compile command
            line on linux. This in order to ensure that all included
            system headers see _GNU_SOURCE defined.</p>
          <p>_GNU_SOURCE is now also defined on linux in configure
            when looking for features.</p>
          <p>Some minor (harmless) configure bugs were also fixed.</p>
          <p>Own Id: OTP-5749</p>
        </item>
        <item>
          <p>Some compiler warnings and Dialyzer warnings were
            eliminated in the Tools application.</p>
          <p>When tracing to a port (which <c><![CDATA[fprof]]></c> does),
            there could be fake schedule out/schedule in messages
            sent for a process that had exited.</p>
          <p>Own Id: OTP-5757</p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>The BIFs <c><![CDATA[iolist_size/1]]></c> and <c><![CDATA[iolist_to_binary/1]]></c>
            has been added.</p>
          <p>The BIF <c><![CDATA[list_to_existing_atom/1]]></c> has been added.</p>
          <p>Minor bug fix: The exception reason could be changed
            to <c><![CDATA[error]]></c> inside nested try/catch constructs if the
            <c><![CDATA[erlang:raise/3]]></c> BIF was called with an empty
            stacktrace. (Calling <c><![CDATA[erlang:raise/3]]></c> with an empty
            stacktrace is NOT recommended.)</p>
          <p>Minor bugfix: On Windows, <c><![CDATA[file:open/2]]></c> will now
            return the documented error reason <c><![CDATA[{error,eisdir}]]></c>
            if the filename refers to a directory (it used to return
            <c><![CDATA[{error,eacces}]]></c>).</p>
          <p>The message in the documentation for
            <c><![CDATA[erlang:system_monitor/2]]></c>, description of
            <c><![CDATA[busy_dist_port]]></c>, was corrected.</p>
          <p>Own Id: OTP-5709 Aux Id: seq10100 </p>
        </item>
        <item>
          <p>The previously undocumented and UNSUPPORTED <c><![CDATA[zlib]]></c>
            module has been updated in an incompatible way and many
            bugs have been corrected. It is now also documented.</p>
          <p>*** POTENTIAL INCOMPATIBILITY ***</p>
          <p>Own Id: OTP-5715</p>
        </item>
        <item>
          <p>New socket options <c><![CDATA[priority]]></c> and <c><![CDATA[tos]]></c> for
            platforms that support them (currently only Linux).</p>
          <p>Own Id: OTP-5756</p>
        </item>
        <item>
          <p>Only the emulator is now linked with termcap library in
            order to decrease library dependencies for other otp
            programs.</p>
          <p>Own Id: OTP-5758</p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>ERTS 5.4.9.2</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>The native resolver has gotten an control API for
            extended debugging and soft restart. It is:
            <c><![CDATA[inet_gethost_native:control(Control)]]></c><br></br><c><![CDATA[Control = {debug_level,Level} | soft_restart]]></c><br></br><c><![CDATA[Level = integer() in the range 0-4]]></c>.</p>
          <p>Own Id: OTP-5751 Aux Id: EABln25013 </p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>ERTS 5.4.9.1</title>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>On VxWorks, epmd did not handle file descriptors with
            higher numbers than 63. Also, if epmd should get a file
            descriptor with a number &gt;= FD_SETSIZE, it will close a
            the file descriptor and write a message to the log
            (instead of mysteriously fail); the Erlang node that
            tried to register will fail with a duplicate_name error
            (unfortunately, epmd has no way to indicate to the Erlang
            node why the register attempt failed).</p>
          <p>Own Id: OTP-5716 Aux Id: seq10070 </p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>ERTS 5.4.9</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>Timezone data is now initialized better. (was a problem
            at least on NetBSD 2.0.2) Thanks to Rich Neswold.</p>
          <p>Own Id: OTP-5621</p>
        </item>
        <item>
          <p>The hybrid-heap emulator ('erl -hybrid') is much more
            stable. We have corrected all known bugs that caused it
            to dump core while running our test suites.</p>
          <p>Own Id: OTP-5634</p>
        </item>
        <item>
          <p>Fixed rare memory leaks in <c><![CDATA[erlang:demonitor/1]]></c> when
            distributed monitors were removed.</p>
          <p>Own Id: OTP-5692</p>
        </item>
        <item>
          <p>Processes were sometimes unnecessarily garbage collected
            when terminating. These unnecessary garbage collections
            have now been eliminated.</p>
          <p>Own Id: OTP-5693</p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>The <c><![CDATA[c:i/0]]></c> function will now run in a paged mode if
            there are more than 100 processes in the system. (Thanks
            to Ulf Wiger.)</p>
          <p><c><![CDATA[erlang:system_info(process_count)]]></c> has
            been optimized and does now return exactly the same value
            as <c><![CDATA[length(processes())]]></c>. Previously
            <c><![CDATA[erlang:system_info(process_count)]]></c> did not include
            exiting processes which are included in
            <c><![CDATA[length(processes())]]></c>.</p>
          <p>The <c><![CDATA[+P]]></c> flag for <c><![CDATA[erl]]></c>, which sets the maximum
            number of processes allowed to exist at the same, no longer
            accepts values higher than 134217727. (You will still
            probably run out of memory before you'll be able to reach
            that limit.)</p>
          <p>Own Id: OTP-5645 Aux Id: seq9984 </p>
        </item>
        <item>
          <p>The term-building driver functions
            <c><![CDATA[driver_output_term()]]></c> and <c><![CDATA[driver_send_term()]]></c>
            have been updated:</p>
          <p>The ERL_DRV_FLOAT type has been added.</p>
          <p>For the ERL_DRV_BINARY type, the length and offset are
            now validated against the length of the driver binary.</p>
          <p>The ERL_DRV_PID type is now implemented (it was
            documented, but not implemented).</p>
          <p>Own Id: OTP-5674</p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>ERTS 5.4.8</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p><c><![CDATA[ets:delete/1]]></c> now allows other Erlang process to run
            when a large table is being deleted.</p>
          <p>Own Id: OTP-5572</p>
        </item>
        <item>
          <p>A bug regarding tcp sockets which results in hanging
            <c><![CDATA[gen_tcp:send/2]]></c> has been corrected. To encounter
            this bug you needed one process that read from a socket,
            one that wrote more date than the reader read out so the
            sender got suspended, and then the reader closed the
            socket. (Reported and diagnosed by Alexey Shchepin.)</p>
          <p>Corrected a bug in the (undocumented and unsupported)
            option <c><![CDATA[{packet,http}]]></c> for <c><![CDATA[gen_tcp.]]></c>
            (Thanks to Claes Wikstrom and Luke Gorrie.)</p>
          <p>Updated the documentation regarding the second argument to
            <c><![CDATA[gen_tcp:recv/2]]></c>, the <c><![CDATA[Length]]></c> to receive.</p>
          <p>Own Id: OTP-5582 Aux Id: seq9839 </p>
        </item>
        <item>
          <p>Erlang/OTP will now build on Mac OS X 10.4 "Tiger" (the
            problem was that 10.4 has a partially implemented poll()
            function that can't handle devices). Also, on Mac OS X
            10.3 "Panther", Erlang/OTP will now use select() instead
            of poll() (because poll() on Mac OS X 10.3 is implemented
            using select()).</p>
          <p>Own Id: OTP-5595</p>
        </item>
        <item>
          <p>A bug in the file driver when opening a file in
            compressed mode, and the returned allocated pointer from
            the compressing library was in very high memory (&gt;= 2GB),
            causing e.g. <c><![CDATA[file:read/2]]></c> to return
            <c><![CDATA[{error,ebadf}]]></c>, has been corrected.</p>
          <p>Own Id: OTP-5618</p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>The new fun <c><![CDATA[M:F/A]]></c> construct creates a fun that
            refers to the latest version of <c><![CDATA[M:F/A.]]></c> This syntax is
            meant to replace tuple funs <c><![CDATA[{M,F}]]></c> which have many
            problems.</p>
          <p>The new type test <c><![CDATA[is_function(Fun,A)]]></c> (which may be
            used in guards) test whether <c><![CDATA[Fun]]></c> is a fun that can be
            applied with <c><![CDATA[A]]></c> arguments. (Currently, <c><![CDATA[Fun]]></c>
            can also be a tuple fun.)</p>
          <p>Own Id: OTP-5584</p>
        </item>
        <item>
          <p>In the HiPE application, there's a new experimental
            register allocator (optimistic coalescing), and the
            linear scan register allocator is now also available on
            ppc. Plus lots of cleanups.</p>
          <p>Minor hybrid heap corrections.</p>
          <p>The maximum size of a heap used to be artificially
            limited so that the size of a heap would fit in 28 bits;
            that limitation could cause the emulator to terminate in
            a garbage collection even if there still was available
            memory. Now the largest heap size for a 32 bit CPU is
            1,699,221,830 bytes. (Thanks to Jesper Wilhelmsson.)</p>
          <p>Also removed the undocumented <c><![CDATA[+H]]></c> emulator option.</p>
          <p>Own Id: OTP-5596</p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>ERTS 5.4.7</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p><c><![CDATA[to_erl]]></c> could close unexpectedly on Linux systems.
            Also, output from the emulator could be lost. Corrected.</p>
          <p>Own Id: OTP-5561</p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>The <c><![CDATA[cpu_timestamp]]></c> option for <c><![CDATA[erlang:trace/3]]></c>
            is now also supported on Linux.</p>
          <p>Own Id: OTP-5532 Aux Id: seq9813 </p>
        </item>
        <item>
          <p>The last known <c><![CDATA[werl]]></c> window size/position is now saved
            correctly when <c><![CDATA[werl]]></c> is stopped with the window
            minimized. A problem with the placement not being saved if
            the emulator is halted or stopped from the JCL menu has also
            been fixed.</p>
          <p>Own Id: OTP-5544 Aux Id: OTP-5522 </p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>ERTS 5.4.6</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>Some math libraries do not always throw floating-point
            exceptions on errors. In order to be able to use these
            libraries, floating-point errors are now more thoroughly
            checked.</p>
          <p>Misc floating-point fixes for Linux and MacOSX.</p>
          <p>Own Id: OTP-5467</p>
        </item>
        <item>
          <p>An internal buffer was sometimes not cleared which caused
            garbage to appear in error messages sent to the error
            logger.</p>
          <p><c><![CDATA[errno]]></c> was sometimes clobbered which caused erroneous
            error reports about <c><![CDATA[poll()]]></c> errors.</p>
          <p>Only emulators on unix platforms were affected by these
            bugs.</p>
          <p>Own Id: OTP-5492</p>
        </item>
        <item>
          <p>The ethread library now works on OpenBSD.</p>
          <p>Own Id: OTP-5515</p>
        </item>
        <item>
          <p>Corrected a bug in the (undocumented and unsupported)
            option <c><![CDATA[{packet,http}]]></c> for <c><![CDATA[gen_tcp]]></c>.
            (Thanks to Claes Wikstrom and Luke Gorrie.)</p>
          <p>Own Id: OTP-5519</p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p><c><![CDATA[binary_to_term/1]]></c> could cause the emulator to crash
            when given invalid pids or funs.</p>
          <p>Own Id: OTP-5484 Aux Id: seq9801 </p>
        </item>
        <item>
          <p>Some more stability problems were fixed in the
            hybrid-heap emulator.</p>
          <p>Own Id: OTP-5489</p>
        </item>
        <item>
          <p>After <c><![CDATA[werl]]></c> was closed with the window minimized, it
            was not possible to restart <c><![CDATA[werl]]></c> with an open
            window. A temporary solution has so far been implemented
            that restores the initial window settings every time
            <c><![CDATA[werl]]></c> is started.</p>
          <p>Own Id: OTP-5522</p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>ERTS 5.4.5</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>If a process had node links (created by
            <c><![CDATA[monitor_node/2]]></c>), executing
            <c><![CDATA[process_info(Pid,memory)]]></c> for that process would
            crash the emulator.</p>
          <p>Own Id: OTP-5420</p>
        </item>
        <item>
          <p>Minor corrections to the help text printed by <c><![CDATA[erlc -help]]></c>. The documentation for <c><![CDATA[erlc]]></c> was also
            slightly updated.</p>
          <p>Own Id: OTP-5428</p>
        </item>
        <item>
          <p>32-bit words were used for offsets in the garbage
            collector. This caused the emulator to crash on 64-bit
            machines when heaps were moved more than 4 GB during
            garbage collection.</p>
          <p>Own Id: OTP-5430</p>
        </item>
        <item>
          <p><c><![CDATA[is_boolean(42.5)]]></c> failed to load if optimization was
            explicitly turned off.</p>
          <p>Own Id: OTP-5448</p>
        </item>
        <item>
          <p>If there was a call to <c><![CDATA[Module:foo/X]]></c> from any loaded
            module, the returned by <c><![CDATA[M:module_info(exports)]]></c> would
            always include <c><![CDATA[{foo,X}]]></c> (even though
            <c><![CDATA[Module:foo/X]]></c> if was not defined).</p>
          <p>Own Id: OTP-5450 Aux Id: seq9722 </p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>The <c><![CDATA[c]]></c> option for the <c><![CDATA[+B]]></c> flag has been
            introduced which makes it possible to use Ctrl-C
            (Ctrl-Break on Windows) to interrupt the shell process
            rather than to invoke the emulator break handler. All new
            <c><![CDATA[+B]]></c> options are also supported on Windows
            (<c><![CDATA[werl]]></c>) as of now. Furthermore, Ctrl-C on Windows has
            now been reserved for copying text (what Ctrl-Ins was used
            for previously). Ctrl-Break should be used for break
            handling. Lastly, the documentation of the system flags has
            been updated.</p>
          <p>Own Id: OTP-5388</p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>ERTS 5.4.4</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>The function <c><![CDATA[erlang:float/1]]></c> can now be used in
            match specifications and is recognized by
            <c><![CDATA[dbg:fun2ms/1]]></c> and <c><![CDATA[ets:fun2ms/1]]></c>. This
            addition is part of the work to "harmonize" match
            specification guards with Erlang guards.</p>
          <p>Own Id: OTP-5297 Aux Id: OTP-4927 </p>
        </item>
        <item>
          <p>The <c><![CDATA[register/2]]></c> BIF would return <c><![CDATA[true]]></c> even if
            the second argument was not a pid for living process.
            Corrected to cause an exception.</p>
          <p>Own Id: OTP-5324 Aux Id: seq9698 </p>
        </item>
        <item>
          <p>In the 'bag' type of ets tables, elements having the same
            key were supposed to be order in insertion order. The
            would be wrong if a rehash occurred.</p>
          <p>Own Id: OTP-5340 Aux Id: seq9704 </p>
        </item>
        <item>
          <p>Linked in drivers in the Crypto and Asn1 applications
            are now compiled with the <c><![CDATA[-D_THREAD_SAFE]]></c> and
            <c><![CDATA[-D_REENTRANT]]></c> switches on unix when the emulator has
            thread support enabled.</p>
          <p>Linked in drivers on MacOSX are not compiled with the
            undocumented <c><![CDATA[-lbundle1.o]]></c> switch anymore. Thanks to
            Sean Hinde who sent us a patch.</p>
          <p>Linked in driver in Crypto, and port programs in SSL, now
            compiles on OSF1.</p>
          <p>Minor makefile improvements in Runtime_Tools.</p>
          <p>Own Id: OTP-5346</p>
        </item>
        <item>
          <p>Fixed a bug in the hybrid heap in distributed send
            operations.</p>
          <p>Own Id: OTP-5361</p>
        </item>
        <item>
          <p>A BIF <c><![CDATA[erlang:raise/3]]></c> has been added. See the manual
            for details. It is intended for internal system programming
            only, advanced error handling.</p>
          <p>Own Id: OTP-5376 Aux Id: OTP-5257 </p>
        </item>
        <item>
          <p>Mikael Pettersson (HiPE) corrected a few bugs in the
            emulator that caused problems when compiled with the
            experimental gcc-4.0.0.</p>
          <p>Own Id: OTP-5386</p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>Minor update of the internal documentation of
            the <c><![CDATA[epmd]]></c> protocol.</p>
          <p>The listen port of <c><![CDATA[epmd]]></c> has now been registered at
            IANA:
            <url href="http://www.iana.org/assignments/port-numbers">http://www.iana.org/assignments/port-numbers</url>.</p>
          <p>Own Id: OTP-5234</p>
        </item>
        <item>
          <p><c><![CDATA[run_erl.c]]></c> now works on Mac OS X and FreeBSD.</p>
          <p>Own Id: OTP-5384</p>
        </item>
        <item>
          <p>A few bugs were corrected in the HiPE application.</p>
          <p>Own Id: OTP-5385</p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>ERTS 5.4.3</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>Font and color preferences for <c><![CDATA[werl.exe]]></c> now can be
            saved even after the first time you run <c><![CDATA[werl.exe]]></c>.
            The window position and size is also saved. Patch from
            James Hague who did all the hard work.</p>
          <p>Own Id: OTP-5250</p>
        </item>
        <item>
          <p>OTP archive libraries, e.g. the <c><![CDATA[erl_interface]]></c>
            library, on MacOSX could not be used without first
            rerunning <c><![CDATA[ranlib]]></c> on them. This bug has now been
            fixed.</p>
          <p>Own Id: OTP-5274</p>
        </item>
        <item>
          <p>Bugs in <c><![CDATA[erlang:hash/2]]></c> and <c><![CDATA[erlang:phash/2]]></c> on
            64-bit platforms have been fixed.</p>
          <p>Own Id: OTP-5292</p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>Corrected a crash in the 64-bits emulator.</p>
          <p>Corrected a problem in the hybrid heap emulator.</p>
          <p>In the chapter about the abstract format in the ERTS User's
            Guide, updated the last section about how the abstract
            format is stored in BEAM files.</p>
          <p>Own Id: OTP-5262</p>
        </item>
        <item>
          <p>The maximum number of concurrent threads in the internal
            ethread thread package has been limited to 2048.</p>
          <p>Own Id: OTP-5280</p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>ERTS 5.4.2.1</title>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>If Erlang/OTP was installed in a short directory name,
            such as <c><![CDATA[C:\Program\erl5.4.2]]></c>, the emulator would not
            start.</p>
          <p>Own Id: OTP-5254</p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>ERTS 5.4.2</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>If one used <c><![CDATA[select/3]]></c> and <c><![CDATA[select/1]]></c> on a
            non-fixed ETS table and deleted objects simultaneously,
            the emulator could crash. Note that the result of such
            simultaneous operations on tables that are not in a fixed
            state is still undefined, but the emulator crash is,
            needless to say, fixed.</p>
          <p>Own Id: OTP-5209 Aux Id: seq9198 </p>
        </item>
        <item>
          <p>Arithmetic with big numbers could crash the emulator.</p>
          <p>The HiPE native code compiler and run-time code in the
            emulator has been updated. (Note: Native code is still
            not supported.)</p>
          <p>Eliminated a few bugs that could crash the hybrid emulator
            (which is not supported).</p>
          <p>Own Id: OTP-5233 Aux Id: seq9587 </p>
        </item>
      </list>
    </section>
  </section>

  <section>
    <title>ERTS 5.4.1</title>

    <section>
      <title>Fixed Bugs and Malfunctions</title>
      <list type="bulleted">
        <item>
          <p>The ethread library was unnecessarily rebuilt multiple
            times during the build process, also a debug version of
            the library was build during the install phase. These
            unnecessary builds have now been removed. Note, the
            content of the installed Erlang/OTP system is not
            effected at all by this change.</p>
          <p>Own Id: OTP-5203</p>
        </item>
        <item>
          <p>The emulator could fail to clear the memory segment
            cache. This could potentially cause memory allocation to
            unnecessarily fail when memory usage was close to its
            maximum. This bug has now been fixed.</p>
          <p>Own Id: OTP-5211</p>
        </item>
        <item>
          <p>std_alloc (std short for standard) was sometimes called
            def_alloc (def short for default). std_alloc is now
            everywhere referred to as std_alloc.</p>
          <p>Own Id: OTP-5216</p>
        </item>
        <item>
          <p>A documentation bug has been corrected in
            the <c><![CDATA[erts_alloc(3)]]></c> documentation. It was stated that
            some of the memory allocators present were by default
            disabled. This is true for Erlang/OTP R9C, but is not true
            for Erlang/OTP R10B. In R10B all memory allocators present
            are enabled by default.</p>
          <p>Own Id: OTP-5217</p>
        </item>
      </list>
    </section>

    <section>
      <title>Improvements and New Features</title>
      <list type="bulleted">
        <item>
          <p>The emulator now close all open files and sockets
            immediately after receiving an USR1 signal. This causes
            the emulator to unregister at <c><![CDATA[epmd]]></c> as early as
            possible.</p>
          <p>Own Id: OTP-5221 Aux Id: OTP-4985, seq9514 </p>
        </item>
        <item>
          <p>Try/catch support in the emulator slightly updated.</p>
          <p>Own Id: OTP-5229</p>
        </item>
      </list>
    </section>
  </section>
</chapter>
